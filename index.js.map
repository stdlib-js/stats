{"version":3,"file":"index.js","sources":["../node_modules/@stdlib/utils/define-property/lib/define_property.js","../node_modules/@stdlib/utils/define-property/lib/has_define_property_support.js","../node_modules/@stdlib/utils/define-property/lib/builtin.js","../node_modules/@stdlib/string/base/format-interpolate/lib/is_number.js","../node_modules/@stdlib/string/base/format-interpolate/lib/zero_pad.js","../node_modules/@stdlib/string/base/format-interpolate/lib/format_integer.js","../node_modules/@stdlib/string/base/format-interpolate/lib/is_string.js","../node_modules/@stdlib/string/base/format-interpolate/lib/format_double.js","../node_modules/@stdlib/string/base/format-interpolate/lib/space_pad.js","../node_modules/@stdlib/string/base/format-interpolate/lib/main.js","../node_modules/@stdlib/string/base/format-tokenize/lib/main.js","../node_modules/@stdlib/string/format/lib/is_string.js","../node_modules/@stdlib/string/format/lib/main.js","../node_modules/@stdlib/string/base/format-interpolate/lib/index.js","../node_modules/@stdlib/string/format/lib/index.js","../node_modules/@stdlib/utils/define-property/lib/polyfill.js","../node_modules/@stdlib/utils/define-property/lib/index.js","../node_modules/@stdlib/utils/define-read-only-property/lib/main.js","../node_modules/@stdlib/utils/define-read-only-property/lib/index.js","../node_modules/@stdlib/utils/define-nonenumerable-read-only-property/lib/main.js","../node_modules/@stdlib/utils/define-nonenumerable-read-only-property/lib/index.js","../node_modules/@stdlib/math/base/special/floor/lib/index.js","../node_modules/@stdlib/math/base/special/floor/lib/main.js","../node_modules/@stdlib/math/base/assert/is-integer/lib/is_integer.js","../node_modules/@stdlib/math/base/assert/is-integer/lib/index.js","../node_modules/@stdlib/constants/array/max-array-length/lib/index.js","../node_modules/@stdlib/assert/is-array-like/lib/main.js","../node_modules/@stdlib/assert/is-array-like/lib/index.js","../node_modules/@stdlib/assert/tools/array-like-function/lib/arraylikefcn.js","../node_modules/@stdlib/assert/tools/array-like-function/lib/index.js","../node_modules/@stdlib/assert/is-number/lib/primitive.js","../node_modules/@stdlib/assert/has-symbol-support/lib/main.js","../node_modules/@stdlib/assert/has-tostringtag-support/lib/main.js","../node_modules/@stdlib/assert/has-tostringtag-support/lib/index.js","../node_modules/@stdlib/utils/native-class/lib/tostring.js","../node_modules/@stdlib/utils/native-class/lib/native_class.js","../node_modules/@stdlib/assert/has-own-property/lib/main.js","../node_modules/@stdlib/assert/has-own-property/lib/index.js","../node_modules/@stdlib/utils/native-class/lib/tostringtag.js","../node_modules/@stdlib/utils/native-class/lib/polyfill.js","../node_modules/@stdlib/utils/native-class/lib/index.js","../node_modules/@stdlib/number/ctor/lib/index.js","../node_modules/@stdlib/number/ctor/lib/number.js","../node_modules/@stdlib/assert/is-number/lib/try2serialize.js","../node_modules/@stdlib/assert/is-number/lib/tostring.js","../node_modules/@stdlib/assert/is-number/lib/object.js","../node_modules/@stdlib/assert/is-number/lib/main.js","../node_modules/@stdlib/assert/is-number/lib/index.js","../node_modules/@stdlib/assert/is-number-array/lib/index.js","../node_modules/@stdlib/constants/float64/pinf/lib/index.js","../node_modules/@stdlib/constants/float64/ninf/lib/index.js","../node_modules/@stdlib/assert/is-integer/lib/integer.js","../node_modules/@stdlib/assert/is-integer/lib/primitive.js","../node_modules/@stdlib/assert/is-integer/lib/object.js","../node_modules/@stdlib/assert/is-integer/lib/main.js","../node_modules/@stdlib/assert/is-integer/lib/index.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/primitive.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/object.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/main.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/index.js","../node_modules/@stdlib/assert/is-typed-array-like/lib/main.js","../node_modules/@stdlib/assert/is-typed-array-like/lib/index.js","../node_modules/@stdlib/assert/is-array/lib/main.js","../node_modules/@stdlib/assert/is-array/lib/index.js","../node_modules/@stdlib/math/base/assert/is-nan/lib/main.js","../node_modules/@stdlib/math/base/assert/is-nan/lib/index.js","../node_modules/@stdlib/assert/is-uint32array/lib/main.js","../node_modules/@stdlib/assert/is-uint32array/lib/index.js","../node_modules/@stdlib/constants/uint32/max/lib/index.js","../node_modules/@stdlib/assert/has-uint32array-support/lib/uint32array.js","../node_modules/@stdlib/assert/has-uint32array-support/lib/main.js","../node_modules/@stdlib/array/uint32/lib/polyfill.js","../node_modules/@stdlib/array/uint32/lib/index.js","../node_modules/@stdlib/array/uint32/lib/uint32array.js","../node_modules/@stdlib/assert/has-uint32array-support/lib/index.js","../node_modules/@stdlib/assert/is-float64array/lib/main.js","../node_modules/@stdlib/assert/has-float64array-support/lib/float64array.js","../node_modules/@stdlib/assert/has-float64array-support/lib/main.js","../node_modules/@stdlib/assert/has-float64array-support/lib/index.js","../node_modules/@stdlib/array/float64/lib/polyfill.js","../node_modules/@stdlib/array/float64/lib/index.js","../node_modules/@stdlib/array/float64/lib/float64array.js","../node_modules/@stdlib/assert/is-uint8array/lib/main.js","../node_modules/@stdlib/assert/has-uint8array-support/lib/uint8array.js","../node_modules/@stdlib/assert/has-uint8array-support/lib/main.js","../node_modules/@stdlib/array/uint8/lib/polyfill.js","../node_modules/@stdlib/array/uint8/lib/index.js","../node_modules/@stdlib/array/uint8/lib/uint8array.js","../node_modules/@stdlib/assert/has-uint8array-support/lib/index.js","../node_modules/@stdlib/assert/is-uint16array/lib/main.js","../node_modules/@stdlib/assert/has-uint16array-support/lib/uint16array.js","../node_modules/@stdlib/assert/has-uint16array-support/lib/main.js","../node_modules/@stdlib/array/uint16/lib/polyfill.js","../node_modules/@stdlib/array/uint16/lib/index.js","../node_modules/@stdlib/array/uint16/lib/uint16array.js","../node_modules/@stdlib/assert/has-uint16array-support/lib/index.js","../node_modules/@stdlib/assert/is-little-endian/lib/main.js","../node_modules/@stdlib/assert/is-little-endian/lib/ctors.js","../node_modules/@stdlib/assert/is-little-endian/lib/index.js","../node_modules/@stdlib/number/float64/base/get-high-word/lib/high.js","../node_modules/@stdlib/number/float64/base/get-high-word/lib/main.js","../node_modules/@stdlib/number/float64/base/get-high-word/lib/index.js","../node_modules/@stdlib/number/float64/base/set-high-word/lib/high.js","../node_modules/@stdlib/number/float64/base/set-high-word/lib/main.js","../node_modules/@stdlib/number/float64/base/set-high-word/lib/index.js","../node_modules/@stdlib/math/base/special/expm1/lib/polyval_q.js","../node_modules/@stdlib/math/base/special/expm1/lib/expm1.js","../node_modules/@stdlib/constants/float64/half-ln-two/lib/index.js","../node_modules/@stdlib/math/base/special/expm1/lib/index.js","../node_modules/@stdlib/math/base/special/log1p/lib/polyval_lp.js","../node_modules/@stdlib/math/base/special/log1p/lib/log1p.js","../node_modules/@stdlib/math/base/special/log1p/lib/index.js","../node_modules/@stdlib/math/base/special/sqrt/lib/index.js","../node_modules/@stdlib/math/base/special/sqrt/lib/main.js","../node_modules/@stdlib/constants/float64/fourth-pi/lib/index.js","../node_modules/@stdlib/math/base/special/asin/lib/rational_rs.js","../node_modules/@stdlib/math/base/special/asin/lib/asin.js","../node_modules/@stdlib/math/base/special/asin/lib/rational_pq.js","../node_modules/@stdlib/math/base/special/asin/lib/index.js","../node_modules/@stdlib/math/base/special/abs/lib/main.js","../node_modules/@stdlib/math/base/special/abs/lib/index.js","../node_modules/@stdlib/math/base/special/ceil/lib/index.js","../node_modules/@stdlib/math/base/special/ceil/lib/main.js","../node_modules/@stdlib/math/base/special/trunc/lib/main.js","../node_modules/@stdlib/number/float64/base/to-words/lib/indices.js","../node_modules/@stdlib/math/base/special/trunc/lib/index.js","../node_modules/@stdlib/math/base/assert/is-infinite/lib/index.js","../node_modules/@stdlib/math/base/assert/is-infinite/lib/main.js","../node_modules/@stdlib/number/float64/base/to-words/lib/to_words.js","../node_modules/@stdlib/number/float64/base/to-words/lib/main.js","../node_modules/@stdlib/number/float64/base/to-words/lib/index.js","../node_modules/@stdlib/number/float64/base/from-words/lib/main.js","../node_modules/@stdlib/number/float64/base/from-words/lib/indices.js","../node_modules/@stdlib/number/float64/base/from-words/lib/index.js","../node_modules/@stdlib/math/base/special/copysign/lib/main.js","../node_modules/@stdlib/math/base/special/copysign/lib/index.js","../node_modules/@stdlib/constants/float64/smallest-normal/lib/index.js","../node_modules/@stdlib/number/float64/base/normalize/lib/main.js","../node_modules/@stdlib/number/float64/base/normalize/lib/normalize.js","../node_modules/@stdlib/number/float64/base/normalize/lib/index.js","../node_modules/@stdlib/number/float64/base/exponent/lib/main.js","../node_modules/@stdlib/constants/float64/high-word-exponent-mask/lib/index.js","../node_modules/@stdlib/number/float64/base/exponent/lib/index.js","../node_modules/@stdlib/math/base/special/ldexp/lib/main.js","../node_modules/@stdlib/constants/float64/max-base2-exponent/lib/index.js","../node_modules/@stdlib/constants/float64/max-base2-exponent-subnormal/lib/index.js","../node_modules/@stdlib/constants/float64/min-base2-exponent-subnormal/lib/index.js","../node_modules/@stdlib/math/base/special/ldexp/lib/index.js","../node_modules/@stdlib/math/base/special/exp/lib/polyval_p.js","../node_modules/@stdlib/math/base/special/exp/lib/expmulti.js","../node_modules/@stdlib/math/base/special/exp/lib/exp.js","../node_modules/@stdlib/math/base/special/exp/lib/index.js","../node_modules/@stdlib/math/base/assert/is-even/lib/is_even.js","../node_modules/@stdlib/math/base/assert/is-even/lib/index.js","../node_modules/@stdlib/math/base/assert/is-odd/lib/is_odd.js","../node_modules/@stdlib/math/base/assert/is-odd/lib/index.js","../node_modules/@stdlib/number/float64/base/set-low-word/lib/low.js","../node_modules/@stdlib/number/float64/base/set-low-word/lib/main.js","../node_modules/@stdlib/number/float64/base/set-low-word/lib/index.js","../node_modules/@stdlib/number/uint32/base/to-int32/lib/main.js","../node_modules/@stdlib/number/uint32/base/to-int32/lib/index.js","../node_modules/@stdlib/math/base/special/pow/lib/x_is_zero.js","../node_modules/@stdlib/math/base/special/pow/lib/y_is_huge.js","../node_modules/@stdlib/math/base/special/pow/lib/y_is_infinite.js","../node_modules/@stdlib/math/base/special/pow/lib/polyval_l.js","../node_modules/@stdlib/math/base/special/pow/lib/log2ax.js","../node_modules/@stdlib/math/base/special/pow/lib/polyval_w.js","../node_modules/@stdlib/math/base/special/pow/lib/logx.js","../node_modules/@stdlib/math/base/special/pow/lib/polyval_p.js","../node_modules/@stdlib/math/base/special/pow/lib/pow2.js","../node_modules/@stdlib/math/base/special/pow/lib/pow.js","../node_modules/@stdlib/math/base/special/pow/lib/index.js","../node_modules/@stdlib/constants/float64/eps/lib/index.js","../node_modules/@stdlib/math/base/special/beta/lib/lanczos_sum_expg_scaled.js","../node_modules/@stdlib/math/base/special/beta/lib/beta.js","../node_modules/@stdlib/math/base/special/beta/lib/index.js","../node_modules/@stdlib/math/base/assert/is-positive-zero/lib/index.js","../node_modules/@stdlib/math/base/assert/is-positive-zero/lib/main.js","../node_modules/@stdlib/math/base/special/max/lib/max.js","../node_modules/@stdlib/math/base/special/max/lib/index.js","../node_modules/@stdlib/math/base/assert/is-negative-zero/lib/main.js","../node_modules/@stdlib/math/base/assert/is-negative-zero/lib/index.js","../node_modules/@stdlib/math/base/special/min/lib/min.js","../node_modules/@stdlib/math/base/special/min/lib/index.js","../node_modules/@stdlib/constants/float64/max/lib/index.js","../node_modules/@stdlib/constants/float64/half-pi/lib/index.js","../node_modules/@stdlib/constants/float64/pi/lib/index.js","../node_modules/@stdlib/math/base/special/kernel-cos/lib/polyval_c46.js","../node_modules/@stdlib/math/base/special/kernel-cos/lib/kernel_cos.js","../node_modules/@stdlib/math/base/special/kernel-cos/lib/polyval_c13.js","../node_modules/@stdlib/math/base/special/kernel-cos/lib/index.js","../node_modules/@stdlib/math/base/special/kernel-sin/lib/kernel_sin.js","../node_modules/@stdlib/math/base/special/kernel-sin/lib/index.js","../node_modules/@stdlib/number/float64/base/get-low-word/lib/low.js","../node_modules/@stdlib/number/float64/base/get-low-word/lib/main.js","../node_modules/@stdlib/number/float64/base/get-low-word/lib/index.js","../node_modules/@stdlib/array/base/filled/lib/main.js","../node_modules/@stdlib/array/base/zeros/lib/main.js","../node_modules/@stdlib/array/base/filled/lib/index.js","../node_modules/@stdlib/array/base/zeros/lib/index.js","../node_modules/@stdlib/math/base/special/rempio2/lib/kernel_rempio2.js","../node_modules/@stdlib/math/base/special/round/lib/index.js","../node_modules/@stdlib/math/base/special/round/lib/round.js","../node_modules/@stdlib/math/base/special/rempio2/lib/rempio2_medium.js","../node_modules/@stdlib/math/base/special/rempio2/lib/rempio2.js","../node_modules/@stdlib/math/base/special/sin/lib/sin.js","../node_modules/@stdlib/math/base/special/rempio2/lib/index.js","../node_modules/@stdlib/math/base/special/sin/lib/index.js","../node_modules/@stdlib/math/base/special/gamma/lib/polyval_s.js","../node_modules/@stdlib/math/base/special/gamma/lib/stirling_approximation.js","../node_modules/@stdlib/math/base/special/gamma/lib/rational_pq.js","../node_modules/@stdlib/math/base/special/gamma/lib/gamma.js","../node_modules/@stdlib/math/base/special/gamma/lib/small_approximation.js","../node_modules/@stdlib/constants/float64/eulergamma/lib/index.js","../node_modules/@stdlib/math/base/special/gamma/lib/index.js","../node_modules/@stdlib/math/base/special/factorial/lib/factorial.js","../node_modules/@stdlib/math/base/special/factorial/lib/index.js","../node_modules/@stdlib/math/base/special/gamma-lanczos-sum/lib/rational_pq.js","../node_modules/@stdlib/constants/float64/gamma-lanczos-g/lib/index.js","../node_modules/@stdlib/math/base/special/gamma-delta-ratio/lib/gamma_delta_ratio_lanczos.js","../node_modules/@stdlib/math/base/special/gamma-delta-ratio/lib/gamma_delta_ratio.js","../node_modules/@stdlib/math/base/special/gamma-delta-ratio/lib/index.js","../node_modules/@stdlib/math/base/special/ln/lib/polyval_q.js","../node_modules/@stdlib/math/base/special/ln/lib/ln.js","../node_modules/@stdlib/math/base/special/ln/lib/polyval_p.js","../node_modules/@stdlib/math/base/special/ln/lib/index.js","../node_modules/@stdlib/math/base/special/cos/lib/cos.js","../node_modules/@stdlib/math/base/special/cos/lib/index.js","../node_modules/@stdlib/math/base/special/sinpi/lib/sinpi.js","../node_modules/@stdlib/math/base/special/sinpi/lib/index.js","../node_modules/@stdlib/math/base/special/gammaln/lib/polyval_a1.js","../node_modules/@stdlib/math/base/special/gammaln/lib/polyval_a2.js","../node_modules/@stdlib/math/base/special/gammaln/lib/polyval_r.js","../node_modules/@stdlib/math/base/special/gammaln/lib/polyval_s.js","../node_modules/@stdlib/math/base/special/gammaln/lib/polyval_t1.js","../node_modules/@stdlib/math/base/special/gammaln/lib/polyval_t2.js","../node_modules/@stdlib/math/base/special/gammaln/lib/polyval_t3.js","../node_modules/@stdlib/math/base/special/gammaln/lib/polyval_u.js","../node_modules/@stdlib/math/base/special/gammaln/lib/polyval_v.js","../node_modules/@stdlib/math/base/special/gammaln/lib/polyval_w.js","../node_modules/@stdlib/math/base/special/gammaln/lib/gammaln.js","../node_modules/@stdlib/math/base/special/gammaln/lib/index.js","../node_modules/@stdlib/constants/float64/sqrt-eps/lib/index.js","../node_modules/@stdlib/constants/float64/max-ln/lib/index.js","../node_modules/@stdlib/math/base/special/gammainc/lib/finite_gamma_q.js","../node_modules/@stdlib/math/base/special/erfc/lib/polyval_sb.js","../node_modules/@stdlib/math/base/special/erfc/lib/erfc.js","../node_modules/@stdlib/math/base/special/erfc/lib/polyval_pp.js","../node_modules/@stdlib/math/base/special/erfc/lib/polyval_qq.js","../node_modules/@stdlib/math/base/special/erfc/lib/polyval_pa.js","../node_modules/@stdlib/math/base/special/erfc/lib/polyval_qa.js","../node_modules/@stdlib/math/base/special/erfc/lib/polyval_ra.js","../node_modules/@stdlib/math/base/special/erfc/lib/polyval_sa.js","../node_modules/@stdlib/math/base/special/erfc/lib/polyval_rb.js","../node_modules/@stdlib/math/base/special/erfc/lib/index.js","../node_modules/@stdlib/math/base/special/gammainc/lib/finite_half_gamma_q.js","../node_modules/@stdlib/constants/float64/min-ln/lib/index.js","../node_modules/@stdlib/math/base/special/gammainc/lib/full_igamma_prefix.js","../node_modules/@stdlib/math/base/tools/evalpoly/lib/evalpoly.js","../node_modules/@stdlib/math/base/tools/evalpoly/lib/factory.js","../node_modules/@stdlib/math/base/tools/evalpoly/lib/index.js","../node_modules/@stdlib/math/base/special/gammainc/lib/polyval_c8.js","../node_modules/@stdlib/math/base/special/gammainc/lib/igamma_temme_large.js","../node_modules/@stdlib/math/base/special/gammainc/lib/polyval_c0.js","../node_modules/@stdlib/math/base/special/gammainc/lib/polyval_c1.js","../node_modules/@stdlib/math/base/special/gammainc/lib/polyval_c2.js","../node_modules/@stdlib/math/base/special/gammainc/lib/polyval_c3.js","../node_modules/@stdlib/math/base/special/gammainc/lib/polyval_c4.js","../node_modules/@stdlib/math/base/special/gammainc/lib/polyval_c5.js","../node_modules/@stdlib/math/base/special/gammainc/lib/polyval_c6.js","../node_modules/@stdlib/math/base/special/gammainc/lib/polyval_c7.js","../node_modules/@stdlib/assert/has-generator-support/lib/main.js","../node_modules/@stdlib/utils/eval/lib/index.js","../node_modules/@stdlib/assert/has-generator-support/lib/index.js","../node_modules/@stdlib/math/base/tools/sum-series/lib/generators.js","../node_modules/@stdlib/math/base/tools/sum-series/lib/basic.js","../node_modules/@stdlib/math/base/tools/sum-series/lib/index.js","../node_modules/@stdlib/math/base/special/gammainc/lib/lower_incomplete_gamma_series.js","../node_modules/@stdlib/math/base/special/gammainc/lib/lower_gamma_series.js","../node_modules/@stdlib/math/base/special/gamma-lanczos-sum-expg-scaled/lib/rational_pq.js","../node_modules/@stdlib/math/base/special/gamma-lanczos-sum-expg-scaled/lib/index.js","../node_modules/@stdlib/math/base/special/gammainc/lib/regularised_gamma_prefix.js","../node_modules/@stdlib/math/base/special/powm1/lib/powm1.js","../node_modules/@stdlib/math/base/special/gamma1pm1/lib/rational_p3q3.js","../node_modules/@stdlib/math/base/special/gamma1pm1/lib/lgamma_small_imp.js","../node_modules/@stdlib/math/base/special/gamma1pm1/lib/rational_p1q1.js","../node_modules/@stdlib/math/base/special/gamma1pm1/lib/rational_p2q2.js","../node_modules/@stdlib/math/base/special/gamma1pm1/lib/gamma1pm1.js","../node_modules/@stdlib/math/base/special/gammainc/lib/small_gamma2_series.js","../node_modules/@stdlib/math/base/special/gammainc/lib/tgamma_small_upper_part.js","../node_modules/@stdlib/constants/float32/smallest-normal/lib/index.js","../node_modules/@stdlib/math/base/tools/continued-fraction/lib/generators.js","../node_modules/@stdlib/math/base/tools/continued-fraction/lib/basic.js","../node_modules/@stdlib/math/base/tools/continued-fraction/lib/index.js","../node_modules/@stdlib/math/base/special/gammainc/lib/upper_incomplete_gamma_fract.js","../node_modules/@stdlib/math/base/special/gammainc/lib/upper_gamma_fraction.js","../node_modules/@stdlib/math/base/special/gammainc/lib/gammainc.js","../node_modules/@stdlib/math/base/special/gammainc/lib/index.js","../node_modules/@stdlib/math/base/special/kernel-betainc/lib/full_igamma_prefix.js","../node_modules/@stdlib/math/base/special/kernel-betainc/lib/regularized_gamma_prefix.js","../node_modules/@stdlib/math/base/special/kernel-betainc/lib/beta_small_b_large_a_series.js","../node_modules/@stdlib/math/base/special/kernel-betainc/lib/rising_factorial_ratio.js","../node_modules/@stdlib/math/base/special/maxabs/lib/maxabs.js","../node_modules/@stdlib/math/base/special/minabs/lib/minabs.js","../node_modules/@stdlib/math/base/special/kernel-betainc/lib/ibeta_power_terms.js","../node_modules/@stdlib/math/base/special/maxabs/lib/index.js","../node_modules/@stdlib/math/base/special/minabs/lib/index.js","../node_modules/@stdlib/math/base/special/kernel-betainc/lib/ibeta_fraction2.js","../node_modules/@stdlib/math/base/special/binomcoef/lib/binomcoef.js","../node_modules/@stdlib/math/base/special/kernel-betainc/lib/binomial_ccdf.js","../node_modules/@stdlib/math/base/special/binomcoef/lib/index.js","../node_modules/@stdlib/math/base/special/kernel-betainc/lib/ibeta_a_step.js","../node_modules/@stdlib/math/base/special/kernel-betainc/lib/ibeta_series.js","../node_modules/@stdlib/math/base/special/kernel-betainc/lib/assign.js","../node_modules/@stdlib/math/base/special/kernel-betainc/lib/main.js","../node_modules/@stdlib/math/base/special/kernel-betainc/lib/index.js","../node_modules/@stdlib/math/base/special/betainc/lib/betainc.js","../node_modules/@stdlib/math/base/special/betainc/lib/index.js","../base/dists/f/cdf/lib/cdf.js","../node_modules/@stdlib/utils/constant-function/lib/constant_function.js","../node_modules/@stdlib/utils/constant-function/lib/index.js","../base/dists/f/cdf/lib/factory.js","../base/dists/f/cdf/lib/index.js","../node_modules/@stdlib/assert/tools/array-function/lib/arrayfcn.js","../node_modules/@stdlib/assert/tools/array-function/lib/index.js","../node_modules/@stdlib/assert/is-object-like/lib/main.js","../node_modules/@stdlib/assert/is-object-like/lib/index.js","../node_modules/@stdlib/assert/is-buffer/lib/main.js","../node_modules/@stdlib/assert/is-buffer/lib/index.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/re.js","../node_modules/@stdlib/assert/is-boolean/lib/primitive.js","../node_modules/@stdlib/assert/is-boolean/lib/try2serialize.js","../node_modules/@stdlib/assert/is-boolean/lib/tostring.js","../node_modules/@stdlib/assert/is-boolean/lib/object.js","../node_modules/@stdlib/assert/is-boolean/lib/main.js","../node_modules/@stdlib/assert/is-boolean/lib/index.js","../node_modules/@stdlib/utils/global/lib/codegen.js","../node_modules/@stdlib/utils/global/lib/self.js","../node_modules/@stdlib/utils/global/lib/window.js","../node_modules/@stdlib/utils/global/lib/global.js","../node_modules/@stdlib/utils/global/lib/main.js","../node_modules/@stdlib/utils/global/lib/index.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/nodelist.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/typedarray.js","../node_modules/@stdlib/utils/type-of/lib/check.js","../node_modules/@stdlib/regexp/function-name/lib/main.js","../node_modules/@stdlib/regexp/function-name/lib/regexp.js","../node_modules/@stdlib/regexp/function-name/lib/index.js","../node_modules/@stdlib/utils/constructor-name/lib/main.js","../node_modules/@stdlib/utils/constructor-name/lib/index.js","../node_modules/@stdlib/utils/type-of/lib/typeof.js","../node_modules/@stdlib/utils/type-of/lib/polyfill.js","../node_modules/@stdlib/utils/type-of/lib/index.js","../node_modules/@stdlib/assert/is-function/lib/main.js","../node_modules/@stdlib/assert/is-function/lib/index.js","../node_modules/@stdlib/utils/get-prototype-of/lib/native.js","../node_modules/@stdlib/utils/get-prototype-of/lib/proto.js","../node_modules/@stdlib/utils/get-prototype-of/lib/polyfill.js","../node_modules/@stdlib/utils/get-prototype-of/lib/detect.js","../node_modules/@stdlib/utils/get-prototype-of/lib/get_prototype_of.js","../node_modules/@stdlib/utils/get-prototype-of/lib/index.js","../node_modules/@stdlib/assert/is-error/lib/main.js","../node_modules/@stdlib/assert/is-error/lib/index.js","../node_modules/@stdlib/assert/is-string/lib/primitive.js","../node_modules/@stdlib/assert/is-string/lib/try2valueof.js","../node_modules/@stdlib/assert/is-string/lib/valueof.js","../node_modules/@stdlib/assert/is-string/lib/object.js","../node_modules/@stdlib/assert/is-string/lib/main.js","../node_modules/@stdlib/assert/is-string/lib/index.js","../node_modules/@stdlib/regexp/regexp/lib/main.js","../node_modules/@stdlib/regexp/regexp/lib/regexp.js","../node_modules/@stdlib/regexp/regexp/lib/index.js","../node_modules/@stdlib/utils/regexp-from-string/lib/from_string.js","../node_modules/@stdlib/utils/regexp-from-string/lib/index.js","../node_modules/@stdlib/assert/is-nan/lib/primitive.js","../node_modules/@stdlib/assert/is-nan/lib/object.js","../node_modules/@stdlib/assert/is-nan/lib/main.js","../node_modules/@stdlib/assert/is-nan/lib/index.js","../node_modules/@stdlib/assert/is-collection/lib/main.js","../node_modules/@stdlib/assert/is-collection/lib/index.js","../node_modules/@stdlib/utils/index-of/lib/index_of.js","../node_modules/@stdlib/utils/index-of/lib/index.js","../node_modules/@stdlib/utils/keys/lib/builtin.js","../node_modules/@stdlib/utils/keys/lib/has_arguments_bug.js","../node_modules/@stdlib/utils/keys/lib/has_builtin.js","../node_modules/@stdlib/assert/is-arguments/lib/main.js","../node_modules/@stdlib/assert/is-arguments/lib/detect.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/has_string_enumerability_bug.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/native.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/main.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/index.js","../node_modules/@stdlib/assert/is-arguments/lib/polyfill.js","../node_modules/@stdlib/assert/is-arguments/lib/index.js","../node_modules/@stdlib/utils/keys/lib/builtin_wrapper.js","../node_modules/@stdlib/utils/noop/lib/noop.js","../node_modules/@stdlib/utils/keys/lib/has_enumerable_prototype_bug.js","../node_modules/@stdlib/utils/keys/lib/has_non_enumerable_properties_bug.js","../node_modules/@stdlib/utils/keys/lib/is_constructor_prototype.js","../node_modules/@stdlib/utils/keys/lib/has_automation_equality_bug.js","../node_modules/@stdlib/utils/keys/lib/window.js","../node_modules/@stdlib/utils/keys/lib/has_window.js","../node_modules/@stdlib/utils/keys/lib/is_constructor_prototype_wrapper.js","../node_modules/@stdlib/utils/keys/lib/polyfill.js","../node_modules/@stdlib/utils/keys/lib/main.js","../node_modules/@stdlib/utils/keys/lib/index.js","../node_modules/@stdlib/utils/property-names/lib/has_builtin.js","../node_modules/@stdlib/utils/property-names/lib/builtin.js","../node_modules/@stdlib/utils/property-names/lib/polyfill.js","../node_modules/@stdlib/utils/property-names/lib/index.js","../node_modules/@stdlib/utils/property-descriptor/lib/has_builtin.js","../node_modules/@stdlib/utils/property-descriptor/lib/builtin.js","../node_modules/@stdlib/utils/property-descriptor/lib/polyfill.js","../node_modules/@stdlib/utils/property-descriptor/lib/index.js","../node_modules/@stdlib/assert/has-node-buffer-support/lib/buffer.js","../node_modules/@stdlib/assert/has-node-buffer-support/lib/main.js","../node_modules/@stdlib/assert/has-node-buffer-support/lib/index.js","../node_modules/@stdlib/buffer/ctor/lib/polyfill.js","../node_modules/@stdlib/buffer/ctor/lib/index.js","../node_modules/@stdlib/buffer/ctor/lib/buffer.js","../node_modules/@stdlib/buffer/from-buffer/lib/has_from.js","../node_modules/@stdlib/buffer/from-buffer/lib/main.js","../node_modules/@stdlib/buffer/from-buffer/lib/polyfill.js","../node_modules/@stdlib/buffer/from-buffer/lib/index.js","../node_modules/@stdlib/assert/is-int8array/lib/main.js","../node_modules/@stdlib/assert/has-int8array-support/lib/int8array.js","../node_modules/@stdlib/assert/has-int8array-support/lib/main.js","../node_modules/@stdlib/constants/int8/min/lib/index.js","../node_modules/@stdlib/array/int8/lib/polyfill.js","../node_modules/@stdlib/array/int8/lib/index.js","../node_modules/@stdlib/array/int8/lib/int8array.js","../node_modules/@stdlib/assert/has-int8array-support/lib/index.js","../node_modules/@stdlib/assert/is-uint8clampedarray/lib/main.js","../node_modules/@stdlib/assert/has-uint8clampedarray-support/lib/uint8clampedarray.js","../node_modules/@stdlib/assert/has-uint8clampedarray-support/lib/main.js","../node_modules/@stdlib/array/uint8c/lib/polyfill.js","../node_modules/@stdlib/array/uint8c/lib/index.js","../node_modules/@stdlib/array/uint8c/lib/uint8clampedarray.js","../node_modules/@stdlib/assert/has-uint8clampedarray-support/lib/index.js","../node_modules/@stdlib/assert/is-int16array/lib/main.js","../node_modules/@stdlib/assert/has-int16array-support/lib/int16array.js","../node_modules/@stdlib/assert/has-int16array-support/lib/main.js","../node_modules/@stdlib/constants/int16/min/lib/index.js","../node_modules/@stdlib/array/int16/lib/polyfill.js","../node_modules/@stdlib/array/int16/lib/index.js","../node_modules/@stdlib/array/int16/lib/int16array.js","../node_modules/@stdlib/assert/has-int16array-support/lib/index.js","../node_modules/@stdlib/assert/is-int32array/lib/main.js","../node_modules/@stdlib/assert/has-int32array-support/lib/int32array.js","../node_modules/@stdlib/assert/has-int32array-support/lib/main.js","../node_modules/@stdlib/constants/int32/min/lib/index.js","../node_modules/@stdlib/array/int32/lib/polyfill.js","../node_modules/@stdlib/array/int32/lib/index.js","../node_modules/@stdlib/array/int32/lib/int32array.js","../node_modules/@stdlib/assert/has-int32array-support/lib/index.js","../node_modules/@stdlib/assert/is-float32array/lib/main.js","../node_modules/@stdlib/assert/has-float32array-support/lib/float32array.js","../node_modules/@stdlib/assert/has-float32array-support/lib/main.js","../node_modules/@stdlib/array/float32/lib/polyfill.js","../node_modules/@stdlib/array/float32/lib/index.js","../node_modules/@stdlib/array/float32/lib/float32array.js","../node_modules/@stdlib/assert/has-float32array-support/lib/index.js","../node_modules/@stdlib/utils/copy/lib/typed_arrays.js","../node_modules/@stdlib/utils/copy/lib/deep_copy.js","../node_modules/@stdlib/utils/copy/lib/copy.js","../node_modules/@stdlib/utils/copy/lib/index.js","../node_modules/@stdlib/assert/is-object/lib/main.js","../node_modules/@stdlib/assert/is-object/lib/index.js","../node_modules/@stdlib/assert/is-plain-object/lib/main.js","../node_modules/@stdlib/assert/is-plain-object/lib/index.js","../anova1/lib/validate.js","../anova1/lib/unique.js","../incr/stdev/lib/index.js","../incr/stdev/lib/main.js","../anova1/lib/mean_table.js","../anova1/lib/mean.js","../node_modules/@stdlib/assert/is-positive-integer/lib/primitive.js","../node_modules/@stdlib/assert/is-positive-integer/lib/object.js","../node_modules/@stdlib/assert/is-positive-integer/lib/main.js","../node_modules/@stdlib/assert/is-positive-integer/lib/index.js","../node_modules/@stdlib/math/base/special/roundn/lib/roundn.js","../node_modules/@stdlib/math/base/special/roundn/lib/index.js","../node_modules/@stdlib/constants/float64/min-base10-exponent-subnormal/lib/index.js","../node_modules/@stdlib/constants/float64/max-base10-exponent/lib/index.js","../node_modules/@stdlib/constants/float64/min-base10-exponent/lib/index.js","../node_modules/@stdlib/string/repeat/lib/repeat.js","../anova1/lib/print.js","../anova1/lib/anova1.js","../anova1/lib/index.js","../base/dists/gamma/cdf/lib/cdf.js","../base/dists/degenerate/cdf/lib/cdf.js","../base/dists/degenerate/cdf/lib/factory.js","../base/dists/degenerate/cdf/lib/index.js","../base/dists/gamma/cdf/lib/factory.js","../base/dists/gamma/cdf/lib/index.js","../base/dists/chisquare/cdf/lib/cdf.js","../base/dists/chisquare/cdf/lib/factory.js","../base/dists/chisquare/cdf/lib/index.js","../node_modules/@stdlib/utils/group/lib/validate.js","../node_modules/@stdlib/utils/group/lib/return_values.js","../node_modules/@stdlib/utils/group/lib/return_indices.js","../node_modules/@stdlib/utils/group/lib/return_pairs.js","../node_modules/@stdlib/utils/group/lib/group.js","../node_modules/@stdlib/utils/group/lib/index.js","../bartlett-test/lib/variance.js","../bartlett-test/lib/validate.js","../bartlett-test/lib/print.js","../bartlett-test/lib/main.js","../bartlett-test/lib/index.js","../node_modules/@stdlib/math/base/special/erfcinv/lib/rational_p5q5.js","../node_modules/@stdlib/math/base/special/erfcinv/lib/erfcinv.js","../node_modules/@stdlib/math/base/special/erfcinv/lib/rational_p1q1.js","../node_modules/@stdlib/math/base/special/erfcinv/lib/rational_p2q2.js","../node_modules/@stdlib/math/base/special/erfcinv/lib/rational_p3q3.js","../node_modules/@stdlib/math/base/special/erfcinv/lib/rational_p4q4.js","../node_modules/@stdlib/math/base/special/erfcinv/lib/index.js","../node_modules/@stdlib/math/base/special/acos/lib/acos.js","../node_modules/@stdlib/math/base/special/acos/lib/index.js","../node_modules/@stdlib/constants/float64/sqrt-two/lib/index.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co22.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/inverse_students_t_body_series.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co14.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co15.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co16.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co17.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co18.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co19.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co20.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co21.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/inverse_students_t_tail_series.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/inverse_students_t_hill.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/inverse_students_t.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/find_ibeta_inv_from_t_dist.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/temme1.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/root_finder.js","../node_modules/@stdlib/math/base/special/signum/lib/main.js","../node_modules/@stdlib/math/base/special/signum/lib/index.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/newton_raphson.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co13.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/temme2.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co1.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co2.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co3.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co4.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co5.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co6.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co7.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co8.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co9.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co10.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co11.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co12.js","../node_modules/debug/src/index.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/higher_newton.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/polyval_ak2.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/lambdaeta.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/polyval_ak1.js","../node_modules/@stdlib/constants/float64/ln-sqrt-two-pi/lib/index.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/chepolsum.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/polyval_d.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/stirling.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/polyval_c.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/gamstar.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/rational_ak0bk0.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/eps1.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/rational_ak3bk3.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/eps2.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/rational_ak1bk1.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/rational_ak2bk2.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/rational_ak8bk8.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/eps3.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/rational_ak4bk4.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/rational_ak5bk5.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/rational_ak6bk6.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/rational_ak7bk7.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/compute.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/gammaincinv.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/temme3.js","../node_modules/@stdlib/math/base/special/gammaincinv/lib/index.js","../node_modules/@stdlib/constants/float64/smallest-subnormal/lib/index.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/halley_iterate.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/ibeta_roots.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/kernel_betaincinv.js","../node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/index.js","../node_modules/@stdlib/math/base/special/betaincinv/lib/betaincinv.js","../base/dists/beta/quantile/lib/quantile.js","../node_modules/@stdlib/math/base/special/betaincinv/lib/index.js","../base/dists/beta/quantile/lib/factory.js","../base/dists/beta/quantile/lib/index.js","../node_modules/@stdlib/math/base/assert/is-nonnegative-integer/lib/is_nonnegative_integer.js","../node_modules/@stdlib/math/base/assert/is-nonnegative-integer/lib/index.js","../base/dists/binomial/cdf/lib/cdf.js","../base/dists/binomial/cdf/lib/factory.js","../base/dists/binomial/cdf/lib/index.js","../node_modules/@stdlib/math/base/special/betaln/lib/dceval.js","../node_modules/@stdlib/math/base/special/betaln/lib/gamma_correction.js","../node_modules/@stdlib/math/base/special/betaln/lib/betaln.js","../node_modules/@stdlib/math/base/special/binomcoefln/lib/binomcoefln.js","../node_modules/@stdlib/math/base/special/betaln/lib/index.js","../node_modules/@stdlib/math/base/special/binomcoefln/lib/index.js","../base/dists/binomial/pmf/lib/pmf.js","../base/dists/degenerate/pmf/lib/pmf.js","../base/dists/degenerate/pmf/lib/factory.js","../base/dists/degenerate/pmf/lib/index.js","../base/dists/binomial/pmf/lib/factory.js","../base/dists/binomial/pmf/lib/index.js","../binomial-test/lib/validate.js","../binomial-test/lib/print.js","../binomial-test/lib/main.js","../binomial-test/lib/index.js","../node_modules/@stdlib/assert/has-bigint-support/lib/index.js","../node_modules/@stdlib/assert/has-bigint-support/lib/main.js","../node_modules/@stdlib/utils/define-nonenumerable-read-only-accessor/lib/main.js","../node_modules/@stdlib/utils/define-nonenumerable-read-only-accessor/lib/index.js","../node_modules/@stdlib/ndarray/base/bytes-per-element/lib/index.js","../node_modules/@stdlib/ndarray/base/bytes-per-element/lib/main.js","../node_modules/@stdlib/ndarray/base/iteration-order/lib/index.js","../node_modules/@stdlib/ndarray/base/iteration-order/lib/main.js","../node_modules/@stdlib/ndarray/base/strides2order/lib/main.js","../node_modules/@stdlib/ndarray/base/strides2order/lib/index.js","../node_modules/@stdlib/ndarray/base/minmax-view-buffer-index/lib/index.js","../node_modules/@stdlib/ndarray/base/minmax-view-buffer-index/lib/main.js","../node_modules/@stdlib/ndarray/base/minmax-view-buffer-index/lib/assign.js","../node_modules/@stdlib/complex/real/lib/index.js","../node_modules/@stdlib/complex/real/lib/main.js","../node_modules/@stdlib/complex/imag/lib/index.js","../node_modules/@stdlib/complex/imag/lib/main.js","../node_modules/@stdlib/utils/escape-regexp-string/lib/index.js","../node_modules/@stdlib/utils/escape-regexp-string/lib/main.js","../node_modules/@stdlib/assert/is-regexp/lib/try2exec.js","../node_modules/@stdlib/assert/is-regexp/lib/exec.js","../node_modules/@stdlib/assert/is-regexp/lib/index.js","../node_modules/@stdlib/assert/is-regexp/lib/main.js","../node_modules/@stdlib/string/replace/lib/index.js","../node_modules/@stdlib/string/replace/lib/replace.js","../node_modules/@stdlib/assert/is-arraybuffer/lib/main.js","../node_modules/@stdlib/assert/is-arraybuffer/lib/index.js","../node_modules/@stdlib/assert/has-arraybuffer-support/lib/main.js","../node_modules/@stdlib/assert/has-arraybuffer-support/lib/arraybuffer.js","../node_modules/@stdlib/array/buffer/lib/index.js","../node_modules/@stdlib/assert/has-arraybuffer-support/lib/index.js","../node_modules/@stdlib/array/buffer/lib/arraybuffer.js","../node_modules/@stdlib/array/buffer/lib/polyfill.js","../node_modules/@stdlib/assert/is-dataview/lib/index.js","../node_modules/@stdlib/assert/is-dataview/lib/main.js","../node_modules/@stdlib/assert/has-dataview-support/lib/main.js","../node_modules/@stdlib/assert/has-dataview-support/lib/dataview.js","../node_modules/@stdlib/array/dataview/lib/index.js","../node_modules/@stdlib/assert/has-dataview-support/lib/index.js","../node_modules/@stdlib/array/dataview/lib/main.js","../node_modules/@stdlib/array/dataview/lib/polyfill.js","../node_modules/@stdlib/bigint/ctor/lib/main.js","../node_modules/@stdlib/ndarray/dtypes/lib/main.js","../node_modules/@stdlib/ndarray/dtypes/lib/enum.js","../node_modules/@stdlib/ndarray/dtypes/lib/assign.js","../node_modules/@stdlib/ndarray/dtypes/lib/index.js","../node_modules/@stdlib/ndarray/orders/lib/main.js","../node_modules/@stdlib/ndarray/orders/lib/enum.js","../node_modules/@stdlib/ndarray/orders/lib/index.js","../node_modules/@stdlib/ndarray/index-modes/lib/index.js","../node_modules/@stdlib/ndarray/index-modes/lib/main.js","../node_modules/@stdlib/ndarray/index-modes/lib/enum.js","../node_modules/@stdlib/ndarray/base/ctor/lib/meta2dataview.js","../node_modules/@stdlib/bigint/ctor/lib/index.js","../node_modules/@stdlib/number/float64/base/to-int64-bytes/lib/index.js","../node_modules/@stdlib/number/float64/base/to-int64-bytes/lib/main.js","../node_modules/@stdlib/number/float64/base/to-int64-bytes/lib/assign.js","../node_modules/@stdlib/ndarray/base/ctor/lib/main.js","../node_modules/@stdlib/ndarray/base/ctor/lib/is_column_major_contiguous.js","../node_modules/@stdlib/ndarray/base/ctor/lib/is_row_major_contiguous.js","../node_modules/@stdlib/ndarray/base/ctor/lib/is_contiguous.js","../node_modules/@stdlib/ndarray/base/ctor/lib/copy_flags.js","../node_modules/@stdlib/ndarray/base/ctor/lib/iget.js","../node_modules/@stdlib/ndarray/base/ctor/lib/iset.js","../node_modules/@stdlib/ndarray/base/ctor/lib/set.js","../node_modules/@stdlib/ndarray/base/ctor/lib/get.js","../node_modules/@stdlib/ndarray/base/ctor/lib/tojson.js","../node_modules/@stdlib/ndarray/base/ctor/lib/tostring.js","../node_modules/@stdlib/ndarray/base/ctor/lib/meta2dataview.polyfill.js","../node_modules/@stdlib/ndarray/base/ctor/lib/index.js","../node_modules/@stdlib/assert/is-ndarray-like/lib/main.js","../node_modules/@stdlib/assert/is-ndarray-like/lib/index.js","../node_modules/@stdlib/math/base/utils/absolute-difference/lib/main.js","../node_modules/@stdlib/math/base/utils/absolute-difference/lib/index.js","../node_modules/@stdlib/blas/base/daxpy/lib/index.js","../f497bdc90bbbf14b265235a1c8219b","../node_modules/@stdlib/blas/base/dscal/lib/index.js","../c045ccbcd51275327ebebbc7d64102","../node_modules/@stdlib/blas/ext/base/dsumpw/lib/index.js","../c31155de2e2dca9f6f0820d2ea1a12","../chi2gof/lib/defaults.js","../chi2gof/lib/validate.js","../base/dists/bernoulli/pmf/lib/pmf.js","../base/dists/bernoulli/pmf/lib/factory.js","../base/dists/bernoulli/pmf/lib/index.js","../base/dists/discrete-uniform/pmf/lib/pmf.js","../base/dists/discrete-uniform/pmf/lib/factory.js","../base/dists/discrete-uniform/pmf/lib/index.js","../base/dists/geometric/pmf/lib/pmf.js","../base/dists/geometric/pmf/lib/factory.js","../base/dists/geometric/pmf/lib/index.js","../node_modules/@stdlib/math/base/assert/is-negative-integer/lib/is_negative_integer.js","../node_modules/@stdlib/math/base/special/factorialln/lib/factorialln.js","../node_modules/@stdlib/math/base/special/factorialln/lib/index.js","../base/dists/hypergeometric/pmf/lib/pmf.js","../base/dists/hypergeometric/pmf/lib/factory.js","../base/dists/hypergeometric/pmf/lib/index.js","../base/dists/negative-binomial/pmf/lib/ibeta_power_terms.js","../base/dists/negative-binomial/pmf/lib/ibeta_derivative.js","../base/dists/negative-binomial/pmf/lib/pmf.js","../base/dists/negative-binomial/pmf/lib/factory.js","../base/dists/negative-binomial/pmf/lib/index.js","../base/dists/poisson/pmf/lib/pmf.js","../base/dists/poisson/pmf/lib/factory.js","../base/dists/poisson/pmf/lib/index.js","../chi2gof/lib/get_pmf.js","../chi2gof/lib/pmf.js","../chi2gof/lib/statistic.js","../node_modules/@stdlib/array/base/incrspace/lib/main.js","../node_modules/@stdlib/array/base/incrspace/lib/index.js","../node_modules/@stdlib/utils/define-nonenumerable-read-write-accessor/lib/main.js","../node_modules/@stdlib/utils/define-nonenumerable-read-write-accessor/lib/index.js","../node_modules/@stdlib/math/base/ops/umul/lib/main.js","../node_modules/@stdlib/math/base/ops/umul/lib/index.js","../node_modules/@stdlib/array/base/arraylike2object/lib/setter.accessor.js","../node_modules/@stdlib/array/base/arraylike2object/lib/main.js","../node_modules/@stdlib/array/base/arraylike2object/lib/getter.js","../node_modules/@stdlib/array/base/arraylike2object/lib/getter.accessor.js","../node_modules/@stdlib/array/base/arraylike2object/lib/setter.js","../node_modules/@stdlib/array/base/arraylike2object/lib/index.js","../node_modules/@stdlib/blas/base/gcopy/lib/accessors.js","../node_modules/@stdlib/blas/base/gcopy/lib/main.js","../node_modules/@stdlib/blas/base/gcopy/lib/ndarray.js","../node_modules/@stdlib/blas/base/gcopy/lib/index.js","../node_modules/@stdlib/assert/has-function-name-support/lib/foo.js","../node_modules/@stdlib/assert/has-function-name-support/lib/main.js","../node_modules/@stdlib/utils/function-name/lib/function_name.js","../node_modules/@stdlib/assert/is-typed-array/lib/main.js","../node_modules/@stdlib/utils/function-name/lib/index.js","../node_modules/@stdlib/assert/is-typed-array/lib/ctors.js","../node_modules/@stdlib/assert/is-typed-array/lib/index.js","../node_modules/@stdlib/assert/is-array-like-object/lib/index.js","../node_modules/@stdlib/assert/is-array-like-object/lib/main.js","../node_modules/@stdlib/complex/float64/lib/tojson.js","../node_modules/@stdlib/complex/float64/lib/main.js","../node_modules/@stdlib/complex/float64/lib/tostring.js","../node_modules/@stdlib/complex/float64/lib/index.js","../node_modules/@stdlib/number/float64/base/to-float32/lib/main.js","../node_modules/@stdlib/number/float64/base/to-float32/lib/polyfill.js","../node_modules/@stdlib/number/float64/base/to-float32/lib/index.js","../node_modules/@stdlib/complex/float32/lib/tojson.js","../node_modules/@stdlib/complex/float32/lib/main.js","../node_modules/@stdlib/complex/float32/lib/tostring.js","../node_modules/@stdlib/complex/float32/lib/index.js","../node_modules/@stdlib/assert/is-complex-like/lib/main.js","../node_modules/@stdlib/assert/is-complex-like/lib/index.js","../node_modules/@stdlib/assert/has-iterator-symbol-support/lib/index.js","../node_modules/@stdlib/assert/has-iterator-symbol-support/lib/main.js","../node_modules/@stdlib/symbol/iterator/lib/index.js","../node_modules/@stdlib/symbol/iterator/lib/main.js","../node_modules/@stdlib/complex/realf/lib/main.js","../node_modules/@stdlib/complex/realf/lib/index.js","../node_modules/@stdlib/complex/imagf/lib/main.js","../node_modules/@stdlib/complex/imagf/lib/index.js","../node_modules/@stdlib/strided/base/reinterpret-complex64/lib/main.js","../node_modules/@stdlib/strided/base/reinterpret-complex64/lib/index.js","../node_modules/@stdlib/strided/base/reinterpret-complex128/lib/main.js","../node_modules/@stdlib/strided/base/reinterpret-complex128/lib/index.js","../node_modules/@stdlib/array/complex64/lib/from_iterator.js","../node_modules/@stdlib/array/complex64/lib/from_iterator_map.js","../node_modules/@stdlib/array/complex64/lib/from_array.js","../node_modules/@stdlib/array/complex64/lib/main.js","../node_modules/@stdlib/array/complex64/lib/index.js","../node_modules/@stdlib/array/complex128/lib/from_iterator.js","../node_modules/@stdlib/array/complex128/lib/from_iterator_map.js","../node_modules/@stdlib/array/complex128/lib/from_array.js","../node_modules/@stdlib/array/complex128/lib/main.js","../node_modules/@stdlib/array/complex128/lib/index.js","../node_modules/@stdlib/assert/is-complex-typed-array/lib/main.js","../node_modules/@stdlib/assert/is-complex-typed-array/lib/ctors.js","../node_modules/@stdlib/assert/instance-of/lib/main.js","../node_modules/@stdlib/array/to-json/lib/type.js","../node_modules/@stdlib/array/to-json/lib/ctors.js","../node_modules/@stdlib/array/to-json/lib/main.js","../node_modules/@stdlib/random/base/mt19937/lib/rand_uint32.js","../node_modules/@stdlib/random/base/mt19937/lib/factory.js","../node_modules/@stdlib/random/base/mt19937/lib/index.js","../node_modules/@stdlib/random/base/mt19937/lib/main.js","../node_modules/@stdlib/random/sample/lib/discrete_uniform.js","../node_modules/@stdlib/random/sample/lib/renormalizing.js","../node_modules/@stdlib/random/sample/lib/fisher_yates.js","../node_modules/@stdlib/random/sample/lib/vose.js","../node_modules/@stdlib/assert/is-unity-probability-array/lib/main.js","../node_modules/@stdlib/random/sample/lib/validate.js","../node_modules/@stdlib/assert/is-unity-probability-array/lib/index.js","../node_modules/@stdlib/random/sample/lib/factory.js","../node_modules/@stdlib/random/sample/lib/index.js","../node_modules/@stdlib/random/sample/lib/sample.js","../node_modules/@stdlib/blas/ext/base/dfill/lib/index.js","../39f55cbdf5711330062df4f4519eba","../chi2gof/lib/tabulate.js","../chi2gof/lib/simulate.js","../chi2gof/lib/results.js","../chi2gof/lib/main.js","../chi2gof/lib/index.js","../node_modules/@stdlib/assert/is-nonnegative-integer-array/lib/index.js","../node_modules/@stdlib/assert/is-matrix-like/lib/main.js","../node_modules/@stdlib/assert/is-matrix-like/lib/index.js","../node_modules/@stdlib/assert/is-array-array/lib/index.js","../node_modules/@stdlib/assert/is-array-array/lib/main.js","../node_modules/@stdlib/ndarray/base/shape2strides/lib/main.js","../node_modules/@stdlib/ndarray/base/shape2strides/lib/assign.js","../node_modules/@stdlib/ndarray/base/shape2strides/lib/index.js","../node_modules/@stdlib/ndarray/base/strides2offset/lib/main.js","../node_modules/@stdlib/ndarray/base/strides2offset/lib/index.js","../node_modules/@stdlib/ndarray/base/numel/lib/index.js","../node_modules/@stdlib/ndarray/base/numel/lib/main.js","../node_modules/@stdlib/ndarray/base/assert/is-order/lib/main.js","../node_modules/@stdlib/ndarray/base/assert/is-order/lib/index.js","../node_modules/@stdlib/ndarray/base/assert/is-data-type/lib/main.js","../node_modules/@stdlib/ndarray/base/assert/is-data-type/lib/index.js","../node_modules/@stdlib/ndarray/base/assert/is-buffer-length-compatible/lib/index.js","../node_modules/@stdlib/ndarray/base/assert/is-buffer-length-compatible/lib/main.js","../node_modules/@stdlib/utils/inherit/lib/detect.js","../node_modules/@stdlib/utils/inherit/lib/native.js","../node_modules/@stdlib/utils/inherit/lib/polyfill.js","../node_modules/@stdlib/utils/inherit/lib/inherit.js","../node_modules/@stdlib/utils/inherit/lib/validate.js","../node_modules/@stdlib/ndarray/base/clamp-index/lib/index.js","../node_modules/@stdlib/ndarray/base/clamp-index/lib/main.js","../node_modules/@stdlib/ndarray/base/wrap-index/lib/index.js","../node_modules/@stdlib/ndarray/base/wrap-index/lib/main.js","../node_modules/@stdlib/ndarray/base/ind/lib/index.js","../node_modules/@stdlib/ndarray/base/ind/lib/main.js","../node_modules/@stdlib/ndarray/base/assert/is-index-mode/lib/index.js","../node_modules/@stdlib/ndarray/base/assert/is-index-mode/lib/main.js","../node_modules/@stdlib/ndarray/ctor/lib/main.js","../node_modules/@stdlib/assert/is-integer-array/lib/index.js","../node_modules/@stdlib/utils/inherit/lib/index.js","../node_modules/@stdlib/ndarray/ctor/lib/iget.js","../node_modules/@stdlib/ndarray/ctor/lib/iset.js","../node_modules/@stdlib/ndarray/ctor/lib/get.js","../node_modules/@stdlib/ndarray/ctor/lib/set.js","../node_modules/@stdlib/ndarray/ctor/lib/copy_array.js","../node_modules/@stdlib/ndarray/ctor/lib/validate.js","../node_modules/@stdlib/ndarray/ctor/lib/index.js","../node_modules/@stdlib/ndarray/casting-modes/lib/main.js","../node_modules/@stdlib/ndarray/casting-modes/lib/enum.js","../node_modules/@stdlib/ndarray/casting-modes/lib/index.js","../node_modules/@stdlib/ndarray/base/assert/is-casting-mode/lib/main.js","../node_modules/@stdlib/ndarray/base/assert/is-casting-mode/lib/index.js","../node_modules/@stdlib/utils/object-inverse/lib/object_inverse.js","../node_modules/@stdlib/utils/object-inverse/lib/index.js","../node_modules/@stdlib/strided/dtypes/lib/main.js","../node_modules/@stdlib/strided/dtypes/lib/enum.js","../node_modules/@stdlib/strided/dtypes/lib/assign.js","../node_modules/@stdlib/strided/dtypes/lib/index.js","../node_modules/@stdlib/ndarray/base/dtype-enum2str/lib/main.js","../node_modules/@stdlib/ndarray/base/dtype-enum2str/lib/index.js","../node_modules/@stdlib/ndarray/base/dtype-str2enum/lib/main.js","../node_modules/@stdlib/ndarray/base/dtype-resolve-str/lib/main.js","../node_modules/@stdlib/ndarray/base/dtype-str2enum/lib/index.js","../node_modules/@stdlib/ndarray/safe-casts/lib/main.js","../node_modules/@stdlib/ndarray/base/dtype-resolve-str/lib/index.js","../node_modules/@stdlib/ndarray/base/assert/is-safe-data-type-cast/lib/main.js","../node_modules/@stdlib/ndarray/safe-casts/lib/index.js","../node_modules/@stdlib/ndarray/same-kind-casts/lib/main.js","../node_modules/@stdlib/ndarray/base/assert/is-safe-data-type-cast/lib/index.js","../node_modules/@stdlib/ndarray/base/assert/is-same-kind-data-type-cast/lib/main.js","../node_modules/@stdlib/ndarray/same-kind-casts/lib/index.js","../node_modules/@stdlib/ndarray/base/assert/is-allowed-data-type-cast/lib/main.js","../node_modules/@stdlib/ndarray/base/assert/is-same-kind-data-type-cast/lib/index.js","../node_modules/@stdlib/ndarray/base/assert/is-allowed-data-type-cast/lib/index.js","../node_modules/@stdlib/ndarray/base/buffer-ctors/lib/main.js","../node_modules/@stdlib/ndarray/base/buffer-ctors/lib/ctors.js","../node_modules/@stdlib/ndarray/base/buffer-ctors/lib/index.js","../node_modules/@stdlib/buffer/alloc-unsafe/lib/has_alloc_unsafe.js","../node_modules/@stdlib/buffer/alloc-unsafe/lib/main.js","../node_modules/@stdlib/buffer/alloc-unsafe/lib/polyfill.js","../node_modules/@stdlib/buffer/alloc-unsafe/lib/index.js","../node_modules/@stdlib/ndarray/base/buffer/lib/zeros.js","../node_modules/@stdlib/ndarray/base/buffer/lib/main.js","../node_modules/@stdlib/ndarray/base/buffer/lib/index.js","../node_modules/@stdlib/ndarray/base/buffer-dtype/lib/main.js","../node_modules/@stdlib/ndarray/base/buffer-dtype/lib/ctor2dtype.js","../node_modules/@stdlib/ndarray/base/buffer-dtype/lib/ctors.js","../node_modules/@stdlib/ndarray/base/buffer-dtype/lib/dtypes.js","../node_modules/@stdlib/ndarray/base/buffer-dtype/lib/index.js","../node_modules/@stdlib/array/shape/lib/main.js","../node_modules/@stdlib/array/shape/lib/index.js","../node_modules/@stdlib/utils/flatten-array/lib/defaults.js","../node_modules/@stdlib/utils/flatten-array/lib/validate.js","../node_modules/@stdlib/utils/flatten-array/lib/recurse.js","../node_modules/@stdlib/utils/flatten-array/lib/main.js","../node_modules/@stdlib/assert/is-positive-integer-array/lib/index.js","../node_modules/@stdlib/utils/flatten-array/lib/gen_fcn.js","../node_modules/@stdlib/utils/flatten-array/lib/wrap_flatten.js","../node_modules/@stdlib/utils/flatten-array/lib/wrap_flatten_copy.js","../node_modules/@stdlib/utils/flatten-array/lib/factory.js","../node_modules/@stdlib/utils/flatten-array/lib/index.js","../node_modules/@stdlib/ndarray/array/lib/is_array_like_object.js","../node_modules/@stdlib/ndarray/array/lib/cast_buffer.js","../node_modules/@stdlib/ndarray/array/lib/copy_view.js","../node_modules/@stdlib/ndarray/array/lib/expand_shape.js","../node_modules/@stdlib/ndarray/array/lib/expand_strides.js","../node_modules/@stdlib/ndarray/array/lib/main.js","../node_modules/@stdlib/ndarray/array/lib/index.js","../incr/min/lib/main.js","../incr/min/lib/index.js","../node_modules/@stdlib/blas/ext/base/gsumkbn/lib/main.js","../node_modules/@stdlib/blas/ext/base/gsumkbn/lib/ndarray.js","../node_modules/@stdlib/blas/ext/base/gsumkbn/lib/index.js","../node_modules/@stdlib/blas/ext/base/gsum/lib/main.js","../node_modules/@stdlib/blas/ext/base/gsum/lib/ndarray.js","../node_modules/@stdlib/blas/ext/base/gsum/lib/index.js","../chi2test/lib/print.js","../chi2test/lib/sum.js","../chi2test/lib/outer.js","../chi2test/lib/absdiff.js","../chi2test/lib/validate.js","../chi2test/lib/main.js","../chi2test/lib/index.js","../node_modules/@stdlib/math/base/special/erfinv/lib/rational_p5q5.js","../node_modules/@stdlib/math/base/special/erfinv/lib/erfinv.js","../node_modules/@stdlib/math/base/special/erfinv/lib/rational_p1q1.js","../node_modules/@stdlib/math/base/special/erfinv/lib/rational_p2q2.js","../node_modules/@stdlib/math/base/special/erfinv/lib/rational_p3q3.js","../node_modules/@stdlib/math/base/special/erfinv/lib/rational_p4q4.js","../node_modules/@stdlib/math/base/special/erfinv/lib/index.js","../base/dists/normal/quantile/lib/quantile.js","../base/dists/degenerate/quantile/lib/quantile.js","../base/dists/degenerate/quantile/lib/factory.js","../base/dists/degenerate/quantile/lib/index.js","../base/dists/normal/quantile/lib/factory.js","../base/dists/normal/quantile/lib/index.js","../node_modules/@stdlib/assert/contains/lib/contains.js","../node_modules/@stdlib/assert/contains/lib/index.js","../ranks/lib/sum.js","../ranks/lib/order.js","../ranks/lib/is_missing.js","../ranks/lib/validate.js","../ranks/lib/main.js","../ranks/lib/index.js","../fligner-test/lib/median.js","../fligner-test/lib/validate.js","../fligner-test/lib/print.js","../fligner-test/lib/main.js","../fligner-test/lib/index.js","../incr/pcorr/lib/index.js","../incr/pcorr/lib/main.js","../incr/count/lib/index.js","../incr/count/lib/main.js","../node_modules/@stdlib/assert/is-square-matrix/lib/index.js","../node_modules/@stdlib/assert/is-square-matrix/lib/main.js","../node_modules/@stdlib/assert/is-vector-like/lib/index.js","../node_modules/@stdlib/assert/is-vector-like/lib/main.js","../node_modules/@stdlib/assert/is-nonnegative-number/lib/primitive.js","../node_modules/@stdlib/assert/is-nonnegative-number/lib/object.js","../node_modules/@stdlib/assert/is-nonnegative-number/lib/main.js","../node_modules/@stdlib/assert/is-nonnegative-number/lib/index.js","../incr/gmean/lib/index.js","../incr/gmean/lib/main.js","../incr/minmax/lib/index.js","../incr/minmax/lib/main.js","../incr/meanstdev/lib/index.js","../incr/meanstdev/lib/main.js","../node_modules/@stdlib/utils/define-read-only-accessor/lib/index.js","../node_modules/@stdlib/utils/define-read-only-accessor/lib/main.js","../base/dists/t/quantile/lib/quantile.js","../base/dists/t/quantile/lib/factory.js","../base/dists/t/quantile/lib/index.js","../incr/grubbs/lib/main.js","../incr/grubbs/lib/validate.js","../incr/mean/lib/index.js","../incr/mean/lib/main.js","../incr/hmean/lib/index.js","../incr/hmean/lib/main.js","../incr/kurtosis/lib/index.js","../incr/kurtosis/lib/main.js","../node_modules/@stdlib/math/base/special/atan/lib/atan.js","../node_modules/@stdlib/math/base/special/atan/lib/polyval_p.js","../node_modules/@stdlib/math/base/special/atan/lib/polyval_q.js","../node_modules/@stdlib/math/base/special/atan/lib/index.js","../incr/mpcorr/lib/index.js","../incr/mpcorr/lib/main.js","../incr/max/lib/index.js","../incr/max/lib/main.js","../incr/maxabs/lib/index.js","../incr/maxabs/lib/main.js","../node_modules/@stdlib/math/base/special/kronecker-delta/lib/index.js","../node_modules/@stdlib/math/base/special/kronecker-delta/lib/main.js","../incr/meanabs/lib/index.js","../incr/meanabs/lib/main.js","../incr/meanabs2/lib/index.js","../incr/meanabs2/lib/main.js","../incr/mgrubbs/lib/main.js","../incr/mgrubbs/lib/validate.js","../incr/mgrubbs/lib/minmax.js","../incr/mgrubbs/lib/meanstdev.js","../incr/mmean/lib/index.js","../incr/mmean/lib/main.js","../incr/midrange/lib/index.js","../incr/midrange/lib/main.js","../incr/minabs/lib/index.js","../incr/minabs/lib/main.js","../incr/mmax/lib/index.js","../incr/mmax/lib/main.js","../incr/mmaxabs/lib/index.js","../incr/mmaxabs/lib/main.js","../incr/mmeanabs/lib/index.js","../incr/mmeanabs/lib/main.js","../incr/mmeanabs2/lib/index.js","../incr/mmeanabs2/lib/main.js","../incr/mmidrange/lib/index.js","../incr/mmidrange/lib/main.js","../incr/mmin/lib/index.js","../incr/mmin/lib/main.js","../incr/mminabs/lib/index.js","../incr/mminabs/lib/main.js","../incr/mminmax/lib/index.js","../incr/mminmax/lib/main.js","../node_modules/@stdlib/math/base/special/frexp/lib/main.js","../node_modules/@stdlib/math/base/special/frexp/lib/frexp.js","../node_modules/@stdlib/math/base/special/frexp/lib/index.js","../incr/mprod/lib/index.js","../incr/mprod/lib/main.js","../incr/mrange/lib/index.js","../incr/mrange/lib/main.js","../incr/msum/lib/index.js","../incr/msum/lib/main.js","../incr/mstdev/lib/index.js","../incr/mstdev/lib/main.js","../incr/msumabs/lib/index.js","../incr/msumabs/lib/main.js","../incr/msumabs2/lib/index.js","../incr/msumabs2/lib/main.js","../incr/mvariance/lib/index.js","../incr/mvariance/lib/main.js","../incr/sum/lib/index.js","../incr/sum/lib/main.js","../incr/sumabs/lib/index.js","../incr/sumabs/lib/main.js","../incr/sumabs2/lib/index.js","../incr/sumabs2/lib/main.js","../incr/prod/lib/index.js","../incr/prod/lib/main.js","../incr/range/lib/index.js","../incr/range/lib/main.js","../incr/skewness/lib/index.js","../incr/skewness/lib/main.js","../incr/variance/lib/index.js","../incr/variance/lib/main.js","../incr/lib/index.js","../incr/apcorr/lib/index.js","../incr/apcorr/lib/main.js","../incr/covariance/lib/index.js","../incr/covariance/lib/main.js","../incr/covmat/lib/index.js","../incr/covmat/lib/main.js","../incr/cv/lib/index.js","../incr/cv/lib/main.js","../incr/ewmean/lib/index.js","../incr/ewmean/lib/main.js","../incr/ewstdev/lib/index.js","../incr/ewstdev/lib/main.js","../incr/ewvariance/lib/index.js","../incr/ewvariance/lib/main.js","../incr/grubbs/lib/index.js","../incr/maape/lib/index.js","../incr/maape/lib/main.js","../incr/mae/lib/index.js","../incr/mae/lib/main.js","../incr/mapcorr/lib/index.js","../incr/mapcorr/lib/main.js","../incr/mape/lib/index.js","../incr/mape/lib/main.js","../incr/mcovariance/lib/index.js","../incr/mcovariance/lib/main.js","../incr/mcv/lib/index.js","../incr/mcv/lib/main.js","../incr/mda/lib/index.js","../incr/mda/lib/main.js","../incr/me/lib/index.js","../incr/me/lib/main.js","../incr/meanvar/lib/index.js","../incr/meanvar/lib/main.js","../incr/mgmean/lib/index.js","../incr/mgmean/lib/main.js","../incr/mgrubbs/lib/index.js","../incr/mhmean/lib/index.js","../incr/mhmean/lib/main.js","../incr/minmaxabs/lib/index.js","../incr/minmaxabs/lib/main.js","../incr/mmaape/lib/index.js","../incr/mmaape/lib/main.js","../incr/mmae/lib/index.js","../incr/mmae/lib/main.js","../incr/mmape/lib/index.js","../incr/mmape/lib/main.js","../incr/mmda/lib/index.js","../incr/mmda/lib/main.js","../incr/mme/lib/index.js","../incr/mme/lib/main.js","../incr/mmeanstdev/lib/index.js","../incr/mmeanstdev/lib/main.js","../incr/mmeanvar/lib/index.js","../incr/mmeanvar/lib/main.js","../incr/mminmaxabs/lib/index.js","../incr/mminmaxabs/lib/main.js","../incr/mmpe/lib/index.js","../incr/mmpe/lib/main.js","../incr/mmse/lib/index.js","../incr/mmse/lib/main.js","../incr/mpcorr2/lib/index.js","../incr/mpcorr2/lib/main.js","../incr/mpcorrdist/lib/index.js","../incr/mpcorrdist/lib/main.js","../incr/mpe/lib/index.js","../incr/mpe/lib/main.js","../incr/mrmse/lib/index.js","../incr/mrmse/lib/main.js","../incr/mrss/lib/index.js","../incr/mrss/lib/main.js","../incr/mse/lib/index.js","../incr/mse/lib/main.js","../incr/msummary/lib/index.js","../incr/msummary/lib/main.js","../incr/msumprod/lib/index.js","../incr/msumprod/lib/main.js","../incr/mvmr/lib/index.js","../incr/mvmr/lib/main.js","../incr/nancount/lib/index.js","../incr/nancount/lib/main.js","../incr/nansum/lib/index.js","../incr/nansum/lib/main.js","../incr/nansumabs/lib/index.js","../incr/nansumabs/lib/main.js","../incr/nansumabs2/lib/index.js","../incr/nansumabs2/lib/main.js","../incr/pcorr2/lib/index.js","../incr/pcorr2/lib/main.js","../incr/pcorrdist/lib/index.js","../incr/pcorrdist/lib/main.js","../incr/pcorrdistmat/lib/index.js","../incr/pcorrdistmat/lib/main.js","../incr/pcorrmat/lib/index.js","../incr/pcorrmat/lib/main.js","../incr/rmse/lib/index.js","../incr/rmse/lib/main.js","../incr/rss/lib/index.js","../incr/rss/lib/main.js","../incr/summary/lib/index.js","../incr/summary/lib/main.js","../incr/sumprod/lib/index.js","../incr/sumprod/lib/main.js","../incr/vmr/lib/index.js","../incr/vmr/lib/main.js","../incr/wmean/lib/index.js","../incr/wmean/lib/main.js","../node_modules/@stdlib/assert/is-iterator-like/lib/index.js","../node_modules/@stdlib/assert/is-iterator-like/lib/main.js","../iter/lib/index.js","../iter/cugmean/lib/index.js","../iter/cugmean/lib/main.js","../iter/cuhmean/lib/index.js","../iter/cuhmean/lib/main.js","../iter/cumax/lib/index.js","../iter/cumax/lib/main.js","../iter/cumaxabs/lib/index.js","../iter/cumaxabs/lib/main.js","../iter/cumean/lib/index.js","../iter/cumean/lib/main.js","../iter/cumeanabs/lib/index.js","../iter/cumeanabs/lib/main.js","../iter/cumeanabs2/lib/index.js","../iter/cumeanabs2/lib/main.js","../iter/cumidrange/lib/index.js","../iter/cumidrange/lib/main.js","../iter/cumin/lib/index.js","../iter/cumin/lib/main.js","../iter/cuminabs/lib/index.js","../iter/cuminabs/lib/main.js","../iter/cuprod/lib/index.js","../iter/cuprod/lib/main.js","../iter/curange/lib/index.js","../iter/curange/lib/main.js","../iter/cusum/lib/index.js","../iter/cusum/lib/main.js","../iter/cusumabs/lib/index.js","../iter/cusumabs/lib/main.js","../iter/cusumabs2/lib/index.js","../iter/cusumabs2/lib/main.js","../iter/max/lib/index.js","../iter/max/lib/main.js","../iter/maxabs/lib/index.js","../iter/maxabs/lib/main.js","../iter/mean/lib/index.js","../iter/mean/lib/main.js","../iter/meanabs/lib/index.js","../iter/meanabs/lib/main.js","../iter/meanabs2/lib/index.js","../iter/meanabs2/lib/main.js","../iter/midrange/lib/index.js","../iter/midrange/lib/main.js","../iter/min/lib/index.js","../iter/min/lib/main.js","../iter/minabs/lib/index.js","../iter/minabs/lib/main.js","../iter/mmax/lib/index.js","../iter/mmax/lib/main.js","../iter/mmaxabs/lib/index.js","../iter/mmaxabs/lib/main.js","../iter/mmean/lib/index.js","../iter/mmean/lib/main.js","../iter/mmeanabs/lib/index.js","../iter/mmeanabs/lib/main.js","../iter/mmeanabs2/lib/index.js","../iter/mmeanabs2/lib/main.js","../iter/mmidrange/lib/index.js","../iter/mmidrange/lib/main.js","../iter/mmin/lib/index.js","../iter/mmin/lib/main.js","../iter/mminabs/lib/index.js","../iter/mminabs/lib/main.js","../iter/mprod/lib/index.js","../iter/mprod/lib/main.js","../iter/mrange/lib/index.js","../iter/mrange/lib/main.js","../iter/msum/lib/index.js","../iter/msum/lib/main.js","../iter/msumabs/lib/index.js","../iter/msumabs/lib/main.js","../iter/msumabs2/lib/index.js","../iter/msumabs2/lib/main.js","../iter/prod/lib/index.js","../iter/prod/lib/main.js","../iter/range/lib/index.js","../iter/range/lib/main.js","../iter/stdev/lib/index.js","../iter/stdev/lib/main.js","../iter/sum/lib/index.js","../iter/sum/lib/main.js","../iter/sumabs/lib/index.js","../iter/sumabs/lib/main.js","../iter/sumabs2/lib/index.js","../iter/sumabs2/lib/main.js","../iter/variance/lib/index.js","../iter/variance/lib/main.js","../node_modules/@stdlib/array/base/linspace/lib/main.js","../node_modules/@stdlib/array/base/linspace/lib/index.js","../node_modules/@stdlib/assert/is-numeric-array/lib/main.js","../node_modules/@stdlib/assert/is-numeric-array/lib/index.js","../kde2d/lib/stdev.js","../kde2d/lib/iqr.js","../kde2d/lib/pick_bandwidth.js","../node_modules/@stdlib/assert/is-positive-number/lib/primitive.js","../node_modules/@stdlib/assert/is-positive-number/lib/object.js","../node_modules/@stdlib/assert/is-positive-number/lib/main.js","../node_modules/@stdlib/assert/is-positive-number/lib/index.js","../node_modules/@stdlib/assert/is-positive-number-array/lib/index.js","../kde2d/lib/gaussian.js","../kde2d/lib/epanechnikov.js","../kde2d/lib/cosine.js","../kde2d/lib/quartic.js","../kde2d/lib/triangular.js","../kde2d/lib/tricube.js","../kde2d/lib/triweight.js","../kde2d/lib/uniform.js","../kde2d/lib/kernels.js","../kde2d/lib/get_kernel.js","../kde2d/lib/validate.js","../kde2d/lib/ndarray_like.js","../kde2d/lib/min.js","../kde2d/lib/max.js","../kde2d/lib/kde2d.js","../kde2d/lib/index.js","../node_modules/@stdlib/utils/count-by/lib/validate.js","../node_modules/@stdlib/utils/count-by/lib/count_by.js","../node_modules/@stdlib/utils/identity-function/lib/identity.js","../node_modules/@stdlib/utils/identity-function/lib/index.js","../kruskal-test/lib/validate.js","../kruskal-test/lib/print.js","../kruskal-test/lib/main.js","../node_modules/@stdlib/utils/count-by/lib/index.js","../kruskal-test/lib/index.js","../base/max/lib/max.js","../base/max/lib/ndarray.js","../base/max/lib/main.js","../base/max/lib/index.js","../kstest/lib/smirnov.js","../kstest/lib/marsaglia.js","../kstest/lib/ascending.js","../kstest/lib/subtract.js","../kstest/lib/validate.js","../base/dists/arcsine/cdf/lib/main.js","../base/dists/arcsine/cdf/lib/factory.js","../base/dists/arcsine/cdf/lib/index.js","../base/dists/beta/cdf/lib/cdf.js","../base/dists/beta/cdf/lib/factory.js","../base/dists/beta/cdf/lib/index.js","../base/dists/betaprime/cdf/lib/cdf.js","../base/dists/betaprime/cdf/lib/factory.js","../base/dists/betaprime/cdf/lib/index.js","../node_modules/@stdlib/number/float64/base/signbit/lib/main.js","../node_modules/@stdlib/number/float64/base/signbit/lib/index.js","../node_modules/@stdlib/math/base/special/atan2/lib/main.js","../base/dists/cauchy/cdf/lib/cdf.js","../node_modules/@stdlib/math/base/special/atan2/lib/index.js","../base/dists/cauchy/cdf/lib/factory.js","../base/dists/cauchy/cdf/lib/index.js","../base/dists/chi/cdf/lib/cdf.js","../base/dists/chi/cdf/lib/factory.js","../base/dists/chi/cdf/lib/index.js","../base/dists/cosine/cdf/lib/cdf.js","../base/dists/cosine/cdf/lib/factory.js","../base/dists/cosine/cdf/lib/index.js","../base/dists/erlang/cdf/lib/cdf.js","../base/dists/erlang/cdf/lib/factory.js","../base/dists/erlang/cdf/lib/index.js","../base/dists/exponential/cdf/lib/cdf.js","../base/dists/exponential/cdf/lib/factory.js","../base/dists/exponential/cdf/lib/index.js","../base/dists/frechet/cdf/lib/cdf.js","../base/dists/frechet/cdf/lib/factory.js","../base/dists/frechet/cdf/lib/index.js","../base/dists/gumbel/cdf/lib/cdf.js","../base/dists/gumbel/cdf/lib/factory.js","../base/dists/gumbel/cdf/lib/index.js","../base/dists/invgamma/cdf/lib/cdf.js","../base/dists/invgamma/cdf/lib/factory.js","../base/dists/invgamma/cdf/lib/index.js","../base/dists/kumaraswamy/cdf/lib/cdf.js","../base/dists/kumaraswamy/cdf/lib/factory.js","../base/dists/kumaraswamy/cdf/lib/index.js","../base/dists/laplace/cdf/lib/cdf.js","../base/dists/laplace/cdf/lib/factory.js","../base/dists/laplace/cdf/lib/index.js","../base/dists/levy/cdf/lib/cdf.js","../base/dists/levy/cdf/lib/factory.js","../base/dists/levy/cdf/lib/index.js","../base/dists/logistic/cdf/lib/cdf.js","../base/dists/logistic/cdf/lib/factory.js","../base/dists/logistic/cdf/lib/index.js","../base/dists/normal/cdf/lib/cdf.js","../base/dists/normal/cdf/lib/factory.js","../base/dists/normal/cdf/lib/index.js","../base/dists/lognormal/cdf/lib/cdf.js","../base/dists/lognormal/cdf/lib/factory.js","../base/dists/lognormal/cdf/lib/index.js","../base/dists/pareto-type1/cdf/lib/cdf.js","../base/dists/pareto-type1/cdf/lib/factory.js","../base/dists/pareto-type1/cdf/lib/index.js","../base/dists/rayleigh/cdf/lib/cdf.js","../base/dists/rayleigh/cdf/lib/factory.js","../base/dists/rayleigh/cdf/lib/index.js","../base/dists/t/cdf/lib/cdf.js","../base/dists/t/cdf/lib/factory.js","../base/dists/t/cdf/lib/index.js","../base/dists/triangular/cdf/lib/cdf.js","../base/dists/triangular/cdf/lib/factory.js","../base/dists/triangular/cdf/lib/index.js","../base/dists/uniform/cdf/lib/cdf.js","../base/dists/uniform/cdf/lib/factory.js","../base/dists/uniform/cdf/lib/index.js","../base/dists/weibull/cdf/lib/cdf.js","../base/dists/weibull/cdf/lib/factory.js","../base/dists/weibull/cdf/lib/index.js","../kstest/lib/cdf.js","../kstest/lib/get_cdf.js","../kstest/lib/print.js","../kstest/lib/main.js","../kstest/lib/index.js","../levene-test/lib/absdiff.js","../levene-test/lib/validate.js","../levene-test/lib/unique.js","../levene-test/lib/print.js","../levene-test/lib/main.js","../levene-test/lib/index.js","../base/range/lib/range.js","../base/range/lib/ndarray.js","../base/range/lib/main.js","../base/range/lib/index.js","../lowess/lib/lowest.js","../lowess/lib/lowess.js","../lowess/lib/validate.js","../lowess/lib/main.js","../lowess/lib/index.js","../node_modules/@stdlib/assert/is-probability/lib/primitive.js","../node_modules/@stdlib/assert/is-probability/lib/object.js","../node_modules/@stdlib/assert/is-probability/lib/main.js","../node_modules/@stdlib/assert/is-probability/lib/index.js","../node_modules/@stdlib/assert/is-probability-array/lib/index.js","../padjust/lib/bonferroni.js","../padjust/lib/order.js","../padjust/lib/hommel.js","../base/cumax/lib/cumax.js","../base/cumax/lib/ndarray.js","../base/cumax/lib/main.js","../padjust/lib/holm.js","../base/cumin/lib/cumin.js","../base/cumin/lib/ndarray.js","../base/cumin/lib/main.js","../padjust/lib/bh.js","../padjust/lib/by.js","../padjust/lib/main.js","../padjust/lib/index.js","../node_modules/@stdlib/math/base/special/atanh/lib/atanh.js","../node_modules/@stdlib/math/base/special/atanh/lib/index.js","../node_modules/@stdlib/math/base/special/tanh/lib/rational_pq.js","../node_modules/@stdlib/math/base/special/tanh/lib/tanh.js","../node_modules/@stdlib/math/base/special/tanh/lib/index.js","../pcorrtest/lib/print.js","../node_modules/@stdlib/blas/ext/base/gsumpw/lib/ndarray.js","../node_modules/@stdlib/blas/ext/base/gsumpw/lib/main.js","../node_modules/@stdlib/blas/ext/base/gsumpw/lib/index.js","../base/variancepn/lib/variancepn.js","../base/variancepn/lib/ndarray.js","../base/variancepn/lib/main.js","../base/variance/lib/variance.js","../base/variance/lib/ndarray.js","../base/variance/lib/main.js","../base/variance/lib/index.js","../node_modules/@stdlib/blas/ext/base/gapxsumpw/lib/ndarray.js","../node_modules/@stdlib/blas/ext/base/gapxsumpw/lib/main.js","../node_modules/@stdlib/blas/ext/base/gapxsumpw/lib/index.js","../base/meanpn/lib/meanpn.js","../base/meanpn/lib/ndarray.js","../base/meanpn/lib/main.js","../base/mean/lib/mean.js","../base/mean/lib/ndarray.js","../base/mean/lib/main.js","../base/mean/lib/index.js","../pcorrtest/lib/pcorr.js","../pcorrtest/lib/validate.js","../pcorrtest/lib/main.js","../pcorrtest/lib/index.js","../ttest/lib/validate.js","../ttest/lib/print.js","../ttest/lib/main.js","../ttest/lib/index.js","../ttest2/lib/validate.js","../ttest2/lib/print.js","../ttest2/lib/main.js","../ttest2/lib/index.js","../base/dists/f/quantile/lib/quantile.js","../base/dists/f/quantile/lib/factory.js","../base/dists/f/quantile/lib/index.js","../vartest/lib/validate.js","../vartest/lib/print.js","../vartest/lib/main.js","../vartest/lib/index.js","../node_modules/@stdlib/math/base/assert/is-positive-integer/lib/is_positive_integer.js","../node_modules/@stdlib/math/base/assert/is-positive-integer/lib/index.js","../node_modules/@stdlib/math/base/assert/is-finite/lib/main.js","../node_modules/@stdlib/math/base/assert/is-finite/lib/index.js","../node_modules/@stdlib/utils/memoize/lib/memoize.js","../base/dists/signrank/cdf/lib/weights.js","../node_modules/@stdlib/utils/memoize/lib/index.js","../base/dists/signrank/cdf/lib/cdf.js","../base/dists/signrank/cdf/lib/factory.js","../base/dists/signrank/cdf/lib/index.js","../node_modules/@stdlib/utils/tabulate/lib/tabulate.js","../node_modules/@stdlib/utils/tabulate/lib/index.js","../wilcoxon/lib/validate.js","../wilcoxon/lib/unique.js","../wilcoxon/lib/print.js","../wilcoxon/lib/main.js","../wilcoxon/lib/index.js","../ztest/lib/validate.js","../ztest/lib/print.js","../ztest/lib/main.js","../ztest/lib/index.js","../ztest2/lib/validate.js","../ztest2/lib/print.js","../ztest2/lib/main.js","../ztest2/lib/index.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './define_property.js' );\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertySupport() {\n\t// Test basic support...\n\ttry {\n\t\tdefineProperty( {}, 'x', {} );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasDefinePropertySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @name defineProperty\n* @type {Function}\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nvar defineProperty = Object.defineProperty;\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );  // NOTE: we inline the `isNumber.isPrimitive` function from `@stdlib/assert/is-number` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Tests if a string starts with a minus sign (`-`).\n*\n* @private\n* @param {string} str - input string\n* @returns {boolean} boolean indicating if a string starts with a minus sign (`-`)\n*/\nfunction startsWithMinus( str ) {\n\treturn str[ 0 ] === '-';\n}\n\n/**\n* Returns a string of `n` zeros.\n*\n* @private\n* @param {number} n - number of zeros\n* @returns {string} string of zeros\n*/\nfunction zeros( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += '0';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with zeros to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction zeroPad( str, width, right ) {\n\tvar negative = false;\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tif ( startsWithMinus( str ) ) {\n\t\tnegative = true;\n\t\tstr = str.substr( 1 );\n\t}\n\tstr = ( right ) ?\n\t\tstr + zeros( pad ) :\n\t\tzeros( pad ) + str;\n\tif ( negative ) {\n\t\tstr = '-' + str;\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = zeroPad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './is_number.js' );\nvar zeroPad = require( './zero_pad.js' );\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as an integer.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid integer\n* @returns {string} formatted token argument\n*/\nfunction formatInteger( token ) {\n\tvar base;\n\tvar out;\n\tvar i;\n\n\tswitch ( token.specifier ) {\n\tcase 'b':\n\t\t// Case: %b (binary)\n\t\tbase = 2;\n\t\tbreak;\n\tcase 'o':\n\t\t// Case: %o (octal)\n\t\tbase = 8;\n\t\tbreak;\n\tcase 'x':\n\tcase 'X':\n\t\t// Case: %x, %X (hexadecimal)\n\t\tbase = 16;\n\t\tbreak;\n\tcase 'd':\n\tcase 'i':\n\tcase 'u':\n\tdefault:\n\t\t// Case: %d, %i, %u (decimal)\n\t\tbase = 10;\n\t\tbreak;\n\t}\n\tout = token.arg;\n\ti = parseInt( out, 10 );\n\tif ( !isFinite( i ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( out ) ) {\n\t\t\tthrow new Error( 'invalid integer. Value: ' + out );\n\t\t}\n\t\ti = 0;\n\t}\n\tif ( i < 0 && ( token.specifier === 'u' || base !== 10 ) ) {\n\t\ti = 0xffffffff + i + 1;\n\t}\n\tif ( i < 0 ) {\n\t\tout = ( -i ).toString( base );\n\t\tif ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tout = '-' + out;\n\t} else {\n\t\tout = i.toString( base );\n\t\tif ( !i && !token.precision ) {\n\t\t\tout = '';\n\t\t} else if ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tif ( token.sign ) {\n\t\t\tout = token.sign + out;\n\t\t}\n\t}\n\tif ( base === 16 ) {\n\t\tif ( token.alternate ) {\n\t\t\tout = '0x' + out;\n\t\t}\n\t\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\t\tuppercase.call( out ) :\n\t\t\tlowercase.call( out );\n\t}\n\tif ( base === 8 ) {\n\t\tif ( token.alternate && out.charAt( 0 ) !== '0' ) {\n\t\t\tout = '0' + out;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './is_number.js' );\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar abs = Math.abs; // eslint-disable-line stdlib/no-builtin-math\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\nvar replace = String.prototype.replace;\n\n\n// VARIABLES //\n\nvar RE_EXP_POS_DIGITS = /e\\+(\\d)$/;\nvar RE_EXP_NEG_DIGITS = /e-(\\d)$/;\nvar RE_ONLY_DIGITS = /^(\\d+)$/;\nvar RE_DIGITS_BEFORE_EXP = /^(\\d+)e/;\nvar RE_TRAILING_PERIOD_ZERO = /\\.0$/;\nvar RE_PERIOD_ZERO_EXP = /\\.0*e/;\nvar RE_ZERO_BEFORE_EXP = /(\\..*[^0])0*e/;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as a floating-point number.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid floating-point number\n* @returns {string} formatted token argument\n*/\nfunction formatDouble( token ) {\n\tvar digits;\n\tvar out;\n\tvar f = parseFloat( token.arg );\n\tif ( !isFinite( f ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( token.arg ) ) {\n\t\t\tthrow new Error( 'invalid floating-point number. Value: ' + out );\n\t\t}\n\t\t// Case: NaN, Infinity, or -Infinity\n\t\tf = token.arg;\n\t}\n\tswitch ( token.specifier ) {\n\tcase 'e':\n\tcase 'E':\n\t\tout = f.toExponential( token.precision );\n\t\tbreak;\n\tcase 'f':\n\tcase 'F':\n\t\tout = f.toFixed( token.precision );\n\t\tbreak;\n\tcase 'g':\n\tcase 'G':\n\t\tif ( abs( f ) < 0.0001 ) {\n\t\t\tdigits = token.precision;\n\t\t\tif ( digits > 0 ) {\n\t\t\t\tdigits -= 1;\n\t\t\t}\n\t\t\tout = f.toExponential( digits );\n\t\t} else {\n\t\t\tout = f.toPrecision( token.precision );\n\t\t}\n\t\tif ( !token.alternate ) {\n\t\t\tout = replace.call( out, RE_ZERO_BEFORE_EXP, '$1e' );\n\t\t\tout = replace.call( out, RE_PERIOD_ZERO_EXP, 'e');\n\t\t\tout = replace.call( out, RE_TRAILING_PERIOD_ZERO, '' );\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( 'invalid double notation. Value: ' + token.specifier );\n\t}\n\tout = replace.call( out, RE_EXP_POS_DIGITS, 'e+0$1' );\n\tout = replace.call( out, RE_EXP_NEG_DIGITS, 'e-0$1' );\n\tif ( token.alternate ) {\n\t\tout = replace.call( out, RE_ONLY_DIGITS, '$1.' );\n\t\tout = replace.call( out, RE_DIGITS_BEFORE_EXP, '$1.e' );\n\t}\n\tif ( f >= 0 && token.sign ) {\n\t\tout = token.sign + out;\n\t}\n\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\tuppercase.call( out ) :\n\t\tlowercase.call( out );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatDouble;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Returns `n` spaces.\n*\n* @private\n* @param {number} n - number of spaces\n* @returns {string} string of spaces\n*/\nfunction spaces( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += ' ';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with spaces to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction spacePad( str, width, right ) {\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tstr = ( right ) ?\n\t\tstr + spaces( pad ) :\n\t\tspaces( pad ) + str;\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = spacePad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar formatInteger = require( './format_integer.js' );\nvar isString = require( './is_string.js' );\nvar formatDouble = require( './format_double.js' );\nvar spacePad = require( './space_pad.js' );\nvar zeroPad = require( './zero_pad.js' );\n\n\n// VARIABLES //\n\nvar fromCharCode = String.fromCharCode;\nvar isnan = isNaN; // NOTE: We use the global `isNaN` function here instead of `@stdlib/math/base/assert/is-nan` to avoid circular dependencies.\nvar isArray = Array.isArray; // NOTE: We use the global `Array.isArray` function here instead of `@stdlib/assert/is-array` to avoid circular dependencies.\n\n\n// FUNCTIONS //\n\n/**\n* Initializes token object with properties of supplied format identifier object or default values if not present.\n*\n* @private\n* @param {Object} token - format identifier object\n* @returns {Object} token object\n*/\nfunction initialize( token ) {\n\tvar out = {};\n\tout.specifier = token.specifier;\n\tout.precision = ( token.precision === void 0 ) ? 1 : token.precision;\n\tout.width = token.width;\n\tout.flags = token.flags || '';\n\tout.mapping = token.mapping;\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Generates string from a token array by interpolating values.\n*\n* @param {Array} tokens - string parts and format identifier objects\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be an array\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var tokens = [ 'beep ', { 'specifier': 's' } ];\n* var out = formatInterpolate( tokens, 'boop' );\n* // returns 'beep boop'\n*/\nfunction formatInterpolate( tokens ) {\n\tvar hasPeriod;\n\tvar flags;\n\tvar token;\n\tvar flag;\n\tvar num;\n\tvar out;\n\tvar pos;\n\tvar i;\n\tvar j;\n\n\tif ( !isArray( tokens ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an array. Value: `' + tokens + '`.' );\n\t}\n\tout = '';\n\tpos = 1;\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isString( token ) ) {\n\t\t\tout += token;\n\t\t} else {\n\t\t\thasPeriod = token.precision !== void 0;\n\t\t\ttoken = initialize( token );\n\t\t\tif ( !token.specifier ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Token is missing `specifier` property. Index: `'+ i +'`. Value: `' + token + '`.' );\n\t\t\t}\n\t\t\tif ( token.mapping ) {\n\t\t\t\tpos = token.mapping;\n\t\t\t}\n\t\t\tflags = token.flags;\n\t\t\tfor ( j = 0; j < flags.length; j++ ) {\n\t\t\t\tflag = flags.charAt( j );\n\t\t\t\tswitch ( flag ) {\n\t\t\t\tcase ' ':\n\t\t\t\t\ttoken.sign = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+':\n\t\t\t\t\ttoken.sign = '+';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-':\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '0':\n\t\t\t\t\ttoken.padZeros = flags.indexOf( '-' ) < 0; // NOTE: We use built-in `Array.prototype.indexOf` here instead of `@stdlib/assert/contains` in order to avoid circular dependencies.\n\t\t\t\t\tbreak;\n\t\t\t\tcase '#':\n\t\t\t\t\ttoken.alternate = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'invalid flag: ' + flag );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( token.width === '*' ) {\n\t\t\t\ttoken.width = parseInt( arguments[ pos ], 10 );\n\t\t\t\tpos += 1;\n\t\t\t\tif ( isnan( token.width ) ) {\n\t\t\t\t\tthrow new TypeError( 'the argument for * width at position ' + pos + ' is not a number. Value: `' + token.width + '`.' );\n\t\t\t\t}\n\t\t\t\tif ( token.width < 0 ) {\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.width = -token.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( hasPeriod ) {\n\t\t\t\tif ( token.precision === '*' ) {\n\t\t\t\t\ttoken.precision = parseInt( arguments[ pos ], 10 );\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tif ( isnan( token.precision ) ) {\n\t\t\t\t\t\tthrow new TypeError( 'the argument for * precision at position ' + pos + ' is not a number. Value: `' + token.precision + '`.' );\n\t\t\t\t\t}\n\t\t\t\t\tif ( token.precision < 0 ) {\n\t\t\t\t\t\ttoken.precision = 1;\n\t\t\t\t\t\thasPeriod = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoken.arg = arguments[ pos ];\n\t\t\tswitch ( token.specifier ) {\n\t\t\tcase 'b':\n\t\t\tcase 'o':\n\t\t\tcase 'x':\n\t\t\tcase 'X':\n\t\t\tcase 'd':\n\t\t\tcase 'i':\n\t\t\tcase 'u':\n\t\t\t\t// Case: %b (binary), %o (octal), %x, %X (hexadecimal), %d, %i (decimal), %u (unsigned decimal)\n\t\t\t\tif ( hasPeriod ) {\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatInteger( token );\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\t// Case: %s (string)\n\t\t\t\ttoken.maxWidth = ( hasPeriod ) ? token.precision : -1;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\t// Case: %c (character)\n\t\t\t\tif ( !isnan( token.arg ) ) {\n\t\t\t\t\tnum = parseInt( token.arg, 10 );\n\t\t\t\t\tif ( num < 0 || num > 127 ) {\n\t\t\t\t\t\tthrow new Error( 'invalid character code. Value: ' + token.arg );\n\t\t\t\t\t}\n\t\t\t\t\ttoken.arg = ( isnan( num ) ) ?\n\t\t\t\t\t\tString( token.arg ) :\n\t\t\t\t\t\tfromCharCode( num );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\tcase 'E':\n\t\t\tcase 'f':\n\t\t\tcase 'F':\n\t\t\tcase 'g':\n\t\t\tcase 'G':\n\t\t\t\t// Case: %e, %E (scientific notation), %f, %F (decimal floating point), %g, %G (uses the shorter of %e/E or %f/F)\n\t\t\t\tif ( !hasPeriod ) {\n\t\t\t\t\ttoken.precision = 6;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatDouble( token );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'invalid specifier: ' + token.specifier );\n\t\t\t}\n\t\t\t// Fit argument into field width...\n\t\t\tif ( token.maxWidth >= 0 && token.arg.length > token.maxWidth ) {\n\t\t\t\ttoken.arg = token.arg.substring( 0, token.maxWidth );\n\t\t\t}\n\t\t\tif ( token.padZeros ) {\n\t\t\t\ttoken.arg = zeroPad( token.arg, token.width || token.precision, token.padRight ); // eslint-disable-line max-len\n\t\t\t} else if ( token.width ) {\n\t\t\t\ttoken.arg = spacePad( token.arg, token.width, token.padRight );\n\t\t\t}\n\t\t\tout += token.arg || '';\n\t\t\tpos += 1;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatInterpolate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar RE = /%(?:([1-9]\\d*)\\$)?([0 +\\-#]*)(\\*|\\d+)?(?:(\\.)(\\*|\\d+)?)?[hlL]?([%A-Za-z])/g;\n\n\n// FUNCTIONS //\n\n/**\n* Parses a delimiter.\n*\n* @private\n* @param {Array} match - regular expression match\n* @returns {Object} delimiter token object\n*/\nfunction parse( match ) {\n\tvar token = {\n\t\t'mapping': ( match[ 1 ] ) ? parseInt( match[ 1 ], 10 ) : void 0,\n\t\t'flags': match[ 2 ],\n\t\t'width': match[ 3 ],\n\t\t'precision': match[ 5 ],\n\t\t'specifier': match[ 6 ]\n\t};\n\tif ( match[ 4 ] === '.' && match[ 5 ] === void 0 ) {\n\t\ttoken.precision = '1';\n\t}\n\treturn token;\n}\n\n\n// MAIN //\n\n/**\n* Tokenizes a string into an array of string parts and format identifier objects.\n*\n* @param {string} str - input string\n* @returns {Array} tokens\n*\n* @example\n* var tokens = formatTokenize( 'Hello %s!' );\n* // returns [ 'Hello ', {...}, '!' ]\n*/\nfunction formatTokenize( str ) {\n\tvar content;\n\tvar tokens;\n\tvar match;\n\tvar prev;\n\n\ttokens = [];\n\tprev = 0;\n\tmatch = RE.exec( str );\n\twhile ( match ) {\n\t\tcontent = str.slice( prev, RE.lastIndex - match[ 0 ].length );\n\t\tif ( content.length ) {\n\t\t\ttokens.push( content );\n\t\t}\n\t\ttokens.push( parse( match ) );\n\t\tprev = RE.lastIndex;\n\t\tmatch = RE.exec( str );\n\t}\n\tcontent = str.slice( prev );\n\tif ( content.length ) {\n\t\ttokens.push( content );\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatTokenize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar interpolate = require( './../../base/format-interpolate' );\nvar tokenize = require( './../../base/format-tokenize' );\nvar isString = require( './is_string.js' );\n\n\n// MAIN //\n\n/**\n* Inserts supplied variable values into a format string.\n*\n* @param {string} str - input string\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be a string\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var str = format( 'Hello %s!', 'world' );\n* // returns 'Hello world!'\n*\n* @example\n* var str = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\nfunction format( str ) {\n\tvar tokens;\n\tvar args;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\ttokens = tokenize( str );\n\targs = new Array( arguments.length );\n\targs[ 0 ] = tokens;\n\tfor ( i = 1; i < args.length; i++ ) {\n\t\targs[ i ] = arguments[ i ];\n\t}\n\treturn interpolate.apply( null, args );\n}\n\n\n// EXPORTS //\n\nmodule.exports = format;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate string from a token array by interpolating values.\n*\n* @module @stdlib/string/base/format-interpolate\n*\n* @example\n* var formatInterpolate = require( '@stdlib/string/base/format-interpolate' );\n*\n* var tokens = ['Hello ', { 'specifier': 's' }, '!' ];\n* var out = formatInterpolate( tokens, 'World' );\n* // returns 'Hello World!'\n*/\n\n// MODULES //\n\nvar formatInterpolate = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = formatInterpolate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Insert supplied variable values into a format string.\n*\n* @module @stdlib/string/format\n*\n* @example\n* var format = require( '@stdlib/string/format' );\n*\n* var out = format( '%s %s!', 'Hello', 'World' );\n* // returns 'Hello World!'\n*\n* out = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\n\n// MODULES //\n\nvar format = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = format;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, no-proto */\n\n'use strict';\n\n// MODULES //\n\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar objectProtoype = Object.prototype;\nvar toStr = objectProtoype.toString;\nvar defineGetter = objectProtoype.__defineGetter__;\nvar defineSetter = objectProtoype.__defineSetter__;\nvar lookupGetter = objectProtoype.__lookupGetter__;\nvar lookupSetter = objectProtoype.__lookupSetter__;\n\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @param {Object} obj - object on which to define the property\n* @param {string} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nfunction defineProperty( obj, prop, descriptor ) {\n\tvar prototype;\n\tvar hasValue;\n\tvar hasGet;\n\tvar hasSet;\n\n\tif ( typeof obj !== 'object' || obj === null || toStr.call( obj ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( typeof descriptor !== 'object' || descriptor === null || toStr.call( descriptor ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Property descriptor must be an object. Value: `%s`.', descriptor ) );\n\t}\n\thasValue = ( 'value' in descriptor );\n\tif ( hasValue ) {\n\t\tif (\n\t\t\tlookupGetter.call( obj, prop ) ||\n\t\t\tlookupSetter.call( obj, prop )\n\t\t) {\n\t\t\t// Override `__proto__` to avoid touching inherited accessors:\n\t\t\tprototype = obj.__proto__;\n\t\t\tobj.__proto__ = objectProtoype;\n\n\t\t\t// Delete property as existing getters/setters prevent assigning value to specified property:\n\t\t\tdelete obj[ prop ];\n\t\t\tobj[ prop ] = descriptor.value;\n\n\t\t\t// Restore original prototype:\n\t\t\tobj.__proto__ = prototype;\n\t\t} else {\n\t\t\tobj[ prop ] = descriptor.value;\n\t\t}\n\t}\n\thasGet = ( 'get' in descriptor );\n\thasSet = ( 'set' in descriptor );\n\n\tif ( hasValue && ( hasGet || hasSet ) ) {\n\t\tthrow new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );\n\t}\n\n\tif ( hasGet && defineGetter ) {\n\t\tdefineGetter.call( obj, prop, descriptor.get );\n\t}\n\tif ( hasSet && defineSetter ) {\n\t\tdefineSetter.call( obj, prop, descriptor.set );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (or modify) an object property.\n*\n* @module @stdlib/utils/define-property\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {};\n* defineProperty( obj, 'foo', {\n*     'value': 'bar',\n*     'writable': false,\n*     'configurable': false,\n*     'enumerable': false\n* });\n* obj.foo = 'boop'; // => throws\n*/\n\n// MODULES //\n\nvar hasDefinePropertySupport = require( './has_define_property_support.js' );\nvar builtin = require( './builtin.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar defineProperty;\nif ( hasDefinePropertySupport() ) {\n\tdefineProperty = builtin;\n} else {\n\tdefineProperty = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './../../define-property' );\n\n\n// MAIN //\n\n/**\n* Defines a read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = setReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define a read-only property.\n*\n* @module @stdlib/utils/define-read-only-property\n*\n* @example\n* var setReadOnly = require( '@stdlib/utils/define-read-only-property' );\n*\n* var obj = {};\n*\n* setReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\n\n// MODULES //\n\nvar setReadOnly = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = setReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './../../define-property' );\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define a non-enumerable read-only property.\n*\n* @module @stdlib/utils/define-nonenumerable-read-only-property\n*\n* @example\n* var setNonEnumerableReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\n\n// MODULES //\n\nvar setNonEnumerableReadOnly = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round a double-precision floating-point number toward negative infinity.\n*\n* @module @stdlib/math/base/special/floor\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var v = floor( -4.2 );\n* // returns -5.0\n*\n* v = floor( 9.99999 );\n* // returns 9.0\n*\n* v = floor( 0.0 );\n* // returns 0.0\n*\n* v = floor( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar floor = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = floor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation (?)\n\n/**\n* Rounds a double-precision floating-point number toward negative infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = floor( -4.2 );\n* // returns -5.0\n*\n* @example\n* var v = floor( 9.99999 );\n* // returns 9.0\n*\n* @example\n* var v = floor( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = floor( NaN );\n* // returns NaN\n*/\nvar floor = Math.floor; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nmodule.exports = floor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( './../../../../base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is an integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an integer\n*\n* @example\n* var bool = isInteger( 1.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( 3.14 );\n* // returns false\n*/\nfunction isInteger( x ) {\n\treturn (floor(x) === x);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a finite double-precision floating-point number is an integer.\n*\n* @module @stdlib/math/base/assert/is-integer\n*\n* @example\n* var isInteger = require( '@stdlib/math/base/assert/is-integer' );\n*\n* var bool = isInteger( 1.0 );\n* // returns true\n*\n* bool = isInteger( 3.14 );\n* // returns false\n*/\n\n// MODULES //\n\nvar isInteger = require( './is_integer.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum length of a generic array.\n*\n* @module @stdlib/constants/array/max-array-length\n*\n* @example\n* var MAX_ARRAY_LENGTH = require( '@stdlib/constants/array/max-array-length' );\n* // returns 4294967295\n*/\n\n// MAIN //\n\n/**\n* Maximum length of a generic array.\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\nvar MAX_ARRAY_LENGTH = 4294967295>>>0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = MAX_ARRAY_LENGTH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar MAX_LENGTH = require( '@stdlib/constants/array/max-array-length' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is array-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is array-like\n*\n* @example\n* var bool = isArrayLike( [] );\n* // returns true\n*\n* @example\n* var bool = isArrayLike( {'length':10} );\n* // returns true\n*/\nfunction isArrayLike( value ) {\n\treturn (\n\t\tvalue !== void 0 &&\n\t\tvalue !== null &&\n\t\ttypeof value !== 'function' &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is array-like.\n*\n* @module @stdlib/assert/is-array-like\n*\n* @example\n* var isArrayLike = require( '@stdlib/assert/is-array-like' );\n*\n* var bool = isArrayLike( [] );\n* // returns true\n*\n* bool = isArrayLike( { 'length': 10 } );\n* // returns true\n*\n* bool = isArrayLike( 'beep' );\n* // returns true\n*/\n\n// MODULES //\n\nvar isArrayLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isArrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLike = require( './../../../is-array-like' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns a function which tests if every element in an array-like object passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array-like object function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arraylikefcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\nfunction arraylikefcn( predicate ) {\n\tif ( typeof predicate !== 'function' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', predicate ) );\n\t}\n\treturn every;\n\n\t/**\n\t* Tests if every element in an array-like object passes a test condition.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether a value is an array-like object for which all elements pass a test condition\n\t*/\n\tfunction every( value ) {\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isArrayLike( value ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tlen = value.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( predicate( value[ i ] ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = arraylikefcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a function which tests if every element in an array-like object passes a test condition.\n*\n* @module @stdlib/assert/tools/array-like-function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n* var arraylikefcn = require( '@stdlib/assert/tools/array-like-function' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arraylikefcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\n\n// MODULES //\n\nvar arraylikefcn = require( './arraylikefcn.js' );\n\n\n// EXPORTS //\n\nmodule.exports = arraylikefcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests for native `Symbol` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol` support\n*\n* @example\n* var bool = hasSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasSymbols = require( './../../has-symbol-support' );\n\n\n// VARIABLES //\n\nvar FLG = hasSymbols();\n\n\n// MAIN //\n\n/**\n* Tests for native `toStringTag` support.\n*\n* @returns {boolean} boolean indicating if an environment has `toStringTag` support\n*\n* @example\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\nfunction hasToStringTagSupport() {\n\treturn ( FLG && typeof Symbol.toStringTag === 'symbol' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasToStringTagSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `toStringTag` support.\n*\n* @module @stdlib/assert/has-tostringtag-support\n*\n* @example\n* var hasToStringTagSupport = require( '@stdlib/assert/has-tostringtag-support' );\n*\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasToStringTagSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasToStringTagSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar toStr = Object.prototype.toString;\n\n\n// EXPORTS //\n\nmodule.exports = toStr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toStr = require( './tostring.js' );\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification (via the internal property `[[Class]]`) of an object.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\treturn toStr.call( v );\n}\n\n\n// EXPORTS //\n\nmodule.exports = nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\nvar has = Object.prototype.hasOwnProperty;\n\n\n// MAIN //\n\n/**\n* Tests if an object has a specified property.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified property\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'bap' );\n* // returns false\n*/\nfunction hasOwnProp( value, property ) {\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\treturn has.call( value, property );\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object has a specified property.\n*\n* @module @stdlib/assert/has-own-property\n*\n* @example\n* var hasOwnProp = require( '@stdlib/assert/has-own-property' );\n*\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* bool = hasOwnProp( beep, 'bop' );\n* // returns false\n*/\n\n// MODULES //\n\nvar hasOwnProp = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar toStrTag = ( typeof Symbol === 'function' ) ? Symbol.toStringTag : '';\n\n\n// EXPORTS //\n\nmodule.exports = toStrTag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar toStringTag = require( './tostringtag.js' );\nvar toStr = require( './tostring.js' );\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification of an object in environments supporting `Symbol.toStringTag`.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\tvar isOwn;\n\tvar tag;\n\tvar out;\n\n\tif ( v === null || v === void 0 ) {\n\t\treturn toStr.call( v );\n\t}\n\ttag = v[ toStringTag ];\n\tisOwn = hasOwnProp( v, toStringTag );\n\n\t// Attempt to override the `toStringTag` property. For built-ins having a `Symbol.toStringTag` property (e.g., `JSON`, `Math`, etc), the `Symbol.toStringTag` property is read-only (e.g., , so we need to wrap in a `try/catch`.\n\ttry {\n\t\tv[ toStringTag ] = void 0;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn toStr.call( v );\n\t}\n\tout = toStr.call( v );\n\n\tif ( isOwn ) {\n\t\tv[ toStringTag ] = tag;\n\t} else {\n\t\tdelete v[ toStringTag ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a string value indicating a specification defined classification of an object.\n*\n* @module @stdlib/utils/native-class\n*\n* @example\n* var nativeClass = require( '@stdlib/utils/native-class' );\n*\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* function Beep() {\n*     return this;\n* }\n* str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\n\n// MODULES //\n\nvar hasToStringTag = require( '@stdlib/assert/has-tostringtag-support' );\nvar builtin = require( './native_class.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar nativeClass;\nif ( hasToStringTag() ) {\n\tnativeClass = polyfill;\n} else {\n\tnativeClass = builtin;\n}\n\n\n// EXPORTS //\n\nmodule.exports = nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Constructor which returns a `Number` object.\n*\n* @module @stdlib/number/ctor\n*\n* @example\n* var Number = require( '@stdlib/number/ctor' );\n*\n* var v = new Number( 10.0 );\n* // returns <Number>\n*/\n\n// MODULES //\n\nvar Number = require( './number.js' );\n\n\n// EXPORTS //\n\nmodule.exports = Number;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nmodule.exports = Number; // eslint-disable-line stdlib/require-globals\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toString = require( './tostring.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Number = require( '@stdlib/number/ctor' );\n\n\n// MAIN //\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Number.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar Number = require( '@stdlib/number/ctor' );\nvar test = require( './try2serialize.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\nfunction isNumber( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Number ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Number]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a number\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( null );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a number.\n*\n* @module @stdlib/assert/is-number\n*\n* @example\n* var isNumber = require( '@stdlib/assert/is-number' );\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( null );\n* // returns false\n*\n* @example\n* var isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*\n* @example\n* var isNumber = require( '@stdlib/assert/is-number' ).isObject;\n*\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNumber = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isNumber, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object of numbers.\n*\n* @module @stdlib/assert/is-number-array\n*\n* @example\n* var isNumberArray = require( '@stdlib/assert/is-number-array' );\n*\n* var bool = isNumberArray( [ 1, 2, 3 ] );\n* // returns true\n*\n* bool = isNumberArray( [ '1', 2, 3 ] );\n* // returns false\n*\n* @example\n* var isNumberArray = require( '@stdlib/assert/is-number-array' ).primitives;\n*\n* var bool = isNumberArray( [ 1, 2, 3 ] );\n* // returns true\n*\n* bool = isNumberArray( [ 1, new Number( 2 ) ] );\n* // returns false\n*\n* @example\n* var isNumberArray = require( '@stdlib/assert/is-number-array' ).objects;\n*\n* var bool = isNumberArray( [ new Number( 1 ), new Number( 2 ) ] );\n* // returns true\n*\n* bool = isNumberArray( [ new Number( 1 ), 2 ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\nvar isNumber = require( './../../is-number' );\n\n\n// MAIN //\n\nvar isNumberArray = arrayfun( isNumber );\nsetReadOnly( isNumberArray, 'primitives', arrayfun( isNumber.isPrimitive ) );\nsetReadOnly( isNumberArray, 'objects', arrayfun( isNumber.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isNumberArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* @module @stdlib/constants/float64/pinf\n* @type {number}\n*\n* @example\n* var FLOAT64_PINF = require( '@stdlib/constants/float64/pinf' );\n* // returns Infinity\n*/\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point positive infinity has the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.POSITIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_PINF = Number.POSITIVE_INFINITY; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_PINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* @module @stdlib/constants/float64/ninf\n* @type {number}\n*\n* @example\n* var FLOAT64_NINF = require( '@stdlib/constants/float64/ninf' );\n* // returns -Infinity\n*/\n\n// MODULES //\n\nvar Number = require( '@stdlib/number/ctor' );\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point negative infinity has the bit sequence\n*\n* ```binarystring\n* 1 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.NEGATIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_NINF = Number.NEGATIVE_INFINITY;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_NINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar isInt = require( '@stdlib/math/base/assert/is-integer' );\n\n\n// MAIN //\n\n/**\n* Tests if a number primitive is an integer value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a number primitive is an integer value\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tvalue < PINF &&\n\t\tvalue > NINF &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\nvar isInt = require( './integer.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having an integer value\n*\n* @example\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\nvar isInt = require( './integer.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having an integer value\n*\n* @example\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an integer\n*\n* @example\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isInteger( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isInteger( null );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an integer.\n*\n* @module @stdlib/assert/is-integer\n*\n* @example\n* var isInteger = require( '@stdlib/assert/is-integer' );\n*\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isInteger( -3.14 );\n* // returns false\n*\n* bool = isInteger( null );\n* // returns false\n*\n* @example\n* // Use interface to check for integer primitives...\n* var isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\n*\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*\n* @example\n* // Use interface to check for integer objects...\n* var isInteger = require( '@stdlib/assert/is-integer' ).isObject;\n*\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isInteger = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a nonnegative integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a nonnegative integer\n*\n* @example\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( null );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a nonnegative integer.\n*\n* @module @stdlib/assert/is-nonnegative-integer\n*\n* @example\n* var isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' );\n*\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* bool = isNonNegativeInteger( null );\n* // returns false\n*\n* @example\n* var isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* var isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isObject;\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNonNegativeInteger = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isNonNegativeInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isNonNegativeInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( './../../is-nonnegative-integer' ).isPrimitive;\nvar MAX = require( '@stdlib/constants/array/max-typed-array-length' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is typed-array-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is typed-array-like\n*\n* @example\n* var arr = {\n*\t'BYTES_PER_ELEMENT': 8,\n*\t'length': 10,\n*\t'byteOffset': 0,\n*\t'byteLength': 10\n* };\n* var val = isTypedArrayLike( arr );\n* // returns true\n*\n* @example\n* var Int8Array = require( '@stdlib/array/int8' );\n*\n* var val = isTypedArrayLike( new Int8Array( 4 ) );\n* // returns true\n*\n* @example\n* var val = isTypedArrayLike( [] );\n* // returns false\n*\n* @example\n* var val = isTypedArrayLike( {} );\n* // returns false\n*\n* @example\n* var val = isTypedArrayLike( null );\n* // returns false\n*\n* @example\n* var val = isTypedArrayLike( 'beep' );\n* // returns false\n*/\nfunction isTypedArrayLike( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object' &&\n\t\tisNonNegativeInteger( value.length ) &&\n\t\tvalue.length <= MAX &&\n\t\ttypeof value.BYTES_PER_ELEMENT === 'number' &&\n\t\ttypeof value.byteOffset === 'number' &&\n\t\ttypeof value.byteLength === 'number'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isTypedArrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is typed-array-like.\n*\n* @module @stdlib/assert/is-typed-array-like\n*\n* @example\n* var Int16Array = require( '@stdlib/array/int16' );\n* var isTypedArrayLike = require( '@stdlib/assert/is-typed-array-like' );\n*\n* var bool = isTypedArrayLike( new Int16Array() );\n* // returns true\n*\n* bool = isTypedArrayLike({\n*\t'length': 10,\n*\t'byteOffset': 0,\n*\t'byteLength': 10,\n*\t'BYTES_PER_ELEMENT': 4\n* });\n* // returns true\n*/\n\n// MODULES //\n\nvar isTypedArrayLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isTypedArrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar f;\n\n\n// FUNCTIONS //\n\n/**\n* Tests if a value is an array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an array\n*\n* @example\n* var bool = isArray( [] );\n* // returns true\n*\n* @example\n* var bool = isArray( {} );\n* // returns false\n*/\nfunction isArray( value ) {\n\treturn ( nativeClass( value ) === '[object Array]' );\n}\n\n\n// MAIN //\n\nif ( Array.isArray ) {\n\tf = Array.isArray;\n} else {\n\tf = isArray;\n}\n\n\n// EXPORTS //\n\nmodule.exports = f;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array.\n*\n* @module @stdlib/assert/is-array\n*\n* @example\n* var isArray = require( '@stdlib/assert/is-array' );\n*\n* var bool = isArray( [] );\n* // returns true\n*\n* bool = isArray( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is `NaN`.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 7.0 );\n* // returns false\n*/\nfunction isnan( x ) {\n\treturn ( x !== x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a double-precision floating-point numeric value is `NaN`.\n*\n* @module @stdlib/math/base/assert/is-nan\n*\n* @example\n* var isnan = require( '@stdlib/math/base/assert/is-nan' );\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( 7.0 );\n* // returns false\n*/\n\n// MODULES //\n\nvar isnan = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint32Array = ( typeof Uint32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint32Array\n*\n* @example\n* var bool = isUint32Array( new Uint32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint32Array( [] );\n* // returns false\n*/\nfunction isUint32Array( value ) {\n\treturn (\n\t\t( hasUint32Array && value instanceof Uint32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Uint32Array.\n*\n* @module @stdlib/assert/is-uint32array\n*\n* @example\n* var isUint32Array = require( '@stdlib/assert/is-uint32array' );\n*\n* var bool = isUint32Array( new Uint32Array( 10 ) );\n* // returns true\n*\n* bool = isUint32Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isUint32Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isUint32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum unsigned 32-bit integer.\n*\n* @module @stdlib/constants/uint32/max\n* @type {uinteger32}\n*\n* @example\n* var UINT32_MAX = require( '@stdlib/constants/uint32/max' );\n* // returns 4294967295\n*/\n\n\n// MAIN //\n\n/**\n* Maximum unsigned 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 11111111111111111111111111111111\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\nvar UINT32_MAX = 4294967295;\n\n\n// EXPORTS //\n\nmodule.exports = UINT32_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint32Array === 'function' ) ? Uint32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint32Array = require( './../../is-uint32array' );\nvar UINT32_MAX = require( '@stdlib/constants/uint32/max' );\nvar GlobalUint32Array = require( './uint32array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint32Array` support\n*\n* @example\n* var bool = hasUint32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT32_MAX+1, UINT32_MAX+2 ];\n\t\tarr = new GlobalUint32Array( arr );\n\t\tbool = (\n\t\t\tisUint32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&            // truncation\n\t\t\tarr[ 2 ] === UINT32_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&            // wrap around\n\t\t\tarr[ 4 ] === 1               // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 32-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 32-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint32\n*\n* @example\n* var ctor = require( '@stdlib/array/uint32' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint32Array>\n*/\n\n// MODULES //\n\nvar hasUint32ArraySupport = require( '@stdlib/assert/has-uint32array-support' );\nvar builtin = require( './uint32array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint32Array === 'function' ) ? Uint32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint32Array` support.\n*\n* @module @stdlib/assert/has-uint32array-support\n*\n* @example\n* var hasUint32ArraySupport = require( '@stdlib/assert/has-uint32array-support' );\n*\n* var bool = hasUint32ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint32ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasFloat64Array = ( typeof Float64Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Float64Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float64Array\n*\n* @example\n* var bool = isFloat64Array( new Float64Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat64Array( [] );\n* // returns false\n*/\nfunction isFloat64Array( value ) {\n\treturn (\n\t\t( hasFloat64Array && value instanceof Float64Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Float64Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFloat64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Float64Array === 'function' ) ? Float64Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFloat64Array = require( './../../is-float64array' );\nvar GlobalFloat64Array = require( './float64array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Float64Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float64Array` support\n*\n* @example\n* var bool = hasFloat64ArraySupport();\n* // returns <boolean>\n*/\nfunction hasFloat64ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalFloat64Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalFloat64Array( [ 1.0, 3.14, -3.14, NaN ] );\n\t\tbool = (\n\t\t\tisFloat64Array( arr ) &&\n\t\t\tarr[ 0 ] === 1.0 &&\n\t\t\tarr[ 1 ] === 3.14 &&\n\t\t\tarr[ 2 ] === -3.14 &&\n\t\t\tarr[ 3 ] !== arr[ 3 ]\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasFloat64ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Float64Array` support.\n*\n* @module @stdlib/assert/has-float64array-support\n*\n* @example\n* var hasFloat64ArraySupport = require( '@stdlib/assert/has-float64array-support' );\n*\n* var bool = hasFloat64ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasFloat64ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasFloat64ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of double-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of double-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array/float64\n*\n* @example\n* var ctor = require( '@stdlib/array/float64' );\n*\n* var arr = new ctor( 10 );\n* // returns <Float64Array>\n*/\n\n// MODULES //\n\nvar hasFloat64ArraySupport = require( '@stdlib/assert/has-float64array-support' );\nvar builtin = require( './float64array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasFloat64ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Float64Array === 'function' ) ? Float64Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint8Array = ( typeof Uint8Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint8Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint8Array\n*\n* @example\n* var bool = isUint8Array( new Uint8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint8Array( [] );\n* // returns false\n*/\nfunction isUint8Array( value ) {\n\treturn (\n\t\t( hasUint8Array && value instanceof Uint8Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint8Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint8Array === 'function' ) ? Uint8Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint8Array = require( './../../is-uint8array' );\nvar UINT8_MAX = require( '@stdlib/constants/uint8/max' );\nvar GlobalUint8Array = require( './uint8array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint8Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint8Array` support\n*\n* @example\n* var bool = hasUint8ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint8ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint8Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT8_MAX+1, UINT8_MAX+2 ];\n\t\tarr = new GlobalUint8Array( arr );\n\t\tbool = (\n\t\t\tisUint8Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&           // truncation\n\t\t\tarr[ 2 ] === UINT8_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&           // wrap around\n\t\t\tarr[ 4 ] === 1              // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint8\n*\n* @example\n* var ctor = require( '@stdlib/array/uint8' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8Array>\n*/\n\n// MODULES //\n\nvar hasUint8ArraySupport = require( '@stdlib/assert/has-uint8array-support' );\nvar builtin = require( './uint8array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint8ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint8Array === 'function' ) ? Uint8Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint8Array` support.\n*\n* @module @stdlib/assert/has-uint8array-support\n*\n* @example\n* var hasUint8ArraySupport = require( '@stdlib/assert/has-uint8array-support' );\n*\n* var bool = hasUint8ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint8ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint16Array = ( typeof Uint16Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint16Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint16Array\n*\n* @example\n* var bool = isUint16Array( new Uint16Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint16Array( [] );\n* // returns false\n*/\nfunction isUint16Array( value ) {\n\treturn (\n\t\t( hasUint16Array && value instanceof Uint16Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint16Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint16Array === 'function' ) ? Uint16Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint16Array = require( './../../is-uint16array' );\nvar UINT16_MAX = require( '@stdlib/constants/uint16/max' );\nvar GlobalUint16Array = require( './uint16array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint16Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint16Array` support\n*\n* @example\n* var bool = hasUint16ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint16ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint16Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT16_MAX+1, UINT16_MAX+2 ];\n\t\tarr = new GlobalUint16Array( arr );\n\t\tbool = (\n\t\t\tisUint16Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&            // truncation\n\t\t\tarr[ 2 ] === UINT16_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&            // wrap around\n\t\t\tarr[ 4 ] === 1               // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 16-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 16-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint16\n*\n* @example\n* var ctor = require( '@stdlib/array/uint16' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint16Array>\n*/\n\n// MODULES //\n\nvar hasUint16ArraySupport = require( '@stdlib/assert/has-uint16array-support' );\nvar builtin = require( './uint16array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint16ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint16Array === 'function' ) ? Uint16Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint16Array` support.\n*\n* @module @stdlib/assert/has-uint16array-support\n*\n* @example\n* var hasUint16ArraySupport = require( '@stdlib/assert/has-uint16array-support' );\n*\n* var bool = hasUint16ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint16ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctors = require( './ctors.js' );\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an environment is little endian.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment is little endian\n*\n* @example\n* var bool = isLittleEndian();\n* // returns <boolean>\n*/\nfunction isLittleEndian() {\n\tvar uint16view;\n\tvar uint8view;\n\n\tuint16view = new ctors[ 'uint16' ]( 1 );\n\n\t/*\n\t* Set the uint16 view to a value having distinguishable lower and higher order words.\n\t*\n\t* 4660 => 0x1234 => 0x12 0x34 => '00010010 00110100' => (0x12,0x34) == (18,52)\n\t*/\n\tuint16view[ 0 ] = 0x1234;\n\n\t// Create a uint8 view on top of the uint16 buffer:\n\tuint8view = new ctors[ 'uint8' ]( uint16view.buffer );\n\n\t// If little endian, the least significant byte will be first...\n\treturn ( uint8view[ 0 ] === 0x34 );\n}\n\n\n// MAIN //\n\nbool = isLittleEndian();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint8Array = require( '@stdlib/array/uint8' );\nvar Uint16Array = require( '@stdlib/array/uint16' );\n\n\n// MAIN //\n\nvar ctors = {\n\t'uint16': Uint16Array,\n\t'uint8': Uint8Array\n};\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a boolean indicating if an environment is little endian.\n*\n* @module @stdlib/assert/is-little-endian\n*\n* @example\n* var IS_LITTLE_ENDIAN = require( '@stdlib/assert/is-little-endian' );\n*\n* var bool = IS_LITTLE_ENDIAN;\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar IS_LITTLE_ENDIAN = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = IS_LITTLE_ENDIAN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar HIGH;\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n} else {\n\tHIGH = 0; // first index\n}\n\n\n// EXPORTS //\n\nmodule.exports = HIGH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar HIGH = require( './high.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Returns an unsigned 32-bit integer corresponding to the more significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - input value\n* @returns {uinteger32} higher order word\n*\n* @example\n* var w = getHighWord( 3.14e201 ); // => 01101001110001001000001011000011\n* // returns 1774486211\n*/\nfunction getHighWord( x ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\treturn UINT32_VIEW[ HIGH ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = getHighWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an unsigned 32-bit integer corresponding to the more significant 32 bits of a double-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/get-high-word\n*\n* @example\n* var getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\n*\n* var w = getHighWord( 3.14e201 ); // => 01101001110001001000001011000011\n* // returns 1774486211\n*/\n\n// MODULES //\n\nvar getHighWord = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = getHighWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar HIGH;\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n} else {\n\tHIGH = 0; // first index\n}\n\n\n// EXPORTS //\n\nmodule.exports = HIGH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar HIGH = require( './high.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Sets the more significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - double\n* @param {uinteger32} high - unsigned 32-bit integer to replace the higher order word of `x`\n* @returns {number} double having the same lower order word as `x`\n*\n* @example\n* var high = 5 >>> 0; // => 0 00000000000 00000000000000000101\n*\n* var y = setHighWord( 3.14e201, high ); //  => 0 00000000000 0000000000000000010110010011110010110101100010000010\n* // returns 1.18350528745e-313\n*\n* @example\n* var PINF = require( '@stdlib/constants/float64/pinf' ); // => 0 11111111111 00000000000000000000 00000000000000000000000000000000\n*\n* var high = 1072693248 >>> 0; // => 0 01111111111 00000000000000000000\n*\n* // Set the higher order bits of `+infinity` to return `1`:\n* var y = setHighWord( PINF, high ); // => 0 01111111111 0000000000000000000000000000000000000000000000000000\n* // returns 1.0\n*/\nfunction setHighWord( x, high ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\tUINT32_VIEW[ HIGH ] = ( high >>> 0 ); // identity bit shift to ensure integer\n\treturn FLOAT64_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = setHighWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Set the more significant 32 bits of a double-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/set-high-word\n*\n* @example\n* var setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\n*\n* var high = 5 >>> 0; // => 0 00000000000 00000000000000000101\n*\n* var y = setHighWord( 3.14e201, high ); // => 0 00000000000 0000000000000000010110010011110010110101100010000010\n* // returns 1.18350528745e-313\n*\n* @example\n* var setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\n* var PINF = require( '@stdlib/constants/float64/pinf' ); //  => 0 11111111111 00000000000000000000 00000000000000000000000000000000\n*\n* var high = 1072693248 >>> 0; // => 0 01111111111 00000000000000000000\n*\n* // Set the higher order bits of `+infinity` to return `1`:\n* var y = setHighWord( PINF, high ); => 0 01111111111 0000000000000000000000000000000000000000000000000000\n* // returns 1.0\n*/\n\n// MODULES //\n\nvar setHighWord = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = setHighWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.03333333333333313;\n\t}\n\treturn -0.03333333333333313 + (x * (0.0015873015872548146 + (x * (-0.0000793650757867488 + (x * (0.000004008217827329362 + (x * -2.0109921818362437e-7))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FDLIBM]{@link http://www.netlib.org/fdlibm/s_expm1.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar FLOAT64_EXPONENT_BIAS = require( '@stdlib/constants/float64/exponent-bias' );\nvar HALF_LN2 = require( '@stdlib/constants/float64/half-ln-two' );\nvar polyval = require( './polyval_q.js' );\n\n\n// VARIABLES //\n\nvar OVERFLOW_THRESHOLD = 7.09782712893383973096e+02; // 0x40862E42 0xFEFA39EF\n\n// High and low words of ln(2):\nvar LN2_HI = 6.93147180369123816490e-01; // 0x3FE62E42 0xFEE00000\nvar LN2_LO = 1.90821492927058770002e-10; // 0x3DEA39EF 0x35793C76\n\n// 1 / ln(2):\nvar LN2_INV = 1.44269504088896338700e+00; // 0x3FF71547 0x652B82FE\n\n// ln(2) * 56:\nvar LN2x56 = 3.88162421113569373274e+01; // 0x4043687A 0x9F1AF2B1\n\n// ln(2) * 1.5:\nvar LN2_HALFX3 = 1.03972077083991796413e+00; // 0x3FF0A2B2 0x3F3BAB73\n\n\n// MAIN //\n\n/**\n* Computes `exp(x) - 1`.\n*\n* ## Method\n*\n* 1.  Given \\\\(x\\\\), we use argument reduction to find \\\\(r\\\\) and an integer \\\\(k\\\\) such that\n*\n*     ```tex\n*     x = k \\cdot \\ln(2) + r\n*     ```\n*\n*     where\n*\n*     ```tex\n*     |r| \\leq \\frac{\\ln(2)}{2} \\approx 0.34658\n*     ```\n*\n*     <!-- <note> -->\n*\n*     A correction term \\\\(c\\\\) will need to be computed to compensate for the error in \\\\(r\\\\) when rounded to a floating-point number.\n*\n*     <!-- </note> -->\n*\n* 2.  To approximate \\\\(\\operatorname{expm1}(r)\\\\), we use a special rational function on the interval \\\\(\\[0,0.34658]\\\\). Since\n*\n*     ```tex\n*     r \\frac{e^r + 1}{e^r - 1} = 2 + \\frac{r^2}{6} - \\frac{r^4}{360} + \\ldots\n*     ```\n*\n*     we define \\\\(\\operatorname{R1}(r^2)\\\\) by\n*\n*     ```tex\n*     r \\frac{e^r + 1}{e^r - 1} = 2 + \\frac{r^2}{6} \\operatorname{R1}(r^2)\n*     ```\n*\n*     That is,\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{R1}(r^2) &= \\frac{6}{r} \\biggl(\\frac{e^r+1}{e^r-1} - \\frac{2}{r}\\biggr) \\\\\n*     &= \\frac{6}{r} \\biggl( 1 + 2 \\biggl(\\frac{1}{e^r-1} - \\frac{1}{r}\\biggr)\\biggr) \\\\\n*     &= 1 - \\frac{r^2}{60} + \\frac{r^4}{2520} - \\frac{r^6}{100800} + \\ldots\n*     \\end{align*}\n*     ```\n*\n*     We use a special Remes algorithm on \\\\(\\[0,0.347]\\\\) to generate a polynomial of degree \\\\(5\\\\) in \\\\(r^2\\\\) to approximate \\\\(\\mathrm{R1}\\\\). The maximum error of this polynomial approximation is bounded by \\\\(2^{-61}\\\\). In other words,\n*\n*     ```tex\n*     \\operatorname{R1}(z) \\approx 1 + \\mathrm{Q1} \\cdot z + \\mathrm{Q2} \\cdot z^2 + \\mathrm{Q3} \\cdot z^3 + \\mathrm{Q4} \\cdot z^4 + \\mathrm{Q5} \\cdot z^5\n*     ```\n*\n*     where\n*\n*     ```tex\n*     \\begin{align*}\n*     \\mathrm{Q1} &= -1.6666666666666567384\\mbox{e-}2 \\\\\n*     \\mathrm{Q2} &= 3.9682539681370365873\\mbox{e-}4 \\\\\n*     \\mathrm{Q3} &= -9.9206344733435987357\\mbox{e-}6 \\\\\n*     \\mathrm{Q4} &= 2.5051361420808517002\\mbox{e-}7 \\\\\n*     \\mathrm{Q5} &= -6.2843505682382617102\\mbox{e-}9\n*     \\end{align*}\n*     ```\n*\n*     where \\\\(z = r^2\\\\) and the values of \\\\(\\mathrm{Q1}\\\\) to \\\\(\\mathrm{Q5}\\\\) are listed in the source. The error is bounded by\n*\n*     ```tex\n*     \\biggl| 1 + \\mathrm{Q1} \\cdot z + \\ldots + \\mathrm{Q5} \\cdot z - \\operatorname{R1}(z) \\biggr| \\leq 2^{-61}\n*     ```\n*\n*     \\\\(\\operatorname{expm1}(r) = e^r - 1\\\\) is then computed by the following specific way which minimizes the accumulated rounding error\n*\n*     ```tex\n*     \\operatorname{expm1}(r) = r + \\frac{r^2}{2} + \\frac{r^3}{2} \\biggl( \\frac{3 - (\\mathrm{R1} + \\mathrm{R1} \\cdot \\frac{r}{2})}{6 - r ( 3 - \\mathrm{R1} \\cdot \\frac{r}{2})} \\biggr)\n*     ```\n*\n*     To compensate for the error in the argument reduction, we use\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{expm1}(r+c) &= \\operatorname{expm1}(r) + c + \\operatorname{expm1}(r) \\cdot c \\\\\n*     &\\approx \\operatorname{expm1}(r) + c + rc\n*     \\end{align*}\n*     ```\n*\n*     Thus, \\\\(c + rc\\\\) will be added in as the correction terms for \\\\(\\operatorname{expm1}(r+c)\\\\). Now, we can rearrange the term to avoid optimization screw up.\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{expm1}(r+c) &\\approx r - \\biggl( \\biggl( r + \\biggl( \\frac{r^2}{2} \\biggl( \\frac{\\mathrm{R1} - (3 - \\mathrm{R1} \\cdot \\frac{r}{2})}{6 - r (3 - \\mathrm{R1} \\cdot \\frac{r}{2})} \\biggr) - c \\biggr) - c \\biggr) - \\frac{r^2}{2} \\biggr) \\\\\n*     &= r - \\mathrm{E}\n*     \\end{align*}\n*     ```\n*\n* 3.  To scale back to obtain \\\\(\\operatorname{expm1}(x)\\\\), we have (from step 1)\n*\n*     ```tex\n*     \\operatorname{expm1}(x) = \\begin{cases}\n*     2^k  (\\operatorname{expm1}(r) + 1) - 1 \\\\\n*     2^k (\\operatorname{expm1}(r) + (1-2^{-k}))\n*     \\end{cases}\n*     ```\n*\n* ## Special Cases\n*\n* ```tex\n* \\begin{align*}\n* \\operatorname{expm1}(\\infty) &= \\infty \\\\\n* \\operatorname{expm1}(-\\infty) &= -1 \\\\\n* \\operatorname{expm1}(\\mathrm{NaN}) &= \\mathrm{NaN}\n* \\end{align*}\n* ```\n*\n*\n* ## Notes\n*\n* -   For finite arguments, only \\\\(\\operatorname{expm1}(0) = 0\\\\) is exact.\n*\n* -   To save one multiplication, we scale the coefficient \\\\(\\mathrm{Qi}\\\\) to \\\\(\\mathrm{Qi} \\cdot {2^i}\\\\) and replace \\\\(z\\\\) by \\\\(\\frac{x^2}{2}\\\\).\n*\n* -   To achieve maximum accuracy, we compute \\\\(\\operatorname{expm1}(x)\\\\) by\n*\n*     -   if \\\\(x < -56 \\cdot \\ln(2)\\\\), return \\\\(-1.0\\\\) (raise inexact if \\\\(x\\\\) does not equal \\\\(\\infty\\\\))\n*\n*     -   if \\\\(k = 0\\\\), return \\\\(r-\\mathrm{E}\\\\)\n*\n*     -   if \\\\(k = -1\\\\), return \\\\(\\frac{(r-\\mathrm{E})-1}{2}\\\\)\n*\n*     -   if \\\\(k = 1\\\\),\n*\n*         -   if \\\\(r < -0.25\\\\), return \\\\(2((r+0.5)- \\mathrm{E})\\\\)\n*         -   else return \\\\(1+2(r-\\mathrm{E})\\\\)\n*\n*     -   if \\\\(k < -2\\\\) or \\\\(k > 56\\\\), return \\\\(2^k(1-(\\mathrm{E}-r)) - 1\\\\) (or \\\\(e^x-1\\\\))\n*\n*     -   if \\\\(k \\leq 20\\\\), return \\\\(2^k((1-2^{-k})-(\\mathrm{E}-r))\\\\)\n*\n*     -   else return \\\\(2^k(1-((\\mathrm{E}+2^{-k})-r))\\\\)\n*\n* -   For IEEE 754 double, if \\\\(x > 7.09782712893383973096\\mbox{e+}02\\\\), then \\\\(\\operatorname{expm1}(x)\\\\) will overflow.\n*\n* -   The hexadecimal values listed in the source are the intended ones for the implementation constants. Decimal values may be used, provided that the compiler will convert from decimal to binary accurately enough to produce the intended hexadecimal values.\n*\n* -   According to an error analysis, the error is always less than \\\\(1\\\\) ulp (unit in the last place).\n*\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = expm1( 0.2 );\n* // returns ~0.221\n*\n* @example\n* var v = expm1( -9.0 );\n* // returns ~-0.9999\n*\n* @example\n* var v = expm1( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = expm1( NaN );\n* // returns NaN\n*/\nfunction expm1( x ) {\n\tvar halfX;\n\tvar sign;\n\tvar hi;\n\tvar lo;\n\tvar hx;\n\tvar r1;\n\tvar y;\n\tvar z;\n\tvar c;\n\tvar t;\n\tvar e;\n\tvar k;\n\n\tif ( x === PINF || isnan( x ) ) {\n\t\treturn x;\n\t}\n\tif ( x === NINF ) {\n\t\treturn -1.0;\n\t}\n\tif ( x === 0.0 ) {\n\t\treturn x; // handles +-0 (IEEE 754-2008)\n\t}\n\t// Set y = |x|:\n\tif ( x < 0.0 ) {\n\t\tsign = true;\n\t\ty = -x;\n\t} else {\n\t\tsign = false;\n\t\ty = x;\n\t}\n\t// Filter out huge and non-finite arguments...\n\tif ( y >= LN2x56 ) { // if |x| >= 56*ln(2)\n\t\tif ( sign ) { // if x <= -56*ln(2)\n\t\t\treturn -1.0;\n\t\t}\n\t\tif ( y >= OVERFLOW_THRESHOLD ) { // if |x| >= 709.78...\n\t\t\treturn PINF;\n\t\t}\n\t}\n\t// Extract the more significant bits from |x|:\n\thx = getHighWord( y )|0; // asm type annotation\n\n\t// Argument reduction...\n\tif ( y > HALF_LN2 ) { // if |x| > 0.5*ln(2)\n\t\tif ( y < LN2_HALFX3 ) { // if |x| < 1.5*ln(2)\n\t\t\tif ( sign ) {\n\t\t\t\thi = x + LN2_HI;\n\t\t\t\tlo = -LN2_LO;\n\t\t\t\tk = -1;\n\t\t\t} else {\n\t\t\t\thi = x - LN2_HI;\n\t\t\t\tlo = LN2_LO;\n\t\t\t\tk = 1;\n\t\t\t}\n\t\t} else {\n\t\t\tif ( sign ) {\n\t\t\t\tk = (LN2_INV*x) - 0.5;\n\t\t\t} else {\n\t\t\t\tk = (LN2_INV*x) + 0.5;\n\t\t\t}\n\t\t\tk |= 0; // use a bitwise OR to cast `k` to an integer (see also asm.js type annotations: http://asmjs.org/spec/latest/#annotations)\n\t\t\tt = k;\n\t\t\thi = x - (t*LN2_HI); // t*ln2_hi is exact here\n\t\t\tlo = t * LN2_LO;\n\t\t}\n\t\tx = hi - lo;\n\t\tc = (hi-x) - lo;\n\t}\n\t// if |x| < 2**-54 => high word: 0 01111001001 00000000000000000000 => 0x3c900000 = 1016070144  => exponent = 01111001001 = 969 = 1023-54\n\telse if ( hx < 1016070144 ) {\n\t\treturn x;\n\t}\n\telse {\n\t\tk = 0;\n\t}\n\t// x is now in primary range...\n\thalfX = 0.5 * x;\n\tz = x * halfX;\n\n\tr1 = 1.0 + ( z * polyval( z ) );\n\n\tt = 3.0 - (r1*halfX);\n\te = z * ( (r1-t) / (6.0 - (x*t)) );\n\tif ( k === 0 ) {\n\t\treturn x - ( (x*e) - z );\t// c is 0\n\t}\n\te = ( x * (e-c) ) - c;\n\te -= z;\n\tif ( k === -1 ) {\n\t\treturn ( 0.5*(x-e) )- 0.5;\n\t}\n\tif ( k === 1 ) {\n\t\tif ( x < -0.25 ) {\n\t\t\treturn -2.0 * ( e - (x+0.5) );\n\t\t}\n\t\treturn 1 + ( 2.0 * (x-e) );\n\t}\n\tif ( k <= -2 || k > 56 ) { // suffice to return exp(x)-1\n\t\ty = 1.0 - (e-x);\n\n\t\t// Add k to y's exponent:\n\t\thi = (getHighWord( y ) + (k<<20))|0; // asm type annotation\n\t\ty = setHighWord( y, hi );\n\n\t\treturn y - 1.0;\n\t}\n\tt = 1.0;\n\tif ( k < 20 ) {\n\t\t// 0x3ff00000 - (0x200000>>k) = 1072693248 - (0x200000>>k) => 0x200000 = 0 00000000010 00000000000000000000\n\t\thi = (1072693248 - (0x200000>>k))|0; // asm type annotation\n\t\tt = setHighWord( t, hi ); // t=1-2^-k\n\t\ty = t - (e-x);\n\t} else {\n\t\thi = ( (FLOAT64_EXPONENT_BIAS-k)<<20 )|0; // asm type annotation\n\t\tt = setHighWord( t, hi ); // t=2^-k\n\t\ty = x - (e+t);\n\t\ty += 1.0;\n\t}\n\t// Add k to y's exponent:\n\thi = (getHighWord( y ) + (k<<20))|0; // asm type annotation\n\treturn setHighWord( y, hi );\n}\n\n\n// EXPORTS //\n\nmodule.exports = expm1;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* One half times the natural logarithm of 2.\n*\n* @module @stdlib/constants/float64/half-ln-two\n* @type {number}\n*\n* @example\n* var HALF_LN2 = require( '@stdlib/constants/float64/half-ln-two' );\n* // returns 3.46573590279972654709e-01\n*/\n\n// MAIN //\n\n/**\n* One half times the natural logarithm of 2.\n*\n* ```tex\n* \\frac{\\ln 2}{2}\n* ```\n*\n* @constant\n* @type {number}\n* @default 3.46573590279972654709e-01\n*/\nvar HALF_LN2 = 3.46573590279972654709e-01; // 0x3FD62E42 0xFEFA39EF\n\n\n// EXPORTS //\n\nmodule.exports = HALF_LN2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute `exp(x) - 1`.\n*\n* @module @stdlib/math/base/special/expm1\n*\n* @example\n* var expm1 = require( '@stdlib/math/base/special/expm1' );\n*\n* var v = expm1( 0.2 );\n* // returns ~0.221\n*\n* v = expm1( -9.0 );\n* // returns ~-0.999\n*\n* v = expm1( 0.0 );\n* // returns 0.0\n*\n* v = expm1( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar expm1 = require( './expm1.js' );\n\n\n// EXPORTS //\n\nmodule.exports = expm1;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.6666666666666735;\n\t}\n\treturn 0.6666666666666735 + (x * (0.3999999999940942 + (x * (0.2857142874366239 + (x * (0.22222198432149784 + (x * (0.1818357216161805 + (x * (0.15313837699209373 + (x * 0.14798198605116586))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FDLIBM]{@link http://www.netlib.org/fdlibm/s_log1p.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar FLOAT64_EXPONENT_BIAS = require( '@stdlib/constants/float64/exponent-bias' );\nvar polyval = require( './polyval_lp.js' );\n\n\n// VARIABLES //\n\n// High and low words of ln(2):\nvar LN2_HI = 6.93147180369123816490e-01; // 0x3fe62e42 0xfee00000\nvar LN2_LO = 1.90821492927058770002e-10; // 0x3dea39ef 0x35793c76\n\n// sqrt(2)-1:\nvar SQRT2M1 = 4.142135623730950488017e-01; // 0x3fda8279 0x99fcef34\n\n// sqrt(2)/2-1:\nvar SQRT2HALFM1 = -2.928932188134524755992e-01; // 0xbfd2bec3 0x33018866\n\n// 2**-29:\nvar SMALL = 1.862645149230957e-09; // 0x3e200000 0x00000000\n\n// 2**-54:\nvar TINY = 5.551115123125783e-17;\n\n// Max integer (unsafe) => 2**53:\nvar TWO53 = 9007199254740992;\n\n// 2/3:\nvar TWO_THIRDS = 6.666666666666666666e-01;\n\n\n// MAIN //\n\n/**\n* Evaluates the natural logarithm of \\\\(1+x\\\\).\n*\n* ## Method\n*\n* 1.  Argument Reduction: find \\\\(k\\\\) and \\\\(f\\\\) such that\n*\n*     ```tex\n*     1+x = 2^k (1+f)\n*     ```\n*\n*     where\n*\n*     ```tex\n*     \\frac{\\sqrt{2}}{2} < 1+f < \\sqrt{2}\n*     ```\n*\n*     <!-- <note> -->\n*\n*     If \\\\(k=0\\\\), then \\\\(f=x\\\\) is exact. However, if \\\\(k \\neq 0\\\\), then \\\\(f\\\\) may not be representable exactly. In that case, a correction term is needed. Let\n*\n*     ```tex\n*     u = \\operatorname{round}(1+x)\n*     ```\n*\n*     and\n*\n*     ```tex\n*     c = (1+x) - u\n*     ```\n*\n*     then\n*\n*     ```tex\n*     \\ln (1+x) - \\ln u \\approx \\frac{c}{u}\n*     ```\n*\n*     We can thus proceed to compute \\\\(\\ln(u)\\\\), and add back the correction term \\\\(c/u\\\\).\n*\n*     <!-- </note> -->\n*\n*     <!-- <note> -->\n*\n*     When \\\\(x > 2^{53}\\\\), one can simply return \\\\(\\ln(x)\\\\).\n*\n*     <!-- </note> -->\n*\n* 2.  Approximation of \\\\(\\operatorname{log1p}(f)\\\\). Let\n*\n*     ```tex\n*     s = \\frac{f}{2+f}\n*     ```\n*\n*     based on\n*\n*     ```tex\n*     \\begin{align*}\n*     \\ln 1+f &= \\ln (1+s) - \\ln (1-s) \\\\\n*             &= 2s + \\frac{2}{3} s^3 + \\frac{2}{5} s^5 + ... \\\\\n*             &= 2s + sR \\\\\n*     \\end{align*}\n*     ```\n*\n*     We use a special Reme algorithm on \\\\(\\[0,0.1716\\]\\\\) to generate a polynomial of degree \\\\(14\\\\) to approximate \\\\(R\\\\). The maximum error of this polynomial approximation is bounded by \\\\(2^{-58.45}\\\\). In other words,\n*\n*     ```tex\n*     R(z) \\approx \\mathrm{Lp}_1 s^2 + \\mathrm{Lp}_2 s^4 + \\mathrm{Lp}_3 s^6 + \\mathrm{Lp}_4 s^8 + \\mathrm{Lp}_5 s^{10} + \\mathrm{Lp}_6 s^{12} + \\mathrm{Lp}_7 s^{14}\n*     ```\n*\n*     and\n*\n*     ```tex\n*     | \\mathrm{Lp}_1 s^2 + \\ldots + \\mathrm{Lp}_7 s^14 - R(z) | \\leq 2^{-58.45}\n*     ```\n*\n*     <!-- <note> -->\n*\n*     The values of \\\\(Lp1\\\\) to \\\\(Lp7\\\\) may be found in the source.\n*\n*     <!-- </note> -->\n*\n*     Note that\n*\n*     ```tex\n*     \\begin{align*}\n*     2s &= f - sf \\\\\n*        &= f - \\frac{f^2}{2} + s \\frac{f^2}{2} \\\\\n*     \\end{align*}\n*     ```\n*\n*     In order to guarantee error in \\\\(\\ln\\\\) below \\\\(1\\ \\mathrm{ulp}\\\\), we compute the log by\n*\n*     ```tex\n*     \\operatorname{log1p}(f) = f - \\biggl(\\frac{f^2}{2} - s\\biggl(\\frac{f^2}{2}+R\\biggr)\\biggr)\n*     ```\n*\n* 3.  Finally,\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{log1p}(x) &= k \\cdot \\mathrm{ln2} + \\operatorname{log1p}(f) \\\\\n*     &= k \\cdot \\mathrm{ln2}_{hi}+\\biggl(f-\\biggl(\\frac{f^2}{2}-\\biggl(s\\biggl(\\frac{f^2}{2}+R\\biggr)+k \\cdot \\mathrm{ln2}_{lo}\\biggr)\\biggr)\\biggr) \\\\\n*     \\end{align*}\n*     ```\n*\n*     Here \\\\(\\mathrm{ln2}\\\\) is split into two floating point numbers:\n*\n*     ```tex\n*     \\mathrm{ln2}_{hi} + \\mathrm{ln2}_{lo}\n*     ```\n*\n*     where \\\\(n \\cdot \\mathrm{ln2}_{hi}\\\\) is always exact for \\\\(|n| < 2000\\\\).\n*\n*\n* ## Special Cases\n*\n* -   \\\\(\\operatorname{log1p}(x) = \\mathrm{NaN}\\\\) with signal if \\\\(x < -1\\\\) (including \\\\(-\\infty\\\\))\n* -   \\\\(\\operatorname{log1p}(+\\infty) = +\\infty\\\\)\n* -   \\\\(\\operatorname{log1p}(-1) = -\\infty\\\\) with signal\n* -   \\\\(\\operatorname{log1p}(\\mathrm{NaN})= \\mathrm{NaN}\\\\) with no signal\n*\n*\n* ## Notes\n*\n* -   According to an error analysis, the error is always less than \\\\(1\\\\) ulp (unit in the last place).\n*\n* -   The hexadecimal values are the intended ones for the used constants. The decimal values may be used, provided that the compiler will convert from decimal to binary accurately enough to produce the hexadecimal values shown.\n*\n* -   Assuming \\\\(\\ln(x)\\\\) is accurate, the following algorithm can be used to evaluate \\\\(\\operatorname{log1p}(x)\\\\) to within a few ULP:\n*\n*     ```javascript\n*     var u = 1.0 + x;\n*     if ( u === 1.0 ) {\n*         return x;\n*     } else {\n*         return ln(u) * (x/(u-1.0));\n*     }\n*     ```\n*\n*     See HP-15C Advanced Functions Handbook, p.193.\n*\n*\n* @param {number} x - input value\n* @returns {number} the natural logarithm of `1+x`\n*\n* @example\n* var v = log1p( 4.0 );\n* // returns ~1.609\n*\n* @example\n* var v = log1p( -1.0 );\n* // returns -Infinity\n*\n* @example\n* var v = log1p( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = log1p( -0.0 );\n* // returns -0.0\n*\n* @example\n* var v = log1p( -2.0 );\n* // returns NaN\n*\n* @example\n* var v = log1p( NaN );\n* // returns NaN\n*/\nfunction log1p( x ) {\n\tvar hfsq;\n\tvar hu;\n\tvar y;\n\tvar f;\n\tvar c;\n\tvar s;\n\tvar z;\n\tvar R;\n\tvar u;\n\tvar k;\n\n\tif ( x < -1.0 || isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( x === -1.0 ) {\n\t\treturn NINF;\n\t}\n\tif ( x === PINF ) {\n\t\treturn x;\n\t}\n\tif ( x === 0.0 ) {\n\t\treturn x; // handle +-0 (IEEE 754-2008 spec)\n\t}\n\t// Set y = |x|:\n\tif ( x < 0.0 ) {\n\t\ty = -x;\n\t} else {\n\t\ty = x;\n\t}\n\t// Argument reduction...\n\tk = 1;\n\n\t// Check if argument reduction is needed and if we can just return a small value approximation requiring less computation but with equivalent accuracy...\n\tif ( y < SQRT2M1 ) { // if |x| < sqrt(2)-1 => ~0.41422\n\t\tif ( y < SMALL ) { // if |x| < 2**-29\n\t\t\tif ( y < TINY ) { // if |x| < 2**-54\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\t// Use a simple two-term Taylor series...\n\t\t\treturn x - ( x*x*0.5 );\n\t\t}\n\t\t// Check if `f=x` can be represented exactly (no need for correction terms), allowing us to bypass argument reduction...\n\t\tif ( x > SQRT2HALFM1 ) { // if x > sqrt(2)/2-1 => ~-0.2929\n\t\t\t// -0.2929 < x < 0.41422\n\t\t\tk = 0;\n\t\t\tf = x; // exact\n\t\t\thu = 1;\n\t\t}\n\t}\n\t// Address case where `f` cannot be represented exactly...\n\tif ( k !== 0 ) {\n\t\tif ( y < TWO53 ) {\n\t\t\tu = 1.0 + x;\n\t\t\thu = getHighWord( u );\n\n\t\t\t// Bit shift to isolate the exponent and then subtract the bias:\n\t\t\tk = (hu>>20) - FLOAT64_EXPONENT_BIAS;\n\n\t\t\t// Correction term...\n\t\t\tif ( k > 0 ) { // positive unbiased exponent\n\t\t\t\tc = 1.0 - (u-x);\n\t\t\t} else { // nonpositive unbiased exponent\n\t\t\t\tc = x - (u-1.0);\n\t\t\t}\n\t\t\tc /= u;\n\t\t} else {\n\t\t\tu = x;\n\t\t\thu = getHighWord( u );\n\n\t\t\t// Bit shift to isolate the exponent and then subtract the bias:\n\t\t\tk = (hu>>20) - FLOAT64_EXPONENT_BIAS;\n\n\t\t\t// Correction term is zero:\n\t\t\tc = 0;\n\t\t}\n\t\t// Apply a bit mask (0 00000000000 11111111111111111111) to remove the exponent:\n\t\thu &= 0x000fffff; // max value => 1048575\n\n\t\t// Check if u significand is less than sqrt(2) significand => 0x6a09e => 01101010000010011110\n\t\tif ( hu < 434334 ) {\n\t\t\t// Normalize u by setting the exponent to 1023 (bias) => 0x3ff00000 => 0 01111111111 00000000000000000000\n\t\t\tu = setHighWord( u, hu|0x3ff00000 );\n\t\t} else {\n\t\t\tk += 1;\n\n\t\t\t// Normalize u/2 by setting the exponent to 1022 (bias-1 => 2**-1 = 1/2) => 0x3fe00000 => 0 01111111110 00000000000000000000\n\t\t\tu = setHighWord( u, hu|0x3fe00000 );\n\n\t\t\t// Subtract hu significand from next largest hu => 0 00000000001 00000000000000000000 => 0x00100000 => 1048576\n\t\t\thu = (1048576-hu)>>2;\n\t\t}\n\t\tf = u - 1.0;\n\t}\n\t// Approximation of log1p(f)...\n\thfsq = 0.5 * f * f;\n\tif ( hu === 0 ) { // if |f| < 2**-20\n\t\tif ( f === 0.0 ) {\n\t\t\tc += k * LN2_LO;\n\t\t\treturn ( k * LN2_HI ) + c;\n\t\t}\n\t\tR = hfsq * (1.0 - ( TWO_THIRDS*f ) ); // avoid division\n\t\treturn ( k*LN2_HI ) - ( (R - ( (k*LN2_LO) + c)) - f );\n\t}\n\ts = f / (2.0 + f);\n\tz = s * s;\n\n\tR = z * polyval( z );\n\n\tif ( k === 0 ) {\n\t\treturn f - ( hfsq - ( s*(hfsq+R) ) );\n\t}\n\treturn ( k*LN2_HI ) - ( (hfsq - ( (s*(hfsq+R)) + ((k*LN2_LO) + c))) - f );\n}\n\n\n// EXPORTS //\n\nmodule.exports = log1p;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the natural logarithm of \\\\(1+x\\\\).\n*\n* @module @stdlib/math/base/special/log1p\n*\n* @example\n* var log1p = require( '@stdlib/math/base/special/log1p' );\n*\n* var v = log1p( 4.0 );\n* // returns ~1.609\n*\n* v = log1p( -1.0 );\n* // returns -Infinity\n*\n* v = log1p( 0.0 );\n* // returns 0.0\n*\n* v = log1p( -0.0 );\n* // returns -0.0\n*\n* v = log1p( -2.0 );\n* // returns NaN\n*\n* v = log1p( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar log1p = require( './log1p.js' );\n\n\n// EXPORTS //\n\nmodule.exports = log1p;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the principal square root of a double-precision floating-point number.\n*\n* @module @stdlib/math/base/special/sqrt\n*\n* @example\n* var sqrt = require( '@stdlib/math/base/special/sqrt' );\n*\n* var v = sqrt( 4.0 );\n* // returns 2.0\n*\n* v = sqrt( 9.0 );\n* // returns 3.0\n*\n* v = sqrt( 0.0 );\n* // returns 0.0\n*\n* v = sqrt( -4.0 );\n* // returns NaN\n*\n* v = sqrt( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar sqrt = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = sqrt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Compute the principal square root of a double-precision floating-point number.\n*\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} principal square root\n*\n* @example\n* var v = sqrt( 4.0 );\n* // returns 2.0\n*\n* v = sqrt( 9.0 );\n* // returns 3.0\n*\n* v = sqrt( 0.0 );\n* // returns 0.0\n*\n* v = sqrt( -4.0 );\n* // returns NaN\n*\n* v = sqrt( NaN );\n* // returns NaN\n*/\nvar sqrt = Math.sqrt; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nmodule.exports = sqrt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* One fourth times the mathematical constant `π`.\n*\n* @module @stdlib/constants/float64/fourth-pi\n* @type {number}\n*\n* @example\n* var FOURTH_PI = require( '@stdlib/constants/float64/fourth-pi' );\n* // returns 7.85398163397448309616e-1\n*/\n\n\n// MAIN //\n\n/**\n* One fourth times the mathematical constant `π`.\n*\n* @constant\n* @type {number}\n* @default 7.85398163397448309616e-1\n* @see [Wikipedia]{@link https://en.wikipedia.org/wiki/Pi}\n*/\nvar FOURTH_PI = 7.85398163397448309616e-1;\n\n\n// EXPORTS //\n\nmodule.exports = FOURTH_PI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn 0.08333333333333809;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 28.536655482610616 + (x * (-25.56901049652825 + (x * (6.968710824104713 + (x * (-0.5634242780008963 + (x * 0.002967721961301243))))))); // eslint-disable-line max-len\n\t\ts2 = 342.43986579130785 + (x * (-383.8770957603691 + (x * (147.0656354026815 + (x * (-21.947795316429207 + (x * 1.0))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.002967721961301243 + (x * (-0.5634242780008963 + (x * (6.968710824104713 + (x * (-25.56901049652825 + (x * 28.536655482610616))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (-21.947795316429207 + (x * (147.0656354026815 + (x * (-383.8770957603691 + (x * 342.43986579130785))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C code, long comment, copyright, license, and constants are from [Cephes]{@link http://www.netlib.org/cephes}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright 1984, 1995, 2000 by Stephen L. Moshier\n*\n* Some software in this archive may be from the book _Methods and Programs for Mathematical Functions_ (Prentice-Hall or Simon & Schuster International, 1989) or from the Cephes Mathematical Library, a commercial product. In either event, it is copyrighted by the author. What you see here may be used freely but it comes with no support or guarantee.\n*\n* Stephen L. Moshier\n* moshier@na-net.ornl.gov\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar PIO4 = require( '@stdlib/constants/float64/fourth-pi' );\nvar ratevalPQ = require( './rational_pq.js' );\nvar ratevalRS = require( './rational_rs.js' );\n\n\n// VARIABLES //\n\nvar MOREBITS = 6.123233995736765886130e-17; // pi/2 = PIO2 + MOREBITS\n\n\n// MAIN //\n\n/**\n* Computes the arcsine of a number.\n*\n* ## Method\n*\n* -   A rational function of the form\n*\n*     ```tex\n*     x + x^3 \\frac{P(x^2)}{Q(x^2)}\n*     ```\n*\n*     is used for \\\\(\\|x\\|\\\\) in the interval \\\\(\\[0, 0.5\\]\\\\). If \\\\(\\|x\\| > 0.5\\\\), it is transformed by the identity\n*\n*     ```tex\n*     \\operatorname{asin}(x) = \\frac{\\pi}{2} - 2 \\operatorname{asin}( \\sqrt{ (1-x)/2 } )\n*     ```\n*\n* ## Notes\n*\n* -   Relative error:\n*\n*     | arithmetic | domain | # trials | peak    | rms     |\n*     |:-----------|:-------|:---------|:--------|:--------|\n*     | DEC        | -1, 1  | 40000    | 2.6e-17 | 7.1e-18 |\n*     | IEEE       | -1, 1  | 10^6     | 1.9e-16 | 5.4e-17 |\n*\n* @param {number} x - input value\n* @returns {number} arcsine (in radians)\n*\n* @example\n* var v = asin( 0.0 );\n* // returns ~0.0\n*\n* @example\n* var v = asin( 3.141592653589793/4.0 );\n* // returns ~0.903\n*\n* @example\n* var v = asin( -3.141592653589793/6.0 );\n* // returns ~-0.551\n*\n* @example\n* var v = asin( NaN );\n* // returns NaN\n*/\nfunction asin( x ) {\n\tvar sgn;\n\tvar zz;\n\tvar a;\n\tvar p;\n\tvar z;\n\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( x > 0.0 ) {\n\t\ta = x;\n\t} else {\n\t\tsgn = true;\n\t\ta = -x;\n\t}\n\tif ( a > 1.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( a > 0.625 ) {\n\t\t// arcsin(1-x) = pi/2 - sqrt(2x)(1+R(x))\n\t\tzz = 1.0 - a;\n\t\tp = zz * ratevalRS( zz );\n\t\tzz = sqrt( zz + zz );\n\t\tz = PIO4 - zz;\n\t\tzz = ( zz*p ) - MOREBITS;\n\t\tz -= zz;\n\t\tz += PIO4;\n\t} else {\n\t\tif ( a < 1.0e-8 ) {\n\t\t\treturn x;\n\t\t}\n\t\tzz = a * a;\n\t\tz = zz * ratevalPQ( zz );\n\t\tz = ( a*z ) + a;\n\t}\n\treturn ( sgn ) ? -z : z;\n}\n\n\n// EXPORTS //\n\nmodule.exports = asin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn 0.16666666666666713;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -8.198089802484825 + (x * (19.562619833175948 + (x * (-16.262479672107002 + (x * (5.444622390564711 + (x * (-0.6019598008014124 + (x * 0.004253011369004428))))))))); // eslint-disable-line max-len\n\t\ts2 = -49.18853881490881 + (x * (139.51056146574857 + (x * (-147.1791292232726 + (x * (70.49610280856842 + (x * (-14.740913729888538 + (x * 1.0))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.004253011369004428 + (x * (-0.6019598008014124 + (x * (5.444622390564711 + (x * (-16.262479672107002 + (x * (19.562619833175948 + (x * -8.198089802484825))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (-14.740913729888538 + (x * (70.49610280856842 + (x * (-147.1791292232726 + (x * (139.51056146574857 + (x * -49.18853881490881))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the arcsine of a number.\n*\n* @module @stdlib/math/base/special/asin\n*\n* @example\n* var asin = require( '@stdlib/math/base/special/asin' );\n*\n* var v = asin( 0.0 );\n* // returns 0.0\n*\n* v = asin( 3.141592653589793/4.0 );\n* // returns ~0.903\n*\n* v = asin( -3.141592653589793/6.0 );\n* // returns ~-0.551\n*\n* v = asin( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar asin = require( './asin.js' );\n\n\n// EXPORTS //\n\nmodule.exports = asin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the absolute value of a double-precision floating-point number `x`.\n*\n* @param {number} x - input value\n* @returns {number} absolute value\n*\n* @example\n* var v = abs( -1.0 );\n* // returns 1.0\n*\n* @example\n* var v = abs( 2.0 );\n* // returns 2.0\n*\n* @example\n* var v = abs( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( -0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( NaN );\n* // returns NaN\n*/\nfunction abs( x ) {\n\treturn Math.abs( x ); // eslint-disable-line stdlib/no-builtin-math\n}\n\n\n// EXPORTS //\n\nmodule.exports = abs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an absolute value of a double-precision floating-point number.\n*\n* @module @stdlib/math/base/special/abs\n*\n* @example\n* var abs = require( '@stdlib/math/base/special/abs' );\n*\n* var v = abs( -1.0 );\n* // returns 1.0\n*\n* v = abs( 2.0 );\n* // returns 2.0\n*\n* v = abs( 0.0 );\n* // returns 0.0\n*\n* v = abs( -0.0 );\n* // returns 0.0\n*\n* v = abs( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar abs = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = abs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round a double-precision floating-point number toward positive infinity.\n*\n* @module @stdlib/math/base/special/ceil\n*\n* @example\n* var ceil = require( '@stdlib/math/base/special/ceil' );\n*\n* var v = ceil( -4.2 );\n* // returns -4.0\n*\n* v = ceil( 9.99999 );\n* // returns 10.0\n*\n* v = ceil( 0.0 );\n* // returns 0.0\n*\n* v = ceil( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar ceil = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ceil;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation (?)\n\n/**\n* Rounds a double-precision floating-point number toward positive infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = ceil( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = ceil( 9.99999 );\n* // returns 10.0\n*\n* @example\n* var v = ceil( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = ceil( NaN );\n* // returns NaN\n*/\nvar ceil = Math.ceil; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nmodule.exports = ceil;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( './../../../../base/special/floor' );\nvar ceil = require( './../../../../base/special/ceil' );\n\n\n// MAIN //\n\n/**\n* Rounds a double-precision floating-point number toward zero.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = trunc( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = trunc( 9.99999 );\n* // returns 9.0\n*\n* @example\n* var v = trunc( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = trunc( -0.0 );\n* // returns -0.0\n*\n* @example\n* var v = trunc( NaN );\n* // returns NaN\n*\n* @example\n* var v = trunc( Infinity );\n* // returns Infinity\n*\n* @example\n* var v = trunc( -Infinity );\n* // returns -Infinity\n*/\nfunction trunc( x ) {\n\tif ( x < 0.0 ) {\n\t\treturn ceil( x );\n\t}\n\treturn floor( x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = trunc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar indices;\nvar HIGH;\nvar LOW;\n\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n\tLOW = 0; // first index\n} else {\n\tHIGH = 0; // first index\n\tLOW = 1; // second index\n}\nindices = {\n\t'HIGH': HIGH,\n\t'LOW': LOW\n};\n\n\n// EXPORTS //\n\nmodule.exports = indices;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round a double-precision floating-point number toward zero.\n*\n* @module @stdlib/math/base/special/trunc\n*\n* @example\n* var trunc = require( '@stdlib/math/base/special/trunc' );\n*\n* var v = trunc( -4.2 );\n* // returns -4.0\n*\n* v = trunc( 9.99999 );\n* // returns 9.0\n*\n* v = trunc( 0.0 );\n* // returns 0.0\n*\n* v = trunc( -0.0 );\n* // returns -0.0\n*\n* v = trunc( NaN );\n* // returns NaN\n*\n* v = trunc( Infinity );\n* // returns Infinity\n*\n* v = trunc( -Infinity );\n* // returns -Infinity\n*/\n\n// MODULES //\n\nvar trunc = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = trunc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a double-precision floating-point numeric value is infinite.\n*\n* @module @stdlib/math/base/assert/is-infinite\n*\n* @example\n* var isInfinite = require( '@stdlib/math/base/assert/is-infinite' );\n*\n* var bool = isInfinite( Infinity );\n* // returns true\n*\n* bool = isInfinite( -Infinity );\n* // returns true\n*\n* bool = isInfinite( 5.0 );\n* // returns false\n*\n* bool = isInfinite( NaN );\n* // returns false\n*/\n\n// MODULES //\n\nvar isInfinite = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isInfinite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\n\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is infinite.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is infinite\n*\n* @example\n* var bool = isInfinite( Infinity );\n* // returns true\n*\n* @example\n* var bool = isInfinite( -Infinity );\n* // returns true\n*\n* @example\n* var bool = isInfinite( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isInfinite( NaN );\n* // returns false\n*/\nfunction isInfinite( x ) {\n\treturn (x === PINF || x === NINF);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInfinite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar indices = require( './indices.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\nvar HIGH = indices.HIGH;\nvar LOW = indices.LOW;\n\n\n// MAIN //\n\n/**\n* Splits a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n*\n* @private\n* @param {(Array|TypedArray|Object)} out - output array\n* @param {number} x - input value\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var Uint32Array = require( '@stdlib/array/uint32' );\n*\n* var out = new Uint32Array( 2 );\n*\n* var w = toWords( out, 3.14e201 );\n* // returns <Uint32Array>[ 1774486211, 2479577218 ]\n*\n* var bool = ( w === out );\n* // returns true\n*/\nfunction toWords( out, x ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\tout[ 0 ] = UINT32_VIEW[ HIGH ];\n\tout[ 1 ] = UINT32_VIEW[ LOW ];\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = toWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar fcn = require( './to_words.js' );\n\n\n// MAIN //\n\n/**\n* Splits a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @param {(Array|TypedArray|Object)} [out] - output array\n* @param {number} x - input value\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var w = toWords( 3.14e201 );\n* // returns [ 1774486211, 2479577218 ]\n*\n* @example\n* var Uint32Array = require( '@stdlib/array/uint32' );\n*\n* var out = new Uint32Array( 2 );\n*\n* var w = toWords( out, 3.14e201 );\n* // returns <Uint32Array>[ 1774486211, 2479577218 ]\n*\n* var bool = ( w === out );\n* // returns true\n*/\nfunction toWords( out, x ) {\n\tif ( arguments.length === 1 ) {\n\t\treturn fcn( [ 0, 0 ], out );\n\t}\n\treturn fcn( out, x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = toWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Split a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @module @stdlib/number/float64/base/to-words\n*\n* @example\n* var toWords = require( '@stdlib/number/float64/base/to-words' );\n*\n* var w = toWords( 3.14e201 );\n* // returns [ 1774486211, 2479577218 ]\n*\n* @example\n* var Uint32Array = require( '@stdlib/array/uint32' );\n* var toWords = require( '@stdlib/number/float64/base/to-words' );\n*\n* var out = new Uint32Array( 2 );\n*\n* var w = toWords( out, 3.14e201 );\n* // returns <Uint32Array>[ 1774486211, 2479577218 ]\n*\n* var bool = ( w === out );\n* // returns true\n*/\n\n// MODULES //\n\nvar toWords = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = toWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar indices = require( './indices.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\nvar HIGH = indices.HIGH;\nvar LOW = indices.LOW;\n\n\n// MAIN //\n\n/**\n* Creates a double-precision floating-point number from a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n*\n* In which Uint32 should we place the higher order bits? If little endian, the second; if big endian, the first.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {uinteger32} high - higher order word (unsigned 32-bit integer)\n* @param {uinteger32} low - lower order word (unsigned 32-bit integer)\n* @returns {number} floating-point number\n*\n* @example\n* var v = fromWords( 1774486211, 2479577218 );\n* // returns 3.14e201\n*\n* @example\n* var v = fromWords( 3221823995, 1413754136 );\n* // returns -3.141592653589793\n*\n* @example\n* var v = fromWords( 0, 0 );\n* // returns 0.0\n*\n* @example\n* var v = fromWords( 2147483648, 0 );\n* // returns -0.0\n*\n* @example\n* var v = fromWords( 2146959360, 0 );\n* // returns NaN\n*\n* @example\n* var v = fromWords( 2146435072, 0 );\n* // returns Infinity\n*\n* @example\n* var v = fromWords( 4293918720, 0 );\n* // returns -Infinity\n*/\nfunction fromWords( high, low ) {\n\tUINT32_VIEW[ HIGH ] = high;\n\tUINT32_VIEW[ LOW ] = low;\n\treturn FLOAT64_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar indices;\nvar HIGH;\nvar LOW;\n\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n\tLOW = 0; // first index\n} else {\n\tHIGH = 0; // first index\n\tLOW = 1; // second index\n}\nindices = {\n\t'HIGH': HIGH,\n\t'LOW': LOW\n};\n\n\n// EXPORTS //\n\nmodule.exports = indices;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a double-precision floating-point number from a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @module @stdlib/number/float64/base/from-words\n*\n* @example\n* var fromWords = require( '@stdlib/number/float64/base/from-words' );\n*\n* var v = fromWords( 1774486211, 2479577218 );\n* // returns 3.14e201\n*\n* v = fromWords( 3221823995, 1413754136 );\n* // returns -3.141592653589793\n*\n* v = fromWords( 0, 0 );\n* // returns 0.0\n*\n* v = fromWords( 2147483648, 0 );\n* // returns -0.0\n*\n* v = fromWords( 2146959360, 0 );\n* // returns NaN\n*\n* v = fromWords( 2146435072, 0 );\n* // returns Infinity\n*\n* v = fromWords( 4293918720, 0 );\n* // returns -Infinity\n*/\n\n// MODULES //\n\nvar fromWords = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = fromWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toWords = require( '@stdlib/number/float64/base/to-words' );\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar fromWords = require( '@stdlib/number/float64/base/from-words' );\n\n\n// VARIABLES //\n\n// 10000000000000000000000000000000 => 2147483648 => 0x80000000\nvar SIGN_MASK = 0x80000000>>>0; // asm type annotation\n\n// 01111111111111111111111111111111 => 2147483647 => 0x7fffffff\nvar MAGNITUDE_MASK = 0x7fffffff|0; // asm type annotation\n\n// High/low words workspace:\nvar WORDS = [ 0, 0 ];\n\n\n// MAIN //\n\n/**\n* Returns a double-precision floating-point number with the magnitude of `x` and the sign of `y`.\n*\n* @param {number} x - number from which to derive a magnitude\n* @param {number} y - number from which to derive a sign\n* @returns {number} a double-precision floating-point number\n*\n* @example\n* var z = copysign( -3.14, 10.0 );\n* // returns 3.14\n*\n* @example\n* var z = copysign( 3.14, -1.0 );\n* // returns -3.14\n*\n* @example\n* var z = copysign( 1.0, -0.0 );\n* // returns -1.0\n*\n* @example\n* var z = copysign( -3.14, -0.0 );\n* // returns -3.14\n*\n* @example\n* var z = copysign( -0.0, 1.0 );\n* // returns 0.0\n*/\nfunction copysign( x, y ) {\n\tvar hx;\n\tvar hy;\n\n\t// Split `x` into higher and lower order words:\n\ttoWords( WORDS, x );\n\thx = WORDS[ 0 ];\n\n\t// Turn off the sign bit of `x`:\n\thx &= MAGNITUDE_MASK;\n\n\t// Extract the higher order word from `y`:\n\thy = getHighWord( y );\n\n\t// Leave only the sign bit of `y` turned on:\n\thy &= SIGN_MASK;\n\n\t// Copy the sign bit of `y` to `x`:\n\thx |= hy;\n\n\t// Return a new value having the same magnitude as `x`, but with the sign of `y`:\n\treturn fromWords( hx, WORDS[ 1 ] );\n}\n\n\n// EXPORTS //\n\nmodule.exports = copysign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a double-precision floating-point number with the magnitude of `x` and the sign of `y`.\n*\n* @module @stdlib/math/base/special/copysign\n*\n* @example\n* var copysign = require( '@stdlib/math/base/special/copysign' );\n*\n* var z = copysign( -3.14, 10.0 );\n* // returns 3.14\n*\n* z = copysign( 3.14, -1.0 );\n* // returns -3.14\n*\n* z = copysign( 1.0, -0.0 );\n* // returns -1.0\n*\n* z = copysign( -3.14, -0.0 );\n* // returns -3.14\n*\n* z = copysign( -0.0, 1.0 );\n* // returns 0.0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Smallest positive double-precision floating-point normal number.\n*\n* @module @stdlib/constants/float64/smallest-normal\n* @type {number}\n*\n* @example\n* var FLOAT64_SMALLEST_NORMAL = require( '@stdlib/constants/float64/smallest-normal' );\n* // returns 2.2250738585072014e-308\n*/\n\n\n// MAIN //\n\n/**\n* The smallest positive double-precision floating-point normal number.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* \\frac{1}{2^{1023-1}}\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 00000000001 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default 2.2250738585072014e-308\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_SMALLEST_NORMAL = 2.2250738585072014e-308;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_SMALLEST_NORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar fcn = require( './normalize.js' );\n\n\n// MAIN //\n\n/**\n* Returns a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\).\n*\n* @param {(Array|TypedArray|Object)} [out] - output array\n* @param {number} x - input value\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var pow = require( '@stdlib/math/base/special/pow' );\n*\n* var out = normalize( [ 0.0, 0 ], 3.14e-319 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0,exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var pow = require( '@stdlib/math/base/special/pow' );\n*\n* var out = new Float64Array( 2 );\n*\n* var v = normalize( out, 3.14e-319 );\n* // returns <Float64Array>[ 1.4141234400356668e-303, -52 ]\n*\n* var bool = ( v === out );\n* // returns true\n*\n* @example\n* var out = normalize( [ 0.0, 0 ], 0.0 );\n* // returns [ 0.0, 0 ]\n*\n* @example\n* var out = normalize( [ 0.0, 0 ], Infinity );\n* // returns [ Infinity, 0 ]\n*\n* @example\n* var out = normalize( [ 0.0, 0 ], -Infinity );\n* // returns [ -Infinity, 0 ]\n*\n* @example\n* var out = normalize( [ 0.0, 0 ], NaN );\n* // returns [ NaN, 0 ]\n*/\nfunction normalize( out, x ) {\n\tif ( arguments.length === 1 ) {\n\t\treturn fcn( [ 0.0, 0 ], out );\n\t}\n\treturn fcn( out, x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = normalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar FLOAT64_SMALLEST_NORMAL = require( '@stdlib/constants/float64/smallest-normal' );\nvar isInfinite = require( '@stdlib/math/base/assert/is-infinite' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar abs = require( '@stdlib/math/base/special/abs' );\n\n\n// VARIABLES //\n\n// (1<<52)\nvar SCALAR = 4503599627370496;\n\n\n// MAIN //\n\n/**\n* Returns a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\).\n*\n* @private\n* @param {(Array|TypedArray|Object)} out - output array\n* @param {number} x - input value\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var pow = require( '@stdlib/math/base/special/pow' );\n*\n* var out = normalize( [ 0.0, 0 ], 3.14e-319 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0,exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var out = normalize( [ 0.0, 0 ], 0.0 );\n* // returns [ 0.0, 0 ];\n*\n* @example\n* var out = normalize( [ 0.0, 0 ], Infinity );\n* // returns [ Infinity, 0 ]\n*\n* @example\n* var out = normalize( [ 0.0, 0 ], -Infinity );\n* // returns [ -Infinity, 0 ]\n*\n* @example\n* var out = normalize( [ 0.0, 0 ], NaN );\n* // returns [ NaN, 0 ]\n*/\nfunction normalize( out, x ) {\n\tif ( isnan( x ) || isInfinite( x ) ) {\n\t\tout[ 0 ] = x;\n\t\tout[ 1 ] = 0;\n\t\treturn out;\n\t}\n\tif ( x !== 0.0 && abs( x ) < FLOAT64_SMALLEST_NORMAL ) {\n\t\tout[ 0 ] = x * SCALAR;\n\t\tout[ 1 ] = -52;\n\t\treturn out;\n\t}\n\tout[ 0 ] = x;\n\tout[ 1 ] = 0;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = normalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\).\n*\n* @module @stdlib/number/float64/base/normalize\n*\n* @example\n* var normalize = require( '@stdlib/number/float64/base/normalize' );\n* var pow = require( '@stdlib/math/base/special/pow' );\n*\n* var out = normalize( 3.14e-319 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0,exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var normalize = require( '@stdlib/number/float64/base/normalize' );\n*\n* var out = new Float64Array( 2 );\n*\n* var v = normalize( out, 3.14e-319 );\n* // returns <Float64Array>[ 1.4141234400356668e-303, -52 ]\n*\n* var bool = ( v === out );\n* // returns true\n*/\n\n// MODULES //\n\nvar normalize = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = normalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( './../../../../float64/base/get-high-word' );\nvar EXP_MASK = require( '@stdlib/constants/float64/high-word-exponent-mask' );\nvar BIAS = require( '@stdlib/constants/float64/exponent-bias' );\n\n\n// MAIN //\n\n/**\n* Returns an integer corresponding to the unbiased exponent of a double-precision floating-point number.\n*\n* @param {number} x - input value\n* @returns {integer32} unbiased exponent\n*\n* @example\n* var exp = exponent( 3.14e-307 ); // => 2**-1019 ~ 1e-307\n* // returns -1019\n*\n* @example\n* var exp = exponent( -3.14 );\n* // returns 1\n*\n* @example\n* var exp = exponent( 0.0 );\n* // returns -1023\n*\n* @example\n* var exp = exponent( NaN );\n* // returns 1024\n*/\nfunction exponent( x ) {\n\t// Extract from the input value a higher order word (unsigned 32-bit integer) which contains the exponent:\n\tvar high = getHighWord( x );\n\n\t// Apply a mask to isolate only the exponent bits and then shift off all bits which are part of the fraction:\n\thigh = ( high & EXP_MASK ) >>> 20;\n\n\t// Remove the bias and return:\n\treturn (high - BIAS)|0; // asm type annotation\n}\n\n\n// EXPORTS //\n\nmodule.exports = exponent;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* High word mask for the exponent of a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/high-word-exponent-mask\n* @type {uinteger32}\n*\n* @example\n* var FLOAT64_HIGH_WORD_EXPONENT_MASK = require( '@stdlib/constants/float64/high-word-exponent-mask' );\n* // returns 2146435072\n*/\n\n\n// MAIN //\n\n/**\n* High word mask for the exponent of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for the exponent of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 2146435072 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x7ff00000\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_HIGH_WORD_EXPONENT_MASK = 0x7ff00000;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_HIGH_WORD_EXPONENT_MASK;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an integer corresponding to the unbiased exponent of a double-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/exponent\n*\n* @example\n* var exponent = require( '@stdlib/number/float64/base/exponent' );\n*\n* var exp = exponent( 3.14e-307 ); // => 2**-1019 ~ 1e-307\n* // returns -1019\n*\n* exp = exponent( -3.14 );\n* // returns 1\n*\n* exp = exponent( 0.0 );\n* // returns -1023\n*\n* exp = exponent( NaN );\n* // returns 1024\n*/\n\n// MODULES //\n\nvar exponent = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = exponent;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// NOTES //\n\n/*\n* => ldexp: load exponent (see [The Open Group]{@link http://pubs.opengroup.org/onlinepubs/9699919799/functions/ldexp.html} and [cppreference]{@link http://en.cppreference.com/w/c/numeric/math/ldexp}).\n*/\n\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar BIAS = require( '@stdlib/constants/float64/exponent-bias' );\nvar MAX_EXPONENT = require( '@stdlib/constants/float64/max-base2-exponent' );\nvar MAX_SUBNORMAL_EXPONENT = require( '@stdlib/constants/float64/max-base2-exponent-subnormal' );\nvar MIN_SUBNORMAL_EXPONENT = require( '@stdlib/constants/float64/min-base2-exponent-subnormal' );\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar isInfinite = require( './../../../../base/assert/is-infinite' );\nvar copysign = require( './../../../../base/special/copysign' );\nvar normalize = require( '@stdlib/number/float64/base/normalize' );\nvar floatExp = require( '@stdlib/number/float64/base/exponent' );\nvar toWords = require( '@stdlib/number/float64/base/to-words' );\nvar fromWords = require( '@stdlib/number/float64/base/from-words' );\n\n\n// VARIABLES //\n\n// 1/(1<<52) = 1/(2**52) = 1/4503599627370496\nvar TWO52_INV = 2.220446049250313e-16;\n\n// Exponent all 0s: 1 00000000000 11111111111111111111 => 2148532223\nvar CLEAR_EXP_MASK = 0x800fffff>>>0; // asm type annotation\n\n// Normalization workspace:\nvar FRAC = [ 0.0, 0.0 ]; // WARNING: not thread safe\n\n// High/low words workspace:\nvar WORDS = [ 0, 0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Multiplies a double-precision floating-point number by an integer power of two.\n*\n* @param {number} frac - fraction\n* @param {integer} exp - exponent\n* @returns {number} double-precision floating-point number\n*\n* @example\n* var x = ldexp( 0.5, 3 ); // => 0.5 * 2^3 = 0.5 * 8\n* // returns 4.0\n*\n* @example\n* var x = ldexp( 4.0, -2 ); // => 4 * 2^(-2) = 4 * (1/4)\n* // returns 1.0\n*\n* @example\n* var x = ldexp( 0.0, 20 );\n* // returns 0.0\n*\n* @example\n* var x = ldexp( -0.0, 39 );\n* // returns -0.0\n*\n* @example\n* var x = ldexp( NaN, -101 );\n* // returns NaN\n*\n* @example\n* var x = ldexp( Infinity, 11 );\n* // returns Infinity\n*\n* @example\n* var x = ldexp( -Infinity, -118 );\n* // returns -Infinity\n*/\nfunction ldexp( frac, exp ) {\n\tvar high;\n\tvar m;\n\tif (\n\t\texp === 0 ||\n\t\tfrac === 0.0 || // handles +-0\n\t\tisnan( frac ) ||\n\t\tisInfinite( frac )\n\t) {\n\t\treturn frac;\n\t}\n\t// Normalize the input fraction:\n\tnormalize( FRAC, frac );\n\tfrac = FRAC[ 0 ];\n\texp += FRAC[ 1 ];\n\n\t// Extract the exponent from `frac` and add it to `exp`:\n\texp += floatExp( frac );\n\n\t// Check for underflow/overflow...\n\tif ( exp < MIN_SUBNORMAL_EXPONENT ) {\n\t\treturn copysign( 0.0, frac );\n\t}\n\tif ( exp > MAX_EXPONENT ) {\n\t\tif ( frac < 0.0 ) {\n\t\t\treturn NINF;\n\t\t}\n\t\treturn PINF;\n\t}\n\t// Check for a subnormal and scale accordingly to retain precision...\n\tif ( exp <= MAX_SUBNORMAL_EXPONENT ) {\n\t\texp += 52;\n\t\tm = TWO52_INV;\n\t} else {\n\t\tm = 1.0;\n\t}\n\t// Split the fraction into higher and lower order words:\n\ttoWords( WORDS, frac );\n\thigh = WORDS[ 0 ];\n\n\t// Clear the exponent bits within the higher order word:\n\thigh &= CLEAR_EXP_MASK;\n\n\t// Set the exponent bits to the new exponent:\n\thigh |= ((exp+BIAS) << 20);\n\n\t// Create a new floating-point number:\n\treturn m * fromWords( high, WORDS[ 1 ] );\n}\n\n\n// EXPORTS //\n\nmodule.exports = ldexp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The maximum biased base 2 exponent for a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/max-base2-exponent\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MAX_BASE2_EXPONENT = require( '@stdlib/constants/float64/max-base2-exponent' );\n* // returns 1023\n*/\n\n\n// MAIN //\n\n/**\n* The maximum biased base 2 exponent for a double-precision floating-point number.\n*\n* ```text\n* 11111111110 => 2046 - BIAS = 1023\n* ```\n*\n* where `BIAS = 1023`.\n*\n* @constant\n* @type {integer32}\n* @default 1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_BASE2_EXPONENT = 1023|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MAX_BASE2_EXPONENT;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/max-base2-exponent-subnormal\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL = require( '@stdlib/constants/float64/max-base2-exponent-subnormal' );\n* // returns -1023\n*/\n\n\n// MAIN //\n\n/**\n* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* ```text\n* 00000000000 => 0 - BIAS = -1023\n* ```\n*\n* where `BIAS = 1023`.\n*\n* @constant\n* @type {integer32}\n* @default -1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL = -1023|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/min-base2-exponent-subnormal\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL = require( '@stdlib/constants/float64/min-base2-exponent-subnormal' );\n* // returns -1074\n*/\n\n\n// MAIN //\n\n/**\n* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* ```text\n* -(BIAS+(52-1)) = -(1023+51) = -1074\n* ```\n*\n* where `BIAS = 1023` and `52` is the number of digits in the significand.\n*\n* @constant\n* @type {integer32}\n* @default -1074\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL = -1074|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Multiply a double-precision floating-point number by an integer power of two.\n*\n* @module @stdlib/math/base/special/ldexp\n*\n* @example\n* var ldexp = require( '@stdlib/math/base/special/ldexp' );\n*\n* var x = ldexp( 0.5, 3 ); // => 0.5 * 2^3 = 0.5 * 8\n* // returns 4.0\n*\n* x = ldexp( 4.0, -2 ); // => 4 * 2^(-2) = 4 * (1/4)\n* // returns 1.0\n*\n* x = ldexp( 0.0, 20 );\n* // returns 0.0\n*\n* x = ldexp( -0.0, 39 );\n* // returns -0.0\n*\n* x = ldexp( NaN, -101 );\n* // returns NaN\n*\n* x = ldexp( Infinity, 11 );\n* // returns Infinity\n*\n* x = ldexp( -Infinity, -118 );\n* // returns -Infinity\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.16666666666666602;\n\t}\n\treturn 0.16666666666666602 + (x * (-0.0027777777777015593 + (x * (0.00006613756321437934 + (x * (-0.0000016533902205465252 + (x * 4.1381367970572385e-8))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_exp.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ldexp = require( './../../../../base/special/ldexp' );\nvar polyvalP = require( './polyval_p.js' );\n\n\n// MAIN //\n\n/**\n* Computes \\\\(e^{r} 2^k\\\\) where \\\\(r = \\mathrm{hi} - \\mathrm{lo}\\\\) and \\\\(|r| \\leq \\ln(2)/2\\\\).\n*\n* @private\n* @param {number} hi - upper bound\n* @param {number} lo - lower bound\n* @param {integer} k - power of 2\n* @returns {number} function value\n*/\nfunction expmulti( hi, lo, k ) {\n\tvar r;\n\tvar t;\n\tvar c;\n\tvar y;\n\n\tr = hi - lo;\n\tt = r * r;\n\tc = r - ( t*polyvalP( t ) );\n\ty = 1.0 - ( lo - ( (r*c)/(2.0-c) ) - hi);\n\n\treturn ldexp( y, k );\n}\n\n\n// EXPORTS //\n\nmodule.exports = expmulti;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_exp.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar trunc = require( './../../../../base/special/trunc' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar expmulti = require( './expmulti.js' );\n\n\n// VARIABLES //\n\nvar LN2_HI = 6.93147180369123816490e-01;\nvar LN2_LO = 1.90821492927058770002e-10;\nvar LOG2_E = 1.44269504088896338700e+00;\nvar OVERFLOW = 7.09782712893383973096e+02;\nvar UNDERFLOW = -7.45133219101941108420e+02;\nvar NEARZERO = 1.0 / (1 << 28); // 2^-28;\nvar NEG_NEARZERO = -NEARZERO;\n\n\n// MAIN //\n\n/**\n* Evaluates the natural exponential function.\n*\n* ## Method\n*\n* 1.  We reduce \\\\( x \\\\) to an \\\\( r \\\\) so that \\\\( |r| \\leq 0.5 \\cdot \\ln(2) \\approx 0.34658 \\\\). Given \\\\( x \\\\), we find an \\\\( r \\\\) and integer \\\\( k \\\\) such that\n*\n*     ```tex\n*     \\begin{align*}\n*     x &= k \\cdot \\ln(2) + r \\\\\n*     |r| &\\leq 0.5 \\cdot \\ln(2)\n*     \\end{align*}\n*     ```\n*\n*     <!-- <note> -->\n*\n*     \\\\( r \\\\) can be represented as \\\\( r = \\mathrm{hi} - \\mathrm{lo} \\\\) for better accuracy.\n*\n*     <!-- </note> -->\n*\n* 2.  We approximate of \\\\( e^{r} \\\\) by a special rational function on the interval \\\\(\\[0,0.34658]\\\\):\n*\n*     ```tex\n*     \\begin{align*}\n*     R\\left(r^2\\right) &= r \\cdot \\frac{ e^{r}+1 }{ e^{r}-1 } \\\\\n*     &= 2 + \\frac{r^2}{6} - \\frac{r^4}{360} + \\ldots\n*     \\end{align*}\n*     ```\n*\n*     We use a special Remes algorithm on \\\\(\\[0,0.34658]\\\\) to generate a polynomial of degree \\\\(5\\\\) to approximate \\\\(R\\\\). The maximum error of this polynomial approximation is bounded by \\\\(2^{-59}\\\\). In other words,\n*\n*     ```tex\n*     R(z) \\sim 2 + P_1 z + P_2 z^2 + P_3 z^3 + P_4 z^4 + P_5 z^5\n*     ```\n*\n*     where \\\\( z = r^2 \\\\) and\n*\n*     ```tex\n*     \\left|  2 + P_1 z + \\ldots + P_5 z^5  - R(z) \\right| \\leq 2^{-59}\n*     ```\n*\n*     <!-- <note> -->\n*\n*     The values of \\\\( P_1 \\\\) to \\\\( P_5 \\\\) are listed in the source code.\n*\n*     <!-- </note> -->\n*\n*     The computation of \\\\( e^{r} \\\\) thus becomes\n*\n*     ```tex\n*     \\begin{align*}\n*     e^{r} &= 1 + \\frac{2r}{R-r} \\\\\n*           &= 1 + r + \\frac{r \\cdot R_1(r)}{2 - R_1(r)}\\ \\text{for better accuracy}\n*     \\end{align*}\n*     ```\n*\n*     where\n*\n*     ```tex\n*     R_1(r) = r - P_1\\ r^2 + P_2\\ r^4 + \\ldots + P_5\\ r^{10}\n*     ```\n*\n* 3.  We scale back to obtain \\\\( e^{x} \\\\). From step 1, we have\n*\n*     ```tex\n*     e^{x} = 2^k e^{r}\n*     ```\n*\n*\n* ## Special Cases\n*\n* ```tex\n* \\begin{align*}\n* e^\\infty &= \\infty \\\\\n* e^{-\\infty} &= 0 \\\\\n* e^{\\mathrm{NaN}} &= \\mathrm{NaN} \\\\\n* e^0 &= 1\\ \\mathrm{is\\ exact\\ for\\ finite\\ argument\\ only}\n* \\end{align*}\n* ```\n*\n* ## Notes\n*\n* -   According to an error analysis, the error is always less than \\\\(1\\\\) ulp (unit in the last place).\n*\n* -   For an IEEE double,\n*\n*     -   if \\\\(x > 7.09782712893383973096\\mbox{e+}02\\\\), then \\\\(e^{x}\\\\) overflows\n*     -   if \\\\(x < -7.45133219101941108420\\mbox{e+}02\\\\), then \\\\(e^{x}\\\\) underflows\n*\n* -   The hexadecimal values included in the source code are the intended ones for the used constants. Decimal values may be used, provided that the compiler will convert from decimal to binary accurately enough to produce the intended hexadecimal values.\n*\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = exp( 4.0 );\n* // returns ~54.5982\n*\n* @example\n* var v = exp( -9.0 );\n* // returns ~1.234e-4\n*\n* @example\n* var v = exp( 0.0 );\n* // returns 1.0\n*\n* @example\n* var v = exp( NaN );\n* // returns NaN\n*/\nfunction exp( x ) {\n\tvar hi;\n\tvar lo;\n\tvar k;\n\n\tif ( isnan( x ) || x === PINF ) {\n\t\treturn x;\n\t}\n\tif ( x === NINF ) {\n\t\treturn 0.0;\n\t}\n\tif ( x > OVERFLOW ) {\n\t\treturn PINF;\n\t}\n\tif ( x < UNDERFLOW ) {\n\t\treturn 0.0;\n\t}\n\tif (\n\t\tx > NEG_NEARZERO &&\n\t\tx < NEARZERO\n\t) {\n\t\treturn 1.0 + x;\n\t}\n\t// Reduce and compute `r = hi - lo` for extra precision.\n\tif ( x < 0.0 ) {\n\t\tk = trunc( (LOG2_E*x) - 0.5 );\n\t} else {\n\t\tk = trunc( (LOG2_E*x) + 0.5 );\n\t}\n\thi = x - (k*LN2_HI);\n\tlo = k * LN2_LO;\n\n\treturn expmulti( hi, lo, k );\n}\n\n\n// EXPORTS //\n\nmodule.exports = exp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the natural exponential function.\n*\n* @module @stdlib/math/base/special/exp\n*\n* @example\n* var exp = require( '@stdlib/math/base/special/exp' );\n*\n* var v = exp( 4.0 );\n* // returns ~54.5982\n*\n* v = exp( -9.0 );\n* // returns ~1.234e-4\n*\n* v = exp( 0.0 );\n* // returns 1.0\n*\n* v = exp( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar exp = require( './exp.js' );\n\n\n// EXPORTS //\n\nmodule.exports = exp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../../../base/assert/is-integer' );\n\n\n// MAIN //\n\n/**\n* Tests if a finite numeric value is an even number.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an even number\n*\n* @example\n* var bool = isEven( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isEven( -2.0 );\n* // returns true\n*\n* @example\n* var bool = isEven( 0.0 );\n* // returns true\n*\n* @example\n* var bool = isEven( NaN );\n* // returns false\n*/\nfunction isEven( x ) {\n\treturn isInteger( x/2.0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEven;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a finite numeric value is an even number.\n*\n* @module @stdlib/math/base/assert/is-even\n*\n* @example\n* var isEven = require( '@stdlib/math/base/assert/is-even' );\n*\n* var bool = isEven( 5.0 );\n* // returns false\n*\n* bool = isEven( -2.0 );\n* // returns true\n*\n* bool = isEven( 0.0 );\n* // returns true\n*\n* bool = isEven( NaN );\n* // returns false\n*/\n\n// MODULES //\n\nvar isEven = require( './is_even.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isEven;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isEven = require( './../../../../base/assert/is-even' );\n\n\n// MAIN //\n\n/**\n* Tests if a finite numeric value is an odd number.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an odd number\n*\n* @example\n* var bool = isOdd( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isOdd( -2.0 );\n* // returns false\n*\n* @example\n* var bool = isOdd( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isOdd( NaN );\n* // returns false\n*/\nfunction isOdd( x ) {\n\t// Check sign to prevent overflow...\n\tif ( x > 0.0 ) {\n\t\treturn isEven( x-1.0 );\n\t}\n\treturn isEven( x+1.0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isOdd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a finite numeric value is an odd number.\n*\n* @module @stdlib/math/base/assert/is-odd\n*\n* @example\n* var isOdd = require( '@stdlib/math/base/assert/is-odd' );\n*\n* var bool = isOdd( 5.0 );\n* // returns true\n*\n* bool = isOdd( -2.0 );\n* // returns false\n*\n* bool = isOdd( 0.0 );\n* // returns false\n*\n* bool = isOdd( NaN );\n* // returns false\n*/\n\n// MODULES //\n\nvar isOdd = require( './is_odd.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isOdd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar LOW;\nif ( isLittleEndian === true ) {\n\tLOW = 0; // first index\n} else {\n\tLOW = 1; // second index\n}\n\n\n// EXPORTS //\n\nmodule.exports = LOW;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar LOW = require( './low.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Sets the less significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the lower order bits? If little endian, the first; if big endian, the second.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - double\n* @param {uinteger32} low - unsigned 32-bit integer to replace the lower order word of `x`\n* @returns {number} double having the same higher order word as `x`\n*\n* @example\n* var low = 5 >>> 0; // => 00000000000000000000000000000101\n*\n* var x = 3.14e201; // => 0 11010011100 01001000001011000011 10010011110010110101100010000010\n*\n* var y = setLowWord( x, low ); // => 0 11010011100 01001000001011000011 00000000000000000000000000000101\n* // returns 3.139998651394392e+201\n*\n* @example\n* var PINF = require( '@stdlib/constants/float64/pinf' );\n* var NINF = require( '@stdlib/constants/float64/ninf' );\n*\n* var low = 12345678;\n*\n* var y = setLowWord( PINF, low );\n* // returns NaN\n*\n* y = setLowWord( NINF, low );\n* // returns NaN\n*\n* y = setLowWord( NaN, low );\n* // returns NaN\n*/\nfunction setLowWord( x, low ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\tUINT32_VIEW[ LOW ] = ( low >>> 0 ); // identity bit shift to ensure integer\n\treturn FLOAT64_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = setLowWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Set the less significant 32 bits of a double-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/set-low-word\n*\n* @example\n* var setLowWord = require( '@stdlib/number/float64/base/set-low-word' );\n*\n* var low = 5 >>> 0; // => 00000000000000000000000000000101\n*\n* var x = 3.14e201; // => 0 11010011100 01001000001011000011 10010011110010110101100010000010\n*\n* var y = setLowWord( x, low ); // => 0 11010011100 01001000001011000011 00000000000000000000000000000101\n* // returns 3.139998651394392e+201\n*\n* @example\n* var setLowWord = require( '@stdlib/number/float64/base/set-low-word' );\n* var PINF = require( '@stdlib/constants/float64/pinf' );\n* var NINF = require( '@stdlib/constants/float64/ninf' );\n*\n* var low = 12345678;\n*\n* var y = setLowWord( PINF, low );\n* // returns NaN\n*\n* y = setLowWord( NINF, low );\n* // returns NaN\n*\n* y = setLowWord( NaN, low );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar setLowWord = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = setLowWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Converts an unsigned 32-bit integer to a signed 32-bit integer.\n*\n* @param {uinteger32} x - unsigned 32-bit integer\n* @returns {integer32} signed 32-bit integer\n*\n* @example\n* var float64ToUint32 = require( '@stdlib/number/float64/base/to-uint32' );\n* var y = uint32ToInt32( float64ToUint32( 4294967295 ) );\n* // returns -1\n*\n* @example\n* var float64ToUint32 = require( '@stdlib/number/float64/base/to-uint32' );\n* var y = uint32ToInt32( float64ToUint32( 3 ) );\n* // returns 3\n*/\nfunction uint32ToInt32( x ) {\n\t// NOTE: we could also use typed-arrays to achieve the same end.\n\treturn x|0; // asm type annotation\n}\n\n\n// EXPORTS //\n\nmodule.exports = uint32ToInt32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert an unsigned 32-bit integer to a signed 32-bit integer.\n*\n* @module @stdlib/number/uint32/base/to-int32\n*\n* @example\n* var float64ToUint32 = require( '@stdlib/number/float64/base/to-uint32' );\n* var uint32ToInt32 = require( '@stdlib/number/uint32/base/to-int32' );\n*\n* var y = uint32ToInt32( float64ToUint32( 4294967295 ) );\n* // returns -1\n*\n* y = uint32ToInt32( float64ToUint32( 3 ) );\n* // returns 3\n*/\n\n// MODULES //\n\nvar uint32ToInt32 = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = uint32ToInt32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isOdd = require( './../../../../base/assert/is-odd' );\nvar copysign = require( './../../../../base/special/copysign' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function when \\\\(|x| = 0\\\\).\n*\n* @private\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} function value\n*\n* @example\n* var v = pow( 0.0, 2 );\n* // returns 0.0\n*\n* @example\n* var v = pow( -0.0, -9 );\n* // returns -Infinity\n*\n* @example\n* var v = pow( 0.0, -9 );\n* // returns Infinity\n*\n* @example\n* var v = pow( -0.0, 9 );\n* // returns 0.0\n*\n* @example\n* var v = pow( 0.0, -Infinity  );\n* // returns Infinity\n*\n* @example\n* var v = pow( 0.0, Infinity );\n* // returns 0.0\n*/\nfunction pow( x, y ) {\n\tif ( y === NINF ) {\n\t\treturn PINF;\n\t}\n\tif ( y === PINF ) {\n\t\treturn 0.0;\n\t}\n\tif ( y > 0.0 ) {\n\t\tif ( isOdd( y ) ) {\n\t\t\treturn x; // handles +-0\n\t\t}\n\t\treturn 0.0;\n\t}\n\t// y < 0.0\n\tif ( isOdd( y ) ) {\n\t\treturn copysign( PINF, x ); // handles +-0\n\t}\n\treturn PINF;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\n\n\n// VARIABLES //\n\n// 0x7fffffff = 2147483647 => 0 11111111111 11111111111111111111\nvar ABS_MASK = 0x7fffffff|0; // asm type annotation\n\n// 0x3fefffff = 1072693247 => 0 01111111110 11111111111111111111 => biased exponent: 1022 = -1+1023 => 2^-1\nvar HIGH_MAX_NEAR_UNITY = 0x3fefffff|0; // asm type annotation\n\nvar HUGE = 1.0e300;\nvar TINY = 1.0e-300;\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function when \\\\(|y| > 2^64\\\\).\n*\n* @private\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} overflow or underflow result\n*\n* @example\n* var v = pow( 9.0, 3.6893488147419103e19 );\n* // returns Infinity\n*\n* @example\n* var v = pow( -3.14, -3.6893488147419103e19 );\n* // returns 0.0\n*/\nfunction pow( x, y ) {\n\tvar ahx;\n\tvar hx;\n\n\thx = getHighWord( x );\n\tahx = (hx & ABS_MASK);\n\n\tif ( ahx <= HIGH_MAX_NEAR_UNITY ) {\n\t\tif ( y < 0 ) {\n\t\t\t// signal overflow...\n\t\t\treturn HUGE * HUGE;\n\t\t}\n\t\t// signal underflow...\n\t\treturn TINY * TINY;\n\t}\n\t// `x` has a biased exponent greater than or equal to `0`...\n\n\tif ( y > 0 ) {\n\t\t// signal overflow...\n\t\treturn HUGE * HUGE;\n\t}\n\t// signal underflow...\n\treturn TINY * TINY;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( './../../../../base/special/abs' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function when \\\\( y = \\pm \\infty\\\\).\n*\n* @private\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} function value\n*\n* @example\n* var v = pow( -1.0, Infinity );\n* // returns NaN\n*\n* @example\n* var v = pow( -1.0, -Infinity  );\n* // returns NaN\n*\n* @example\n* var v = pow( 1.0, Infinity );\n* // returns 1.0\n*\n* @example\n* var v = pow( 1.0, -Infinity  );\n* // returns 1.0\n*\n* @example\n* var v = pow( 0.5, Infinity );\n* // returns 0.0\n*\n* @example\n* var v = pow( 0.5, -Infinity  );\n* // returns Infinity\n*\n* @example\n* var v = pow( 1.5, -Infinity  );\n* // returns 0.0\n*\n* @example\n* var v = pow( 1.5, Infinity );\n* // returns Infinity\n*/\nfunction pow( x, y ) {\n\tif ( x === -1.0 ) {\n\t\t// Julia (0.4.2) and Python (2.7.9) return `1.0` (WTF???). JavaScript (`Math.pow`), R, and libm return `NaN`. We choose `NaN`, as the value is indeterminate; i.e., we cannot determine whether `y` is odd, even, or somewhere in between.\n\t\treturn (x-x)/(x-x); // signal NaN\n\t}\n\tif ( x === 1.0 ) {\n\t\treturn 1.0;\n\t}\n\t// (|x| > 1 && y === NINF) || (|x| < 1 && y === PINF)\n\tif ( (abs(x) < 1.0) === (y === PINF) ) {\n\t\treturn 0.0;\n\t}\n\t// (|x| > 1 && y === PINF) || (|x| < 1 && y === NINF)\n\treturn PINF;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.5999999999999946;\n\t}\n\treturn 0.5999999999999946 + (x * (0.4285714285785502 + (x * (0.33333332981837743 + (x * (0.272728123808534 + (x * (0.23066074577556175 + (x * 0.20697501780033842))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar setLowWord = require( '@stdlib/number/float64/base/set-low-word' );\nvar setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\nvar BIAS = require( '@stdlib/constants/float64/exponent-bias' );\nvar polyvalL = require( './polyval_l.js' );\n\n\n// VARIABLES //\n\n// 0x000fffff = 1048575 => 0 00000000000 11111111111111111111\nvar HIGH_SIGNIFICAND_MASK = 0x000fffff|0; // asm type annotation\n\n// 0x00100000 = 1048576 => 0 00000000001 00000000000000000000 => biased exponent: 1 = -1022+1023 => 2^-1022\nvar HIGH_MIN_NORMAL_EXP = 0x00100000|0; // asm type annotation\n\n// 0x3ff00000 = 1072693248 => 0 01111111111 00000000000000000000 => biased exponent: 1023 = 0+1023 => 2^0 = 1\nvar HIGH_BIASED_EXP_0 = 0x3ff00000|0; // asm type annotation\n\n// 0x20000000 = 536870912 => 0 01000000000 00000000000000000000 => biased exponent: 512 = -511+1023\nvar HIGH_BIASED_EXP_NEG_512 = 0x20000000|0; // asm type annotation\n\n// 0x00080000 = 524288 => 0 00000000000 10000000000000000000\nvar HIGH_SIGNIFICAND_HALF = 0x00080000|0; // asm type annotation\n\n// TODO: consider making an external constant\nvar HIGH_NUM_SIGNIFICAND_BITS = 20|0; // asm type annotation\n\nvar TWO53 = 9007199254740992.0;\t// 0x43400000, 0x00000000\n\n// 2/(3*LN2)\nvar CP = 9.61796693925975554329e-01; // 0x3FEEC709, 0xDC3A03FD\n\n// (float)CP\nvar CP_HI = 9.61796700954437255859e-01; // 0x3FEEC709, 0xE0000000\n\n// Low: CP_HI\nvar CP_LO = -7.02846165095275826516e-09; // 0xBE3E2FE0, 0x145B01F5\n\nvar BP = [\n\t1.0,\n\t1.5\n];\nvar DP_HI = [\n\t0.0,\n\t5.84962487220764160156e-01 // 0x3FE2B803, 0x40000000\n];\nvar DP_LO = [\n\t0.0,\n\t1.35003920212974897128e-08 // 0x3E4CFDEB, 0x43CFD006\n];\n\n\n// MAIN //\n\n/**\n* Computes \\\\(\\operatorname{log2}(ax)\\\\).\n*\n* @private\n* @param {Array} out - output array\n* @param {number} ax - absolute value of `x`\n* @param {number} ahx - high word of `ax`\n* @returns {Array} output array containing a tuple comprised of high and low parts\n*\n* @example\n* var t = log2ax( [ 0.0, 0.0 ], 9.0, 1075970048 ); // => [ t1, t2 ]\n* // returns [ 3.169923782348633, 0.0000012190936795504075 ]\n*/\nfunction log2ax( out, ax, ahx ) {\n\tvar tmp;\n\tvar ss; // `hs + ls`\n\tvar s2; // `ss` squared\n\tvar hs;\n\tvar ls;\n\tvar ht;\n\tvar lt;\n\tvar bp; // `BP` constant\n\tvar dp; // `DP` constant\n\tvar hp;\n\tvar lp;\n\tvar hz;\n\tvar lz;\n\tvar t1;\n\tvar t2;\n\tvar t;\n\tvar r;\n\tvar u;\n\tvar v;\n\tvar n;\n\tvar j;\n\tvar k;\n\n\tn = 0|0; // asm type annotation\n\n\t// Check if `x` is subnormal...\n\tif ( ahx < HIGH_MIN_NORMAL_EXP ) {\n\t\tax *= TWO53;\n\t\tn -= 53|0; // asm type annotation\n\t\tahx = getHighWord( ax );\n\t}\n\t// Extract the unbiased exponent of `x`:\n\tn += ((ahx >> HIGH_NUM_SIGNIFICAND_BITS) - BIAS)|0; // asm type annotation\n\n\t// Isolate the significand bits of `x`:\n\tj = (ahx & HIGH_SIGNIFICAND_MASK)|0; // asm type annotation\n\n\t// Normalize `ahx` by setting the (biased) exponent to `1023`:\n\tahx = (j | HIGH_BIASED_EXP_0)|0; // asm type annotation\n\n\t// Determine the interval of `|x|` by comparing significand bits...\n\n\t// |x| < sqrt(3/2)\n\tif ( j <= 0x3988E ) { // 0 00000000000 00111001100010001110\n\t\tk = 0;\n\t}\n\t// |x| < sqrt(3)\n\telse if ( j < 0xBB67A ) { // 0 00000000000 10111011011001111010\n\t\tk = 1;\n\t}\n\t// |x| >= sqrt(3)\n\telse {\n\t\tk = 0;\n\t\tn += 1|0; // asm type annotation\n\t\tahx -= HIGH_MIN_NORMAL_EXP;\n\t}\n\t// Load the normalized high word into `|x|`:\n\tax = setHighWord( ax, ahx );\n\n\t// Compute `ss = hs + ls = (x-1)/(x+1)` or `(x-1.5)/(x+1.5)`:\n\tbp = BP[ k ]; // BP[0] = 1.0, BP[1] = 1.5\n\tu = ax - bp; // (x-1) || (x-1.5)\n\tv = 1.0 / (ax + bp); // 1/(x+1) || 1/(x+1.5)\n\tss = u * v;\n\ths = setLowWord( ss, 0 ); // set all low word (less significant significand) bits to 0s\n\n\t// Compute `ht = ax + bp` (via manipulation, i.e., bit flipping, of the high word):\n\ttmp = ((ahx>>1) | HIGH_BIASED_EXP_NEG_512) + HIGH_SIGNIFICAND_HALF;\n\ttmp += (k << 18); // `(k<<18)` can be considered the word equivalent of `1.0` or `1.5`\n\tht = setHighWord( 0.0, tmp );\n\tlt = ax - (ht - bp);\n\tls = v * ( ( u - (hs*ht) ) - ( hs*lt ) );\n\n\t// Compute `log(ax)`...\n\n\ts2 = ss * ss;\n\tr = s2 * s2 * polyvalL( s2 );\n\tr += ls * (hs + ss);\n\ts2 = hs * hs;\n\tht = 3.0 + s2 + r;\n\tht = setLowWord( ht, 0 );\n\tlt = r - ((ht-3.0) - s2);\n\n\t// u+v = ss*(1+...):\n\tu = hs * ht;\n\tv = ( ls*ht ) + ( lt*ss );\n\n\t// 2/(3LN2) * (ss+...):\n\thp = u + v;\n\thp = setLowWord( hp, 0 );\n\tlp = v - (hp - u);\n\thz = CP_HI * hp; // CP_HI+CP_LO = 2/(3*LN2)\n\tlz = ( CP_LO*hp ) + ( lp*CP ) + DP_LO[ k ];\n\n\t// log2(ax) = (ss+...)*2/(3*LN2) = n + dp + hz + lz\n\tdp = DP_HI[ k ];\n\tt = n;\n\tt1 = ((hz+lz) + dp) + t; // log2(ax)\n\tt1 = setLowWord( t1, 0 );\n\tt2 = lz - (((t1-t) - dp) - hz);\n\n\tout[ 0 ] = t1;\n\tout[ 1 ] = t2;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = log2ax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.5;\n\t}\n\treturn 0.5 + (x * (-0.3333333333333333 + (x * 0.25)));\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setLowWord = require( '@stdlib/number/float64/base/set-low-word' );\nvar polyvalW = require( './polyval_w.js' );\n\n\n// VARIABLES //\n\n// 1/LN2\nvar INV_LN2 = 1.44269504088896338700e+00; // 0x3FF71547, 0x652B82FE\n\n// High (24 bits): 1/LN2\nvar INV_LN2_HI = 1.44269502162933349609e+00; // 0x3FF71547, 0x60000000\n\n// Low: 1/LN2\nvar INV_LN2_LO = 1.92596299112661746887e-08; // 0x3E54AE0B, 0xF85DDF44\n\n\n// MAIN //\n\n/**\n* Computes \\\\(\\operatorname{log}(x)\\\\) assuming \\\\(|1-x|\\\\) is small and using the approximation \\\\(x - x^2/2 + x^3/3 - x^4/4\\\\).\n*\n* @private\n* @param {Array} out - output array\n* @param {number} ax - absolute value of `x`\n* @returns {Array} output array containing a tuple comprised of high and low parts\n*\n* @example\n* var t = logx( [ 0.0, 0.0 ], 9.0 ); // => [ t1, t2 ]\n* // returns [ -1265.7236328125, -0.0008163940840404393 ]\n*/\nfunction logx( out, ax ) {\n\tvar t2;\n\tvar t1;\n\tvar t;\n\tvar w;\n\tvar u;\n\tvar v;\n\n\tt = ax - 1.0; // `t` has `20` trailing zeros\n\tw = t * t * polyvalW( t );\n\tu = INV_LN2_HI * t; // `INV_LN2_HI` has `21` significant bits\n\tv = ( t*INV_LN2_LO ) - ( w*INV_LN2 );\n\tt1 = u + v;\n\tt1 = setLowWord( t1, 0 );\n\tt2 = v - (t1 - u);\n\n\tout[ 0 ] = t1;\n\tout[ 1 ] = t2;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = logx;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.16666666666666602;\n\t}\n\treturn 0.16666666666666602 + (x * (-0.0027777777777015593 + (x * (0.00006613756321437934 + (x * (-0.0000016533902205465252 + (x * 4.1381367970572385e-8))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\nvar setLowWord = require( '@stdlib/number/float64/base/set-low-word' );\nvar uint32ToInt32 = require( '@stdlib/number/uint32/base/to-int32' );\nvar ldexp = require( './../../../../base/special/ldexp' );\nvar LN2 = require( '@stdlib/constants/float64/ln-two' );\nvar BIAS = require( '@stdlib/constants/float64/exponent-bias' );\nvar polyvalP = require( './polyval_p.js' );\n\n\n// VARIABLES //\n\n// 0x7fffffff = 2147483647 => 0 11111111111 11111111111111111111\nvar ABS_MASK = 0x7fffffff|0; // asm type annotation\n\n// 0x000fffff = 1048575 => 0 00000000000 11111111111111111111\nvar HIGH_SIGNIFICAND_MASK = 0x000fffff|0; // asm type annotation\n\n// 0x00100000 = 1048576 => 0 00000000001 00000000000000000000 => biased exponent: 1 = -1022+1023 => 2^-1022\nvar HIGH_MIN_NORMAL_EXP = 0x00100000|0; // asm type annotation\n\n// 0x3fe00000 = 1071644672 => 0 01111111110 00000000000000000000 => biased exponent: 1022 = -1+1023 => 2^-1\nvar HIGH_BIASED_EXP_NEG_1 = 0x3fe00000|0; // asm type annotation\n\n// TODO: consider making into an external constant\nvar HIGH_NUM_SIGNIFICAND_BITS = 20|0; // asm type annotation\n\n// High: LN2\nvar LN2_HI = 6.93147182464599609375e-01; // 0x3FE62E43, 0x00000000\n\n// Low: LN2\nvar LN2_LO = -1.90465429995776804525e-09; // 0xBE205C61, 0x0CA86C39\n\n\n// MAIN //\n\n/**\n* Computes \\\\(2^{\\mathrm{hp} + \\mathrm{lp}\\\\).\n*\n* @private\n* @param {number} j - high word of `hp + lp`\n* @param {number} hp - first power summand\n* @param {number} lp - second power summand\n* @returns {number} function value\n*\n* @example\n* var z = pow2( 1065961648, -0.3398475646972656, -0.000002438187359100815 );\n* // returns ~0.79\n*/\nfunction pow2( j, hp, lp ) {\n\tvar tmp;\n\tvar t1;\n\tvar t;\n\tvar r;\n\tvar u;\n\tvar v;\n\tvar w;\n\tvar z;\n\tvar n;\n\tvar i;\n\tvar k;\n\n\ti = (j & ABS_MASK)|0; // asm type annotation\n\tk = ((i>>HIGH_NUM_SIGNIFICAND_BITS) - BIAS)|0; // asm type annotation\n\tn = 0;\n\n\t// `|z| > 0.5`, set `n = z+0.5`\n\tif ( i > HIGH_BIASED_EXP_NEG_1 ) {\n\t\tn = (j + (HIGH_MIN_NORMAL_EXP>>(k+1)))>>>0; // asm type annotation\n\t\tk = (((n & ABS_MASK)>>HIGH_NUM_SIGNIFICAND_BITS) - BIAS)|0; // new k for n\n\t\ttmp = ((n & ~(HIGH_SIGNIFICAND_MASK >> k)))>>>0; // asm type annotation\n\t\tt = setHighWord( 0.0, tmp );\n\t\tn = (((n & HIGH_SIGNIFICAND_MASK)|HIGH_MIN_NORMAL_EXP) >> (HIGH_NUM_SIGNIFICAND_BITS-k))>>>0; // eslint-disable-line max-len\n\t\tif ( j < 0 ) {\n\t\t\tn = -n;\n\t\t}\n\t\thp -= t;\n\t}\n\tt = lp + hp;\n\tt = setLowWord( t, 0 );\n\tu = t * LN2_HI;\n\tv = ( (lp - (t-hp))*LN2 ) + ( t*LN2_LO );\n\tz = u + v;\n\tw = v - (z - u);\n\tt = z * z;\n\tt1 = z - ( t*polyvalP( t ) );\n\tr = ( (z*t1) / (t1-2.0) ) - ( w + (z*w) );\n\tz = 1.0 - (r - z);\n\tj = getHighWord( z );\n\tj = uint32ToInt32( j );\n\tj += (n << HIGH_NUM_SIGNIFICAND_BITS)>>>0; // asm type annotation\n\n\t// Check for subnormal output...\n\tif ( (j>>HIGH_NUM_SIGNIFICAND_BITS) <= 0 ) {\n\t\tz = ldexp( z, n );\n\t} else {\n\t\tz = setHighWord( z, j );\n\t}\n\treturn z;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pow2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar isOdd = require( './../../../../base/assert/is-odd' );\nvar isInfinite = require( './../../../../base/assert/is-infinite' );\nvar isInteger = require( './../../../../base/assert/is-integer' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar abs = require( './../../../../base/special/abs' );\nvar toWords = require( '@stdlib/number/float64/base/to-words' );\nvar setLowWord = require( '@stdlib/number/float64/base/set-low-word' );\nvar uint32ToInt32 = require( '@stdlib/number/uint32/base/to-int32' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar xIsZero = require( './x_is_zero.js' );\nvar yIsHuge = require( './y_is_huge.js' );\nvar yIsInfinite = require( './y_is_infinite.js' );\nvar log2ax = require( './log2ax.js' );\nvar logx = require( './logx.js' );\nvar pow2 = require( './pow2.js' );\n\n\n// VARIABLES //\n\n// 0x7fffffff = 2147483647 => 0 11111111111 11111111111111111111\nvar ABS_MASK = 0x7fffffff|0; // asm type annotation\n\n// 0x3fefffff = 1072693247 => 0 01111111110 11111111111111111111 => biased exponent: 1022 = -1+1023 => 2^-1\nvar HIGH_MAX_NEAR_UNITY = 0x3fefffff|0; // asm type annotation\n\n// 0x41e00000 = 1105199104 => 0 10000011110 00000000000000000000 => biased exponent: 1054 = 31+1023 => 2^31\nvar HIGH_BIASED_EXP_31 = 0x41e00000|0; // asm type annotation\n\n// 0x43f00000 = 1139802112 => 0 10000111111 00000000000000000000 => biased exponent: 1087 = 64+1023 => 2^64\nvar HIGH_BIASED_EXP_64 = 0x43f00000|0; // asm type annotation\n\n// 0x40900000 = 1083179008 => 0 10000001001 00000000000000000000 => biased exponent: 1033 = 10+1023 => 2^10 = 1024\nvar HIGH_BIASED_EXP_10 = 0x40900000|0; // asm type annotation\n\n// 0x3ff00000 = 1072693248 => 0 01111111111 00000000000000000000 => biased exponent: 1023 = 0+1023 => 2^0 = 1\nvar HIGH_BIASED_EXP_0 = 0x3ff00000|0; // asm type annotation\n\n// 0x4090cc00 = 1083231232 => 0 10000001001 00001100110000000000\nvar HIGH_1075 = 0x4090cc00|0; // asm type annotation\n\n// 0xc090cc00 = 3230714880 => 1 10000001001 00001100110000000000\nvar HIGH_NEG_1075 = 0xc090cc00>>>0; // asm type annotation\n\nvar HIGH_NUM_NONSIGN_BITS = 31|0; // asm type annotation\n\nvar HUGE = 1.0e300;\nvar TINY = 1.0e-300;\n\n// -(1024-log2(ovfl+.5ulp))\nvar OVT = 8.0085662595372944372e-17;\n\n// High/low words workspace:\nvar WORDS = [ 0|0, 0|0 ]; // WARNING: not thread safe\n\n// Log workspace:\nvar LOG_WORKSPACE = [ 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function.\n*\n* ## Method\n*\n* 1.  Let \\\\(x = 2^n (1+f)\\\\).\n*\n* 2.  Compute \\\\(\\operatorname{log2}(x)\\\\) as\n*\n*     ```tex\n*     \\operatorname{log2}(x) = w_1 + w_2\n*     ```\n*\n*     where \\\\(w_1\\\\) has \\\\(53 - 24 = 29\\\\) bit trailing zeros.\n*\n* 3.  Compute\n*\n*     ```tex\n*     y \\cdot \\operatorname{log2}(x) = n + y^\\prime\n*     ```\n*\n*     by simulating multi-precision arithmetic, where \\\\(|y^\\prime| \\leq 0.5\\\\).\n*\n* 4.  Return\n*\n*     ```tex\n*     x^y = 2^n e^{y^\\prime \\cdot \\mathrm{log2}}\n*     ```\n*\n* ## Special Cases\n*\n* ```tex\n* \\begin{align*}\n* x^{\\mathrm{NaN}} &= \\mathrm{NaN} & \\\\\n* (\\mathrm{NaN})^y &= \\mathrm{NaN} & \\\\\n* 1^y &= 1 & \\\\\n* x^0 &= 1 & \\\\\n* x^1 &= x & \\\\\n* (\\pm 0)^\\infty &= +0 & \\\\\n* (\\pm 0)^{-\\infty} &= +\\infty & \\\\\n* (+0)^y &= +0 & \\mathrm{if}\\ y > 0 \\\\\n* (+0)^y &= +\\infty & \\mathrm{if}\\ y < 0 \\\\\n* (-0)^y &= -\\infty & \\mathrm{if}\\ y\\ \\mathrm{is\\ an\\ odd\\ integer\\ and}\\ y < 0 \\\\\n* (-0)^y &= +\\infty & \\mathrm{if}\\ y\\ \\mathrm{is\\ not\\ an\\ odd\\ integer\\ and}\\ y < 0 \\\\\n* (-0)^y &= -0 & \\mathrm{if}\\ y\\ \\mathrm{is\\ an\\ odd\\ integer\\ and}\\ y > 0 \\\\\n* (-0)^y &= +0 & \\mathrm{if}\\ y\\ \\mathrm{is\\ not\\ an\\ odd\\ integer\\ and}\\ y > 0 \\\\\n* (-1)^{\\pm\\infty} &= \\mathrm{NaN} & \\\\\n* x^{\\infty} &= +\\infty & |x| > 1 \\\\\n* x^{\\infty} &= +0 & |x| < 1 \\\\\n* x^{-\\infty} &= +0 & |x| > 1 \\\\\n* x^{-\\infty} &= +\\infty & |x| < 1 \\\\\n* (-\\infty)^y &= (-0)^y & \\\\\n* \\infty^y &= +0 & y < 0 \\\\\n* \\infty^y &= +\\infty & y > 0 \\\\\n* x^y &= \\mathrm{NaN} & \\mathrm{if}\\ y\\ \\mathrm{is\\ not\\ a\\ finite\\ integer\\ and}\\ x < 0\n* \\end{align*}\n* ```\n*\n* ## Notes\n*\n* -   \\\\(\\operatorname{pow}(x,y)\\\\) returns \\\\(x^y\\\\) nearly rounded. In particular, \\\\(\\operatorname{pow}(<\\mathrm{integer}>,<\\mathrm{integer}>)\\\\) **always** returns the correct integer, provided the value is representable.\n* -   The hexadecimal values shown in the source code are the intended values for used constants. Decimal values may be used, provided the compiler will accurately convert decimal to binary in order to produce the hexadecimal values.\n*\n*\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} function value\n*\n* @example\n* var v = pow( 2.0, 3.0 );\n* // returns 8.0\n*\n* @example\n* var v = pow( 4.0, 0.5 );\n* // returns 2.0\n*\n* @example\n* var v = pow( 100.0, 0.0 );\n* // returns 1.0\n*\n* @example\n* var v = pow( 3.141592653589793, 5.0 );\n* // returns ~306.0197\n*\n* @example\n* var v = pow( 3.141592653589793, -0.2 );\n* // returns ~0.7954\n*\n* @example\n* var v = pow( NaN, 3.0 );\n* // returns NaN\n*\n* @example\n* var v = pow( 5.0, NaN );\n* // returns NaN\n*\n* @example\n* var v = pow( NaN, NaN );\n* // returns NaN\n*/\nfunction pow( x, y ) {\n\tvar ahx; // absolute value high word `x`\n\tvar ahy; // absolute value high word `y`\n\tvar ax;  // absolute value `x`\n\tvar hx;  // high word `x`\n\tvar lx;  // low word `x`\n\tvar hy;  // high word `y`\n\tvar ly;  // low word `y`\n\tvar sx;  // sign `x`\n\tvar sy;  // sign `y`\n\tvar y1;\n\tvar hp;\n\tvar lp;\n\tvar t;\n\tvar z;   // y prime\n\tvar j;\n\tvar i;\n\tif ( isnan( x ) || isnan( y ) ) {\n\t\treturn NaN;\n\t}\n\t// Split `y` into high and low words:\n\ttoWords( WORDS, y );\n\thy = WORDS[ 0 ];\n\tly = WORDS[ 1 ];\n\n\t// Special cases `y`...\n\tif ( ly === 0 ) {\n\t\tif ( y === 0.0 ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\tif ( y === 1.0 ) {\n\t\t\treturn x;\n\t\t}\n\t\tif ( y === -1.0 ) {\n\t\t\treturn 1.0 / x;\n\t\t}\n\t\tif ( y === 0.5 ) {\n\t\t\treturn sqrt( x );\n\t\t}\n\t\tif ( y === -0.5 ) {\n\t\t\treturn 1.0 / sqrt( x );\n\t\t}\n\t\tif ( y === 2.0 ) {\n\t\t\treturn x * x;\n\t\t}\n\t\tif ( y === 3.0 ) {\n\t\t\treturn x * x * x;\n\t\t}\n\t\tif ( y === 4.0 ) {\n\t\t\tx *= x;\n\t\t\treturn x * x;\n\t\t}\n\t\tif ( isInfinite( y ) ) {\n\t\t\treturn yIsInfinite( x, y );\n\t\t}\n\t}\n\t// Split `x` into high and low words:\n\ttoWords( WORDS, x );\n\thx = WORDS[ 0 ];\n\tlx = WORDS[ 1 ];\n\n\t// Special cases `x`...\n\tif ( lx === 0 ) {\n\t\tif ( hx === 0 ) {\n\t\t\treturn xIsZero( x, y );\n\t\t}\n\t\tif ( x === 1.0 ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\tif (\n\t\t\tx === -1.0 &&\n\t\t\tisOdd( y )\n\t\t) {\n\t\t\treturn -1.0;\n\t\t}\n\t\tif ( isInfinite( x ) ) {\n\t\t\tif ( x === NINF ) {\n\t\t\t\t// `pow( 1/x, -y )`\n\t\t\t\treturn pow( -0.0, -y );\n\t\t\t}\n\t\t\tif ( y < 0.0 ) {\n\t\t\t\treturn 0.0;\n\t\t\t}\n\t\t\treturn PINF;\n\t\t}\n\t}\n\tif (\n\t\tx < 0.0 &&\n\t\tisInteger( y ) === false\n\t) {\n\t\t// Signal NaN...\n\t\treturn (x-x)/(x-x);\n\t}\n\tax = abs( x );\n\n\t// Remove the sign bits (i.e., get absolute values):\n\tahx = (hx & ABS_MASK)|0; // asm type annotation\n\tahy = (hy & ABS_MASK)|0; // asm type annotation\n\n\t// Extract the sign bits:\n\tsx = (hx >>> HIGH_NUM_NONSIGN_BITS)|0; // asm type annotation\n\tsy = (hy >>> HIGH_NUM_NONSIGN_BITS)|0; // asm type annotation\n\n\t// Determine the sign of the result...\n\tif ( sx && isOdd( y ) ) {\n\t\tsx = -1.0;\n\t} else {\n\t\tsx = 1.0;\n\t}\n\t// Case 1: `|y|` is huge...\n\n\t// |y| > 2^31\n\tif ( ahy > HIGH_BIASED_EXP_31 ) {\n\t\t// `|y| > 2^64`, then must over- or underflow...\n\t\tif ( ahy > HIGH_BIASED_EXP_64 ) {\n\t\t\treturn yIsHuge( x, y );\n\t\t}\n\t\t// Over- or underflow if `x` is not close to unity...\n\n\t\tif ( ahx < HIGH_MAX_NEAR_UNITY ) {\n\t\t\t// y < 0\n\t\t\tif ( sy === 1 ) {\n\t\t\t\t// Signal overflow...\n\t\t\t\treturn sx * HUGE * HUGE;\n\t\t\t}\n\t\t\t// Signal underflow...\n\t\t\treturn sx * TINY * TINY;\n\t\t}\n\t\tif ( ahx > HIGH_BIASED_EXP_0 ) {\n\t\t\t// y > 0\n\t\t\tif ( sy === 0 ) {\n\t\t\t\t// Signal overflow...\n\t\t\t\treturn sx * HUGE * HUGE;\n\t\t\t}\n\t\t\t// Signal underflow...\n\t\t\treturn sx * TINY * TINY;\n\t\t}\n\t\t// At this point, `|1-x|` is tiny (`<= 2^-20`). Suffice to compute `log(x)` by `x - x^2/2 + x^3/3 - x^4/4`.\n\t\tt = logx( LOG_WORKSPACE, ax );\n\t}\n\t// Case 2: `|y|` is not huge...\n\telse {\n\t\tt = log2ax( LOG_WORKSPACE, ax, ahx );\n\t}\n\t// Split `y` into `y1 + y2` and compute `(y1+y2) * (t1+t2)`...\n\ty1 = setLowWord( y, 0 );\n\tlp = ( (y-y1)*t[0] ) + ( y*t[1] );\n\thp = y1 * t[0];\n\tz = lp + hp;\n\n\t// Note: *can* be more performant to use `getHighWord` and `getLowWord` directly, but using `toWords` looks cleaner.\n\ttoWords( WORDS, z );\n\tj = uint32ToInt32( WORDS[0] );\n\ti = uint32ToInt32( WORDS[1] );\n\n\t// z >= 1024\n\tif ( j >= HIGH_BIASED_EXP_10 ) {\n\t\t// z > 1024\n\t\tif ( ((j-HIGH_BIASED_EXP_10)|i) !== 0 ) {\n\t\t\t// Signal overflow...\n\t\t\treturn sx * HUGE * HUGE;\n\t\t}\n\t\tif ( (lp+OVT) > (z-hp) ) {\n\t\t\t// Signal overflow...\n\t\t\treturn sx * HUGE * HUGE;\n\t\t}\n\t}\n\t// z <= -1075\n\telse if ( (j&ABS_MASK) >= HIGH_1075 ) {\n\t\t// z < -1075\n\t\tif ( ((j-HIGH_NEG_1075)|i) !== 0 ) {\n\t\t\t// signal underflow...\n\t\t\treturn sx * TINY * TINY;\n\t\t}\n\t\tif ( lp <= (z-hp) ) {\n\t\t\t// signal underflow...\n\t\t\treturn sx * TINY * TINY;\n\t\t}\n\t}\n\t// Compute `2^(hp+lp)`...\n\tz = pow2( j, hp, lp );\n\n\treturn sx * z;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the exponential function.\n*\n* @module @stdlib/math/base/special/pow\n*\n* @example\n* var pow = require( '@stdlib/math/base/special/pow' );\n*\n* var v = pow( 2.0, 3.0 );\n* // returns 8.0\n*\n* v = pow( 4.0, 0.5 );\n* // returns 2.0\n*\n* v = pow( 100.0, 0.0 );\n* // returns 1.0\n*\n* v = pow( 3.141592653589793, 5.0 );\n* // returns ~306.0197\n*\n* v = pow( 3.141592653589793, -0.2 );\n* // returns ~0.7954\n*\n* v = pow( NaN, 3.0 );\n* // returns NaN\n*\n* v = pow( 5.0, NaN );\n* // returns NaN\n*\n* v = pow( NaN, NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar pow = require( './pow.js' );\n\n\n// EXPORTS //\n\nmodule.exports = pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Difference between one and the smallest value greater than one that can be represented as a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/eps\n* @type {number}\n*\n* @example\n* var FLOAT64_EPSILON = require( '@stdlib/constants/float64/eps' );\n* // returns 2.220446049250313e-16\n*/\n\n\n// MAIN //\n\n/**\n* Difference between one and the smallest value greater than one that can be represented as a double-precision floating-point number.\n*\n* ## Notes\n*\n* The difference is\n*\n* ```tex\n* \\frac{1}{2^{52}}\n* ```\n*\n* @constant\n* @type {number}\n* @default 2.220446049250313e-16\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n* @see [Machine Epsilon]{@link https://en.wikipedia.org/wiki/Machine_epsilon}\n*/\nvar FLOAT64_EPSILON = 2.2204460492503130808472633361816E-16;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_EPSILON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn Infinity;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 709811.662581658 + (x * (679979.8474157227 + (x * (293136.7857211597 + (x * (74887.54032914672 + (x * (12555.290582413863 + (x * (1443.4299244417066 + (x * (115.24194596137347 + (x * (6.309239205732627 + (x * (0.22668404630224365 + (x * (0.004826466289237662 + (x * 0.00004624429436045379))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.0 + (x * (362880.0 + (x * (1026576.0 + (x * (1172700.0 + (x * (723680.0 + (x * (269325.0 + (x * (63273.0 + (x * (9450.0 + (x * (870.0 + (x * (45.0 + (x * 1.0))))))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.00004624429436045379 + (x * (0.004826466289237662 + (x * (0.22668404630224365 + (x * (6.309239205732627 + (x * (115.24194596137347 + (x * (1443.4299244417066 + (x * (12555.290582413863 + (x * (74887.54032914672 + (x * (293136.7857211597 + (x * (679979.8474157227 + (x * 709811.662581658))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (45.0 + (x * (870.0 + (x * (9450.0 + (x * (63273.0 + (x * (269325.0 + (x * (723680.0 + (x * (1172700.0 + (x * (1026576.0 + (x * (362880.0 + (x * 0.0))))))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/beta.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar log1p = require( './../../../../base/special/log1p' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar abs = require( './../../../../base/special/abs' );\nvar exp = require( './../../../../base/special/exp' );\nvar pow = require( './../../../../base/special/pow' );\nvar E = require( '@stdlib/constants/float64/e' );\nvar EPSILON = require( '@stdlib/constants/float64/eps' );\nvar lanczosSumExpGScaled = require( './lanczos_sum_expg_scaled.js' ); // Lanczos approximation scaled by exp(G)\n\n\n// VARIABLES //\n\nvar G = 10.90051099999999983936049829935654997826;\n\n\n// MAIN //\n\n/**\n* Evaluate the beta function.\n*\n* @param {NonNegativeNumber} a - input value\n* @param {NonNegativeNumber} b - input value\n* @returns {number} evaluated beta function\n*\n* @example\n* var v = beta( 0.0, 0.5 );\n* // returns Infinity\n*\n* @example\n* var v = beta( 1.0, 1.0 );\n* // returns 1.0\n*\n* @example\n* var v = beta( -1.0, 2.0 );\n* // returns NaN\n*\n* @example\n* var v = beta( 5.0, 0.2 );\n* // returns ~3.382\n*\n* @example\n* var v = beta( 4.0, 1.0 );\n* // returns 0.25\n*\n* @example\n* var v = beta( NaN, 2.0 );\n* // returns NaN\n*/\nfunction beta( a, b ) {\n\tvar ambh;\n\tvar agh;\n\tvar bgh;\n\tvar cgh;\n\tvar res;\n\tvar tmp;\n\tvar c;\n\n\tif ( isnan( a ) || isnan( b ) ) {\n\t\treturn NaN;\n\t}\n\tif ( a < 0.0 || b < 0.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( b === 1.0 ) {\n\t\treturn 1.0 / a;\n\t}\n\tif ( a === 1.0 ) {\n\t\treturn 1.0 / b;\n\t}\n\tc = a + b;\n\tif ( c < EPSILON ) {\n\t\tres = c / a;\n\t\tres /= b;\n\t\treturn res;\n\t}\n\n\t// Special cases:\n\tif ( c === a && b < EPSILON ) {\n\t\treturn 1.0 / b;\n\t}\n\tif ( c === b && a < EPSILON ) {\n\t\treturn 1.0 / a;\n\t}\n\n\tif ( a < b ) {\n\t\t// Swap `a` and `b`:\n\t\ttmp = b;\n\t\tb = a;\n\t\ta = tmp;\n\t}\n\n\t// Lanczos calculation:\n\tagh = a + G - 0.5;\n\tbgh = b + G - 0.5;\n\tcgh = c + G - 0.5;\n\tres = lanczosSumExpGScaled( a ) * ( lanczosSumExpGScaled( b )/lanczosSumExpGScaled( c ) ); // eslint-disable-line max-len\n\tambh = a - 0.5 - b;\n\tif ( ( abs( b*ambh ) < ( cgh*100.0 ) ) && a > 100.0 ) {\n\t\t// Special case where the base of the power term is close to 1; compute `(1+x)^y` instead:\n\t\tres *= exp( ambh * log1p( -b/cgh ) );\n\t} else {\n\t\tres *= pow( agh/cgh, ambh );\n\t}\n\tif ( cgh > 1.0e10 ) {\n\t\t// This avoids possible overflow, but appears to be marginally less accurate:\n\t\tres *= pow( (agh/cgh)*(bgh/cgh), b );\n\t} else {\n\t\tres *= pow( (agh*bgh)/(cgh*cgh), b );\n\t}\n\tres *= sqrt( E/bgh);\n\treturn res;\n}\n\n\n// EXPORTS //\n\nmodule.exports = beta;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the beta function.\n*\n* @module @stdlib/math/base/special/beta\n*\n* @example\n* var beta = require( '@stdlib/math/base/special/beta' );\n*\n* var v = beta( 0.0, 0.5 );\n* // returns Infinity\n*\n* v = beta( 1.0, 1.0 );\n* // returns 1.0\n*\n* v = beta( -1.0, 2.0 );\n* // returns NaN\n*\n* v = beta( 5.0, 0.2 );\n* // returns ~3.382\n*\n* v = beta( 4.0, 1.0 );\n* // returns 0.25\n*\n* v = beta( NaN, 2.0 );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar beta = require( './beta.js' );\n\n\n// EXPORTS //\n\nmodule.exports = beta;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a double-precision floating-point numeric value is positive zero.\n*\n* @module @stdlib/math/base/assert/is-positive-zero\n*\n* @example\n* var isPositiveZero = require( '@stdlib/math/base/assert/is-positive-zero' );\n*\n* var bool = isPositiveZero( 0.0 );\n* // returns true\n*\n* bool = isPositiveZero( -0.0 );\n* // returns false\n*/\n\n// MODULES //\n\nvar isPositiveZero = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveZero;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is positive zero.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is positive zero\n*\n* @example\n* var bool = isPositiveZero( 0.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveZero( -0.0 );\n* // returns false\n*/\nfunction isPositiveZero( x ) {\n\treturn (x === 0.0 && 1.0/x === PINF);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveZero;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveZero = require( './../../../../base/assert/is-positive-zero' );\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Returns the maximum value.\n*\n* @param {number} [x] - first number\n* @param {number} [y] - second number\n* @param {...number} [args] - numbers\n* @returns {number} maximum value\n*\n* @example\n* var v = max( 3.14, 4.2 );\n* // returns 4.2\n*\n* @example\n* var v = max( 5.9, 3.14, 4.2 );\n* // returns 5.9\n*\n* @example\n* var v = max( 3.14, NaN );\n* // returns NaN\n*\n* @example\n* var v = max( +0.0, -0.0 );\n* // returns +0.0\n*/\nfunction max( x, y ) {\n\tvar len;\n\tvar m;\n\tvar v;\n\tvar i;\n\n\tlen = arguments.length;\n\tif ( len === 2 ) {\n\t\tif ( isnan( x ) || isnan( y ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x === PINF || y === PINF ) {\n\t\t\treturn PINF;\n\t\t}\n\t\tif ( x === y && x === 0.0 ) {\n\t\t\tif ( isPositiveZero( x ) ) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn y;\n\t\t}\n\t\tif ( x > y ) {\n\t\t\treturn x;\n\t\t}\n\t\treturn y;\n\t}\n\tm = NINF;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arguments[ i ];\n\t\tif ( isnan( v ) || v === PINF ) {\n\t\t\treturn v;\n\t\t}\n\t\tif ( v > m ) {\n\t\t\tm = v;\n\t\t} else if (\n\t\t\tv === m &&\n\t\t\tv === 0.0 &&\n\t\t\tisPositiveZero( v )\n\t\t) {\n\t\t\tm = v;\n\t\t}\n\t}\n\treturn m;\n}\n\n\n// EXPORTS //\n\nmodule.exports = max;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the maximum value.\n*\n* @module @stdlib/math/base/special/max\n*\n* @example\n* var max = require( '@stdlib/math/base/special/max' );\n*\n* var v = max( 3.14, 4.2 );\n* // returns 4.2\n*\n* v = max( 5.9, 3.14, 4.2 );\n* // returns 5.9\n*\n* v = max( 3.14, NaN );\n* // returns NaN\n*\n* v = max( +0.0, -0.0 );\n* // returns +0.0\n*/\n\n// MODULES //\n\nvar max = require( './max.js' );\n\n\n// EXPORTS //\n\nmodule.exports = max;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar NINF = require( '@stdlib/constants/float64/ninf' );\n\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is negative zero.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is negative zero\n*\n* @example\n* var bool = isNegativeZero( -0.0 );\n* // returns true\n*\n* @example\n* var bool = isNegativeZero( 0.0 );\n* // returns false\n*/\nfunction isNegativeZero( x ) {\n\treturn (x === 0.0 && 1.0/x === NINF);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeZero;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a double-precision floating-point numeric value is negative zero.\n*\n* @module @stdlib/math/base/assert/is-negative-zero\n*\n* @example\n* var isNegativeZero = require( '@stdlib/math/base/assert/is-negative-zero' );\n*\n* var bool = isNegativeZero( -0.0 );\n* // returns true\n*\n* bool = isNegativeZero( 0.0 );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNegativeZero = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeZero;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNegativeZero = require( './../../../../base/assert/is-negative-zero' );\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Returns the minimum value.\n*\n* @param {number} [x] - first number\n* @param {number} [y] - second number\n* @param {...number} [args] - numbers\n* @returns {number} minimum value\n*\n* @example\n* var v = min( 3.14, 4.2 );\n* // returns 3.14\n*\n* @example\n* var v = min( 5.9, 3.14, 4.2 );\n* // returns 3.14\n*\n* @example\n* var v = min( 3.14, NaN );\n* // returns NaN\n*\n* @example\n* var v = min( +0.0, -0.0 );\n* // returns -0.0\n*/\nfunction min( x, y ) {\n\tvar len;\n\tvar m;\n\tvar v;\n\tvar i;\n\n\tlen = arguments.length;\n\tif ( len === 2 ) {\n\t\tif ( isnan( x ) || isnan( y ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x === NINF || y === NINF ) {\n\t\t\treturn NINF;\n\t\t}\n\t\tif ( x === y && x === 0.0 ) {\n\t\t\tif ( isNegativeZero( x ) ) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn y;\n\t\t}\n\t\tif ( x < y ) {\n\t\t\treturn x;\n\t\t}\n\t\treturn y;\n\t}\n\tm = PINF;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arguments[ i ];\n\t\tif ( isnan( v ) || v === NINF ) {\n\t\t\treturn v;\n\t\t}\n\t\tif ( v < m ) {\n\t\t\tm = v;\n\t\t} else if (\n\t\t\tv === m &&\n\t\t\tv === 0.0 &&\n\t\t\tisNegativeZero( v )\n\t\t) {\n\t\t\tm = v;\n\t\t}\n\t}\n\treturn m;\n}\n\n\n// EXPORTS //\n\nmodule.exports = min;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the minimum value.\n*\n* @module @stdlib/math/base/special/min\n*\n* @example\n* var min = require( '@stdlib/math/base/special/min' );\n*\n* var v = min( 3.14, 4.2 );\n* // returns 3.14\n*\n* v = min( 5.9, 3.14, 4.2 );\n* // returns 3.14\n*\n* v = min( 3.14, NaN );\n* // returns NaN\n*\n* v = min( +0.0, -0.0 );\n* // returns -0.0\n*/\n\n// MODULES //\n\nvar min = require( './min.js' );\n\n\n// EXPORTS //\n\nmodule.exports = min;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/max\n* @type {number}\n*\n* @example\n* var FLOAT64_MAX = require( '@stdlib/constants/float64/max' );\n* // returns 1.7976931348623157e+308\n*/\n\n\n// MAIN //\n\n/**\n* Maximum double-precision floating-point number.\n*\n* ## Notes\n*\n* The maximum is given by\n*\n* ```tex\n* 2^{1023} (2 - 2^{-52})\n* ```\n*\n* @constant\n* @type {number}\n* @default 1.7976931348623157e+308\n* @see [IEEE 754]{@link http://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX = 1.7976931348623157e+308;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* One half times the mathematical constant `π`.\n*\n* @module @stdlib/constants/float64/half-pi\n* @type {number}\n*\n* @example\n* var HALF_PI = require( '@stdlib/constants/float64/half-pi' );\n* // returns 1.5707963267948966\n*/\n\n\n// MAIN //\n\n/**\n* One half times the mathematical constant `π`.\n*\n* @constant\n* @type {number}\n* @default 1.5707963267948966\n* @see [Wikipedia]{@link https://en.wikipedia.org/wiki/Pi}\n*/\nvar HALF_PI = 1.5707963267948966;\n\n\n// EXPORTS //\n\nmodule.exports = HALF_PI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The mathematical constant `π`.\n*\n* @module @stdlib/constants/float64/pi\n* @type {number}\n*\n* @example\n* var PI = require( '@stdlib/constants/float64/pi' );\n* // returns 3.141592653589793\n*/\n\n\n// MAIN //\n\n/**\n* The mathematical constant `π`.\n*\n* @constant\n* @type {number}\n* @default 3.141592653589793\n* @see [Wikipedia]{@link https://en.wikipedia.org/wiki/Pi}\n*/\nvar PI = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679; // eslint-disable-line max-len\n\n\n// EXPORTS //\n\nmodule.exports = PI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -2.7557314351390663e-7;\n\t}\n\treturn -2.7557314351390663e-7 + (x * (2.087572321298175e-9 + (x * -1.1359647557788195e-11))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_cos.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar polyval13 = require( './polyval_c13.js' );\nvar polyval46 = require( './polyval_c46.js' );\n\n\n// MAIN //\n\n/**\n* Computes the cosine on \\\\( \\[-\\pi/4, \\pi/4] \\\\), where \\\\( \\pi/4 \\approx 0.785398164 \\\\).\n*\n* ## Method\n*\n* -   Since \\\\( \\cos(-x) = \\cos(x) \\\\), we need only to consider positive \\\\(x\\\\).\n*\n* -   If \\\\( x < 2^{-27} \\\\), return \\\\(1\\\\) which is inexact if \\\\( x \\ne 0 \\\\).\n*\n* -   \\\\( cos(x) \\\\) is approximated by a polynomial of degree \\\\(14\\\\) on \\\\( \\[0,\\pi/4] \\\\).\n*\n*     ```tex\n*     \\cos(x) \\approx 1 - \\frac{x \\cdot x}{2} + C_1 \\cdot x^4 + \\ldots + C_6 \\cdot x^{14}\n*     ```\n*\n*     where the Remez error is\n*\n*     ```tex\n*     \\left| \\cos(x) - \\left( 1 - \\frac{x^2}{2} + C_1x^4 + C_2x^6 + C_3x^8 + C_4x^{10} + C_5x^{12} + C_6x^{15} \\right) \\right| \\le 2^{-58}\n*     ```\n*\n* -   Let \\\\( C_1x^4 + C_2x^6 + C_3x^8 + C_4x^{10} + C_5x^{12} + C_6x^{14} \\\\), then\n*\n*     ```tex\n*     \\cos(x) \\approx 1 - \\frac{x \\cdot x}{2} + r\n*     ```\n*\n*     Since\n*\n*     ```tex\n*     \\cos(x+y) \\approx \\cos(x) - \\sin(x) \\cdot y \\approx \\cos(x) - x \\cdot y\n*     ```\n*\n*     a correction term is necessary in \\\\( \\cos(x) \\\\). Hence,\n*\n*     ```tex\n*     \\cos(x+y) = 1 - \\left( \\frac{x \\cdot x}{2} - (r - x \\cdot y) \\right)\n*     ```\n*\n*     For better accuracy, rearrange to\n*\n*     ```tex\n*     \\cos(x+y) \\approx w + \\left( t + ( r - x \\cdot y ) \\right)\n*     ```\n*\n*     where \\\\( w = 1 - \\frac{x \\cdot x}{2} \\\\) and \\\\( t \\\\) is a tiny correction term (\\\\( 1 - \\frac{x \\cdot x}{2} = w + t \\\\) exactly in infinite precision). The exactness of \\\\(w + t\\\\) in infinite precision depends on \\\\(w\\\\) and \\\\(t\\\\) having the same precision as \\\\(x\\\\).\n*\n*\n* @param {number} x - input value (in radians, assumed to be bounded by ~pi/4 in magnitude)\n* @param {number} y - tail of `x`\n* @returns {number} cosine\n*\n* @example\n* var v = kernelCos( 0.0, 0.0 );\n* // returns ~1.0\n*\n* @example\n* var v = kernelCos( 3.141592653589793/6.0, 0.0 );\n* // returns ~0.866\n*\n* @example\n* var v = kernelCos( 0.785, -1.144e-17 );\n* // returns ~0.707\n*\n* @example\n* var v = kernelCos( NaN, 0.0 );\n* // returns NaN\n*/\nfunction kernelCos( x, y ) {\n\tvar hz;\n\tvar r;\n\tvar w;\n\tvar z;\n\n\tz = x * x;\n\tw = z * z;\n\tr = z * polyval13( z );\n\tr += w * w * polyval46( z );\n\thz = 0.5 * z;\n\tw = 1.0 - hz;\n\treturn w + ( ((1.0-w) - hz) + ((z*r) - (x*y)) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = kernelCos;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.0416666666666666;\n\t}\n\treturn 0.0416666666666666 + (x * (-0.001388888888887411 + (x * 0.00002480158728947673))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the cosine of a number on `[-π/4, π/4]`.\n*\n* @module @stdlib/math/base/special/kernel-cos\n*\n* @example\n* var kernelCos = require( '@stdlib/math/base/special/kernel-cos' );\n*\n* var v = kernelCos( 0.0, 0.0 );\n* // returns ~1.0\n*\n* v = kernelCos( 3.141592653589793/6.0, 0.0 );\n* // returns ~0.866\n*\n* v = kernelCos( 0.785, -1.144e-17 );\n* // returns ~0.707\n*\n* v = kernelCos( NaN, 0.0 );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar kernelCos = require( './kernel_cos.js' );\n\n\n// EXPORTS //\n\nmodule.exports = kernelCos;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_sin.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar S1 = -1.66666666666666324348e-01; // 0xBFC55555, 0x55555549\nvar S2 = 8.33333333332248946124e-03;  // 0x3F811111, 0x1110F8A6\nvar S3 = -1.98412698298579493134e-04; // 0xBF2A01A0, 0x19C161D5\nvar S4 = 2.75573137070700676789e-06;  // 0x3EC71DE3, 0x57B1FE7D\nvar S5 = -2.50507602534068634195e-08; // 0xBE5AE5E6, 0x8A2B9CEB\nvar S6 = 1.58969099521155010221e-10;  // 0x3DE5D93A, 0x5ACFD57C\n\n\n// MAIN //\n\n/**\n* Computes the sine on \\\\( \\approx \\[-\\pi/4, \\pi/4] \\\\) (except on \\\\(-0\\\\)), where \\\\( \\pi/4 \\approx 0.7854 \\\\).\n*\n* ## Method\n*\n* -   Since \\\\( \\sin(-x) = -\\sin(x) \\\\), we need only to consider positive \\\\(x\\\\).\n*\n* -   Callers must return \\\\( \\sin(-0) = -0 \\\\) without calling here since our odd polynomial is not evaluated in a way that preserves \\\\(-0\\\\). Callers may do the optimization \\\\( \\sin(x) \\approx x \\\\) for tiny \\\\(x\\\\).\n*\n* -   \\\\( \\sin(x) \\\\) is approximated by a polynomial of degree \\\\(13\\\\) on \\\\( \\left\\[0,\\tfrac{pi}{4}\\right] \\\\)\n*\n*     ```tex\n*     \\sin(x) \\approx x + S_1 \\cdot x^3 + \\ldots + S_6 \\cdot x^{13}\n*     ```\n*\n*     where\n*\n*     ```tex\n*     \\left| \\frac{\\sin(x)}{x} \\left( 1 + S_1 \\cdot x + S_2 \\cdot x + S_3 \\cdot x + S_4 \\cdot x + S_5 \\cdot x + S_6 \\cdot x \\right) \\right| \\le 2^{-58}\n*     ```\n*\n* -   We have\n*\n*     ```tex\n*     \\sin(x+y) = \\sin(x) + \\sin'(x') \\cdot y \\approx \\sin(x) + (1-x*x/2) \\cdot y\n*     ```\n*\n*     For better accuracy, let\n*\n*     ```tex\n*     r = x^3 * \\left( S_2 + x^2 \\cdot \\left( S_3 + x^2 * \\left( S_4 + x^2 \\cdot ( S_5+x^2 \\cdot S_6 ) \\right) \\right) \\right)\n*     ```\n*\n*     then\n*\n*     ```tex\n*     \\sin(x) = x + \\left( S_1 \\cdot x + ( x \\cdot (r-y/2) + y ) \\right)\n*     ```\n*\n*\n* @param {number} x - input value (in radians, assumed to be bounded by `~pi/4` in magnitude)\n* @param {number} y - tail of `x`\n* @returns {number} sine\n*\n* @example\n* var v = kernelSin( 0.0, 0.0 );\n* // returns ~0.0\n*\n* @example\n* var v = kernelSin( 3.141592653589793/6.0, 0.0 );\n* // returns ~0.5\n*\n* @example\n* var v = kernelSin( 0.619, 9.279e-18 );\n* // returns ~0.58\n*\n* @example\n* var v = kernelSin( NaN, 0.0 );\n* // returns NaN\n*\n* @example\n* var v = kernelSin( 3.0, NaN );\n* // returns NaN\n*\n* @example\n* var v = kernelSin( NaN, NaN );\n* // returns NaN\n*/\nfunction kernelSin( x, y ) {\n\tvar r;\n\tvar v;\n\tvar w;\n\tvar z;\n\n\tz = x * x;\n\tw = z * z;\n\tr = S2 + (z * (S3 + (z*S4))) + (z * w * (S5 + (z*S6)));\n\tv = z * x;\n\tif ( y === 0.0 ) {\n\t\treturn x + (v * (S1 + (z*r)));\n\t}\n\treturn x - (((z*((0.5*y) - (v*r))) - y) - (v*S1));\n}\n\n\n// EXPORTS //\n\nmodule.exports = kernelSin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the sine of a number on `[-π/4, π/4]`.\n*\n* @module @stdlib/math/base/special/kernel-sin\n*\n* @example\n* var kernelSin = require( '@stdlib/math/base/special/kernel-sin' );\n*\n* var v = kernelSin( 0.0, 0.0 );\n* // returns ~0.0\n*\n* v = kernelSin( 3.141592653589793/6.0, 0.0 );\n* // returns ~0.5\n*\n* v = kernelSin( 0.619, 9.279e-18 );\n* // returns ~0.581\n*\n* v = kernelSin( NaN, 0.0 );\n* // returns NaN\n*\n* v = kernelSin( 3.0, NaN );\n* // returns NaN\n*\n* v = kernelSin( NaN, NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar kernelSin = require( './kernel_sin.js' );\n\n\n// EXPORTS //\n\nmodule.exports = kernelSin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar LOW;\nif ( isLittleEndian === true ) {\n\tLOW = 0; // first index\n} else {\n\tLOW = 1; // second index\n}\n\n\n// EXPORTS //\n\nmodule.exports = LOW;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar LOW = require( './low.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Returns a 32-bit unsigned integer corresponding to the less significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the lower order bits? If little endian, the first; if big endian, the second.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - input value\n* @returns {uinteger32} lower order word\n*\n* @example\n* var w = getLowWord( 3.14e201 ); // => 10010011110010110101100010000010\n* // returns 2479577218\n*/\nfunction getLowWord( x ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\treturn UINT32_VIEW[ LOW ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = getLowWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an unsigned 32-bit integer corresponding to the less significant 32 bits of a double-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/get-low-word\n*\n* @example\n* var getLowWord = require( '@stdlib/number/float64/base/get-low-word' );\n*\n* var w = getLowWord( 3.14e201 ); // => 10010011110010110101100010000010\n* // returns 2479577218\n*/\n\n// MODULES //\n\nvar getLowWord = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = getLowWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a filled \"generic\" array.\n*\n* @param {*} value - fill value\n* @param {NonNegativeInteger} len - array length\n* @returns {Array} filled array\n*\n* @example\n* var out = filled( 0.0, 3 );\n* // returns [ 0.0, 0.0, 0.0 ]\n*\n* @example\n* var out = filled( 'beep', 3 );\n* // returns [ 'beep', 'beep', 'beep' ]\n*/\nfunction filled( value, len ) {\n\tvar arr;\n\tvar i;\n\n\t// Manually push elements in order to ensure \"fast\" elements...\n\tarr = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tarr.push( value );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = filled;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar filled = require( './../../../base/filled' );\n\n\n// MAIN //\n\n/**\n* Returns a zero-filled \"generic\" array.\n*\n* @param {NonNegativeInteger} len - array length\n* @returns {Array} output array\n*\n* @example\n* var out = zeros( 3 );\n* // returns [ 0.0, 0.0, 0.0 ]\n*/\nfunction zeros( len ) {\n\treturn filled( 0.0, len );\n}\n\n\n// EXPORTS //\n\nmodule.exports = zeros;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a filled \"generic\" array.\n*\n* @module @stdlib/array/base/filled\n*\n* @example\n* var filled = require( '@stdlib/array/base/filled' );\n*\n* var out = filled( 0.0, 3 );\n* // returns [ 0.0, 0.0, 0.0 ]\n*\n* @example\n* var filled = require( '@stdlib/array/base/filled' );\n*\n* var out = filled( 'beep', 3 );\n* // returns [ 'beep', 'beep', 'beep' ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a zero-filled \"generic\" array.\n*\n* @module @stdlib/array/base/zeros\n*\n* @example\n* var zeros = require( '@stdlib/array/base/zeros' );\n*\n* var out = zeros( 3 );\n* // returns [ 0.0, 0.0, 0.0 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_rem_pio2.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n/* eslint-disable array-element-newline */\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( './../../../../base/special/floor' );\nvar ldexp = require( './../../../../base/special/ldexp' );\nvar zeros = require( '@stdlib/array/base/zeros' );\n\n\n// VARIABLES //\n\n/*\n* Table of constants for `2/π` (`396` hex digits, `476` decimal).\n*\n* Integer array which contains the (`24*i`)-th to (`24*i+23`)-th bit of `2/π` after binary point. The corresponding floating value is\n*\n* ```tex\n* \\operatorname{ipio2}[i] \\cdot 2^{-24(i+1)}\n* ```\n*\n* This table must have at least `(e0-3)/24 + jk` terms. For quad precision (`e0 <= 16360`, `jk = 6`), this is `686`.\n*/\nvar IPIO2 = [\n\t0xA2F983, 0x6E4E44, 0x1529FC, 0x2757D1, 0xF534DD, 0xC0DB62,\n\t0x95993C, 0x439041, 0xFE5163, 0xABDEBB, 0xC561B7, 0x246E3A,\n\t0x424DD2, 0xE00649, 0x2EEA09, 0xD1921C, 0xFE1DEB, 0x1CB129,\n\t0xA73EE8, 0x8235F5, 0x2EBB44, 0x84E99C, 0x7026B4, 0x5F7E41,\n\t0x3991D6, 0x398353, 0x39F49C, 0x845F8B, 0xBDF928, 0x3B1FF8,\n\t0x97FFDE, 0x05980F, 0xEF2F11, 0x8B5A0A, 0x6D1F6D, 0x367ECF,\n\t0x27CB09, 0xB74F46, 0x3F669E, 0x5FEA2D, 0x7527BA, 0xC7EBE5,\n\t0xF17B3D, 0x0739F7, 0x8A5292, 0xEA6BFB, 0x5FB11F, 0x8D5D08,\n\t0x560330, 0x46FC7B, 0x6BABF0, 0xCFBC20, 0x9AF436, 0x1DA9E3,\n\t0x91615E, 0xE61B08, 0x659985, 0x5F14A0, 0x68408D, 0xFFD880,\n\t0x4D7327, 0x310606, 0x1556CA, 0x73A8C9, 0x60E27B, 0xC08C6B\n];\n\n// Double precision array, obtained by cutting `π/2` into `24` bits chunks...\nvar PIO2 = [\n\t1.57079625129699707031e+00, // 0x3FF921FB, 0x40000000\n\t7.54978941586159635335e-08, // 0x3E74442D, 0x00000000\n\t5.39030252995776476554e-15, // 0x3CF84698, 0x80000000\n\t3.28200341580791294123e-22, // 0x3B78CC51, 0x60000000\n\t1.27065575308067607349e-29, // 0x39F01B83, 0x80000000\n\t1.22933308981111328932e-36, // 0x387A2520, 0x40000000\n\t2.73370053816464559624e-44, // 0x36E38222, 0x80000000\n\t2.16741683877804819444e-51  // 0x3569F31D, 0x00000000\n];\nvar TWO24 = 1.67772160000000000000e+07;  // 0x41700000, 0x00000000\nvar TWON24 = 5.96046447753906250000e-08; // 0x3E700000, 0x00000000\n\n// Arrays for storing temporary values (note that, in C, this is not thread safe):\nvar F = zeros( 20 );\nvar Q = zeros( 20 );\nvar FQ = zeros( 20 );\nvar IQ = zeros( 20 );\n\n\n// FUNCTIONS //\n\n/**\n* Performs the computation for `kernelRempio2()`.\n*\n* @private\n* @param {PositiveNumber} x - input value\n* @param {(Array|TypedArray|Object)} y - output object for storing double precision numbers\n* @param {integer} jz - number of terms of `ipio2[]` used\n* @param {Array<integer>} q - array with integral values, representing the 24-bits chunk of the product of `x` and `2/π`\n* @param {integer} q0 - the corresponding exponent of `q[0]` (the exponent for `q[i]` would be `q0-24*i`)\n* @param {integer} jk - `jk+1` is the initial number of terms of `IPIO2[]` needed in the computation\n* @param {integer} jv - index for pointing to the suitable `ipio2[]` for the computation\n* @param {integer} jx - `nx - 1`\n* @param {Array<number>} f - `IPIO2[]` in floating point\n* @returns {number} last three binary digits of `N`\n*/\nfunction compute( x, y, jz, q, q0, jk, jv, jx, f ) {\n\tvar carry;\n\tvar fw;\n\tvar ih;\n\tvar jp;\n\tvar i;\n\tvar k;\n\tvar n;\n\tvar j;\n\tvar z;\n\n\t// `jp+1` is the number of terms in `PIO2[]` needed:\n\tjp = jk;\n\n\t// Distill `q[]` into `IQ[]` in reverse order...\n\tz = q[ jz ];\n\tj = jz;\n\tfor ( i = 0; j > 0; i++ ) {\n\t\tfw = ( TWON24 * z )|0;\n\t\tIQ[ i ] = ( z - (TWO24*fw) )|0;\n\t\tz = q[ j-1 ] + fw;\n\t\tj -= 1;\n\t}\n\t// Compute `n`...\n\tz = ldexp( z, q0 );\n\tz -= 8.0 * floor( z*0.125 ); // Trim off integer >= 8\n\tn = z|0;\n\tz -= n;\n\tih = 0;\n\tif ( q0 > 0 ) {\n\t\t// Need `IQ[jz-1]` to determine `n`...\n\t\ti = ( IQ[ jz-1 ] >> (24-q0) );\n\t\tn += i;\n\t\tIQ[ jz-1 ] -= ( i << (24-q0) );\n\t\tih = ( IQ[ jz-1 ] >> (23-q0) );\n\t}\n\telse if ( q0 === 0 ) {\n\t\tih = ( IQ[ jz-1 ] >> 23 );\n\t}\n\telse if ( z >= 0.5 ) {\n\t\tih = 2;\n\t}\n\t// Case: q > 0.5\n\tif ( ih > 0 ) {\n\t\tn += 1;\n\t\tcarry = 0;\n\n\t\t// Compute `1-q`:\n\t\tfor ( i = 0; i < jz; i++ ) {\n\t\t\tj = IQ[ i ];\n\t\t\tif ( carry === 0 ) {\n\t\t\t\tif ( j !== 0 ) {\n\t\t\t\t\tcarry = 1;\n\t\t\t\t\tIQ[ i ] = 0x1000000 - j;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tIQ[ i ] = 0xffffff - j;\n\t\t\t}\n\t\t}\n\t\tif ( q0 > 0 ) {\n\t\t\t// Rare case: chance is 1 in 12...\n\t\t\tswitch ( q0 ) { // eslint-disable-line default-case\n\t\t\tcase 1:\n\t\t\t\tIQ[ jz-1 ] &= 0x7fffff;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tIQ[ jz-1 ] &= 0x3fffff;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( ih === 2 ) {\n\t\t\tz = 1.0 - z;\n\t\t\tif ( carry !== 0 ) {\n\t\t\t\tz -= ldexp( 1.0, q0 );\n\t\t\t}\n\t\t}\n\t}\n\t// Check if re-computation is needed...\n\tif ( z === 0.0 ) {\n\t\tj = 0;\n\t\tfor ( i = jz-1; i >= jk; i-- ) {\n\t\t\tj |= IQ[ i ];\n\t\t}\n\t\tif ( j === 0 ) {\n\t\t\t// Need re-computation...\n\t\t\tfor ( k = 1; IQ[ jk-k ] === 0; k++ ) {\n\t\t\t\t// `k` is the number of terms needed...\n\t\t\t}\n\t\t\tfor ( i = jz+1; i <= jz+k; i++ ) {\n\t\t\t\t// Add `q[jz+1]` to `q[jz+k]`...\n\t\t\t\tf[ jx+i ] = IPIO2[ jv+i ];\n\t\t\t\tfw = 0.0;\n\t\t\t\tfor ( j = 0; j <= jx; j++ ) {\n\t\t\t\t\tfw += x[ j ] * f[ jx + (i-j) ];\n\t\t\t\t}\n\t\t\t\tq[ i ] = fw;\n\t\t\t}\n\t\t\tjz += k;\n\t\t\treturn compute( x, y, jz, q, q0, jk, jv, jx, f );\n\t\t}\n\t}\n\t// Chop off zero terms...\n\tif ( z === 0.0 ) {\n\t\tjz -= 1;\n\t\tq0 -= 24;\n\t\twhile ( IQ[ jz ] === 0 ) {\n\t\t\tjz -= 1;\n\t\t\tq0 -= 24;\n\t\t}\n\t} else {\n\t\t// Break `z` into 24-bit if necessary...\n\t\tz = ldexp( z, -q0 );\n\t\tif ( z >= TWO24 ) {\n\t\t\tfw = (TWON24*z)|0;\n\t\t\tIQ[ jz ] = ( z - (TWO24*fw) )|0;\n\t\t\tjz += 1;\n\t\t\tq0 += 24;\n\t\t\tIQ[ jz ] = fw;\n\t\t} else {\n\t\t\tIQ[ jz ] = z|0;\n\t\t}\n\t}\n\t// Convert integer \"bit\" chunk to floating-point value...\n\tfw = ldexp( 1.0, q0 );\n\tfor ( i = jz; i >= 0; i-- ) {\n\t\tq[ i ] = fw * IQ[i];\n\t\tfw *= TWON24;\n\t}\n\t// Compute `PIO2[0,...,jp]*q[jz,...,0]`...\n\tfor ( i = jz; i >= 0; i-- ) {\n\t\tfw = 0.0;\n\t\tfor ( k = 0; k <= jp && k <= jz-i; k++ ) {\n\t\t\tfw += PIO2[ k ] * q[ i+k ];\n\t\t}\n\t\tFQ[ jz-i ] = fw;\n\t}\n\t// Compress `FQ[]` into `y[]`...\n\tfw = 0.0;\n\tfor ( i = jz; i >= 0; i-- ) {\n\t\tfw += FQ[ i ];\n\t}\n\tif ( ih === 0 ) {\n\t\ty[ 0 ] = fw;\n\t} else {\n\t\ty[ 0 ] = -fw;\n\t}\n\tfw = FQ[ 0 ] - fw;\n\tfor ( i = 1; i <= jz; i++ ) {\n\t\tfw += FQ[i];\n\t}\n\tif ( ih === 0 ) {\n\t\ty[ 1 ] = fw;\n\t} else {\n\t\ty[ 1 ] = -fw;\n\t}\n\treturn ( n & 7 );\n}\n\n\n// MAIN //\n\n/**\n* Returns the last three binary digits of `N` with `y = x - Nπ/2` so that `|y| < π/2`.\n*\n* ## Method\n*\n* -   The method is to compute the integer (`mod 8`) and fraction parts of `2x/π` without doing the full multiplication. In general, we skip the part of the product that is known to be a huge integer (more accurately, equals `0 mod 8` ). Thus, the number of operations is independent of the exponent of the input.\n*\n* @private\n* @param {PositiveNumber} x - input value\n* @param {(Array|TypedArray|Object)} y - remainder elements\n* @param {PositiveInteger} e0 - the exponent of `x[0]` (must be <= 16360)\n* @param {PositiveInteger} nx - dimension of `x[]`\n* @returns {number} last three binary digits of `N`\n*/\nfunction kernelRempio2( x, y, e0, nx ) {\n\tvar fw;\n\tvar jk;\n\tvar jv;\n\tvar jx;\n\tvar jz;\n\tvar q0;\n\tvar i;\n\tvar j;\n\tvar m;\n\n\t// Initialize `jk` for double-precision floating-point numbers:\n\tjk = 4;\n\n\t// Determine `jx`, `jv`, `q0` (note that `q0 < 3`):\n\tjx = nx - 1;\n\tjv = ( (e0 - 3) / 24 )|0;\n\tif ( jv < 0 ) {\n\t\tjv = 0;\n\t}\n\tq0 = e0 - (24 * (jv + 1));\n\n\t// Set up `F[0]` to `F[jx+jk]` where `F[jx+jk] = IPIO2[jv+jk]`:\n\tj = jv - jx;\n\tm = jx + jk;\n\tfor ( i = 0; i <= m; i++ ) {\n\t\tif ( j < 0 ) {\n\t\t\tF[ i ] = 0.0;\n\t\t} else {\n\t\t\tF[ i ] = IPIO2[ j ];\n\t\t}\n\t\tj += 1;\n\t}\n\t// Compute `Q[0],Q[1],...,Q[jk]`:\n\tfor ( i = 0; i <= jk; i++ ) {\n\t\tfw = 0.0;\n\t\tfor ( j = 0; j <= jx; j++ ) {\n\t\t\tfw += x[ j ] * F[ jx + (i-j) ];\n\t\t}\n\t\tQ[ i ] = fw;\n\t}\n\tjz = jk;\n\treturn compute( x, y, jz, Q, q0, jk, jv, jx, F );\n}\n\n\n// EXPORTS //\n\nmodule.exports = kernelRempio2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation\n\n/**\n* Round a numeric value to the nearest integer.\n*\n* @module @stdlib/math/base/special/round\n*\n* @example\n* var round = require( '@stdlib/math/base/special/round' );\n*\n* var v = round( -4.2 );\n* // returns -4.0\n*\n* v = round( -4.5 );\n* // returns -4.0\n*\n* v = round( -4.6 );\n* // returns -5.0\n*\n* v = round( 9.99999 );\n* // returns 10.0\n*\n* v = round( 9.5 );\n* // returns 10.0\n*\n* v = round( 9.2 );\n* // returns 9.0\n*\n* v = round( 0.0 );\n* // returns 0.0\n*\n* v = round( -0.0 );\n* // returns -0.0\n*\n* v = round( Infinity );\n* // returns Infinity\n*\n* v = round( -Infinity );\n* // returns -Infinity\n*\n* v = round( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar round = require( './round.js' );\n\n\n// EXPORTS //\n\nmodule.exports = round;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation\n\n/**\n* Rounds a numeric value to the nearest integer.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = round( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = round( -4.5 );\n* // returns -4.0\n*\n* @example\n* var v = round( -4.6 );\n* // returns -5.0\n*\n* @example\n* var v = round( 9.99999 );\n* // returns 10.0\n*\n* @example\n* var v = round( 9.5 );\n* // returns 10.0\n*\n* @example\n* var v = round( 9.2 );\n* // returns 9.0\n*\n* @example\n* var v = round( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = round( -0.0 );\n* // returns -0.0\n*\n* @example\n* var v = round( Infinity );\n* // returns Infinity\n*\n* @example\n* var v = round( -Infinity );\n* // returns -Infinity\n*\n* @example\n* var v = round( NaN );\n* // returns NaN\n*/\nvar round = Math.round; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nmodule.exports = round;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_rem_pio2.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar round = require( './../../../../base/special/round' );\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\n\n\n// VARIABLES //\n\n// 53 bits of 2/π:\nvar INVPIO2 = 6.36619772367581382433e-01; // 0x3FE45F30, 0x6DC9C883\n\n// First 33 bits of π/2:\nvar PIO2_1 = 1.57079632673412561417e+00;  // 0x3FF921FB, 0x54400000\n\n// PIO2_1T = π/2 - PIO2_1:\nvar PIO2_1T = 6.07710050650619224932e-11; // 0x3DD0B461, 0x1A626331\n\n// Another 33 bits of π/2:\nvar PIO2_2 = 6.07710050630396597660e-11;  // 0x3DD0B461, 0x1A600000\n\n// PIO2_2T = π/2 - ( PIO2_1 + PIO2_2 ):\nvar PIO2_2T = 2.02226624879595063154e-21; // 0x3BA3198A, 0x2E037073\n\n// Another 33 bits of π/2:\nvar PIO2_3 = 2.02226624871116645580e-21;  // 0x3BA3198A, 0x2E000000\n\n// PIO2_3T = π/2 - ( PIO2_1 + PIO2_2 + PIO2_3 ):\nvar PIO2_3T = 8.47842766036889956997e-32; // 0x397B839A, 0x252049C1\n\n// Exponent mask (2047 => 0x7ff):\nvar EXPONENT_MASK = 0x7ff|0; // asm type annotation\n\n\n// MAIN //\n\n/**\n* Computes `x - nπ/2 = r` for medium-sized inputs.\n*\n* @private\n* @param {number} x - input value\n* @param {uint32} ix - high word of `x`\n* @param {(Array|TypedArray|Object)} y - remainder elements\n* @returns {integer} factor of `π/2`\n*/\nfunction rempio2Medium( x, ix, y ) {\n\tvar high;\n\tvar n;\n\tvar t;\n\tvar r;\n\tvar w;\n\tvar i;\n\tvar j;\n\n\tn = round( x * INVPIO2 );\n\tr = x - ( n * PIO2_1 );\n\tw = n * PIO2_1T;\n\n\t// First rounding (good to 85 bits)...\n\tj = (ix >> 20)|0; // asm type annotation\n\ty[ 0 ] = r - w;\n\thigh = getHighWord( y[0] );\n\ti = j - ( (high >> 20) & EXPONENT_MASK );\n\n\t// Check if a second iteration is needed (good to 118 bits)...\n\tif ( i > 16 ) {\n\t\tt = r;\n\t\tw = n * PIO2_2;\n\t\tr = t - w;\n\t\tw = (n * PIO2_2T) - ((t-r) - w);\n\t\ty[ 0 ] = r - w;\n\t\thigh = getHighWord( y[0] );\n\t\ti = j - ( (high >> 20) & EXPONENT_MASK );\n\n\t\t// Check if a third iteration is needed (151 bits accumulated)...\n\t\tif ( i > 49 ) {\n\t\t\tt = r;\n\t\t\tw = n * PIO2_3;\n\t\t\tr = t - w;\n\t\t\tw = (n * PIO2_3T) - ((t-r) - w);\n\t\t\ty[ 0 ] = r - w;\n\t\t}\n\t}\n\ty[ 1 ] = (r - y[0]) - w;\n\treturn n;\n}\n\n\n// EXPORTS //\n\nmodule.exports = rempio2Medium;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_rem_pio2.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n*\n* Optimized by Bruce D. Evans.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar getLowWord = require( '@stdlib/number/float64/base/get-low-word' );\nvar fromWords = require( '@stdlib/number/float64/base/from-words' );\nvar rempio2Kernel = require( './kernel_rempio2.js' );\nvar rempio2Medium = require( './rempio2_medium.js' );\n\n\n// VARIABLES //\n\nvar ZERO = 0.00000000000000000000e+00;    // 0x00000000, 0x00000000\nvar TWO24 = 1.67772160000000000000e+07;   // 0x41700000, 0x00000000\n\n// 33 bits of π/2:\nvar PIO2_1 = 1.57079632673412561417e+00;  // 0x3FF921FB, 0x54400000\n\n// PIO2_1T = π/2 - PIO2_1:\nvar PIO2_1T = 6.07710050650619224932e-11; // 0x3DD0B461, 0x1A626331\nvar TWO_PIO2_1T = 2.0 * PIO2_1T;\nvar THREE_PIO2_1T = 3.0 * PIO2_1T;\nvar FOUR_PIO2_1T = 4.0 * PIO2_1T;\n\n// Absolute value mask: 0x7fffffff = 2147483647 => 01111111111111111111111111111111\nvar ABS_MASK = 0x7fffffff|0; // asm type annotation\n\n// Exponent mask: 0x7ff00000 = 2146435072 => 01111111111100000000000000000000\nvar EXPONENT_MASK = 0x7ff00000|0; // asm type annotation\n\n// High word significand mask: 0xfffff = 1048575 => 00000000000011111111111111111111\nvar SIGNIFICAND_MASK = 0xfffff|0; // asm type annotation\n\n// High word significand for π and π/2: 0x921fb = 598523 => 00000000000010010010000111111011\nvar PI_HIGH_WORD_SIGNIFICAND = 0x921fb|0; // asm type annotation\n\n// High word for π/4: 0x3fe921fb = 1072243195 => 00111111111010010010000111111011\nvar PIO4_HIGH_WORD = 0x3fe921fb|0; // asm type annotation\n\n// High word for 3π/4: 0x4002d97c = 1073928572 => 01000000000000101101100101111100\nvar THREE_PIO4_HIGH_WORD = 0x4002d97c|0; // asm type annotation\n\n// High word for 5π/4: 0x400f6a7a = 1074752122 => 01000000000011110110101001111010\nvar FIVE_PIO4_HIGH_WORD = 0x400f6a7a|0; // asm type annotation\n\n// High word for 6π/4: 0x4012d97c = 1074977148 => 01000000000100101101100101111100\nvar THREE_PIO2_HIGH_WORD = 0x4012d97c|0; // asm type annotation\n\n// High word for 7π/4: 0x4015fdbc = 1075183036 => 01000000000101011111110110111100\nvar SEVEN_PIO4_HIGH_WORD = 0x4015fdbc|0; // asm type annotation\n\n// High word for 8π/4: 0x401921fb = 1075388923 => 01000000000110010010000111111011\nvar TWO_PI_HIGH_WORD = 0x401921fb|0; // asm type annotation\n\n// High word for 9π/4: 0x401c463b = 1075594811 => 01000000000111000100011000111011\nvar NINE_PIO4_HIGH_WORD = 0x401c463b|0; // asm type annotation\n\n// 2^20*π/2 = 1647099.3291652855 => 0100000100111001001000011111101101010100010001000010110100011000 => high word => 0x413921fb = 1094263291 => 01000001001110010010000111111011\nvar MEDIUM = 0x413921fb|0; // asm type annotation\n\n// Arrays for storing temporary values:\nvar TX = [ 0.0, 0.0, 0.0 ]; // WARNING: not thread safe\nvar TY = [ 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Computes `x - nπ/2 = r`.\n*\n* ## Notes\n*\n* -   Returns `n` and stores the remainder `r` as two numbers `y[0]` and `y[1]`, such that `y[0]+y[1] = r`.\n*\n*\n* @param {number} x - input value\n* @param {(Array|TypedArray|Object)} y - remainder elements\n* @returns {integer} factor of `π/2`\n*\n* @example\n* var y = [ 0.0, 0.0 ];\n* var n = rempio2( 128.0, y );\n* // returns 81\n*\n* var y1 = y[ 0 ];\n* // returns ~0.765\n*\n* var y2 = y[ 1 ];\n* // returns ~3.618e-17\n*\n* @example\n* var y = [ 0.0, 0.0 ];\n* var n = rempio2( NaN, y );\n* // returns 0\n*\n* var y1 = y[ 0 ];\n* // returns NaN\n*\n* var y2 = y[ 1 ];\n* // returns NaN\n*/\nfunction rempio2( x, y ) {\n\tvar low;\n\tvar e0;\n\tvar hx;\n\tvar ix;\n\tvar nx;\n\tvar i;\n\tvar n;\n\tvar z;\n\n\thx = getHighWord( x );\n\tix = (hx & ABS_MASK)|0; // asm type annotation\n\n\t// Case: |x| ~<= π/4 (no need for reduction)\n\tif ( ix <= PIO4_HIGH_WORD ) {\n\t\ty[ 0 ] = x;\n\t\ty[ 1 ] = 0.0;\n\t\treturn 0;\n\t}\n\t// Case: |x| ~<= 5π/4\n\tif ( ix <= FIVE_PIO4_HIGH_WORD ) {\n\t\t// Case: |x| ~= π/2 or π\n\t\tif ( (ix & SIGNIFICAND_MASK) === PI_HIGH_WORD_SIGNIFICAND ) {\n\t\t\t// Cancellation => use medium case\n\t\t\treturn rempio2Medium( x, ix, y );\n\t\t}\n\t\t// Case: |x| ~<= 3π/4\n\t\tif ( ix <= THREE_PIO4_HIGH_WORD ) {\n\t\t\tif ( x > 0.0 ) {\n\t\t\t\tz = x - PIO2_1;\n\t\t\t\ty[ 0 ] = z - PIO2_1T;\n\t\t\t\ty[ 1 ] = (z - y[0]) - PIO2_1T;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tz = x + PIO2_1;\n\t\t\ty[ 0 ] = z + PIO2_1T;\n\t\t\ty[ 1 ] = (z - y[0]) + PIO2_1T;\n\t\t\treturn -1;\n\t\t}\n\t\tif ( x > 0.0 ) {\n\t\t\tz = x - ( 2.0*PIO2_1 );\n\t\t\ty[ 0 ] = z - TWO_PIO2_1T;\n\t\t\ty[ 1 ] = (z - y[0]) - TWO_PIO2_1T;\n\t\t\treturn 2;\n\t\t}\n\t\tz = x + ( 2.0*PIO2_1 );\n\t\ty[ 0 ] = z + TWO_PIO2_1T;\n\t\ty[ 1 ] = (z - y[0]) + TWO_PIO2_1T;\n\t\treturn -2;\n\t}\n\t// Case: |x| ~<= 9π/4\n\tif ( ix <= NINE_PIO4_HIGH_WORD ) {\n\t\t// Case: |x| ~<= 7π/4\n\t\tif ( ix <= SEVEN_PIO4_HIGH_WORD ) {\n\t\t\t// Case: |x| ~= 3π/2\n\t\t\tif ( ix === THREE_PIO2_HIGH_WORD ) {\n\t\t\t\treturn rempio2Medium( x, ix, y );\n\t\t\t}\n\t\t\tif ( x > 0.0 ) {\n\t\t\t\tz = x - ( 3.0*PIO2_1 );\n\t\t\t\ty[ 0 ] = z - THREE_PIO2_1T;\n\t\t\t\ty[ 1 ] = (z - y[0]) - THREE_PIO2_1T;\n\t\t\t\treturn 3;\n\t\t\t}\n\t\t\tz = x + ( 3.0*PIO2_1 );\n\t\t\ty[ 0 ] = z + THREE_PIO2_1T;\n\t\t\ty[ 1 ] = (z - y[0]) + THREE_PIO2_1T;\n\t\t\treturn -3;\n\t\t}\n\t\t// Case: |x| ~= 4π/2\n\t\tif ( ix === TWO_PI_HIGH_WORD ) {\n\t\t\treturn rempio2Medium( x, ix, y );\n\t\t}\n\t\tif ( x > 0.0 ) {\n\t\t\tz = x - ( 4.0*PIO2_1 );\n\t\t\ty[ 0 ] = z - FOUR_PIO2_1T;\n\t\t\ty[ 1 ] = (z - y[0]) - FOUR_PIO2_1T;\n\t\t\treturn 4;\n\t\t}\n\t\tz = x + ( 4.0*PIO2_1 );\n\t\ty[ 0 ] = z + FOUR_PIO2_1T;\n\t\ty[ 1 ] = (z - y[0]) + FOUR_PIO2_1T;\n\t\treturn -4;\n\t}\n\t// Case: |x| ~< 2^20*π/2 (medium size)\n\tif ( ix < MEDIUM ) {\n\t\treturn rempio2Medium( x, ix, y );\n\t}\n\t// Case: x is NaN or infinity\n\tif ( ix >= EXPONENT_MASK ) {\n\t\ty[ 0 ] = NaN;\n\t\ty[ 1 ] = NaN;\n\t\treturn 0.0;\n\t}\n\t// Set z = scalbn(|x|, ilogb(x)-23)...\n\tlow = getLowWord( x );\n\te0 = (ix >> 20) - 1046; // `e0 = ilogb(z) - 23` => unbiased exponent minus 23\n\tz = fromWords( ix - ((e0 << 20)|0), low );\n\tfor ( i = 0; i < 2; i++ ) {\n\t\tTX[ i ] = z|0;\n\t\tz = (z - TX[i]) * TWO24;\n\t}\n\tTX[ 2 ] = z;\n\tnx = 3;\n\twhile ( TX[ nx-1 ] === ZERO ) {\n\t\t// Skip zero term...\n\t\tnx -= 1;\n\t}\n\tn = rempio2Kernel( TX, TY, e0, nx, 1 );\n\tif ( x < 0.0 ) {\n\t\ty[ 0 ] = -TY[ 0 ];\n\t\ty[ 1 ] = -TY[ 1 ];\n\t\treturn -n;\n\t}\n\ty[ 0 ] = TY[ 0 ];\n\ty[ 1 ] = TY[ 1 ];\n\treturn n;\n}\n\n\n// EXPORTS //\n\nmodule.exports = rempio2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_sin.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar kernelCos = require( './../../../../base/special/kernel-cos' );\nvar kernelSin = require( './../../../../base/special/kernel-sin' );\nvar rempio2 = require( './../../../../base/special/rempio2' );\n\n\n// VARIABLES //\n\n// Absolute value mask: 0x7fffffff = 2147483647 => 01111111111111111111111111111111\nvar ABS_MASK = 0x7fffffff|0; // asm type annotation\n\n// Exponent mask: 0x7ff00000 = 2146435072 => 01111111111100000000000000000000\nvar EXPONENT_MASK = 0x7ff00000|0; // asm type annotation\n\n// High word for PI/4: 0x3fe921fb = 1072243195 => 00111111111010010010000111111011\nvar PIO4_HIGH_WORD = 0x3fe921fb|0; // asm type annotation\n\n// 2^-26 = 1.4901161193847656e-8 => 0011111001010000000000000000000000000000000000000000000000000000 => high word => 00111110010100000000000000000000 => 0x3e500000 = 1045430272\nvar SMALL_HIGH_WORD = 0x3e500000|0; // asm type annotation\n\n// Array for storing remainder elements:\nvar Y = [ 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Computes the sine of a number.\n*\n* ## Method\n*\n* -   Let \\\\(S\\\\), \\\\(C\\\\), and \\\\(T\\\\) denote the \\\\(\\sin\\\\), \\\\(\\cos\\\\), and \\\\(\\tan\\\\), respectively, on \\\\(\\[-\\pi/4, +\\pi/4\\]\\\\).\n*\n* -   Reduce the argument \\\\(x\\\\) to \\\\(y1+y2 = x-k\\pi/2\\\\) in \\\\(\\[-\\pi/4, +\\pi/4\\]\\\\), and let \\\\(n = k \\mod 4\\\\).\n*\n* -   We have\n*\n*     | n | sin(x) | cos(x) | tan(x) |\n*     | - | ------ | ------ | ------ |\n*     | 0 |   S    |   C    |    T   |\n*     | 1 |   C    |  -S    |  -1/T  |\n*     | 2 |  -S    |  -C    |    T   |\n*     | 3 |  -C    |   S    |  -1/T  |\n*\n*\n* @param {number} x - input value (in radians)\n* @returns {number} sine\n*\n* @example\n* var v = sin( 0.0 );\n* // returns ~0.0\n*\n* @example\n* var v = sin( 3.141592653589793/2.0 );\n* // returns ~1.0\n*\n* @example\n* var v = sin( -3.141592653589793/6.0 );\n* // returns ~-0.5\n*\n* @example\n* var v = sin( NaN );\n* // returns NaN\n*/\nfunction sin( x ) {\n\tvar ix;\n\tvar n;\n\n\tix = getHighWord( x );\n\tix &= ABS_MASK;\n\n\t// Case: |x| ~< π/4\n\tif ( ix <= PIO4_HIGH_WORD ) {\n\t\t// Case: |x| ~< 2^-26\n\t\tif ( ix < SMALL_HIGH_WORD ) {\n\t\t\treturn x;\n\t\t}\n\t\treturn kernelSin( x, 0.0 );\n\t}\n\t// Case: x is NaN or infinity\n\tif ( ix >= EXPONENT_MASK ) {\n\t\treturn NaN;\n\t}\n\t// Argument reduction...\n\tn = rempio2( x, Y );\n\tswitch ( n & 3 ) {\n\tcase 0:\n\t\treturn kernelSin( Y[ 0 ], Y[ 1 ] );\n\tcase 1:\n\t\treturn kernelCos( Y[ 0 ], Y[ 1 ] );\n\tcase 2:\n\t\treturn -kernelSin( Y[ 0 ], Y[ 1 ] );\n\tdefault:\n\t\treturn -kernelCos( Y[ 0 ], Y[ 1 ] );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = sin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute `x - nπ/2 = r`.\n*\n* @module @stdlib/math/base/special/rempio2\n*\n* @example\n* var rempio2 = require( '@stdlib/math/base/special/rempio2' );\n*\n* var y = [ 0.0, 0.0 ];\n* var n = rempio2( 128.0, y );\n* // returns 81\n*\n* var y1 = y[ 0 ];\n* // returns ~0.765\n*\n* var y2 = y[ 1 ];\n* // returns ~3.618e-17\n*/\n\n// MODULES //\n\nvar rempio2 = require( './rempio2.js' );\n\n\n// EXPORTS //\n\nmodule.exports = rempio2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the sine of a number.\n*\n* @module @stdlib/math/base/special/sin\n*\n* @example\n* var sin = require( '@stdlib/math/base/special/sin' );\n*\n* var v = sin( 0.0 );\n* // returns ~0.0\n*\n* v = sin( 3.141592653589793/2.0 );\n* // returns ~1.0\n*\n* v = sin( -3.141592653589793/6.0 );\n* // returns ~-0.5\n*\n* v = sin( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar sin = require( './sin.js' );\n\n\n// EXPORTS //\n\nmodule.exports = sin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.08333333333334822;\n\t}\n\treturn 0.08333333333334822 + (x * (0.0034722222160545866 + (x * (-0.0026813261780578124 + (x * (-0.00022954996161337813 + (x * 0.0007873113957930937))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C code, copyright, license, and constants are from [Cephes]{@link http://www.netlib.org/cephes}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright 1984, 1987, 1989, 1992, 2000 by Stephen L. Moshier\n*\n* Some software in this archive may be from the book _Methods and Programs for Mathematical Functions_ (Prentice-Hall or Simon & Schuster International, 1989) or from the Cephes Mathematical Library, a commercial product. In either event, it is copyrighted by the author. What you see here may be used freely but it comes with no support or guarantee.\n*\n* Stephen L. Moshier\n* moshier@na-net.ornl.gov\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar SQRT_TWO_PI = require( '@stdlib/constants/float64/sqrt-two-pi' );\nvar pow = require( './../../../../base/special/pow' );\nvar exp = require( './../../../../base/special/exp' );\nvar polyval = require( './polyval_s.js' );\n\n\n// VARIABLES //\n\nvar MAX_STIRLING = 143.01608;\n\n\n// MAIN //\n\n/**\n* Evaluates the gamma function using Stirling's formula. The polynomial is valid for \\\\(33 \\leq x \\leq 172\\\\).\n*\n* @private\n* @param {number} x - input value\n* @returns {number} function value\n*/\nfunction gamma( x ) {\n\tvar w;\n\tvar y;\n\tvar v;\n\n\tw = 1.0 / x;\n\tw = 1.0 + ( w * polyval( w ) );\n\ty = exp( x );\n\n\t// Check `x` to avoid `pow()` overflow...\n\tif ( x > MAX_STIRLING ) {\n\t\tv = pow( x, ( 0.5*x ) - 0.25 );\n\t\ty = v * (v/y);\n\t} else {\n\t\ty = pow( x, x-0.5 ) / y;\n\t}\n\treturn SQRT_TWO_PI * y * w;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gamma;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn 1.0;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 1.0 + (x * (0.4942148268014971 + (x * (0.20744822764843598 + (x * (0.04763678004571372 + (x * (0.010421379756176158 + (x * (0.0011913514700658638 + (x * (0.00016011952247675185 + (x * 0.0))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (0.0714304917030273 + (x * (-0.23459179571824335 + (x * (0.035823639860549865 + (x * (0.011813978522206043 + (x * (-0.004456419138517973 + (x * (0.0005396055804933034 + (x * -0.000023158187332412014))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.0 + (x * (0.00016011952247675185 + (x * (0.0011913514700658638 + (x * (0.010421379756176158 + (x * (0.04763678004571372 + (x * (0.20744822764843598 + (x * (0.4942148268014971 + (x * 1.0))))))))))))); // eslint-disable-line max-len\n\t\ts2 = -0.000023158187332412014 + (x * (0.0005396055804933034 + (x * (-0.004456419138517973 + (x * (0.011813978522206043 + (x * (0.035823639860549865 + (x * (-0.23459179571824335 + (x * (0.0714304917030273 + (x * 1.0))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C code, long comment, copyright, license, and constants are from [Cephes]{@link http://www.netlib.org/cephes}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright 1984, 1987, 1989, 1992, 2000 by Stephen L. Moshier\n*\n* Some software in this archive may be from the book _Methods and Programs for Mathematical Functions_ (Prentice-Hall or Simon & Schuster International, 1989) or from the Cephes Mathematical Library, a commercial product. In either event, it is copyrighted by the author. What you see here may be used freely but it comes with no support or guarantee.\n*\n* Stephen L. Moshier\n* moshier@na-net.ornl.gov\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar isInteger = require( './../../../../base/assert/is-integer' );\nvar isNegativeZero = require( './../../../../base/assert/is-negative-zero' );\nvar abs = require( './../../../../base/special/abs' );\nvar floor = require( './../../../../base/special/floor' );\nvar sin = require( './../../../../base/special/sin' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar PI = require( '@stdlib/constants/float64/pi' );\nvar stirlingApprox = require( './stirling_approximation.js' );\nvar smallApprox = require( './small_approximation.js' );\nvar rateval = require( './rational_pq.js' );\n\n\n// MAIN //\n\n/**\n* Evaluates the gamma function.\n*\n* ## Method\n*\n* 1.  Arguments \\\\(|x| \\leq 34\\\\) are reduced by recurrence and the function approximated by a rational function of degree \\\\(6/7\\\\) in the interval \\\\((2,3)\\\\).\n* 2.  Large negative arguments are made positive using a reflection formula.\n* 3.  Large arguments are handled by Stirling's formula.\n*\n*\n* ## Notes\n*\n* -   Relative error:\n*\n*     | arithmetic | domain    | # trials | peak    | rms     |\n*     |:----------:|:---------:|:--------:|:-------:|:-------:|\n*     | DEC        | -34,34    | 10000    | 1.3e-16 | 2.5e-17 |\n*     | IEEE       | -170,-33  | 20000    | 2.3e-15 | 3.3e-16 |\n*     | IEEE       | -33, 33   | 20000    | 9.4e-16 | 2.2e-16 |\n*     | IEEE       | 33, 171.6 | 20000    | 2.3e-15 | 3.2e-16 |\n*\n* -   Error for arguments outside the test range will be larger owing to error amplification by the exponential function.\n*\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = gamma( 4.0 );\n* // returns 6.0\n*\n* @example\n* var v = gamma( -1.5 );\n* // returns ~2.363\n*\n* @example\n* var v = gamma( -0.5 );\n* // returns ~-3.545\n*\n* @example\n* var v = gamma( 0.5 );\n* // returns ~1.772\n*\n* @example\n* var v = gamma( 0.0 );\n* // returns Infinity\n*\n* @example\n* var v = gamma( -0.0 );\n* // returns -Infinity\n*\n* @example\n* var v = gamma( NaN );\n* // returns NaN\n*/\nfunction gamma( x ) {\n\tvar sign;\n\tvar q;\n\tvar p;\n\tvar z;\n\tif (\n\t\t(isInteger( x ) && x < 0) ||\n\t\tx === NINF ||\n\t\tisnan( x )\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x === 0.0 ) {\n\t\tif ( isNegativeZero( x ) ) {\n\t\t\treturn NINF;\n\t\t}\n\t\treturn PINF;\n\t}\n\tif ( x > 171.61447887182298 ) {\n\t\treturn PINF;\n\t}\n\tif ( x < -170.5674972726612 ) {\n\t\treturn 0.0;\n\t}\n\tq = abs( x );\n\tif ( q > 33.0 ) {\n\t\tif ( x >= 0.0 ) {\n\t\t\treturn stirlingApprox( x );\n\t\t}\n\t\tp = floor( q );\n\n\t\t// Check whether `x` is even...\n\t\tif ( (p&1) === 0 ) {\n\t\t\tsign = -1.0;\n\t\t} else {\n\t\t\tsign = 1.0;\n\t\t}\n\t\tz = q - p;\n\t\tif ( z > 0.5 ) {\n\t\t\tp += 1.0;\n\t\t\tz = q - p;\n\t\t}\n\t\tz = q * sin( PI * z );\n\t\treturn sign * PI / ( abs(z)*stirlingApprox(q) );\n\t}\n\t// Reduce `x`...\n\tz = 1.0;\n\twhile ( x >= 3.0 ) {\n\t\tx -= 1.0;\n\t\tz *= x;\n\t}\n\twhile ( x < 0.0 ) {\n\t\tif ( x > -1.0e-9 ) {\n\t\t\treturn smallApprox( x, z );\n\t\t}\n\t\tz /= x;\n\t\tx += 1.0;\n\t}\n\twhile ( x < 2.0 ) {\n\t\tif ( x < 1.0e-9 ) {\n\t\t\treturn smallApprox( x, z );\n\t\t}\n\t\tz /= x;\n\t\tx += 1.0;\n\t}\n\tif ( x === 2.0 ) {\n\t\treturn z;\n\t}\n\tx -= 2.0;\n\treturn z * rateval( x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gamma;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C code, copyright, license, and constants are from [Cephes]{@link http://www.netlib.org/cephes}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright 1984, 1987, 1989, 1992, 2000 by Stephen L. Moshier\n*\n* Some software in this archive may be from the book _Methods and Programs for Mathematical Functions_ (Prentice-Hall or Simon & Schuster International, 1989) or from the Cephes Mathematical Library, a commercial product. In either event, it is copyrighted by the author. What you see here may be used freely but it comes with no support or guarantee.\n*\n* Stephen L. Moshier\n* moshier@na-net.ornl.gov\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar EULER = require( '@stdlib/constants/float64/eulergamma' );\n\n\n// MAIN //\n\n/**\n* Evaluates the gamma function using a small-value approximation.\n*\n* @private\n* @param {number} x - input value\n* @param {number} z - scale factor\n* @returns {number} function value\n*/\nfunction gamma( x, z ) {\n\treturn z / ( (1.0+( EULER*x )) * x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gamma;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The Euler-Mascheroni constant.\n*\n* @module @stdlib/constants/float64/eulergamma\n* @type {number}\n*\n* @example\n* var GAMMA = require( '@stdlib/constants/float64/eulergamma' );\n* // returns 0.5772156649015329\n*/\n\n\n// MAIN //\n\n/**\n* The Euler-Mascheroni constant.\n*\n* @constant\n* @type {number}\n* @default 0.5772156649015329\n* @see [OEIS]{@link http://oeis.org/A001620}\n* @see [Mathworld]{@link http://mathworld.wolfram.com/Euler-MascheroniConstant.html}\n*/\nvar GAMMA = 0.577215664901532860606512090082402431042;\n\n\n// EXPORTS //\n\nmodule.exports = GAMMA;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the gamma function.\n*\n* @module @stdlib/math/base/special/gamma\n*\n* @example\n* var gamma = require( '@stdlib/math/base/special/gamma' );\n*\n* var v = gamma( 4.0 );\n* // returns 6.0\n*\n* v = gamma( -1.5 );\n* // returns ~2.363\n*\n* v = gamma( -0.5 );\n* // returns ~-3.545\n*\n* v = gamma( 0.5 );\n* // returns ~1.772\n*\n* v = gamma( 0.0 );\n* // returns Infinity\n*\n* v = gamma( -0.0 );\n* // returns -Infinity\n*\n* v = gamma( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar gamma = require( './gamma.js' );\n\n\n// EXPORTS //\n\nmodule.exports = gamma;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar isInteger = require( './../../../../base/assert/is-integer' );\nvar gamma = require( './../../../../base/special/gamma' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar FACTORIALS = require( './factorials.json' );\n\n\n// VARIABLES //\n\nvar MAX_FACTORIAL = 170; // TODO: consider extracting as a constant\n\n\n// MAIN //\n\n/**\n* Evaluates the factorial of `x`.\n*\n* @param {number} x - input value\n* @returns {number} factorial\n*\n* @example\n* var v = factorial( 3.0 );\n* // returns 6.0\n*\n* @example\n* var v = factorial( -1.5 );\n* // returns ~-3.545\n*\n* @example\n* var v = factorial( -0.5 );\n* // returns ~1.772\n*\n* @example\n* var v = factorial( 0.5 );\n* // returns ~0.886\n*\n* @example\n* var v = factorial( -10.0 );\n* // returns NaN\n*\n* @example\n* var v = factorial( 171.0 );\n* // returns Infinity\n*\n* @example\n* var v = factorial( NaN );\n* // returns NaN\n*/\nfunction factorial( x ) {\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( isInteger( x ) ) {\n\t\tif ( x < 0 ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x <= MAX_FACTORIAL ) {\n\t\t\treturn FACTORIALS[ x ];\n\t\t}\n\t\treturn PINF;\n\t}\n\treturn gamma( x + 1.0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = factorial;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the factorial function.\n*\n* @module @stdlib/math/base/special/factorial\n*\n* @example\n* var factorial = require( '@stdlib/math/base/special/factorial' );\n*\n* var v = factorial( 3.0 );\n* // returns 6.0\n*\n* v = factorial( -1.5 );\n* // returns ~-3.545\n*\n* v = factorial( -0.5 );\n* // returns ~1.772\n*\n* v = factorial( 0.5 );\n* // returns ~0.886\n*\n* v = factorial( -10.0 );\n* // returns NaN\n*\n* v = factorial( 171.0 );\n* // returns Infinity\n*\n* v = factorial( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar factorial = require( './factorial.js' );\n\n\n// EXPORTS //\n\nmodule.exports = factorial;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn Infinity;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 38474670393.31777 + (x * (36857665043.51951 + (x * (15889202453.72942 + (x * (4059208354.298835 + (x * (680547661.1834733 + (x * (78239755.00312005 + (x * (6246580.776401795 + (x * (341986.3488721347 + (x * (12287.194511824551 + (x * (261.61404416416684 + (x * 2.5066282746310007))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.0 + (x * (362880.0 + (x * (1026576.0 + (x * (1172700.0 + (x * (723680.0 + (x * (269325.0 + (x * (63273.0 + (x * (9450.0 + (x * (870.0 + (x * (45.0 + (x * 1.0))))))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 2.5066282746310007 + (x * (261.61404416416684 + (x * (12287.194511824551 + (x * (341986.3488721347 + (x * (6246580.776401795 + (x * (78239755.00312005 + (x * (680547661.1834733 + (x * (4059208354.298835 + (x * (15889202453.72942 + (x * (36857665043.51951 + (x * 38474670393.31777))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (45.0 + (x * (870.0 + (x * (9450.0 + (x * (63273.0 + (x * (269325.0 + (x * (723680.0 + (x * (1172700.0 + (x * (1026576.0 + (x * (362880.0 + (x * 0.0))))))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Arbitrary constant `g` to be used in Lanczos approximation functions.\n*\n* @module @stdlib/constants/float64/gamma-lanczos-g\n* @type {number}\n*\n* @example\n* var FLOAT64_GAMMA_LANCZOS_G = require( '@stdlib/constants/float64/gamma-lanczos-g' );\n* // returns 10.900511\n*/\n\n\n// MAIN //\n\n/**\n* Arbitrary constant `g` to be used in Lanczos approximation functions.\n*\n* @constant\n* @type {number}\n* @default 10.900511\n* @see [Lanczos Approximation]{@link https://en.wikipedia.org/wiki/Lanczos_approximation}\n*/\nvar FLOAT64_GAMMA_LANCZOS_G = 10.90051099999999983936049829935654997826;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_GAMMA_LANCZOS_G;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006-7, 2013-14.\n* Copyright Paul A. Bristow 2007, 2013-14.\n* Copyright Nikhar Agrawal 2013-14.\n* Copyright Christopher Kormanyos 2013-14.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar lanczosSum = require( './../../../../base/special/gamma-lanczos-sum' );\nvar gamma = require( './../../../../base/special/gamma' );\nvar log1p = require( './../../../../base/special/log1p' );\nvar abs = require( './../../../../base/special/abs' );\nvar exp = require( './../../../../base/special/exp' );\nvar pow = require( './../../../../base/special/pow' );\nvar EPSILON = require( '@stdlib/constants/float64/eps' );\nvar E = require( '@stdlib/constants/float64/e' );\nvar G = require( '@stdlib/constants/float64/gamma-lanczos-g' );\n\n\n// VARIABLES //\n\nvar MAX_FACTORIAL = 170; // TODO: consider moving to pkg\nvar FACTORIAL_169 = 4.269068009004705e+304;\n\n\n// MAIN //\n\n/**\n* Calculates the ratio of two gamma functions via Lanczos approximation.\n*\n* ## Notes\n*\n* -   When \\\\( z < \\epsilon \\\\), we get spurious numeric overflow unless we're very careful. This can occur either inside `lanczosSum(z)` or in the final combination of terms. To avoid this, split the product up into 2 (or 3) parts:\n*\n*     ```tex\n*     \\begin{align*}\n*     G(z) / G(L) &= 1 / (z \\cdot G(L)) ; z < \\eps, L = z + \\delta = \\delta \\\\\n*     z * G(L) &= z * G(lim) \\cdot (G(L)/G(lim)) ; lim = \\text{largest factorial}\n*     \\end{align*}\n*     ```\n*\n* @private\n* @param {number} z - first gamma parameter\n* @param {number} delta - difference\n* @returns {number} gamma ratio\n*/\nfunction gammaDeltaRatioLanczos( z, delta ) {\n\tvar result;\n\tvar ratio;\n\tvar zgh;\n\n\tif ( z < EPSILON ) {\n\t\tif ( delta > MAX_FACTORIAL ) {\n\t\t\tratio = gammaDeltaRatioLanczos( delta, MAX_FACTORIAL-delta );\n\t\t\tratio *= z;\n\t\t\tratio *= FACTORIAL_169;\n\t\t\treturn 1.0 / ratio;\n\t\t}\n\t\treturn 1.0 / ( z * gamma( z+delta ) );\n\t}\n\tzgh = z + G - 0.5;\n\tif ( z + delta === z ) {\n\t\tif ( abs(delta) < 10.0 ) {\n\t\t\tresult = exp( ( 0.5-z ) * log1p( delta/zgh ) );\n\t\t} else {\n\t\t\tresult = 1.0;\n\t\t}\n\t} else {\n\t\tif ( abs(delta) < 10.0 ) {\n\t\t\tresult = exp( ( 0.5-z ) * log1p( delta/zgh ));\n\t\t} else {\n\t\t\tresult = pow( zgh / (zgh+delta), z-0.5 );\n\t\t}\n\t\t// Split up the calculation to avoid spurious overflow:\n\t\tresult *= lanczosSum( z ) / lanczosSum( z + delta );\n\t}\n\tresult *= pow( E / ( zgh+delta ), delta );\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gammaDeltaRatioLanczos;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006-7, 2013-14.\n* Copyright Paul A. Bristow 2007, 2013-14.\n* Copyright Nikhar Agrawal 2013-14.\n* Copyright Christopher Kormanyos 2013-14.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( './../../../../base/special/abs' );\nvar floor = require( './../../../../base/special/floor' );\nvar gamma = require( './../../../../base/special/gamma' );\nvar factorial = require( './../../../../base/special/factorial' );\nvar gammaDeltaRatioLanczos = require( './gamma_delta_ratio_lanczos.js' );\n\n\n// VARIABLES //\n\nvar MAX_FACTORIAL = 170; // TODO: consider moving to pkg\n\n\n// MAIN //\n\n/**\n* Computes the ratio of two gamma functions.\n*\n* ## Notes\n*\n* -   Specifically, the function evaluates\n*\n*     ```tex\n*     \\frac{ \\Gamma( z ) }{ \\Gamma( z + \\delta ) }\n*     ```\n*\n* @param {number} z - first gamma parameter\n* @param {number} delta - difference\n* @returns {number} gamma ratio\n*\n* @example\n* var y = gammaDeltaRatio( 2.0, 3.0 );\n* // returns ~0.042\n*\n* @example\n* var y = gammaDeltaRatio( 4.0, 0.5 );\n* // returns ~0.516\n*\n* @example\n* var y = gammaDeltaRatio( 100.0, 0.0 );\n* // returns 1.0\n*/\nfunction gammaDeltaRatio( z, delta ) {\n\tvar result;\n\tvar idelta;\n\tvar iz;\n\n\tif ( z <= 0.0 || z + delta <= 0.0 ) {\n\t\t// This isn't very sophisticated, or accurate, but it does work:\n\t\treturn gamma( z ) / gamma( z + delta );\n\t}\n\tidelta = floor( delta );\n\tif ( idelta === delta ) {\n\t\tiz = floor( z );\n\t\tif ( iz === z ) {\n\t\t\t// As both `z` and `delta` are integers, see if we can use a table lookup:\n\t\t\tif ( z <= MAX_FACTORIAL && ( z + delta <= MAX_FACTORIAL ) ) {\n\t\t\t\treturn factorial( iz - 1.0 ) / factorial( idelta + iz - 1.0 );\n\t\t\t}\n\t\t}\n\t\tif ( abs(delta) < 20.0 ) {\n\t\t\t// As `delta` is a small integer, we can use a finite product:\n\t\t\tif ( delta === 0.0 ) {\n\t\t\t\treturn 1.0;\n\t\t\t}\n\t\t\tif ( delta < 0.0 ) {\n\t\t\t\tz -= 1.0;\n\t\t\t\tresult = z;\n\t\t\t\tdelta += 1.0;\n\t\t\t\twhile ( delta !== 0.0 ) {\n\t\t\t\t\tz -= 1.0;\n\t\t\t\t\tresult *= z;\n\t\t\t\t\tdelta += 1.0;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tresult = 1.0 / z;\n\t\t\tdelta -= 1.0;\n\t\t\twhile ( delta !== 0.0 ) {\n\t\t\t\tz += 1.0;\n\t\t\t\tresult /= z;\n\t\t\t\tdelta -= 1.0;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn gammaDeltaRatioLanczos( z, delta );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gammaDeltaRatio;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Calculate the ratio of two gamma functions.\n*\n* @module @stdlib/math/base/special/gamma-delta-ratio\n*\n* @example\n* var gammaDeltaRatio = require( '@stdlib/math/base/special/gamma-delta-ratio' );\n*\n* var y = gammaDeltaRatio( 2.0, 3.0 );\n* // returns ~0.042\n*\n* y = gammaDeltaRatio( 4.0, 0.5 );\n* // returns 2.0\n*\n* y = gammaDeltaRatio( 100.0, 0.0 );\n* // returns 1.0\n*/\n\n// MODULES //\n\nvar gammaDeltaRatio = require( './gamma_delta_ratio.js' );\n\n\n// EXPORTS //\n\nmodule.exports = gammaDeltaRatio;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.6666666666666735;\n\t}\n\treturn 0.6666666666666735 + (x * (0.2857142874366239 + (x * (0.1818357216161805 + (x * 0.14798198605116586))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_log.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar BIAS = require( '@stdlib/constants/float64/exponent-bias' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar polyvalP = require( './polyval_p.js' );\nvar polyvalQ = require( './polyval_q.js' );\n\n\n// VARIABLES //\n\nvar LN2_HI = 6.93147180369123816490e-01; // 3FE62E42 FEE00000\nvar LN2_LO = 1.90821492927058770002e-10; // 3DEA39EF 35793C76\nvar TWO54 = 1.80143985094819840000e+16;  // 0x43500000, 0x00000000\nvar ONE_THIRD = 0.33333333333333333;\n\n// 0x000fffff = 1048575 => 0 00000000000 11111111111111111111\nvar HIGH_SIGNIFICAND_MASK = 0x000fffff|0; // asm type annotation\n\n// 0x7ff00000 = 2146435072 => 0 11111111111 00000000000000000000 => biased exponent: 2047 = 1023+1023 => 2^1023\nvar HIGH_MAX_NORMAL_EXP = 0x7ff00000|0; // asm type annotation\n\n// 0x00100000 = 1048576 => 0 00000000001 00000000000000000000 => biased exponent: 1 = -1022+1023 => 2^-1022\nvar HIGH_MIN_NORMAL_EXP = 0x00100000|0; // asm type annotation\n\n// 0x3ff00000 = 1072693248 => 0 01111111111 00000000000000000000 => biased exponent: 1023 = 0+1023 => 2^0 = 1\nvar HIGH_BIASED_EXP_0 = 0x3ff00000|0; // asm type annotation\n\n\n// MAIN //\n\n/**\n* Evaluates the natural logarithm.\n*\n* @param {NonNegativeNumber} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = ln( 4.0 );\n* // returns ~1.386\n*\n* @example\n* var v = ln( 0.0 );\n* // returns -Infinity\n*\n* @example\n* var v = ln( Infinity );\n* // returns Infinity\n*\n* @example\n* var v = ln( NaN );\n* // returns NaN\n*\n* @example\n* var v = ln( -4.0 );\n* // returns NaN\n*/\nfunction ln( x ) {\n\tvar hfsq;\n\tvar hx;\n\tvar t2;\n\tvar t1;\n\tvar k;\n\tvar R;\n\tvar f;\n\tvar i;\n\tvar j;\n\tvar s;\n\tvar w;\n\tvar z;\n\n\tif ( x === 0.0 ) {\n\t\treturn NINF;\n\t}\n\tif ( isnan( x ) || x < 0.0 ) {\n\t\treturn NaN;\n\t}\n\thx = getHighWord( x );\n\tk = 0|0; // asm type annotation\n\tif ( hx < HIGH_MIN_NORMAL_EXP ) {\n\t\t// Case: 0 < x < 2**-1022\n\t\tk -= 54|0; // asm type annotation\n\n\t\t// Subnormal number, scale up `x`:\n\t\tx *= TWO54;\n\t\thx = getHighWord( x );\n\t}\n\tif ( hx >= HIGH_MAX_NORMAL_EXP ) {\n\t\treturn x + x;\n\t}\n\tk += ( ( hx>>20 ) - BIAS )|0; // asm type annotation\n\thx &= HIGH_SIGNIFICAND_MASK;\n\ti = ( (hx+0x95f64) & 0x100000 )|0; // asm type annotation\n\n\t// Normalize `x` or `x/2`...\n\tx = setHighWord( x, hx|(i^HIGH_BIASED_EXP_0) );\n\tk += ( i>>20 )|0; // asm type annotation\n\tf = x - 1.0;\n\tif ( (HIGH_SIGNIFICAND_MASK&(2+hx)) < 3 ) {\n\t\t// Case: -2**-20 <= f < 2**-20\n\t\tif ( f === 0.0 ) {\n\t\t\tif ( k === 0 ) {\n\t\t\t\treturn 0.0;\n\t\t\t}\n\t\t\treturn (k * LN2_HI) + (k * LN2_LO);\n\t\t}\n\t\tR = f * f * ( 0.5 - (ONE_THIRD*f) );\n\t\tif ( k === 0 ) {\n\t\t\treturn f - R;\n\t\t}\n\t\treturn (k * LN2_HI) - ( (R-(k*LN2_LO)) - f );\n\t}\n\ts = f / (2.0 + f);\n\tz = s * s;\n\ti = ( hx - 0x6147a )|0; // asm type annotation\n\tw = z * z;\n\tj = ( 0x6b851 - hx )|0; // asm type annotation\n\tt1 = w * polyvalP( w );\n\tt2 = z * polyvalQ( w );\n\ti |= j;\n\tR = t2 + t1;\n\tif ( i > 0 ) {\n\t\thfsq = 0.5 * f * f;\n\t\tif ( k === 0 ) {\n\t\t\treturn f - ( hfsq - (s * (hfsq+R)) );\n\t\t}\n\t\treturn (k * LN2_HI) - ( hfsq - ((s*(hfsq+R))+(k*LN2_LO)) - f );\n\t}\n\tif ( k === 0 ) {\n\t\treturn f - (s*(f-R));\n\t}\n\treturn (k * LN2_HI) - ( ( (s*(f-R)) - (k*LN2_LO) ) - f );\n}\n\n\n// EXPORTS //\n\nmodule.exports = ln;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.3999999999940942;\n\t}\n\treturn 0.3999999999940942 + (x * (0.22222198432149784 + (x * 0.15313837699209373))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the natural logarithm.\n*\n* @module @stdlib/math/base/special/ln\n*\n* @example\n* var ln = require( '@stdlib/math/base/special/ln' );\n*\n* var v = ln( 4.0 );\n* // returns ~1.386\n*\n* v = ln( 0.0 );\n* // returns -Infinity\n*\n* v = ln( Infinity );\n* // returns Infinity\n*\n* v = ln( NaN );\n* // returns NaN\n*\n* v = ln( -4.0 );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar ln = require( './ln.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ln;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_cos.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar kernelCos = require( './../../../../base/special/kernel-cos' );\nvar kernelSin = require( './../../../../base/special/kernel-sin' );\nvar rempio2 = require( './../../../../base/special/rempio2' );\n\n\n// VARIABLES //\n\n// Scratch array for storing temporary values:\nvar buffer = [ 0.0, 0.0 ]; // WARNING: not thread safe\n\n// High word absolute value mask: 0x7fffffff => 01111111111111111111111111111111\nvar HIGH_WORD_ABS_MASK = 0x7fffffff|0; // asm type annotation\n\n// High word of π/4: 0x3fe921fb => 00111111111010010010000111111011\nvar HIGH_WORD_PIO4 = 0x3fe921fb|0; // asm type annotation\n\n// High word of 2^-27: 0x3e400000 => 00111110010000000000000000000000\nvar HIGH_WORD_TWO_NEG_27 = 0x3e400000|0; // asm type annotation\n\n// High word exponent mask: 0x7ff00000 => 01111111111100000000000000000000\nvar HIGH_WORD_EXPONENT_MASK = 0x7ff00000|0; // asm type annotation\n\n\n// MAIN //\n\n/**\n* Computes the cosine of a number.\n*\n* @param {number} x - input value (in radians)\n* @returns {number} cosine\n*\n* @example\n* var v = cos( 0.0 );\n* // returns 1.0\n*\n* @example\n* var v = cos( 3.141592653589793/4.0 );\n* // returns ~0.707\n*\n* @example\n* var v = cos( -3.141592653589793/6.0 );\n* // returns ~0.866\n*\n* @example\n* var v = cos( NaN );\n* // returns NaN\n*/\nfunction cos( x ) {\n\tvar ix;\n\tvar n;\n\n\tix = getHighWord( x );\n\tix &= HIGH_WORD_ABS_MASK;\n\n\t// Case: |x| ~< pi/4\n\tif ( ix <= HIGH_WORD_PIO4 ) {\n\t\t// Case: x < 2**-27\n\t\tif ( ix < HIGH_WORD_TWO_NEG_27 ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\treturn kernelCos( x, 0.0 );\n\t}\n\t// Case: cos(Inf or NaN) is NaN */\n\tif ( ix >= HIGH_WORD_EXPONENT_MASK ) {\n\t\treturn NaN;\n\t}\n\t// Case: Argument reduction needed...\n\tn = rempio2( x, buffer );\n\tswitch ( n & 3 ) {\n\tcase 0:\n\t\treturn kernelCos( buffer[ 0 ], buffer[ 1 ] );\n\tcase 1:\n\t\treturn -kernelSin( buffer[ 0 ], buffer[ 1 ] );\n\tcase 2:\n\t\treturn -kernelCos( buffer[ 0 ], buffer[ 1 ] );\n\tdefault:\n\t\treturn kernelSin( buffer[ 0 ], buffer[ 1 ] );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = cos;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the cosine of a number.\n*\n* @module @stdlib/math/base/special/cos\n*\n* @example\n* var cos = require( '@stdlib/math/base/special/cos' );\n*\n* var v = cos( 0.0 );\n* // returns 1.0\n*\n* v = cos( 3.141592653589793/4.0 );\n* // returns ~0.707\n*\n* v = cos( -3.141592653589793/6.0 );\n* // returns ~0.866\n*/\n\n// MODULES //\n\nvar cos = require( './cos.js' );\n\n\n// EXPORTS //\n\nmodule.exports = cos;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* Notes:\n*\t=> sin(-x) = -sin(x)\n*\t=> sin(+n) = +0, where `n` is a positive integer\n*\t=> sin(-n) = -sin(+n) = -0, where `n` is a positive integer\n*\t=> cos(-x) = cos(x)\n*/\n\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar isInfinite = require( './../../../../base/assert/is-infinite' );\nvar cos = require( './../../../../base/special/cos' );\nvar sin = require( './../../../../base/special/sin' );\nvar abs = require( './../../../../base/special/abs' );\nvar copysign = require( './../../../../base/special/copysign' );\nvar PI = require( '@stdlib/constants/float64/pi' );\n\n\n// MAIN //\n\n/**\n* Computes the value of `sin(πx)`.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var y = sinpi( 0.0 );\n* // returns 0.0\n*\n* @example\n* var y = sinpi( 0.5 );\n* // returns 1.0\n*\n* @example\n* var y = sinpi( 0.9 );\n* // returns ~0.309\n*\n* @example\n* var y = sinpi( NaN );\n* // returns NaN\n*/\nfunction sinpi( x ) {\n\tvar ar;\n\tvar r;\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( isInfinite( x ) ) {\n\t\treturn NaN;\n\t}\n\t// Argument reduction (reduce to [0,2))...\n\tr = x % 2.0; // sign preserving\n\tar = abs( r );\n\n\t// If `x` is an integer, the mod is an integer...\n\tif ( ar === 0.0 || ar === 1.0 ) {\n\t\treturn copysign( 0.0, r );\n\t}\n\tif ( ar < 0.25 ) {\n\t\treturn sin( PI*r );\n\t}\n\t// In each of the following, we further reduce to [-π/4,π/4)...\n\tif ( ar < 0.75 ) {\n\t\tar = 0.5 - ar;\n\t\treturn copysign( cos( PI*ar ), r );\n\t}\n\tif ( ar < 1.25 ) {\n\t\tr = copysign( 1.0, r ) - r;\n\t\treturn sin( PI*r );\n\t}\n\tif ( ar < 1.75 ) {\n\t\tar -= 1.5;\n\t\treturn -copysign( cos( PI*ar ), r );\n\t}\n\tr -= copysign( 2.0, r );\n\treturn sin( PI*r );\n}\n\n\n// EXPORTS //\n\nmodule.exports = sinpi;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the value of `sin(πx)`.\n*\n* @module @stdlib/math/base/special/sinpi\n*\n* @example\n* var sinpi = require( '@stdlib/math/base/special/sinpi' );\n*\n* var y = sinpi( 0.0 );\n* // returns 0.0\n*\n* y = sinpi( 0.5 );\n* // returns 1.0\n*\n* y = sinpi( 0.9 );\n* // returns ~0.309\n*\n* y = sinpi( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar sinpi = require( './sinpi.js' );\n\n\n// EXPORTS //\n\nmodule.exports = sinpi;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.06735230105312927;\n\t}\n\treturn 0.06735230105312927 + (x * (0.007385550860814029 + (x * (0.0011927076318336207 + (x * (0.00022086279071390839 + (x * 0.000025214456545125733))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.020580808432516733;\n\t}\n\treturn 0.020580808432516733 + (x * (0.0028905138367341563 + (x * (0.0005100697921535113 + (x * (0.00010801156724758394 + (x * 0.000044864094961891516))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 1.3920053346762105;\n\t}\n\treturn 1.3920053346762105 + (x * (0.7219355475671381 + (x * (0.17193386563280308 + (x * (0.01864591917156529 + (x * (0.0007779424963818936 + (x * 0.000007326684307446256))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.21498241596060885;\n\t}\n\treturn 0.21498241596060885 + (x * (0.325778796408931 + (x * (0.14635047265246445 + (x * (0.02664227030336386 + (x * (0.0018402845140733772 + (x * 0.00003194753265841009))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.032788541075985965;\n\t}\n\treturn -0.032788541075985965 + (x * (0.006100538702462913 + (x * (-0.0014034646998923284 + (x * 0.00031563207090362595))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.01797067508118204;\n\t}\n\treturn 0.01797067508118204 + (x * (-0.0036845201678113826 + (x * (0.000881081882437654 + (x * -0.00031275416837512086))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.010314224129834144;\n\t}\n\treturn -0.010314224129834144 + (x * (0.0022596478090061247 + (x * (-0.0005385953053567405 + (x * 0.0003355291926355191))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.6328270640250934;\n\t}\n\treturn 0.6328270640250934 + (x * (1.4549225013723477 + (x * (0.9777175279633727 + (x * (0.22896372806469245 + (x * 0.013381091853678766))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 2.4559779371304113;\n\t}\n\treturn 2.4559779371304113 + (x * (2.128489763798934 + (x * (0.7692851504566728 + (x * (0.10422264559336913 + (x * 0.003217092422824239))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.08333333333333297;\n\t}\n\treturn 0.08333333333333297 + (x * (-0.0027777777772877554 + (x * (0.0007936505586430196 + (x * (-0.00059518755745034 + (x * (0.0008363399189962821 + (x * -0.0016309293409657527))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_lgamma_r.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar isInfinite = require( './../../../../base/assert/is-infinite' );\nvar abs = require( './../../../../base/special/abs' );\nvar ln = require( './../../../../base/special/ln' );\nvar trunc = require( './../../../../base/special/trunc' );\nvar sinpi = require( './../../../../base/special/sinpi' );\nvar PI = require( '@stdlib/constants/float64/pi' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar polyvalA1 = require( './polyval_a1.js' );\nvar polyvalA2 = require( './polyval_a2.js' );\nvar polyvalR = require( './polyval_r.js' );\nvar polyvalS = require( './polyval_s.js' );\nvar polyvalT1 = require( './polyval_t1.js' );\nvar polyvalT2 = require( './polyval_t2.js' );\nvar polyvalT3 = require( './polyval_t3.js' );\nvar polyvalU = require( './polyval_u.js' );\nvar polyvalV = require( './polyval_v.js' );\nvar polyvalW = require( './polyval_w.js' );\n\n\n// VARIABLES //\n\nvar A1C = 7.72156649015328655494e-02; // 0x3FB3C467E37DB0C8\nvar A2C = 3.22467033424113591611e-01; // 0x3FD4A34CC4A60FAD\nvar RC = 1.0;\nvar SC = -7.72156649015328655494e-02; // 0xBFB3C467E37DB0C8\nvar T1C = 4.83836122723810047042e-01; // 0x3FDEF72BC8EE38A2\nvar T2C = -1.47587722994593911752e-01; // 0xBFC2E4278DC6C509\nvar T3C = 6.46249402391333854778e-02; // 0x3FB08B4294D5419B\nvar UC = -7.72156649015328655494e-02; // 0xBFB3C467E37DB0C8\nvar VC = 1.0;\nvar WC = 4.18938533204672725052e-01; // 0x3FDACFE390C97D69\nvar YMIN = 1.461632144968362245;\nvar TWO52 = 4503599627370496; // 2**52\nvar TWO58 = 288230376151711744; // 2**58\nvar TINY = 8.470329472543003e-22;\nvar TC = 1.46163214496836224576e+00; // 0x3FF762D86356BE3F\nvar TF = -1.21486290535849611461e-01; // 0xBFBF19B9BCC38A42\nvar TT = -3.63867699703950536541e-18; // 0xBC50C7CAA48A971F => TT = -(tail of TF)\n\n\n// MAIN //\n\n/**\n* Evaluates the natural logarithm of the gamma function.\n*\n* ## Method\n*\n* 1.  Argument reduction for \\\\(0 < x \\leq 8\\\\). Since \\\\(\\Gamma(1+s) = s \\Gamma(s)\\\\), for \\\\(x \\in \\[0,8]\\\\), we may reduce \\\\(x\\\\) to a number in \\\\(\\[1.5,2.5]\\\\) by\n*\n*     ```tex\n*     \\operatorname{lgamma}(1+s) = \\ln(s) + \\operatorname{lgamma}(s)\n*     ```\n*\n*     For example,\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{lgamma}(7.3) &= \\ln(6.3) + \\operatorname{lgamma}(6.3) \\\\\n*     &= \\ln(6.3 \\cdot 5.3) + \\operatorname{lgamma}(5.3) \\\\\n*     &= \\ln(6.3 \\cdot 5.3 \\cdot 4.3 \\cdot 3.3 \\cdot2.3) + \\operatorname{lgamma}(2.3)\n*     \\end{align*}\n*     ```\n*\n* 2.  Compute a polynomial approximation of \\\\(\\mathrm{lgamma}\\\\) around its minimum (\\\\(\\mathrm{ymin} = 1.461632144968362245\\\\)) to maintain monotonicity. On the interval \\\\(\\[\\mathrm{ymin} - 0.23, \\mathrm{ymin} + 0.27]\\\\) (i.e., \\\\(\\[1.23164,1.73163]\\\\)), we let \\\\(z = x - \\mathrm{ymin}\\\\) and use\n*\n*     ```tex\n*     \\operatorname{lgamma}(x) = -1.214862905358496078218 + z^2 \\cdot \\operatorname{poly}(z)\n*     ```\n*\n*     where \\\\(\\operatorname{poly}(z)\\\\) is a \\\\(14\\\\) degree polynomial.\n*\n* 3.  Compute a rational approximation in the primary interval \\\\(\\[2,3]\\\\). Let \\\\( s = x - 2.0 \\\\). We can thus use the approximation\n*\n*     ```tex\n*     \\operatorname{lgamma}(x) = \\frac{s}{2} + s\\frac{\\operatorname{P}(s)}{\\operatorname{Q}(s)}\n*     ```\n*\n*     with accuracy\n*\n*     ```tex\n*     \\biggl|\\frac{\\mathrm{P}}{\\mathrm{Q}} - \\biggr(\\operatorname{lgamma}(x)-\\frac{s}{2}\\biggl)\\biggl| < 2^{-61.71}\n*     ```\n*\n*     The algorithms are based on the observation\n*\n*     ```tex\n*     \\operatorname{lgamma}(2+s) = s(1 - \\gamma) + \\frac{\\zeta(2) - 1}{2} s^2 - \\frac{\\zeta(3) - 1}{3} s^3 + \\ldots\n*     ```\n*\n*     where \\\\(\\zeta\\\\) is the zeta function and \\\\(\\gamma = 0.5772156649...\\\\) is the Euler-Mascheroni constant, which is very close to \\\\(0.5\\\\).\n*\n* 4.  For \\\\(x \\geq 8\\\\),\n*\n*     ```tex\n*     \\operatorname{lgamma}(x) \\approx \\biggl(x-\\frac{1}{2}\\biggr) \\ln(x) - x + \\frac{\\ln(2\\pi)}{2} + \\frac{1}{12x} - \\frac{1}{360x^3} + \\ldots\n*     ```\n*\n*     which can be expressed\n*\n*     ```tex\n*     \\operatorname{lgamma}(x) \\approx \\biggl(x-\\frac{1}{2}\\biggr)(\\ln(x)-1)-\\frac{\\ln(2\\pi)-1}{2} + \\ldots\n*     ```\n*\n*     Let \\\\(z = \\frac{1}{x}\\\\). We can then use the approximation\n*\n*     ```tex\n*     f(z) = \\operatorname{lgamma}(x) - \\biggl(x-\\frac{1}{2}\\biggr)(\\ln(x)-1)\n*     ```\n*\n*     by\n*\n*     ```tex\n*     w = w_0 + w_1 z + w_2 z^3 + w_3 z^5 + \\ldots + w_6 z^{11}\n*     ```\n*\n*     where\n*\n*     ```tex\n*     |w - f(z)| < 2^{-58.74}\n*     ```\n*\n* 5.  For negative \\\\(x\\\\), since\n*\n*     ```tex\n*     -x \\Gamma(-x) \\Gamma(x) = \\frac{\\pi}{\\sin(\\pi x)}\n*     ```\n*\n*     where \\\\(\\Gamma\\\\) is the gamma function, we have\n*\n*     ```tex\n*     \\Gamma(x) = \\frac{\\pi}{\\sin(\\pi x)(-x)\\Gamma(-x)}\n*     ```\n*\n*     Since \\\\(\\Gamma(-x)\\\\) is positive,\n*\n*     ```tex\n*     \\operatorname{sign}(\\Gamma(x)) = \\operatorname{sign}(\\sin(\\pi x))\n*     ```\n*\n*     for \\\\(x < 0\\\\). Hence, for \\\\(x < 0\\\\),\n*\n*     ```tex\n*     \\mathrm{signgam} = \\operatorname{sign}(\\sin(\\pi x))\n*     ```\n*\n*     and\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{lgamma}(x) &= \\ln(|\\Gamma(x)|) \\\\\n*     &= \\ln\\biggl(\\frac{\\pi}{|x \\sin(\\pi x)|}\\biggr) - \\operatorname{lgamma}(-x)\n*     \\end{align*}\n*     ```\n*\n*     <!-- <note> -->\n*\n*     Note that one should avoid computing \\\\(\\pi (-x)\\\\) directly in the computation of \\\\(\\sin(\\pi (-x))\\\\).\n*\n*     <!-- </note> -->\n*\n*\n* ## Special Cases\n*\n* ```tex\n* \\begin{align*}\n* \\operatorname{lgamma}(2+s) &\\approx s (1-\\gamma) & \\mathrm{for\\ tiny\\ s} \\\\\n* \\operatorname{lgamma}(x) &\\approx -\\ln(x) & \\mathrm{for\\ tiny\\ x} \\\\\n* \\operatorname{lgamma}(1) &= 0 & \\\\\n* \\operatorname{lgamma}(2) &= 0 & \\\\\n* \\operatorname{lgamma}(0) &= \\infty & \\\\\n* \\operatorname{lgamma}(\\infty) &= \\infty & \\\\\n* \\operatorname{lgamma}(-\\mathrm{integer}) &= \\pm \\infty\n* \\end{align*}\n* ```\n*\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = gammaln( 1.0 );\n* // returns 0.0\n*\n* @example\n* var v = gammaln( 2.0 );\n* // returns 0.0\n*\n* @example\n* var v = gammaln( 4.0 );\n* // returns ~1.792\n*\n* @example\n* var v = gammaln( -0.5 );\n* // returns ~1.266\n*\n* @example\n* var v = gammaln( 0.5 );\n* // returns ~0.572\n*\n* @example\n* var v = gammaln( 0.0 );\n* // returns Infinity\n*\n* @example\n* var v = gammaln( NaN );\n* // returns NaN\n*/\nfunction gammaln( x ) {\n\tvar isNegative;\n\tvar nadj;\n\tvar flg;\n\tvar p3;\n\tvar p2;\n\tvar p1;\n\tvar p;\n\tvar q;\n\tvar t;\n\tvar w;\n\tvar y;\n\tvar z;\n\tvar r;\n\n\t// Special cases: NaN, +-infinity\n\tif ( isnan( x ) || isInfinite( x ) ) {\n\t\treturn x;\n\t}\n\t// Special case: 0\n\tif ( x === 0.0 ) {\n\t\treturn PINF;\n\t}\n\tif ( x < 0.0 ) {\n\t\tisNegative = true;\n\t\tx = -x;\n\t} else {\n\t\tisNegative = false;\n\t}\n\t// If |x| < 2**-70, return -ln(|x|)\n\tif ( x < TINY ) {\n\t\treturn -ln( x );\n\t}\n\tif ( isNegative ) {\n\t\t// If |x| >= 2**52, must be -integer\n\t\tif ( x >= TWO52 ) {\n\t\t\treturn PINF;\n\t\t}\n\t\tt = sinpi( x );\n\t\tif ( t === 0.0 ) {\n\t\t\treturn PINF;\n\t\t}\n\t\tnadj = ln( PI / abs( t*x ) );\n\t}\n\t// If x equals 1 or 2, return 0\n\tif ( x === 1.0 || x === 2.0 ) {\n\t\treturn 0.0;\n\t}\n\t// If x < 2, use lgamma(x) = lgamma(x+1) - log(x)\n\tif ( x < 2.0 ) {\n\t\tif ( x <= 0.9 ) {\n\t\t\tr = -ln( x );\n\n\t\t\t// 0.7316 <= x <=  0.9\n\t\t\tif ( x >= ( YMIN - 1.0 + 0.27 ) ) {\n\t\t\t\ty = 1.0 - x;\n\t\t\t\tflg = 0;\n\t\t\t}\n\t\t\t// 0.2316 <= x < 0.7316\n\t\t\telse if ( x >= (YMIN - 1.0 - 0.27) ) {\n\t\t\t\ty = x - (TC - 1.0);\n\t\t\t\tflg = 1;\n\t\t\t}\n\t\t\t// 0 < x < 0.2316\n\t\t\telse {\n\t\t\t\ty = x;\n\t\t\t\tflg = 2;\n\t\t\t}\n\t\t} else {\n\t\t\tr = 0.0;\n\n\t\t\t// 1.7316 <= x < 2\n\t\t\tif ( x >= (YMIN + 0.27) ) {\n\t\t\t\ty = 2.0 - x;\n\t\t\t\tflg = 0;\n\t\t\t}\n\t\t\t// 1.2316 <= x < 1.7316\n\t\t\telse if ( x >= (YMIN - 0.27) ) {\n\t\t\t\ty = x - TC;\n\t\t\t\tflg = 1;\n\t\t\t}\n\t\t\t// 0.9 < x < 1.2316\n\t\t\telse {\n\t\t\t\ty = x - 1.0;\n\t\t\t\tflg = 2;\n\t\t\t}\n\t\t}\n\t\tswitch ( flg ) { // eslint-disable-line default-case\n\t\tcase 0:\n\t\t\tz = y * y;\n\t\t\tp1 = A1C + (z*polyvalA1( z ));\n\t\t\tp2 = z * (A2C + (z*polyvalA2( z )));\n\t\t\tp = (y*p1) + p2;\n\t\t\tr += ( p - (0.5*y) );\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tz = y * y;\n\t\t\tw = z * y;\n\t\t\tp1 = T1C + (w*polyvalT1( w ));\n\t\t\tp2 = T2C + (w*polyvalT2( w ));\n\t\t\tp3 = T3C + (w*polyvalT3( w ));\n\t\t\tp = (z*p1) - (TT - (w*(p2+(y*p3))));\n\t\t\tr += ( TF + p );\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tp1 = y * (UC + (y*polyvalU( y )));\n\t\t\tp2 = VC + (y*polyvalV( y ));\n\t\t\tr += (-0.5*y) + (p1/p2);\n\t\t\tbreak;\n\t\t}\n\t}\n\t// 2 <= x < 8\n\telse if ( x < 8.0 ) {\n\t\tflg = trunc( x );\n\t\ty = x - flg;\n\t\tp = y * (SC + (y*polyvalS( y )));\n\t\tq = RC + (y*polyvalR( y ));\n\t\tr = (0.5*y) + (p/q);\n\t\tz = 1.0; // gammaln(1+s) = ln(s) + gammaln(s)\n\t\tswitch ( flg ) { // eslint-disable-line default-case\n\t\tcase 7:\n\t\t\tz *= y + 6.0;\n\n\t\t\t/* falls through */\n\t\tcase 6:\n\t\t\tz *= y + 5.0;\n\n\t\t\t/* falls through */\n\t\tcase 5:\n\t\t\tz *= y + 4.0;\n\n\t\t\t/* falls through */\n\t\tcase 4:\n\t\t\tz *= y + 3.0;\n\n\t\t\t/* falls through */\n\t\tcase 3:\n\t\t\tz *= y + 2.0;\n\t\t\tr += ln( z );\n\t\t}\n\t}\n\t// 8 <= x < 2**58\n\telse if ( x < TWO58 ) {\n\t\tt = ln( x );\n\t\tz = 1.0 / x;\n\t\ty = z * z;\n\t\tw = WC + (z*polyvalW( y ));\n\t\tr = ((x-0.5)*(t-1.0)) + w;\n\t}\n\t// 2**58 <= x <= Inf\n\telse {\n\t\tr = x * ( ln(x)-1.0 );\n\t}\n\tif ( isNegative ) {\n\t\tr = nadj - r;\n\t}\n\treturn r;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gammaln;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the natural logarithm of the gamma function.\n*\n* @module @stdlib/math/base/special/gammaln\n*\n* @example\n* var gammaln = require( '@stdlib/math/base/special/gammaln' );\n*\n* var v = gammaln( 1.0 );\n* // returns 0.0\n*\n* v = gammaln( 2.0 );\n* // returns 0.0\n*\n* v = gammaln( 4.0 );\n* // returns ~1.792\n*\n* v = gammaln( -0.5 );\n* // returns ~1.266\n*\n* v = gammaln( 0.5 );\n* // returns ~0.572\n*\n* v = gammaln( 0.0 );\n* // returns Infinity\n*\n* v = gammaln( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar gammaln = require( './gammaln.js' );\n\n\n// EXPORTS //\n\nmodule.exports = gammaln;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Square root of double-precision floating-point epsilon.\n*\n* @module @stdlib/constants/float64/sqrt-eps\n* @type {number}\n*\n* @example\n* var FLOAT64_SQRT_EPSILON = require( '@stdlib/constants/float64/sqrt-eps' );\n* // returns 0.14901161193847656e-7\n*/\n\n\n// MAIN //\n\n/**\n* Square root of double-precision floating-point epsilon.\n*\n* ```tex\n* \\sqrt{\\frac{1}{2^{52}}}\n* ```\n*\n* @constant\n* @type {number}\n* @default 0.14901161193847656e-7\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n* @see [Machine Epsilon]{@link https://en.wikipedia.org/wiki/Machine_epsilon}\n*/\nvar FLOAT64_SQRT_EPSILON = 0.1490116119384765625e-7;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_SQRT_EPSILON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Natural logarithm of the maximum double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/max-ln\n* @type {number}\n*\n* @example\n* var FLOAT64_MAX_LN = require( '@stdlib/constants/float64/max-ln' );\n* // returns 709.782712893384\n*/\n\n\n// MAIN //\n\n/**\n* Natural logarithm of the maximum double-precision floating-point number.\n*\n* ## Notes\n*\n* The natural logarithm of the maximum is given by\n*\n* ```tex\n* \\ln \\left( 2^{1023} (2 - 2^{-52}) \\right)\n* ```\n*\n* @constant\n* @type {number}\n* @default 709.782712893384\n* @see [IEEE 754]{@link http://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_LN = 709.782712893384;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MAX_LN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar exp = require( './../../../../base/special/exp' );\n\n\n// MAIN //\n\n/**\n* Calculates normalized Q when a is an integer.\n*\n* @private\n* @param {integer} a - function parameter\n* @param {number} x - function parameter\n* @returns {number} upper gamma fraction\n*/\nfunction finiteGammaQ( a, x ) {\n\tvar term;\n\tvar sum;\n\tvar e;\n\tvar n;\n\n\te = exp( -x );\n\tsum = e;\n\tif ( sum !== 0.0 ) {\n\t\tterm = sum;\n\t\tfor ( n = 1; n < a; ++n ) {\n\t\t\tterm /= n;\n\t\t\tterm *= x;\n\t\t\tsum += term;\n\t\t}\n\t}\n\treturn sum;\n}\n\n\n// EXPORTS //\n\nmodule.exports = finiteGammaQ;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 30.33806074348246;\n\t}\n\treturn 30.33806074348246 + (x * (325.7925129965739 + (x * (1536.729586084437 + (x * (3199.8582195085955 + (x * (2553.0504064331644 + (x * (474.52854120695537 + (x * -22.44095244658582))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_erf.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar exp = require( './../../../../base/special/exp' );\nvar setLowWord = require( '@stdlib/number/float64/base/set-low-word' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar polyvalPP = require( './polyval_pp.js' );\nvar polyvalQQ = require( './polyval_qq.js' );\nvar polyvalPA = require( './polyval_pa.js' );\nvar polyvalQA = require( './polyval_qa.js' );\nvar polyvalRA = require( './polyval_ra.js' );\nvar polyvalSA = require( './polyval_sa.js' );\nvar polyvalRB = require( './polyval_rb.js' );\nvar polyvalSB = require( './polyval_sb.js' );\n\n\n// VARIABLES //\n\nvar TINY = 1.0e-300;\n\n// 2**-56 = 1/(2**56) = 1/72057594037927940\nvar SMALL = 1.3877787807814457e-17;\n\nvar ERX = 8.45062911510467529297e-1;  // 0x3FEB0AC1, 0x60000000\n\nvar PPC = 1.28379167095512558561e-1;  // 0x3FC06EBA, 0x8214DB68\nvar QQC = 1.0;\n\nvar PAC = -2.36211856075265944077e-3; // 0xBF6359B8, 0xBEF77538\nvar QAC = 1.0;\n\nvar RAC = -9.86494403484714822705e-3; // 0xBF843412, 0x600D6435\nvar SAC = 1.0;\n\nvar RBC = -9.86494292470009928597e-3; // 0xBF843412, 0x39E86F4A\nvar SBC = 1.0;\n\n\n// MAIN //\n\n/**\n* Evaluates the complementary error function.\n*\n* ```tex\n* \\operatorname{erf}(x) = \\frac{2}{\\sqrt{\\pi}} \\int^{x}_{0} e^{-t^2}\\ \\mathrm{dt}\n* ```\n*\n* Note that\n*\n* ```tex\n* \\begin{align*}\n* \\operatorname{erfc}(x) &= 1 - \\operatorname{erf}(x) \\\\\n* \\operatorname{erf}(-x) &= -\\operatorname{erf}(x) \\\\\n* \\operatorname{erfc}(-x) &= 2 - \\operatorname{erfc}(x)\n* \\end{align*}\n* ```\n*\n* ## Method\n*\n* 1.  For \\\\(|x| \\in [0, 0.84375)\\\\),\n*\n*     ```tex\n*     \\operatorname{erf}(x) = x + x \\cdot \\operatorname{R}(x^2)\n*     ```\n*\n*     and\n*\n*     ```tex\n*     \\operatorname{erfc}(x) = \\begin{cases}\n*     1 - \\operatorname{erf}(x) & \\textrm{if}\\ x \\in (-.84375,0.25) \\\\\n*     0.5 + ((0.5-x)-x \\mathrm{R}) & \\textrm{if}\\ x \\in [0.25,0.84375)\n*     \\end{cases}\n*     ```\n*\n*     where \\\\(R = P/Q\\\\) and where \\\\(P\\\\) is an odd polynomial of degree \\\\(8\\\\) and \\\\(Q\\\\) is an odd polynomial of degree \\\\(10\\\\).\n*\n*     ```tex\n*     \\biggl| \\mathrm{R} - \\frac{\\operatorname{erf}(x)-x}{x} \\biggr| \\leq 2^{-57.90}\n*     ```\n*\n*     <!-- <note> -->\n*\n*     The formula is derived by noting\n*\n*     ```tex\n*     \\operatorname{erf}(x) = \\frac{2}{\\sqrt{\\pi}}\\biggl(x - \\frac{x^3}{3} + \\frac{x^5}{10} - \\frac{x^7}{42} + \\ldots \\biggr)\n*     ```\n*\n*     and that\n*\n*     ```tex\n*     \\frac{2}{\\sqrt{\\pi}} = 1.128379167095512573896158903121545171688\n*     ```\n*\n*     is close to unity. The interval is chosen because the fix point of \\\\(\\operatorname{erf}(x)\\\\) is near \\\\(0.6174\\\\) (i.e., \\\\(\\operatorname{erf(x)} = x\\\\) when \\\\(x\\\\) is near \\\\(0.6174\\\\)), and, by some experiment, \\\\(0.84375\\\\) is chosen to guarantee the error is less than one ulp for \\\\(\\operatorname{erf}(x)\\\\).\n*\n*     <!-- </note> -->\n*\n* 2.  For \\\\(|x| \\in [0.84375,1.25)\\\\), let \\\\(s = |x|-1\\\\), and \\\\(c = 0.84506291151\\\\) rounded to single (\\\\(24\\\\) bits)\n*\n*     ```tex\n*     \\operatorname{erf}(x) = \\operatorname{sign}(x) \\cdot \\biggl(c + \\frac{\\operatorname{P1}(s)}{\\operatorname{Q1}(s)}\\biggr)\n*     ```\n*\n*     and\n*\n*     ```tex\n*     \\operatorname{erfc}(x) = \\begin{cases}\n*     (1-c) - \\frac{\\operatorname{P1}(s)}{\\operatorname{Q1}(s)} & \\textrm{if}\\ x > 0 \\\\\n*     1 + \\biggl(c + \\frac{\\operatorname{P1}(s)}{\\operatorname{Q1}(s)}\\biggr) & \\textrm{if}\\ x < 0\n*     \\end{cases}\n*     ```\n*\n*     where\n*\n*     ```tex\n*     \\biggl|\\frac{\\mathrm{P1}}{\\mathrm{Q1}} - (\\operatorname{erf}(|x|)-c)\\biggr| \\leq 2^{-59.06}\n*     ```\n*\n*     <!-- <note> -->\n*\n*     Here, we use the Taylor series expansion at \\\\(x = 1\\\\)\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{erf}(1+s) &= \\operatorname{erf}(1) + s\\cdot \\operatorname{poly}(s) \\\\\n*     &= 0.845.. + \\frac{\\operatorname{P1}(s)}{\\operatorname{Q1}(s)}\n*     \\end{align*}\n*     ```\n*\n*     using a rational approximation to approximate\n*\n*     ```tex\n*     \\operatorname{erf}(1+s) - (c = (\\mathrm{single})0.84506291151)\n*     ```\n*\n*     <!-- </note> -->\n*\n*     Note that, for \\\\(x \\in [0.84375,1.25)\\\\), \\\\(|\\mathrm{P1}/\\mathrm{Q1}| < 0.078\\\\), where\n*\n*     -   \\\\(\\operatorname{P1}(s)\\\\) is a degree \\\\(6\\\\) polynomial in \\\\(s\\\\)\n*     -   \\\\(\\operatorname{Q1}(s)\\\\) is a degree \\\\(6\\\\) polynomial in \\\\(s\\\\)\n*\n* 3.  For \\\\(x \\in [1.25,1/0.35)\\\\),\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{erfc}(x) &= \\frac{1}{x}e^{-x^2-0.5625+(\\mathrm{R1}/\\mathrm{S1})} \\\\\n*     \\operatorname{erf}(x) &= 1 - \\operatorname{erfc}(x)\n*     \\end{align*}\n*     ```\n*\n*     where\n*\n*     -   \\\\(\\operatorname{R1}(z)\\\\) is a degree \\\\(7\\\\) polynomial in \\\\(z\\\\), where \\\\(z = 1/x^2\\\\)\n*     -   \\\\(\\operatorname{S1}(z)\\\\) is a degree \\\\(8\\\\) polynomial in \\\\(z\\\\)\n*\n* 4.  For \\\\(x \\in [1/0.35,28)\\\\),\n*\n*     ```tex\n*     \\operatorname{erfc}(x) = \\begin{cases}\n*     \\frac{1}{x} e^{-x^2-0.5625+(\\mathrm{R2}/\\mathrm{S2})} & \\textrm{if}\\ x > 0 \\\\\n*     2.0 - \\frac{1}{x} e^{-x^2-0.5625+(\\mathrm{R2}/\\mathrm{S2})} & \\textrm{if}\\ -6 < x < 0 \\\\\n*     2.0 - \\mathrm{tiny} & \\textrm{if}\\ x \\leq -6\n*     \\end{cases}\n*     ```\n*\n*     and\n*\n*     ```tex\n*     \\operatorname{erf}(x) = \\begin{cases}\n*     \\operatorname{sign}(x) \\cdot (1.0 - \\operatorname{erfc}(x)) & \\textrm{if}\\ x < 6 \\\\\n*     \\operatorname{sign}(x) \\cdot (1.0 - \\mathrm{tiny}) & \\textrm{otherwise}\n*     \\end{cases}\n*     ```\n*\n*     where\n*\n*     -   \\\\(\\operatorname{R2}(z)\\\\) is a degree \\\\(6\\\\) polynomial in \\\\(z\\\\), where \\\\(z = 1/x^2\\\\)\n*     -   \\\\(\\operatorname{S2}(z)\\\\) is a degree \\\\(7\\\\) polynomial in \\\\(z\\\\)\n*\n* 5.  For \\\\(x \\in [28, \\infty)\\\\),\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{erf}(x) &= \\operatorname{sign}(x) \\cdot (1 - \\mathrm{tiny}) & \\textrm{(raise inexact)}\n*     \\end{align*}\n*     ```\n*\n*     and\n*\n*     ```tex\n*     \\operatorname{erfc}(x) = \\begin{cases}\n*     \\mathrm{tiny} \\cdot \\mathrm{tiny} & \\textrm{if}\\ x > 0\\ \\textrm{(raise underflow)} \\\\\n*     2 - \\mathrm{tiny} & \\textrm{if}\\ x < 0\n*     \\end{cases}\n*     ```\n*\n*\n* ## Special Cases\n*\n* ```tex\n* \\begin{align*}\n* \\operatorname{erf}(0) &= 0 \\\\\n* \\operatorname{erf}(-0) &= -0 \\\\\n* \\operatorname{erf}(\\infty) &= 1 \\\\\n* \\operatorname{erf}(-\\infty) &= -1 \\\\\n* \\operatorname{erfc}(0) &= 1 \\\\\n* \\operatorname{erfc}(\\infty) &= 0 \\\\\n* \\operatorname{erfc}(-\\infty) &= 2 \\\\\n* \\operatorname{erf}(\\mathrm{NaN}) &= \\mathrm{NaN} \\\\\n* \\operatorname{erfc}(\\mathrm{NaN}) &= \\mathrm{NaN}\n* \\end{align*}\n* ```\n*\n*\n* ## Notes\n*\n* -   To compute \\\\(\\exp(-x^2-0.5625+(\\mathrm{R}/\\mathrm{S}))\\\\), let \\\\(s\\\\) be a single precision number and \\\\(s := x\\\\); then\n*\n*     ```tex\n*     -x^2 = -s^2 + (s-x)(s+x)\n*     ```\n*\n*     and\n*\n*     ```tex\n*     e^{-x^2-0.5626+(\\mathrm{R}/\\mathrm{S})} = e^{-s^2-0.5625} e^{(s-x)(s+x)+(\\mathrm{R}/\\mathrm{S})}\n*     ```\n*\n* -   `#4` and `#5` make use of the asymptotic series\n*\n*     ```tex\n*     \\operatorname{erfc}(x) \\approx \\frac{e^{-x^2}}{x\\sqrt{\\pi}} (1 + \\operatorname{poly}(1/x^2))\n*     ```\n*\n*     We use a rational approximation to approximate\n*\n*     ```tex\n*     g(s) = f(1/x^2) = \\ln(\\operatorname{erfc}(x) \\cdot x) - x^2 + 0.5625\n*     ```\n*\n* -   The error bound for \\\\(\\mathrm{R1}/\\mathrm{S1}\\\\) is\n*\n*     ```tex\n*     |\\mathrm{R1}/\\mathrm{S1} - f(x)| < 2^{-62.57}\n*     ```\n*\n*     and for \\\\(\\mathrm{R2}/\\mathrm{S2}\\\\) is\n*\n*     ```tex\n*     |\\mathrm{R2}/\\mathrm{S2} - f(x)| < 2^{-61.52}\n*     ```\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var y = erfc( 2.0 );\n* // returns ~0.0047\n*\n* @example\n* var y = erfc( -1.0 );\n* // returns ~1.8427\n*\n* @example\n* var y = erfc( 0.0 );\n* // returns 1.0\n*\n* @example\n* var y = erfc( Infinity );\n* // returns 0.0\n*\n* @example\n* var y = erfc( -Infinity );\n* // returns 2.0\n*\n* @example\n* var y = erfc( NaN );\n* // returns NaN\n*/\nfunction erfc( x ) {\n\tvar sign;\n\tvar ax;\n\tvar z;\n\tvar r;\n\tvar s;\n\tvar y;\n\tvar p;\n\tvar q;\n\n\t// Special case: NaN\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\t// Special case: +infinity\n\tif ( x === PINF ) {\n\t\treturn 0.0;\n\t}\n\t// Special case: -infinity\n\tif ( x === NINF ) {\n\t\treturn 2.0;\n\t}\n\t// Special case: +-0\n\tif ( x === 0.0 ) {\n\t\treturn 1.0;\n\t}\n\tif ( x < 0.0 ) {\n\t\tsign = true;\n\t\tax = -x;\n\t} else {\n\t\tsign = false;\n\t\tax = x;\n\t}\n\t// |x| < 0.84375\n\tif ( ax < 0.84375 ) {\n\t\tif ( ax < SMALL ) {\n\t\t\treturn 1.0 - x; // raise inexact\n\t\t}\n\t\tz = x * x;\n\t\tr = PPC + ( z*polyvalPP( z ) );\n\t\ts = QQC + ( z*polyvalQQ( z ) );\n\t\ty = r / s;\n\n\t\t// x < 1/4\n\t\tif ( x < 0.25 ) {\n\t\t\treturn 1.0 - ( x + (x*y) );\n\t\t}\n\t\tr = x * y;\n\t\tr += x - 0.5;\n\t\treturn 0.5 - r;\n\t}\n\t// 0.84375 <= |x| < 1.25\n\tif ( ax < 1.25 ) {\n\t\ts = ax - 1.0;\n\t\tp = PAC + ( s*polyvalPA( s ) );\n\t\tq = QAC + ( s*polyvalQA( s ) );\n\t\tif ( sign ) {\n\t\t\treturn 1.0 + ERX + (p/q);\n\t\t}\n\t\treturn 1.0 - ERX - (p/q);\n\t}\n\t// |x| < 28\n\tif ( ax < 28.0 ) {\n\t\ts = 1.0 / (ax*ax);\n\n\t\t// |x| < 1/0.35 ~ 2.857143\n\t\tif ( ax < 2.857142857142857 ) {\n\t\t\tr = RAC + ( s*polyvalRA( s ) );\n\t\t\ts = SAC + ( s*polyvalSA( s ) );\n\t\t}\n\t\t// |x| >= 1/0.35 ~ 2.857143\n\t\telse {\n\t\t\t// x < -6\n\t\t\tif ( x < -6.0 ) {\n\t\t\t\treturn 2.0 - TINY; // raise inexact\n\t\t\t}\n\t\t\tr = RBC + ( s*polyvalRB( s ) );\n\t\t\ts = SBC + ( s*polyvalSB( s ) );\n\t\t}\n\t\tz = setLowWord( ax, 0 ); // pseudo-single (20-bit) precision x\n\t\tr = exp( -(z*z) - 0.5625 ) * exp( ((z-ax)*(z+ax)) + (r/s) );\n\t\tif ( sign ) {\n\t\t\treturn 2.0 - (r/ax);\n\t\t}\n\t\treturn r/ax;\n\t}\n\tif ( sign ) {\n\t\treturn 2.0 - TINY; // raise inexact; ~2\n\t}\n\treturn TINY * TINY; // raise inexact; ~0\n}\n\n\n// EXPORTS //\n\nmodule.exports = erfc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.3250421072470015;\n\t}\n\treturn -0.3250421072470015 + (x * (-0.02848174957559851 + (x * (-0.005770270296489442 + (x * -0.000023763016656650163))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.39791722395915535;\n\t}\n\treturn 0.39791722395915535 + (x * (0.0650222499887673 + (x * (0.005081306281875766 + (x * (0.00013249473800432164 + (x * -0.000003960228278775368))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.41485611868374833;\n\t}\n\treturn 0.41485611868374833 + (x * (-0.3722078760357013 + (x * (0.31834661990116175 + (x * (-0.11089469428239668 + (x * (0.035478304325618236 + (x * -0.002166375594868791))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.10642088040084423;\n\t}\n\treturn 0.10642088040084423 + (x * (0.540397917702171 + (x * (0.07182865441419627 + (x * (0.12617121980876164 + (x * (0.01363708391202905 + (x * 0.011984499846799107))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.6938585727071818;\n\t}\n\treturn -0.6938585727071818 + (x * (-10.558626225323291 + (x * (-62.375332450326006 + (x * (-162.39666946257347 + (x * (-184.60509290671104 + (x * (-81.2874355063066 + (x * -9.814329344169145))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 19.651271667439257;\n\t}\n\treturn 19.651271667439257 + (x * (137.65775414351904 + (x * (434.56587747522923 + (x * (645.3872717332679 + (x * (429.00814002756783 + (x * (108.63500554177944 + (x * (6.570249770319282 + (x * -0.0604244152148581))))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.799283237680523;\n\t}\n\treturn -0.799283237680523 + (x * (-17.757954917754752 + (x * (-160.63638485582192 + (x * (-637.5664433683896 + (x * (-1025.0951316110772 + (x * -483.5191916086514))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the complementary error function.\n*\n* @module @stdlib/math/base/special/erfc\n*\n* @example\n* var erfc = require( '@stdlib/math/base/special/erfc' );\n*\n* var y = erfc( 2.0 );\n* // returns ~0.0047\n*\n* y = erfc( -1.0 );\n* // returns ~1.8427\n*\n* y = erfc( 0.0 );\n* // returns 1.0\n*\n* y = erfc( Infinity );\n* // returns 0.0\n*\n* y = erfc( -Infinity );\n* // returns 2.0\n*\n* y = erfc( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar erfc = require( './erfc.js' );\n\n\n// EXPORTS //\n\nmodule.exports = erfc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar erfc = require( './../../../../base/special/erfc' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar exp = require( './../../../../base/special/exp' );\nvar PI = require( '@stdlib/constants/float64/pi' );\n\n\n// MAIN //\n\n/**\n* Calculates normalized Q when a is a half-integer.\n*\n* @private\n* @param {number} a - function parameter\n* @param {number} x - function parameter\n* @returns {number} upper gamma fraction\n*/\nfunction finiteHalfGammaQ( a, x ) {\n\tvar half;\n\tvar term;\n\tvar sum;\n\tvar e;\n\tvar n;\n\n\te = erfc( sqrt(x) );\n\tif ( e !== 0 && a > 1.0 ) {\n\t\tterm = exp( -x ) / sqrt( PI * x );\n\t\tterm *= x;\n\t\thalf = 0.5;\n\t\tterm /= half;\n\t\tsum = term;\n\t\tfor ( n = 2; n < a; ++n ) {\n\t\t\tterm /= n - half;\n\t\t\tterm *= x;\n\t\t\tsum += term;\n\t\t}\n\t\te += sum;\n\t}\n\treturn e;\n}\n\n\n// EXPORTS //\n\nmodule.exports = finiteHalfGammaQ;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Natural logarithm of the smallest normalized double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/min-ln\n* @type {number}\n*\n* @example\n* var FLOAT64_MIN_LN = require( '@stdlib/constants/float64/min-ln' );\n* // returns -708.3964185322641\n*/\n\n\n// MAIN //\n\n/**\n* Natural logarithm of the smallest normalized double-precision floating-point number.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* -\\ln \\left( 2^{1023-1} \\right)\n* ```\n*\n* @constant\n* @type {number}\n* @default -708.3964185322641\n* @see [IEEE 754]{@link http://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MIN_LN = -708.3964185322641;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MIN_LN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar exp = require( './../../../../base/special/exp' );\nvar pow = require( './../../../../base/special/pow' );\nvar ln = require( './../../../../base/special/ln' );\nvar MAX_LN = require( '@stdlib/constants/float64/max-ln' );\nvar MIN_LN = require( '@stdlib/constants/float64/min-ln' );\n\n\n// MAIN //\n\n/**\n* Calculates the power term prefix `(z^a)(e^-z)` used in the non-normalized incomplete gammas.\n*\n* @private\n* @param {number} a - function parameter\n* @param {number} z - function parameter\n* @returns {number} power term prefix\n*/\nfunction fullIGammaPrefix( a, z ) {\n\tvar prefix;\n\tvar alz;\n\n\talz = a * ln( z );\n\tif ( z >= 1.0 ) {\n\t\tif ( ( alz < MAX_LN ) && ( -z > MIN_LN ) ) {\n\t\t\tprefix = pow( z, a ) * exp( -z );\n\t\t}\n\t\telse if ( a >= 1.0 ) {\n\t\t\tprefix = pow( z / exp(z/a), a );\n\t\t}\n\t\telse {\n\t\t\tprefix = exp( alz - z );\n\t\t}\n\t}\n\telse {\n\t\t/* eslint-disable no-lonely-if */\n\t\tif ( alz > MIN_LN ) {\n\t\t\tprefix = pow( z, a ) * exp( -z );\n\t\t}\n\t\telse if ( z/a < MAX_LN ) {\n\t\t\tprefix = pow( z / exp(z/a), a );\n\t\t} else {\n\t\t\tprefix = exp( alz - z );\n\t\t}\n\t}\n\treturn prefix;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fullIGammaPrefix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @param {NumericArray} c - polynomial coefficients sorted in ascending degree\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*\n* @example\n* var v = evalpoly( [3.0,2.0,1.0], 10.0 ); // 3*10^0 + 2*10^1 + 1*10^2\n* // returns 123.0\n*/\nfunction evalpoly( c, x ) {\n\tvar p;\n\tvar i;\n\n\ti = c.length;\n\tif ( i < 2 || x === 0.0 ) {\n\t\tif ( i === 0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn c[ 0 ];\n\t}\n\ti -= 1;\n\tp = ( c[ i ] * x ) + c[ i-1 ];\n\ti -= 2;\n\twhile ( i >= 0 ) {\n\t\tp = ( p * x ) + c[ i ];\n\t\ti -= 1;\n\t}\n\treturn p;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar evalpoly = require( './evalpoly.js' );\n\n\n// MAIN //\n\n/**\n* Generates a function for evaluating a polynomial.\n*\n* ## Notes\n*\n* -   The compiled function uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: http://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @param {NumericArray} c - polynomial coefficients sorted in ascending degree\n* @returns {Function} function for evaluating a polynomial\n*\n* @example\n* var polyval = factory( [3.0,2.0,1.0] );\n*\n* var v = polyval( 10.0 ); // => 3*10^0 + 2*10^1 + 1*10^2\n* // returns 123.0\n*\n* v = polyval( 5.0 ); // => 3*5^0 + 2*5^1 + 1*5^2\n* // returns 38.0\n*/\nfunction factory( c ) {\n\tvar f;\n\tvar n;\n\tvar m;\n\tvar i;\n\n\t// Avoid exceeding the maximum stack size on V8 :(. Note that the choice of `500` was empirically determined...\n\tif ( c.length > 500 ) {\n\t\treturn polyval;\n\t}\n\t// Code generation. Start with the function definition...\n\tf = 'return function evalpoly(x){';\n\n\t// Create the function body...\n\tn = c.length;\n\n\t// If no coefficients, the function always returns 0...\n\tif ( n === 0 ) {\n\t\tf += 'return 0.0;';\n\t}\n\t// If only one coefficient, the function always returns that coefficient...\n\telse if ( n === 1 ) {\n\t\tf += 'return ' + c[ 0 ] + ';';\n\t}\n\t// If more than one coefficient, apply Horner's method...\n\telse {\n\t\t// If `x == 0`, return the first coefficient...\n\t\tf += 'if(x===0.0){return ' + c[ 0 ] + ';}';\n\n\t\t// Otherwise, evaluate the polynomial...\n\t\tf += 'return ' + c[ 0 ];\n\t\tm = n - 1;\n\t\tfor ( i = 1; i < n; i++ ) {\n\t\t\tf += '+x*';\n\t\t\tif ( i < m ) {\n\t\t\t\tf += '(';\n\t\t\t}\n\t\t\tf += c[ i ];\n\t\t}\n\t\t// Close all the parentheses...\n\t\tfor ( i = 0; i < m-1; i++ ) {\n\t\t\tf += ')';\n\t\t}\n\t\tf += ';';\n\t}\n\t// Close the function:\n\tf += '}';\n\n\t// Add a source directive for debugging:\n\tf += '//# sourceURL=evalpoly.factory.js';\n\n\t// Create the function in the global scope:\n\treturn ( new Function( f ) )(); // eslint-disable-line no-new-func\n\n\t/*\n\t*    function evalpoly( x ) {\n\t*        if ( x === 0.0 ) {\n\t*            return c[ 0 ];\n\t*        }\n\t*        return c[0]+x*(c[1]+x*(c[2]+x*(c[3]+...+x*(c[n-2]+x*c[n-1]))));\n\t*    }\n\t*/\n\n\t/**\n\t* Evaluates a polynomial.\n\t*\n\t* @private\n\t* @param {number} x - value at which to evaluate a polynomial\n\t* @returns {number} evaluated polynomial\n\t*/\n\tfunction polyval( x ) {\n\t\treturn evalpoly( c, x );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate a polynomial.\n*\n* @module @stdlib/math/base/tools/evalpoly\n*\n* @example\n* var evalpoly = require( '@stdlib/math/base/tools/evalpoly' );\n*\n* var v = evalpoly( [3.0,2.0,1.0], 10.0 ); // 3*10^0 + 2*10^1 + 1*10^2\n* // returns 123.0\n*\n* @example\n* var evalpoly = require( '@stdlib/math/base/tools/evalpoly' );\n*\n* var polyval = evalpoly.factory( [3.0,2.0,1.0] );\n*\n* var v = polyval( 10.0 ); // => 3*10^0 + 2*10^1 + 1*10^2\n* // returns 123.0\n*\n* v = polyval( 5.0 ); // => 3*5^0 + 2*5^1 + 1*5^2\n* // returns 38.0\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar evalpoly = require( './evalpoly.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( evalpoly, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.0006526239185953094;\n\t}\n\treturn -0.0006526239185953094 + (x * (0.0008394987206720873 + (x * -0.000438297098541721))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar evalpoly = require( './../../../../base/tools/evalpoly' );\nvar erfc = require( './../../../../base/special/erfc' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar exp = require( './../../../../base/special/exp' );\nvar ln = require( './../../../../base/special/ln' );\nvar TWO_PI = require( '@stdlib/constants/float64/two-pi' );\nvar polyvalC0 = require( './polyval_c0.js' );\nvar polyvalC1 = require( './polyval_c1.js' );\nvar polyvalC2 = require( './polyval_c2.js' );\nvar polyvalC3 = require( './polyval_c3.js' );\nvar polyvalC4 = require( './polyval_c4.js' );\nvar polyvalC5 = require( './polyval_c5.js' );\nvar polyvalC6 = require( './polyval_c6.js' );\nvar polyvalC7 = require( './polyval_c7.js' );\nvar polyvalC8 = require( './polyval_c8.js' );\n\n\n// VARIABLES //\n\n// Pre-allocate workspace array:\nvar workspace = [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Asymptotic expansions of the incomplete gamma functions when `a` is large and `x ~ a` (IEEE double precision or 10^-17).\n*\n* @private\n* @param {number} a - function parameter\n* @param {number} x - function parameter\n* @returns {number} value of asymptotic expansion\n*/\nfunction igammaTemmeLarge( a, x ) {\n\tvar result;\n\tvar sigma;\n\tvar phi;\n\tvar y;\n\tvar z;\n\n\tsigma = ( x-a ) / a;\n\tphi = -ln( 1.0 + sigma ) + sigma;\n\ty = a * phi;\n\tz = sqrt( 2.0 * phi );\n\tif ( x < a ) {\n\t\tz = -z;\n\t}\n\tworkspace[ 0 ] = polyvalC0( z );\n\tworkspace[ 1 ] = polyvalC1( z );\n\tworkspace[ 2 ] = polyvalC2( z );\n\tworkspace[ 3 ] = polyvalC3( z );\n\tworkspace[ 4 ] = polyvalC4( z );\n\tworkspace[ 5 ] = polyvalC5( z );\n\tworkspace[ 6 ] = polyvalC6( z );\n\tworkspace[ 7 ] = polyvalC7( z );\n\tworkspace[ 8 ] = polyvalC8( z );\n\tworkspace[ 9 ] = -0.00059676129019274625;\n\tresult = evalpoly( workspace, 1.0/a );\n\tresult *= exp( -y ) / sqrt( TWO_PI * a );\n\tif ( x < a ) {\n\t\tresult = -result;\n\t}\n\tresult += erfc( sqrt(y) ) / 2.0;\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = igammaTemmeLarge;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.3333333333333333;\n\t}\n\treturn -0.3333333333333333 + (x * (0.08333333333333333 + (x * (-0.014814814814814815 + (x * (0.0011574074074074073 + (x * (0.0003527336860670194 + (x * (-0.0001787551440329218 + (x * (0.00003919263178522438 + (x * (-0.0000021854485106799924 + (x * (-0.00000185406221071516 + (x * (8.296711340953087e-7 + (x * (-1.7665952736826078e-7 + (x * (6.707853543401498e-9 + (x * (1.0261809784240309e-8 + (x * (-4.382036018453353e-9 + (x * 9.14769958223679e-10))))))))))))))))))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.001851851851851852;\n\t}\n\treturn -0.001851851851851852 + (x * (-0.003472222222222222 + (x * (0.0026455026455026454 + (x * (-0.0009902263374485596 + (x * (0.00020576131687242798 + (x * (-4.018775720164609e-7 + (x * (-0.000018098550334489977 + (x * (0.00000764916091608111 + (x * (-0.0000016120900894563446 + (x * (4.647127802807434e-9 + (x * (1.378633446915721e-7 + (x * (-5.752545603517705e-8 + (x * 1.1951628599778148e-8))))))))))))))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.004133597883597883;\n\t}\n\treturn 0.004133597883597883 + (x * (-0.0026813271604938273 + (x * (0.0007716049382716049 + (x * (0.0000020093878600823047 + (x * (-0.00010736653226365161 + (x * (0.000052923448829120125 + (x * (-0.000012760635188618728 + (x * (3.423578734096138e-8 + (x * (0.0000013721957309062932 + (x * (-6.298992138380055e-7 + (x * 1.4280614206064242e-7))))))))))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.0006494341563786008;\n\t}\n\treturn 0.0006494341563786008 + (x * (0.00022947209362139917 + (x * (-0.0004691894943952557 + (x * (0.00026772063206283885 + (x * (-0.00007561801671883977 + (x * (-2.396505113867297e-7 + (x * (0.000011082654115347302 + (x * (-0.0000056749528269915965 + (x * 0.0000014230900732435883))))))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.0008618882909167117;\n\t}\n\treturn -0.0008618882909167117 + (x * (0.0007840392217200666 + (x * (-0.0002990724803031902 + (x * (-0.0000014638452578843418 + (x * (0.00006641498215465122 + (x * (-0.00003968365047179435 + (x * 0.000011375726970678419))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.00033679855336635813;\n\t}\n\treturn -0.00033679855336635813 + (x * (-0.00006972813758365858 + (x * (0.0002772753244959392 + (x * (-0.00019932570516188847 + (x * (0.00006797780477937208 + (x * (1.419062920643967e-7 + (x * (-0.000013594048189768693 + (x * (0.000008018470256334202 + (x * -0.000002291481176508095))))))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.0005313079364639922;\n\t}\n\treturn 0.0005313079364639922 + (x * (-0.0005921664373536939 + (x * (0.0002708782096718045 + (x * (7.902353232660328e-7 + (x * (-0.00008153969367561969 + (x * (0.0000561168275310625 + (x * -0.000018329116582843375))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.00034436760689237765;\n\t}\n\treturn 0.00034436760689237765 + (x * (0.00005171790908260592 + (x * (-0.00033493161081142234 + (x * (0.0002812695154763237 + (x * -0.00010976582244684731))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar evil = require( '@stdlib/utils/eval' );\n\n\n// MAIN //\n\n/**\n* Tests for native `function*()` support.\n*\n* @returns {boolean} boolean indicating if an environment has native `function*()` support\n*\n* @example\n* var bool = hasGeneratorSupport();\n* // returns <boolean>\n*/\nfunction hasGeneratorSupport() {\n\tvar bool;\n\ttry {\n\t\tevil( '\"use strict\"; (function* () {})' );\n\t\tbool = true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasGeneratorSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Alias for `eval` global.\n*\n* @module @stdlib/utils/eval\n*\n* @example\n* var evil = require( '@stdlib/utils/eval' );\n*\n* var v = evil( '5*4*3*2*1' );\n* // returns 120\n*/\n\n// MODULES //\n\nvar evil = eval; // eslint-disable-line no-eval\n\n\n// EXPORTS //\n\nmodule.exports = evil;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `function*()` support.\n*\n* @module @stdlib/assert/has-generator-support\n*\n* @example\n* var hasGeneratorSupport = require( '@stdlib/assert/has-generator-support' );\n*\n* var bool = hasGeneratorSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasGeneratorSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasGeneratorSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( './../../../../base/special/abs' );\nvar EPS = require( '@stdlib/constants/float64/eps' );\n\n\n// VARIABLES //\n\nvar MAX_TERMS = 1000000;\n\n\n// MAIN //\n\n/**\n* Sum the elements of the series given by the supplied function.\n*\n* @param {Function} generator - series function\n* @param {Object} [options] - function options\n* @param {PositiveInteger} [options.maxTerms=1000000] - maximum number of terms to be added\n* @param {PositiveNumber} [options.tolerance=2.22e-16] - further terms are only added as long as the next term is greater than current term times the tolerance\n* @param {number} [options.initialValue=0] - initial value of the resulting sum\n* @returns {number} sum of all series terms\n*\n* @example\n* var gen = geometricSeriesGenerator( 0.9 );\n* var out = sumSeries( gen );\n* // returns 10.0\n*\n* function* geometricSeriesGenerator( x ) {\n*     var exponent = 0;\n*     while ( true ) {\n*         yield Math.pow( x, exponent );\n*         exponent += 1;\n*     }\n* }\n*/\nfunction sumSeries( generator, options ) {\n\tvar isgenerator;\n\tvar tolerance;\n\tvar nextTerm;\n\tvar counter;\n\tvar result;\n\tvar opts;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\topts = options;\n\t}\n\ttolerance = opts.tolerance || EPS;\n\tcounter = opts.maxTerms || MAX_TERMS;\n\tresult = opts.initialValue || 0;\n\n\tisgenerator = typeof generator.next === 'function';\n\tif ( isgenerator === true ) {\n\t\t// Case A: Iterate over generator object created by a generator function...\n\t\tfor ( nextTerm of generator ) {\n\t\t\tresult += nextTerm;\n\t\t\tif (\n\t\t\t\tabs(tolerance * result) >= abs(nextTerm) ||\n\t\t\t\t--counter === 0 // eslint-disable-line no-plusplus\n\t\t\t) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// Case B: Repeatedly call function...\n\t\tdo {\n\t\t\tnextTerm = generator();\n\t\t\tresult += nextTerm;\n\t\t}\n\t\twhile ( ( abs(tolerance * result) < abs(nextTerm) ) && --counter ); // eslint-disable-line no-plusplus\n\t}\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sumSeries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( './../../../../base/special/abs' );\nvar EPS = require( '@stdlib/constants/float64/eps' );\n\n\n// VARIABLES //\n\nvar MAX_TERMS = 1000000;\n\n\n// MAIN //\n\n/**\n* Sum the elements of the series given by the supplied function.\n*\n* @param {Function} generator - series function\n* @param {Object} [options] - function options\n* @param {PositiveInteger} [options.maxTerms=1000000] - maximum number of terms to be added\n* @param {PositiveNumber} [options.tolerance=2.22e-16] - further terms are only added as long as the next term is greater than current term times the tolerance\n* @param {number} [options.initialValue=0] - initial value of the resulting sum\n* @returns {number} sum of all series terms\n*\n* @example\n* var gen = geometricSeriesClosure( 0.9 )\n* var out = sumSeries( gen );\n* // returns 10.0\n*\n* function geometricSeriesClosure( x ) {\n*     var exponent = -1;\n*     return function() {\n*         exponent += 1;\n*         return Math.pow( x, exponent );\n*     };\n* }\n*/\nfunction sumSeries( generator, options ) {\n\tvar tolerance;\n\tvar nextTerm;\n\tvar counter;\n\tvar result;\n\tvar opts;\n\n\topts = {};\n\n\tif ( arguments.length > 1 ) {\n\t\topts = options;\n\t}\n\ttolerance = opts.tolerance || EPS;\n\tcounter = opts.maxTerms || MAX_TERMS;\n\tresult = opts.initialValue || 0;\n\n\t// Repeatedly call function...\n\tdo {\n\t\tnextTerm = generator();\n\t\tresult += nextTerm;\n\t}\n\twhile ( ( abs(tolerance * result) < abs(nextTerm) ) && --counter ); // eslint-disable-line no-plusplus\n\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sumSeries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Sum the elements of the series given by the supplied function.\n*\n* @module @stdlib/math/base/tools/sum-series\n*\n* @example\n* var sumSeries = require( '@stdlib/math/base/tools/sum-series' );\n*\n* var gen = geometricSeriesClosure( 0.9 )\n* var out = sumSeries( gen );\n* // returns 10\n*\n* function geometricSeriesClosure( x ) {\n*     var exponent = -1;\n*     return function() {\n*         exponent += 1;\n*         return Math.pow( x, exponent );\n*     };\n* }\n*/\n\n// MODULES //\n\nvar hasGeneratorSupport = require( '@stdlib/assert/has-generator-support' );\nvar generator = require( './generators.js' );\nvar basic = require( './basic.js' );\n\n\n// MAIN //\n\nvar sumSeries;\nif ( hasGeneratorSupport() ) {\n\tsumSeries = generator;\n} else {\n\tsumSeries = basic;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sumSeries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Creates a function to evaluate a series expansion of the incomplete gamma function.\n*\n* @private\n* @param {number} a1 - function parameter\n* @param {number} z1 - function parameter\n* @returns {Function} series function\n*/\nfunction lowerIncompleteGammaSeries( a1, z1 ) {\n\tvar result = 1.0;\n\tvar a = a1;\n\tvar z = z1;\n\treturn next;\n\n\t/**\n\t* Calculate the next term of the series.\n\t*\n\t* @private\n\t* @returns {number} series expansion term\n\t*/\n\tfunction next() {\n\t\tvar r = result;\n\t\ta += 1.0;\n\t\tresult *= z/a;\n\t\treturn r;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = lowerIncompleteGammaSeries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar sumSeries = require( './../../../../base/tools/sum-series' );\nvar lowerIncompleteGammaSeries = require( './lower_incomplete_gamma_series.js' );\n\n\n// MAIN //\n\n/**\n* Sums elements of the series expansion of the lower incomplete gamma function.\n*\n* ## Method\n*\n* -   Multiply result by `((z^a) * (e^-z) / a)` to get the full lower incomplete integral.\n* -   Divide by `tgamma(a)` to get the normalized value.\n*\n* @private\n* @param {number} a - function parameter\n* @param {number} z - function parameter\n* @param {number} initialValue - initial value of the resulting sum\n* @returns {number} sum of terms of lower gamma series\n*/\nfunction lowerGammaSeries( a, z, initialValue ) {\n\tvar result;\n\tvar s;\n\n\tinitialValue = initialValue || 0.0;\n\ts = lowerIncompleteGammaSeries( a, z );\n\tresult = sumSeries( s, {\n\t\t'initialValue': initialValue\n\t});\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = lowerGammaSeries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn Infinity;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 709811.662581658 + (x * (679979.8474157227 + (x * (293136.7857211597 + (x * (74887.54032914672 + (x * (12555.290582413863 + (x * (1443.4299244417066 + (x * (115.24194596137347 + (x * (6.309239205732627 + (x * (0.22668404630224365 + (x * (0.004826466289237662 + (x * 0.00004624429436045379))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.0 + (x * (362880.0 + (x * (1026576.0 + (x * (1172700.0 + (x * (723680.0 + (x * (269325.0 + (x * (63273.0 + (x * (9450.0 + (x * (870.0 + (x * (45.0 + (x * 1.0))))))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.00004624429436045379 + (x * (0.004826466289237662 + (x * (0.22668404630224365 + (x * (6.309239205732627 + (x * (115.24194596137347 + (x * (1443.4299244417066 + (x * (12555.290582413863 + (x * (74887.54032914672 + (x * (293136.7857211597 + (x * (679979.8474157227 + (x * 709811.662581658))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (45.0 + (x * (870.0 + (x * (9450.0 + (x * (63273.0 + (x * (269325.0 + (x * (723680.0 + (x * (1172700.0 + (x * (1026576.0 + (x * (362880.0 + (x * 0.0))))))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Calculate the Lanczos sum for the approximation of the gamma function (scaled by `exp(-g)`, where `g = 10.900511`.\n*\n* @module @stdlib/math/base/special/gamma-lanczos-sum-expg-scaled\n*\n* @example\n* var gammaLanczosSumExpGScaled = require( '@stdlib/math/base/special/gamma-lanczos-sum-expg-scaled' );\n*\n* var v = gammaLanczosSumExpGScaled( 4.0 );\n* // returns ~0.018\n*\n* v = gammaLanczosSumExpGScaled( -1.5 );\n* // returns ~25.337\n*\n* v = gammaLanczosSumExpGScaled( -0.5 );\n* // returns ~-12.911\n*\n* v = gammaLanczosSumExpGScaled( 0.5 );\n* // returns ~1.772\n*\n* v = gammaLanczosSumExpGScaled( 0.0 );\n* // returns Infinity\n*\n* v = gammaLanczosSumExpGScaled( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar gammaLanczosSumExpGScaled = require( './gamma_lanczos_sum_expg_scaled.js' );\n\n\n// EXPORTS //\n\nmodule.exports = gammaLanczosSumExpGScaled;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006-7, 2013-14.\n* Copyright Paul A. Bristow 2007, 2013-14.\n* Copyright Nikhar Agrawal 2013-14.\n* Copyright Christopher Kormanyos 2013-14.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar lanczosSumExpGScaled = require( './../../../../base/special/gamma-lanczos-sum-expg-scaled' );\nvar gammaln = require( './../../../../base/special/gammaln' );\nvar gamma = require( './../../../../base/special/gamma' );\nvar log1p = require( './../../../../base/special/log1p' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar abs = require( './../../../../base/special/abs' );\nvar exp = require( './../../../../base/special/exp' );\nvar pow = require( './../../../../base/special/pow' );\nvar max = require( './../../../../base/special/max' );\nvar min = require( './../../../../base/special/min' );\nvar ln = require( './../../../../base/special/ln' );\nvar MAX_LN = require( '@stdlib/constants/float64/max-ln' );\nvar MIN_LN = require( '@stdlib/constants/float64/min-ln' );\nvar G = require( '@stdlib/constants/float64/gamma-lanczos-g' );\nvar E = require( '@stdlib/constants/float64/e' );\n\n\n// MAIN //\n\n/**\n* Computes `(z^a)*(e^-z) / gamma(a)`.\n*\n* @private\n* @param {number} a - input value\n* @param {number} z - input value\n* @returns {number} function value\n*/\nfunction regularisedGammaPrefix( a, z ) {\n\tvar prefix;\n\tvar amza;\n\tvar agh;\n\tvar alz;\n\tvar amz;\n\tvar sq;\n\tvar d;\n\n\tagh = a + G - 0.5;\n\td = ( (z - a) - G + 0.5 ) / agh;\n\tif ( a < 1.0 ) {\n\t\t// Treat a < 1 as a special case because our Lanczos approximations are optimized against the factorials with a > 1, and for high precision types very small values of `a` can give rather erroneous results for gamma:\n\t\tif ( z <= MIN_LN ) {\n\t\t\t// Use logs, so should be free of cancellation errors:\n\t\t\treturn exp( ( a * ln(z) ) - z - gammaln( a ) );\n\t\t}\n\t\t// No danger of overflow as gamma(a) < 1/a for small a, so direct calculation:\n\t\treturn pow( z, a ) * exp( -z ) / gamma( a );\n\t}\n\tif ( abs(d*d*a) <= 100.0 && a > 150.0 ) {\n\t\t// Special case for large a and a ~ z:\n\t\tprefix = ( a * ( log1p( d ) - d ) ) + ( z * ( 0.5-G ) / agh );\n\t\tprefix = exp( prefix );\n\t}\n\telse {\n\t\t// General case. Direct computation is most accurate, but use various fallbacks for different parts of the problem domain:\n\t\talz = a * ln(z / agh);\n\t\tamz = a - z;\n\t\tif (\n\t\t\tmin(alz, amz) <= MIN_LN ||\n\t\t\tmax(alz, amz) >= MAX_LN\n\t\t) {\n\t\t\tamza = amz / a;\n\t\t\tif (\n\t\t\t\tmin(alz, amz)/2.0 > MIN_LN &&\n\t\t\t\tmax(alz, amz)/2.0 < MAX_LN\n\t\t\t) {\n\t\t\t\t// Compute square root of the result and then square it:\n\t\t\t\tsq = pow( z / agh, a / 2.0 ) * exp( amz / 2.0 );\n\t\t\t\tprefix = sq * sq;\n\t\t\t}\n\t\t\telse if (\n\t\t\t\tmin(alz, amz)/4.0 > MIN_LN &&\n\t\t\t\tmax(alz, amz)/4.0 < MAX_LN &&\n\t\t\t\tz > a\n\t\t\t) {\n\t\t\t\t// Compute the 4th root of the result then square it twice:\n\t\t\t\tsq = pow( z / agh, a / 4.0 ) * exp( amz / 4.0 );\n\t\t\t\tprefix = sq * sq;\n\t\t\t\tprefix *= prefix;\n\t\t\t}\n\t\t\telse if (\n\t\t\t\tamza > MIN_LN &&\n\t\t\t\tamza < MAX_LN\n\t\t\t) {\n\t\t\t\tprefix = pow( (z * exp(amza)) / agh, a );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprefix = exp( alz + amz );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprefix = pow( z / agh, a ) * exp( amz );\n\t\t}\n\t}\n\tprefix *= sqrt( agh / E ) / lanczosSumExpGScaled( a );\n\treturn prefix;\n}\n\n\n// EXPORTS //\n\nmodule.exports = regularisedGammaPrefix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_60_0/boost/math/special_functions/powm1.hpp}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar abs = require( './../../../../base/special/abs' );\nvar expm1 = require( './../../../../base/special/expm1' );\nvar ln = require( './../../../../base/special/ln' );\nvar pow = require( './../../../../base/special/pow' );\nvar trunc = require( './../../../../base/special/trunc' );\n\n\n// MAIN //\n\n/**\n* Evaluates `bˣ - 1`.\n*\n* @param {number} b - base\n* @param {number} x - exponent\n* @returns {number} function value\n*\n* @example\n* var y = powm1( 2.0, 3.0 );\n* // returns 7.0\n*\n* @example\n* var y = powm1( 4.0, 0.5 );\n* // returns 1.0\n*\n* @example\n* var y = powm1( 0.0, 100.0 );\n* // returns -1.0\n*\n* @example\n* var y = powm1( 100.0, 0.0 );\n* // returns 0.0\n*\n* @example\n* var y = powm1( 0.0, 0.0 );\n* // returns 0.0\n*\n* @example\n* var y = powm1( 3.141592653589793, 5.0 );\n* // returns ~305.0197\n*\n* @example\n* var y = powm1( NaN, 3.0 );\n* // returns NaN\n*\n* @example\n* var y = powm1( 5.0, NaN );\n* // returns NaN\n*/\nfunction powm1( b, x ) {\n\tvar y;\n\tif (\n\t\tisnan( b ) ||\n\t\tisnan( x )\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x === 0.0 ) {\n\t\t// Any number raised to zero (including 0) is always 1 => b^0 - 1 = 0\n\t\treturn 0.0;\n\t}\n\tif ( b === 0.0 ) {\n\t\t// Zero raised to any number (except 0) is always zero => 0^x - 1 = -1\n\t\treturn -1.0;\n\t}\n\tif ( b < 0.0 && x%2.0 === 0 ) {\n\t\t// If `x` is even, recognize that `(-b)**x == (b)**x`...\n\t\tb = -b;\n\t}\n\tif ( b > 0.0 ) {\n\t\tif (\n\t\t\tabs( x*(b-1.0) ) < 0.5 ||\n\t\t\tabs( x ) < 0.2\n\t\t) {\n\t\t\t// No good/quick approximation for ln(b)*x, so we have to evaluate...\n\t\t\ty = ln( b ) * x;\n\t\t\tif ( y < 0.5 ) {\n\t\t\t\treturn expm1( y );\n\t\t\t}\n\t\t}\n\t} else if ( trunc( x ) !== x ) {\n\t\t// Exponentiation would yield a complex result...\n\t\treturn NaN;\n\t}\n\treturn pow( b, x ) - 1.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = powm1;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.029232972183027003;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.029232972183027003 + (x * (0.14421626775719232 + (x * (-0.14244039073863127 + (x * (0.05428096940550536 + (x * (-0.008505359768683364 + (x * (0.0004311713426792973 + (x * 0.0))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (-1.5016935605448505 + (x * (0.846973248876495 + (x * (-0.22009515181499575 + (x * (0.02558279715597587 + (x * (-0.0010066679553914337 + (x * -8.271935218912905e-7))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.0 + (x * (0.0004311713426792973 + (x * (-0.008505359768683364 + (x * (0.05428096940550536 + (x * (-0.14244039073863127 + (x * (0.14421626775719232 + (x * -0.029232972183027003))))))))))); // eslint-disable-line max-len\n\t\ts2 = -8.271935218912905e-7 + (x * (-0.0010066679553914337 + (x * (0.02558279715597587 + (x * (-0.22009515181499575 + (x * (0.846973248876495 + (x * (-1.5016935605448505 + (x * 1.0))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/detail/lgamma_small.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006-7, 2013-14.\n* (C) Copyright Paul A. Bristow 2007, 2013-14.\n* (C) Copyright Nikhar Agrawal 2013-14.\n* (C) Copyright Christopher Kormanyos 2013-14.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ln = require( './../../../../base/special/ln' );\nvar EPS = require( '@stdlib/constants/float64/eps' );\nvar rateval1 = require( './rational_p1q1.js' );\nvar rateval2 = require( './rational_p2q2.js' );\nvar rateval3 = require( './rational_p3q3.js' );\n\n\n// VARIABLES //\n\nvar Y1 = 0.158963680267333984375;\nvar Y2 = 0.52815341949462890625;\nvar Y3 = 0.452017307281494140625;\n\n\n// MAIN //\n\n/**\n* Evaluates the natural logarithm of the gamma function for small arguments.\n*\n* ## Method\n*\n* 1.  For \\\\( z > 2 \\\\), begin by performing argument reduction until \\\\( z \\\\) is in \\\\(\\[2,3)\\\\). Use the following form:\n*\n*     ```tex\n*     \\operatorname{gammaln}(z) = (z-2)(z+1)(Y + R(z-2))\n*     ```\n*\n*     where \\\\( R(z-2) \\\\) is a rational approximation optimized for low absolute error. As long as the absolute error is small compared to the constant \\\\( Y \\\\), then any rounding error in the computation will get wiped out.\n*\n* 2.  If \\\\( z < 1 \\\\), use recurrence to shift to \\\\( z \\\\) in the interval \\\\(\\[1,2\\]\\\\). Then, use one of two approximations: one for \\\\( z \\\\) in \\\\(\\[1,1.5\\]\\\\) and one for \\\\( z \\\\) in \\\\(\\[1.5,2\\]\\\\):\n*\n*     -   For \\(( z \\\\) in \\\\(\\[1,1.5\\]\\\\), use\n*\n*         ```tex\n*         \\operatorname{gammaln}(z) = (z-1)(z-2)(Y + R(z-1))\n*         ```\n*\n*         where \\\\( R(z-1) \\\\) is a rational approximation optimized for low absolute error. As long as the absolute error is small compared to the constant \\\\( Y \\\\), then any rounding error in the computation will get wiped out.\n*\n*     -   For \\\\( z \\\\) in \\\\(\\[1.5,2\\]\\\\), use\n*\n*         ```tex\n*         \\operatorname{gammaln}(z) = (2-z)(1-z)(Y + R(2-z))\n*         ```\n*\n*         where \\\\( R(2-z) \\\\) is a rational approximation optimized for low absolute error. As long as the absolute error is small compared to the constant \\\\( Y \\\\), then any rounding error in the computation will get wiped out.\n*\n*\n* ## Notes\n*\n* -   Relative error:\n*\n*     | function | peak         | maximum deviation |\n*     |:--------:|:------------:|:-----------------:|\n*     | R(Z-2)   | 4.231e-18    | 5.900e-24         |\n*     | R(Z-1)   | 1.230011e-17 | 3.139e-021        |\n*     | R(2-Z)   | 1.797565e-17 | 2.151e-021        |\n*\n*\n* @private\n* @param {number} z - input value\n* @param {number} zm1 - `z` minus one\n* @param {number} zm2 - `z` minus two\n* @returns {number} function value\n*/\nfunction lgammaSmallImp( z, zm1, zm2 ) {\n\tvar prefix;\n\tvar result;\n\tvar r;\n\tvar R;\n\n\tif ( z < EPS ) {\n\t\treturn -ln( z );\n\t}\n\tif ( zm1 === 0.0 || zm2 === 0.0 ) {\n\t\treturn 0.0;\n\t}\n\tresult = 0.0;\n\tif ( z > 2.0 ) {\n\t\tif ( z >= 3.0 ) {\n\t\t\tdo {\n\t\t\t\tz -= 1.0;\n\t\t\t\tzm2 -= 1.0;\n\t\t\t\tresult += ln(z);\n\t\t\t} while ( z >= 3.0 );\n\t\t\tzm2 = z - 2.0;\n\t\t}\n\t\tr = zm2 * ( z+1.0 );\n\t\tR = rateval1( zm2 );\n\t\tresult += ( r*Y1 ) + ( r*R );\n\t\treturn result;\n\t}\n\tif ( z < 1.0 ) {\n\t\tresult += -ln(z);\n\t\tzm2 = zm1;\n\t\tzm1 = z;\n\t\tz += 1.0;\n\t}\n\tif ( z <= 1.5 ) {\n\t\tr = rateval2( zm1 );\n\t\tprefix = zm1 * zm2;\n\t\tresult += ( prefix*Y2 ) + ( prefix*r );\n\t\treturn result;\n\t}\n\t// Case: 1.5 < z <= 2\n\tr = zm2 * zm1;\n\tR = rateval3( -zm2 );\n\tresult += ( r*Y3 ) + ( r*R );\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = lgammaSmallImp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.01803556856784494;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.01803556856784494 + (x * (0.02512664961998968 + (x * (0.049410315156753225 + (x * (0.0172491608709614 + (x * (-0.0002594535632054381 + (x * (-0.0005410098692152044 + (x * (-0.00003245886498259485 + (x * 0.0))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (1.962029871977952 + (x * (1.4801966942423133 + (x * (0.5413914320717209 + (x * (0.09885042511280101 + (x * (0.008213096746488934 + (x * (0.00022493629192211576 + (x * -2.2335276320861708e-7))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.0 + (x * (-0.00003245886498259485 + (x * (-0.0005410098692152044 + (x * (-0.0002594535632054381 + (x * (0.0172491608709614 + (x * (0.049410315156753225 + (x * (0.02512664961998968 + (x * -0.01803556856784494))))))))))))); // eslint-disable-line max-len\n\t\ts2 = -2.2335276320861708e-7 + (x * (0.00022493629192211576 + (x * (0.008213096746488934 + (x * (0.09885042511280101 + (x * (0.5413914320717209 + (x * (1.4801966942423133 + (x * (1.962029871977952 + (x * 1.0))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn 0.04906224540690395;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 0.04906224540690395 + (x * (-0.09691175301595212 + (x * (-0.4149833583594954 + (x * (-0.4065671242119384 + (x * (-0.1584135863906922 + (x * (-0.024014982064857155 + (x * -0.0010034668769627955))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (3.0234982984646304 + (x * (3.4873958536072385 + (x * (1.9141558827442668 + (x * (0.5071377386143635 + (x * (0.05770397226904519 + (x * 0.001957681026011072))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = -0.0010034668769627955 + (x * (-0.024014982064857155 + (x * (-0.1584135863906922 + (x * (-0.4065671242119384 + (x * (-0.4149833583594954 + (x * (-0.09691175301595212 + (x * 0.04906224540690395))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.001957681026011072 + (x * (0.05770397226904519 + (x * (0.5071377386143635 + (x * (1.9141558827442668 + (x * (3.4873958536072385 + (x * (3.0234982984646304 + (x * 1.0))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006-7, 2013-14.\n* (C) Copyright Paul A. Bristow 2007, 2013-14.\n* (C) Copyright Nikhar Agrawal 2013-14.\n* (C) Copyright Christopher Kormanyos 2013-14.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gamma = require( './../../../../base/special/gamma' );\nvar expm1 = require( './../../../../base/special/expm1' );\nvar log1p = require( './../../../../base/special/log1p' );\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar lgammaSmallImp = require( './lgamma_small_imp.js' );\n\n\n// MAIN //\n\n/**\n* Computes `gamma(x+1) - 1`.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = gammap1m1( 0.2 );\n* // returns ~-0.082\n*\n* @example\n* var v = gammap1m1( -9.2 );\n* // returns ~-1.0\n*\n* @example\n* var v = gammap1m1( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = gammap1m1( -3.0 );\n* // returns NaN\n*\n* @example\n* var v = gammap1m1( NaN );\n* // returns NaN\n*/\nfunction gammap1m1( x ) {\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( x < 0.0 ) {\n\t\tif ( x < -0.5 ) {\n\t\t\t// Best method is simply to subtract 1 from gamma:\n\t\t\treturn gamma( 1.0+x ) - 1.0;\n\t\t}\n\t\t// Use expm1 on the logarithm of gamma:\n\t\treturn expm1( -log1p( x ) + lgammaSmallImp( x+2.0, x+1.0, x ) );\n\t}\n\tif ( x < 2.0 ) {\n\t\t// Use expm1 on the logarithm of gamma:\n\t\treturn expm1( lgammaSmallImp( x+1.0, x, x-1.0 ) );\n\t}\n\t// Best method is simply to subtract 1 from gamma:\n\treturn gamma( 1.0+x ) - 1.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gammap1m1;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n/**\n* Series representation for upper fraction when `z` is small.\n*\n* @private\n* @param {number} a - function parameter\n* @param {number} x - function parameter\n* @returns {Function} series function\n*/\nfunction smallGamma2Series( a, x ) {\n\tvar result;\n\tvar apn;\n\tvar n;\n\tvar r;\n\n\tresult = -x;\n\tx = -x;\n\tapn = a + 1.0;\n\tn = 1;\n\treturn next;\n\n\t/**\n\t* Calculate the next term of the series.\n\t*\n\t* @private\n\t* @returns {number} series expansion term\n\t*/\n\tfunction next() {\n\t\tr = result / apn;\n\t\tresult *= x;\n\t\tn += 1;\n\t\tresult /= n;\n\t\tapn += 1.0;\n\t\treturn r;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = smallGamma2Series;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar powm1 = require( './../../../../base/special/powm1' );\nvar sumSeries = require( './../../../../base/tools/sum-series' );\nvar gamma1pm1 = require( './../../../../base/special/gamma1pm1' );\nvar smallGamma2Series = require( './small_gamma2_series.js' );\n\n\n// MAIN //\n\n/**\n* Compute the full upper fraction (Q) when `a` is very small.\n*\n* @private\n* @param {number} a - function parameter\n* @param {number} x - function parameter\n* @param {boolean} invert - boolean indicating if the upper tail of the incomplete gamma function should be evaluated\n* @returns {Array} full upper fraction (Q) and pgam\n*/\nfunction tgammaSmallUpperPart( a, x, invert ) {\n\tvar initialValue;\n\tvar result;\n\tvar pgam;\n\tvar p;\n\tvar s;\n\n\tresult = gamma1pm1( a );\n\tpgam = ( result + 1.0 ) / a;\n\tp = powm1( x, a );\n\tresult -= p;\n\tresult /= a;\n\ts = smallGamma2Series( a, x );\n\tp += 1.0;\n\tinitialValue = ( invert ) ? pgam : 0.0;\n\tresult = -p * sumSeries( s, {\n\t\t'initialValue': (initialValue - result) / p\n\t});\n\tif ( invert ) {\n\t\tresult = -result;\n\t}\n\treturn [ result, pgam ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = tgammaSmallUpperPart;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Smallest positive single-precision floating-point normal number.\n*\n* @module @stdlib/constants/float32/smallest-normal\n* @type {number}\n*\n* @example\n* var FLOAT32_SMALLEST_NORMAL = require( '@stdlib/constants/float32/smallest-normal' );\n* // returns 1.1754943508222875e-38\n*/\n\n\n// MAIN //\n\n/**\n* The smallest positive single-precision floating-point normal number.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* \\frac{1}{2^{127-1}}\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 00000001 00000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default 1.1754943508222875e-38\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT32_SMALLEST_NORMAL = 1.1754943508222875e-38;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT32_SMALLEST_NORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( './../../../../base/special/abs' );\nvar FLOAT32_SMALLEST_NORMAL = require( '@stdlib/constants/float32/smallest-normal' );\nvar EPS = require( '@stdlib/constants/float64/eps' );\n\n\n// VARIABLES //\n\nvar MAX_ITER = 1000000;\n\n\n// FUNCTIONS //\n\n/**\n* Evaluates a continued fraction expansion.\n*\n* ```text\n*           a1\n*      ---------------\n*      b1 +     a2\n*           ----------\n*            b2 +   a3\n*                -----\n*                b3 + ...\n* ```\n*\n* @private\n* @param {Function} gen - function giving terms of continued fraction expansion\n* @param {PositiveNumber} factor - further terms are only added as long as factor*result is smaller than the next term\n* @param {PositiveInteger} maxIter - maximum number of iterations\n* @returns {number} evaluated expansion\n*/\nfunction continuedFractionA( gen, factor, maxIter ) {\n\tvar isgenerator;\n\tvar delta;\n\tvar a0;\n\tvar f;\n\tvar C;\n\tvar D;\n\tvar v;\n\n\tisgenerator = typeof gen.next === 'function';\n\tv = ( isgenerator ) ? gen.next().value : gen();\n\tf = v[ 1 ];\n\ta0 = v[ 0 ];\n\tif ( f === 0.0 ) {\n\t\tf = FLOAT32_SMALLEST_NORMAL;\n\t}\n\tC = f;\n\tD = 0;\n\tif ( isgenerator === true ) {\n\t\tdo {\n\t\t\tv = gen.next().value;\n\t\t\tif ( v ) {\n\t\t\t\tD = v[ 1 ] + ( v[ 0 ] * D );\n\t\t\t\tif ( D === 0.0 ) {\n\t\t\t\t\tD = FLOAT32_SMALLEST_NORMAL;\n\t\t\t\t}\n\t\t\t\tC = v[ 1 ] + ( v[ 0 ] / C );\n\t\t\t\tif ( C === 0.0 ) {\n\t\t\t\t\tC = FLOAT32_SMALLEST_NORMAL;\n\t\t\t\t}\n\t\t\t\tD = 1.0 / D;\n\t\t\t\tdelta = C * D;\n\t\t\t\tf *= delta;\n\t\t\t}\n\t\t} while ( ( abs( delta - 1.0 ) > factor ) && --maxIter ); // eslint-disable-line no-plusplus\n\t} else {\n\t\tdo {\n\t\t\tv = gen();\n\t\t\tif ( v ) {\n\t\t\t\tD = v[ 1 ] + ( v[ 0 ] * D );\n\t\t\t\tif ( D === 0.0 ) {\n\t\t\t\t\tD = FLOAT32_SMALLEST_NORMAL;\n\t\t\t\t}\n\t\t\t\tC = v[ 1 ] + ( v[ 0 ] / C );\n\t\t\t\tif ( C === 0.0 ) {\n\t\t\t\t\tC = FLOAT32_SMALLEST_NORMAL;\n\t\t\t\t}\n\t\t\t\tD = 1.0 / D;\n\t\t\t\tdelta = C * D;\n\t\t\t\tf *= delta;\n\t\t\t}\n\t\t} while ( v && ( abs( delta - 1.0 ) > factor ) && --maxIter ); // eslint-disable-line no-plusplus\n\t}\n\treturn a0 / f;\n}\n\n/**\n* Evaluates a continued fraction expansion.\n*\n* ```text\n*      b0 +    a1\n*      ---------------\n*      b1 +     a2\n*           ----------\n*           b2 +   a3\n*                -----\n*                b3 + ...\n* ```\n*\n* @private\n* @param {Function} gen - function giving terms of continued fraction expansion\n* @param {PositiveNumber} factor - further terms are only added as long as factor*result is smaller than the next term\n* @param {PositiveInteger} maxIter - maximum number of iterations\n* @returns {number} evaluated expansion\n*/\nfunction continuedFractionB( gen, factor, maxIter ) {\n\tvar isgenerator;\n\tvar delta;\n\tvar f;\n\tvar C;\n\tvar D;\n\tvar v;\n\n\tisgenerator = typeof gen.next === 'function';\n\tv = ( isgenerator ) ? gen.next().value : gen();\n\tf = v[ 1 ];\n\tif ( f === 0.0 ) {\n\t\tf = FLOAT32_SMALLEST_NORMAL;\n\t}\n\tC = f;\n\tD = 0.0;\n\tif ( isgenerator === true ) {\n\t\tdo {\n\t\t\tv = gen.next().value;\n\t\t\tif ( v ) {\n\t\t\t\tD = v[ 1 ] + ( v[ 0 ] * D );\n\t\t\t\tif ( D === 0.0 ) {\n\t\t\t\t\tD = FLOAT32_SMALLEST_NORMAL;\n\t\t\t\t}\n\t\t\t\tC = v[ 1 ] + ( v[ 0 ] / C );\n\t\t\t\tif ( C === 0.0 ) {\n\t\t\t\t\tC = FLOAT32_SMALLEST_NORMAL;\n\t\t\t\t}\n\t\t\t\tD = 1.0 / D;\n\t\t\t\tdelta = C * D;\n\t\t\t\tf *= delta;\n\t\t\t}\n\t\t} while ( v && ( abs( delta - 1.0 ) > factor ) && --maxIter ); // eslint-disable-line no-plusplus\n\t} else {\n\t\tdo {\n\t\t\tv = gen();\n\t\t\tif ( v ) {\n\t\t\t\tD = v[ 1 ] + ( v[ 0 ] * D );\n\t\t\t\tif ( D === 0.0 ) {\n\t\t\t\t\tD = FLOAT32_SMALLEST_NORMAL;\n\t\t\t\t}\n\t\t\t\tC = v[ 1 ] + ( v[ 0 ] / C );\n\t\t\t\tif ( C === 0.0 ) {\n\t\t\t\t\tC = FLOAT32_SMALLEST_NORMAL;\n\t\t\t\t}\n\t\t\t\tD = 1.0 / D;\n\t\t\t\tdelta = C * D;\n\t\t\t\tf *= delta;\n\t\t\t}\n\t\t} while ( v && ( abs( delta - 1.0 ) > factor ) && --maxIter ); // eslint-disable-line no-plusplus\n\t}\n\treturn f;\n}\n\n\n// MAIN //\n\n/**\n* Evaluates the continued fraction approximation for the supplied series generator using the modified Lentz algorithm.\n*\n* ## References\n*\n* -   Lentz, William J. 1976. \"Generating bessel functions in Mie scattering calculations using continued fractions.\" _Applied Optics_ 15 (3): 668–71. doi:[10.1364/AO.15.000668](https://doi.org/10.1364/AO.15.000668).\n*\n* @param {Function} generator - function returning terms of continued fraction expansion\n* @param {Object} [options] - function options\n* @param {PositiveInteger} [options.maxIter=1000] - maximum number of iterations\n* @param {PositiveNumber} [options.tolerance=2.22e-16] - further terms are only added as long as the next term is greater than current term times the tolerance\n* @param {boolean} [options.keep=false] - whether to keep the leading b term\n* @returns {number} value of continued fraction\n*\n* @example\n* // Continued fraction for (e-1)^(-1):\n* var gen = generator();\n* var out = continuedFraction( gen );\n* // returns ~0.582\n*\n* function* generator() {\n*    var i = 0;\n*    while ( true ) {\n*        i++;\n*        yield [ i, i ];\n*    }\n* }\n*/\nfunction continuedFraction( generator, options ) {\n\tvar maxIter;\n\tvar opts;\n\tvar eps;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\topts = options;\n\t}\n\tmaxIter = opts.maxIter || MAX_ITER;\n\teps = opts.tolerance || EPS;\n\n\tif ( opts.keep ) {\n\t\treturn continuedFractionB( generator, eps, maxIter );\n\t}\n\treturn continuedFractionA( generator, eps, maxIter );\n}\n\n\n// EXPORTS //\n\nmodule.exports = continuedFraction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( './../../../../base/special/abs' );\nvar EPS = require( '@stdlib/constants/float64/eps' );\nvar FLOAT32_SMALLEST_NORMAL = require( '@stdlib/constants/float32/smallest-normal' );\n\n\n// VARIABLES //\n\nvar MAX_ITER = 1000000;\n\n\n// FUNCTIONS //\n\n/**\n* Evaluates a continued fraction expansion.\n*\n* ```text\n*           a1\n*      ---------------\n*      b1 +     a2\n*           ----------\n*            b2 +   a3\n*                -----\n*                b3 + ...\n* ```\n*\n* @private\n* @param {Function} gen - function giving terms of continued fraction expansion\n* @param {PositiveNumber} factor - further terms are only added as long as factor*result is smaller than the next term\n* @param {PositiveInteger} maxIter - maximum number of iterations\n* @returns {number} evaluated expansion\n*/\nfunction continuedFractionA( gen, factor, maxIter ) {\n\tvar delta;\n\tvar a0;\n\tvar C;\n\tvar D;\n\tvar f;\n\tvar v;\n\n\tv = gen();\n\tf = v[ 1 ];\n\ta0 = v[ 0 ];\n\tif ( f === 0 ) {\n\t\tf = FLOAT32_SMALLEST_NORMAL;\n\t}\n\tC = f;\n\tD = 0.0;\n\n\tdo {\n\t\tv = gen();\n\t\tif ( v ) {\n\t\t\tD = v[ 1 ] + ( v[ 0 ] * D );\n\t\t\tif ( D === 0.0 ) {\n\t\t\t\tD = FLOAT32_SMALLEST_NORMAL;\n\t\t\t}\n\t\t\tC = v[ 1 ] + ( v[ 0 ] / C );\n\t\t\tif ( C === 0.0 ) {\n\t\t\t\tC = FLOAT32_SMALLEST_NORMAL;\n\t\t\t}\n\t\t\tD = 1.0 / D;\n\t\t\tdelta = C * D;\n\t\t\tf *= delta;\n\t\t}\n\t} while ( v && ( abs( delta - 1.0 ) > factor ) && --maxIter ); // eslint-disable-line no-plusplus\n\n\treturn a0 / f;\n}\n\n/**\n* Evaluates a continued fraction expansion.\n*\n* ```text\n*      b0 +   a1\n*      ---------------\n*      b1 +   a2\n*           ----------\n*           b2 +   a3\n*                -----\n*                b3 + ...\n* ```\n*\n* @private\n* @param {Function} gen - function giving terms of continued fraction expansion\n* @param {PositiveNumber} factor - further terms are only added as long as factor*result is smaller than the next term\n* @param {PositiveInteger} maxIter - maximum number of iterations\n* @returns {number} evaluated expansion\n*/\nfunction continuedFractionB( gen, factor, maxIter ) {\n\tvar delta;\n\tvar C;\n\tvar D;\n\tvar f;\n\tvar v;\n\n\tv = gen();\n\tf = v[ 1 ];\n\tif ( f === 0.0 ) {\n\t\tf = FLOAT32_SMALLEST_NORMAL;\n\t}\n\tC = f;\n\tD = 0.0;\n\tdo {\n\t\tv = gen();\n\t\tif ( v ) {\n\t\t\tD = v[ 1 ] + ( v[ 0 ] * D );\n\t\t\tif ( D === 0.0 ) {\n\t\t\t\tD = FLOAT32_SMALLEST_NORMAL;\n\t\t\t}\n\t\t\tC = v[ 1 ] + ( v[ 0 ] / C );\n\t\t\tif ( C === 0.0 ) {\n\t\t\t\tC = FLOAT32_SMALLEST_NORMAL;\n\t\t\t}\n\t\t\tD = 1.0 / D;\n\t\t\tdelta = C * D;\n\t\t\tf *= delta;\n\t\t}\n\t} while ( v && ( abs( delta - 1.0 ) > factor ) && --maxIter ); // eslint-disable-line no-plusplus\n\treturn f;\n}\n\n\n// MAIN //\n\n/**\n* Evaluates the continued fraction approximation for the supplied series generator using the modified Lentz algorithm.\n*\n* ## References\n*\n* -   Lentz, William J. 1976. \"Generating bessel functions in Mie scattering calculations using continued fractions.\" _Applied Optics_ 15 (3): 668–71. doi:[10.1364/AO.15.000668](https://doi.org/10.1364/AO.15.000668).\n*\n* @param {Function} generator - function returning terms of continued fraction expansion\n* @param {Object} [options] - function options\n* @param {PositiveInteger} [options.maxIter=1000000] - maximum number of iterations\n* @param {PositiveNumber} [options.tolerance=2.22e-16] - further terms are only added as long as the next term is greater than current term times the tolerance\n* @param {boolean} [options.keep=false] - whether to keep the leading b term\n* @returns {number} value of continued fraction\n*\n* @example\n* // Continued fraction for (e-1)^(-1):\n* var gen = generator();\n* var out = continuedFraction( gen );\n* // returns ~0.582\n*\n* function generator() {\n*    var i = 0;\n*    return function() {\n*        i++;\n*        return [ i, i ];\n*    };\n* }\n*/\nfunction continuedFraction( generator, options ) {\n\tvar maxIter;\n\tvar opts;\n\tvar eps;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\topts = options;\n\t}\n\teps = opts.tolerance || EPS;\n\tmaxIter = opts.maxIter || MAX_ITER;\n\n\tif ( opts.keep ) {\n\t\treturn continuedFractionB( generator, eps, maxIter );\n\t}\n\treturn continuedFractionA( generator, eps, maxIter );\n}\n\n\n// EXPORTS //\n\nmodule.exports = continuedFraction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Calculate a continued fraction approximation.\n*\n* @module @stdlib/math/base/tools/continued-fraction\n*\n* @example\n* var continuedFraction = require( '@stdlib/math/base/tools/continued-fraction' );\n*\n* // Continued fraction for (e-1)^(-1):\n* var gen = generator()\n* var out = continuedFraction( gen );\n* // returns ~0.582\n*\n* function generator() {\n*    var i = 0;\n*    return function() {\n*        i++;\n*        return [ i, i ];\n*    };\n* }\n*/\n\n// MODULES //\n\nvar hasGeneratorSupport = require( '@stdlib/assert/has-generator-support' );\nvar generator = require( './generators.js' );\nvar basic = require( './basic.js' );\n\n\n// MAIN //\n\nvar continuedFraction;\nif ( hasGeneratorSupport() ) {\n\tcontinuedFraction = generator;\n} else {\n\tcontinuedFraction = basic;\n}\n\n\n// EXPORTS //\n\nmodule.exports = continuedFraction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Creates a function to evaluate a series expansion of the upper incomplete gamma fraction.\n*\n* @private\n* @param {number} a1 - function parameter\n* @param {number} z1 - function parameter\n* @returns {Function} series function\n*/\nfunction upperIncompleteGammaFract( a1, z1 ) {\n\tvar z = z1 - a1 + 1.0;\n\tvar a = a1;\n\tvar k = 0;\n\treturn next;\n\n\t/**\n\t* Calculate the next term of the series.\n\t*\n\t* @private\n\t* @returns {Array} series expansion terms\n\t*/\n\tfunction next() {\n\t\tk += 1;\n\t\tz += 2.0;\n\t\treturn [\n\t\t\tk * (a - k),\n\t\t\tz\n\t\t];\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = upperIncompleteGammaFract;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar continuedFraction = require( './../../../../base/tools/continued-fraction' );\nvar upperIncompleteGammaFract = require( './upper_incomplete_gamma_fract.js' );\n\n\n// MAIN //\n\n/**\n* Evaluate the lower incomplete gamma integral via a series expansion and divide by `gamma(z)` to normalize.\n*\n* @private\n* @param {number} a - function parameter\n* @param {number} z - function parameter\n* @returns {number} function value\n*/\nfunction upperGammaFraction( a, z ) {\n\tvar f = upperIncompleteGammaFract( a, z );\n\treturn 1.0 / ( z - a + 1.0 + continuedFraction( f ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = upperGammaFraction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_62_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006-7, 2013-14.\n* (C) Copyright Paul A. Bristow 2007, 2013-14.\n* (C) Copyright Nikhar Agrawal 2013-14.\n* (C) Christopher Kormanyos 2013-14.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gammaln = require( './../../../../base/special/gammaln' );\nvar floor = require( './../../../../base/special/floor' );\nvar gamma = require( './../../../../base/special/gamma' );\nvar abs = require( './../../../../base/special/abs' );\nvar exp = require( './../../../../base/special/exp' );\nvar pow = require( './../../../../base/special/pow' );\nvar ln = require( './../../../../base/special/ln' );\nvar SQRT_EPSILON = require( '@stdlib/constants/float64/sqrt-eps' );\nvar FLOAT64_MAX = require( '@stdlib/constants/float64/max' );\nvar SQRT_TWO_PI = require( '@stdlib/constants/float64/sqrt-two-pi' );\nvar MAX_LN = require( '@stdlib/constants/float64/max-ln' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar finiteGammaQ = require( './finite_gamma_q.js' );\nvar finiteHalfGammaQ = require( './finite_half_gamma_q.js' );\nvar fullIGammaPrefix = require( './full_igamma_prefix.js' );\nvar igammaTemmeLarge = require( './igamma_temme_large.js' );\nvar lowerGammaSeries = require( './lower_gamma_series.js' );\nvar regularisedGammaPrefix = require( './regularised_gamma_prefix.js' );\nvar tgammaSmallUpperPart = require( './tgamma_small_upper_part.js' );\nvar upperGammaFraction = require( './upper_gamma_fraction.js' );\n\n\n// VARIABLES //\n\nvar MAX_FACTORIAL = 170; // TODO: consider extracting as a constant\n\n\n// MAIN //\n\n/**\n* Computes the regularized incomplete gamma function. The upper tail is calculated via the modified Lentz's method for computing continued fractions, the lower tail using a power expansion.\n*\n*\n* ## Notes\n*\n* -   When `a >= MAX_FACTORIAL` and computing the non-normalized incomplete gamma, result is rather hard to compute unless we use logs. There are really two options a) if `x` is a long way from `a` in value then we can reliably use methods 2 and 4 below in logarithmic form and go straight to the result. Otherwise we let the regularized gamma take the strain (the result is unlikely to underflow in the central region anyway) and combine with `lgamma` in the hopes that we get a finite result.\n*\n* @param {NonNegativeNumber} x - function parameter\n* @param {PositiveNumber} a - function parameter\n* @param {boolean} [regularized=true] - boolean indicating if the function should evaluate the regularized or non-regularized incomplete gamma functions\n* @param {boolean} [upper=false] - boolean indicating if the function should return the upper tail of the incomplete gamma function\n* @returns {number} function value\n*/\nfunction gammainc( x, a, regularized, upper ) {\n\tvar optimisedInvert;\n\tvar normalized;\n\tvar evalMethod;\n\tvar initValue;\n\tvar isHalfInt;\n\tvar useTemme;\n\tvar isSmallA;\n\tvar invert;\n\tvar result;\n\tvar isInt;\n\tvar sigma;\n\tvar gam;\n\tvar res;\n\tvar fa;\n\tvar g;\n\n\tif ( x < 0.0 || a <= 0.0 ) {\n\t\treturn NaN;\n\t}\n\tnormalized = ( regularized === void 0 ) ? true : regularized;\n\tinvert = upper;\n\tresult = 0.0;\n\tif ( a >= MAX_FACTORIAL && !normalized ) {\n\t\tif ( invert && ( a * 4.0 < x ) ) {\n\t\t\t// This is method 4 below, done in logs:\n\t\t\tresult = ( a * ln(x) ) - x;\n\t\t\tresult += ln( upperGammaFraction( a, x ) );\n\t\t}\n\t\telse if ( !invert && ( a > 4.0 * x ) ) {\n\t\t\t// This is method 2 below, done in logs:\n\t\t\tresult = ( a * ln(x) ) - x;\n\t\t\tinitValue = 0;\n\t\t\tresult += ln( lowerGammaSeries( a, x, initValue ) / a );\n\t\t}\n\t\telse {\n\t\t\tresult = gammainc( a, x, true, invert );\n\t\t\tif ( result === 0.0 ) {\n\t\t\t\tif ( invert ) {\n\t\t\t\t\t// Try http://functions.wolfram.com/06.06.06.0039.01\n\t\t\t\t\tresult = 1.0 + ( 1.0 / (12.0*a) ) + ( 1.0 / (288.0*a*a) );\n\t\t\t\t\tresult = ln( result ) - a + ( ( a-0.5 ) * ln(a) );\n\t\t\t\t\tresult += ln( SQRT_TWO_PI );\n\t\t\t\t} else {\n\t\t\t\t\t// This is method 2 below, done in logs, we're really outside the range of this method, but since the result is almost certainly infinite, we should probably be OK:\n\t\t\t\t\tresult = ( a * ln( x ) ) - x;\n\t\t\t\t\tinitValue = 0.0;\n\t\t\t\t\tresult += ln( lowerGammaSeries( a, x, initValue ) / a);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult = ln( result ) + gammaln( a );\n\t\t\t}\n\t\t}\n\t\tif ( result > MAX_LN ) {\n\t\t\treturn PINF;\n\t\t}\n\t\treturn exp( result );\n\t}\n\tisSmallA = ( a < 30 ) && ( a <= x + 1.0 ) && ( x < MAX_LN );\n\tif ( isSmallA ) {\n\t\tfa = floor( a );\n\t\tisInt = ( fa === a );\n\t\tisHalfInt = ( isInt ) ? false : ( abs( fa - a ) === 0.5 );\n\t} else {\n\t\tisInt = isHalfInt = false;\n\t}\n\tif ( isInt && x > 0.6 ) {\n\t\t// Calculate Q via finite sum:\n\t\tinvert = !invert;\n\t\tevalMethod = 0;\n\t}\n\telse if ( isHalfInt && x > 0.2 ) {\n\t\t// Calculate Q via finite sum for half integer a:\n\t\tinvert = !invert;\n\t\tevalMethod = 1;\n\t}\n\telse if ( x < SQRT_EPSILON && a > 1.0 ) {\n\t\tevalMethod = 6;\n\t}\n\telse if ( x < 0.5 ) {\n\t\t// Changeover criterion chosen to give a changeover at Q ~ 0.33:\n\t\tif ( -0.4 / ln( x ) < a ) {\n\t\t\tevalMethod = 2;\n\t\t} else {\n\t\t\tevalMethod = 3;\n\t\t}\n\t}\n\telse if ( x < 1.1 ) {\n\t\t// Changeover here occurs when P ~ 0.75 or Q ~ 0.25:\n\t\tif ( x * 0.75 < a ) {\n\t\t\tevalMethod = 2;\n\t\t} else {\n\t\t\tevalMethod = 3;\n\t\t}\n\t}\n\telse {\n\t\t// Begin by testing whether we're in the \"bad\" zone where the result will be near 0.5 and the usual series and continued fractions are slow to converge:\n\t\tuseTemme = false;\n\t\tif ( normalized && a > 20 ) {\n\t\t\tsigma = abs( (x-a)/a );\n\t\t\tif ( a > 200 ) {\n\t\t\t\t// Limit chosen so that we use Temme's expansion only if the result would be larger than about 10^-6. Below that the regular series and continued fractions converge OK, and if we use Temme's method we get increasing errors from the dominant erfc term as it's (inexact) argument increases in magnitude.\n\t\t\t\tif ( 20 / a > sigma * sigma ) {\n\t\t\t\t\tuseTemme = true;\n\t\t\t\t}\n\t\t\t} else if ( sigma < 0.4 ) {\n\t\t\t\tuseTemme = true;\n\t\t\t}\n\t\t}\n\t\tif ( useTemme ) {\n\t\t\tevalMethod = 5;\n\t\t}\n\t\t// Regular case where the result will not be too close to 0.5: Changeover occurs at P ~ Q ~ 0.5. Note that series computation of P is about x2 faster than continued fraction calculation of Q, so try and use the CF only when really necessary, especially for small x.\n\t\telse if ( x - ( 1.0 / (3.0 * x) ) < a ) {\n\t\t\tevalMethod = 2;\n\t\t} else {\n\t\t\tevalMethod = 4;\n\t\t\tinvert = !invert;\n\t\t}\n\t}\n\n\t/* eslint-disable default-case */\n\tswitch ( evalMethod ) {\n\tcase 0:\n\t\tresult = finiteGammaQ( a, x );\n\t\tif (normalized === false ) {\n\t\t\tresult *= gamma( a );\n\t\t}\n\t\tbreak;\n\tcase 1:\n\t\tresult = finiteHalfGammaQ( a, x );\n\t\tif ( normalized === false ) {\n\t\t\tresult *= gamma( a );\n\t\t}\n\t\tbreak;\n\tcase 2:\n\t\t// Compute P:\n\t\tresult = ( normalized ) ?\n\t\t\tregularisedGammaPrefix( a, x ) :\n\t\t\tfullIGammaPrefix( a, x );\n\t\tif ( result !== 0.0 ) {\n\t\t\tinitValue = 0.0;\n\t\t\toptimisedInvert = false;\n\t\t\tif ( invert ) {\n\t\t\t\tinitValue = ( normalized ) ? 1.0 : gamma(a);\n\t\t\t\tif (\n\t\t\t\t\tnormalized ||\n\t\t\t\t\tresult >= 1.0 ||\n\t\t\t\t\tFLOAT64_MAX * result > initValue\n\t\t\t\t) {\n\t\t\t\t\tinitValue /= result;\n\t\t\t\t\tif (\n\t\t\t\t\t\tnormalized ||\n\t\t\t\t\t\ta < 1.0 ||\n\t\t\t\t\t\t( FLOAT64_MAX / a > initValue )\n\t\t\t\t\t) {\n\t\t\t\t\t\tinitValue *= -a;\n\t\t\t\t\t\toptimisedInvert = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitValue = 0.0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tinitValue = 0.0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult *= lowerGammaSeries( a, x, initValue ) / a;\n\t\tif ( optimisedInvert ) {\n\t\t\tinvert = false;\n\t\t\tresult = -result;\n\t\t}\n\t\tbreak;\n\tcase 3:\n\t\t// Compute Q:\n\t\tinvert = !invert;\n\t\tres = tgammaSmallUpperPart( a, x, invert );\n\t\tresult = res[ 0 ];\n\t\tg = res[ 1 ];\n\t\tinvert = false;\n\t\tif ( normalized ) {\n\t\t\tresult /= g;\n\t\t}\n\t\tbreak;\n\tcase 4:\n\t\t// Compute Q:\n\t\tresult = ( normalized ) ?\n\t\t\tregularisedGammaPrefix( a, x ) :\n\t\t\tfullIGammaPrefix( a, x );\n\t\tif ( result !== 0 ) {\n\t\t\tresult *= upperGammaFraction( a, x );\n\t\t}\n\t\tbreak;\n\tcase 5:\n\t\tresult = igammaTemmeLarge( a, x );\n\t\tif ( x >= a ) {\n\t\t\tinvert = !invert;\n\t\t}\n\t\tbreak;\n\tcase 6:\n\t\t// Since x is so small that P is necessarily very small too, use http://functions.wolfram.com/GammaBetaErf/GammaRegularized/06/01/05/01/01/\n\t\tresult = ( normalized ) ?\n\t\t\tpow(x, a) / gamma( a + 1.0 ) :\n\t\t\tpow( x, a ) / a;\n\t\tresult *= 1.0 - ( a * x / ( a + 1.0 ) );\n\t\tbreak;\n\t}\n\tif ( normalized && result > 1.0 ) {\n\t\tresult = 1.0;\n\t}\n\tif ( invert ) {\n\t\tgam = ( normalized ) ? 1.0 : gamma( a );\n\t\tresult = gam - result;\n\t}\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gammainc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the incomplete gamma function.\n*\n* @module @stdlib/math/base/special/gammainc\n*\n* @example\n* var gammainc = require( '@stdlib/math/base/special/gammainc' );\n*\n* var v = gammainc( 6.0, 2.0 );\n* // returns ~0.9826\n*\n* v = gammainc( 1.0, 2.0, true, true );\n* // returns ~0.7358\n*\n* v = gammainc( 7.0, 5.0 );\n* // returns ~0.8270\n*\n* v = gammainc( 7.0, 5.0, false );\n* // returns ~19.8482\n*\n* v = gammainc( NaN, 2.0 );\n* // returns NaN\n*\n* v = gammainc( 6.0, NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar gammainc = require( './gammainc.js' );\n\n\n// EXPORTS //\n\nmodule.exports = gammainc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar exp = require( './../../../../base/special/exp' );\nvar pow = require( './../../../../base/special/pow' );\nvar ln = require( './../../../../base/special/ln' );\nvar MAX_LN = require( '@stdlib/constants/float64/max-ln' );\nvar MIN_LN = require( '@stdlib/constants/float64/min-ln' );\n\n\n// MAIN //\n\n/**\n* Calculates the power term prefix `(z^a)(e^-z)` used in the non-normalized incomplete gammas.\n*\n* @private\n* @param {number} a - function parameter\n* @param {number} z - function parameter\n* @returns {number} power term prefix\n*/\nfunction fullIGammaPrefix( a, z ) {\n\tvar prefix;\n\tvar alz;\n\n\talz = a * ln( z );\n\tif ( z >= 1.0 ) {\n\t\tif ( ( alz < MAX_LN ) && ( -z > MIN_LN ) ) {\n\t\t\tprefix = pow( z, a ) * exp( -z );\n\t\t}\n\t\telse if ( a >= 1.0 ) {\n\t\t\tprefix = pow( z / exp(z/a), a );\n\t\t}\n\t\telse {\n\t\t\tprefix = exp( alz - z );\n\t\t}\n\t}\n\telse if ( alz > MIN_LN ) {\n\t\tprefix = pow( z, a ) * exp( -z );\n\t}\n\telse if ( z/a < MAX_LN ) {\n\t\tprefix = pow( z / exp(z/a), a );\n\t}\n\telse {\n\t\tprefix = exp( alz - z );\n\t}\n\treturn prefix;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fullIGammaPrefix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006-7, 2013-14.\n* Copyright Paul A. Bristow 2007, 2013-14.\n* Copyright Nikhar Agrawal 2013-14.\n* Copyright Christopher Kormanyos 2013-14.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar lanczosSumExpGScaled = require( './../../../../base/special/gamma-lanczos-sum-expg-scaled' );\nvar gammaln = require( './../../../../base/special/gammaln' );\nvar gamma = require( './../../../../base/special/gamma' );\nvar log1p = require( './../../../../base/special/log1p' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar abs = require( './../../../../base/special/abs' );\nvar exp = require( './../../../../base/special/exp' );\nvar pow = require( './../../../../base/special/pow' );\nvar max = require( './../../../../base/special/max' );\nvar min = require( './../../../../base/special/min' );\nvar ln = require( './../../../../base/special/ln' );\nvar MAX_LN = require( '@stdlib/constants/float64/max-ln' );\nvar MIN_LN = require( '@stdlib/constants/float64/min-ln' );\nvar G = require( '@stdlib/constants/float64/gamma-lanczos-g' );\nvar E = require( '@stdlib/constants/float64/e' );\n\n\n// MAIN //\n\n/**\n* Computes `(z^a)*(e^-z) / gamma(a)`.\n*\n* @private\n* @param {number} a - input value\n* @param {number} z - input value\n* @returns {number} function value\n*/\nfunction regularizedGammaPrefix( a, z ) {\n\tvar prefix;\n\tvar amza;\n\tvar agh;\n\tvar alz;\n\tvar amz;\n\tvar sq;\n\tvar d;\n\n\tagh = a + G - 0.5;\n\td = ( (z - a) - G + 0.5 ) / agh;\n\tif ( a < 1.0 ) {\n\t\t// Treat a < 1 as a special case because our Lanczos approximations are optimized against the factorials with a > 1, and for high precision types very small values of `a` can give rather erroneous results for gamma:\n\t\tif ( z <= MIN_LN ) {\n\t\t\t// Use logs, so should be free of cancellation errors:\n\t\t\treturn exp( ( a * ln(z) ) - z - gammaln( a ) );\n\t\t}\n\t\t// No danger of overflow as gamma(a) < 1/a for small a, so direct calculation:\n\t\treturn pow( z, a ) * exp( -z ) / gamma( a );\n\t}\n\tif ( abs(d*d*a) <= 100.0 && a > 150.0 ) {\n\t\t// Special case for large a and a ~ z:\n\t\tprefix = ( a * ( log1p( d ) - d ) ) + ( z * ( 0.5-G ) / agh );\n\t\tprefix = exp( prefix );\n\t}\n\telse {\n\t\t// General case. Direct computation is most accurate, but use various fallbacks for different parts of the problem domain:\n\t\talz = a * ln(z / agh);\n\t\tamz = a - z;\n\t\tif (\n\t\t\tmin(alz, amz) <= MIN_LN ||\n\t\t\tmax(alz, amz) >= MAX_LN\n\t\t) {\n\t\t\tamza = amz / a;\n\t\t\tif (\n\t\t\t\tmin(alz, amz)/2.0 > MIN_LN &&\n\t\t\t\tmax(alz, amz)/2.0 < MAX_LN\n\t\t\t) {\n\t\t\t\t// Compute square root of the result and then square it:\n\t\t\t\tsq = pow( z/agh, a/2.0 ) * exp( amz/2.0 );\n\t\t\t\tprefix = sq * sq;\n\t\t\t}\n\t\t\telse if (\n\t\t\t\tmin(alz, amz)/4.0 > MIN_LN &&\n\t\t\t\tmax(alz, amz)/4.0 < MAX_LN &&\n\t\t\t\tz > a\n\t\t\t) {\n\t\t\t\t// Compute the 4th root of the result then square it twice:\n\t\t\t\tsq = pow( z/agh, a/4.0 ) * exp( amz/4.0 );\n\t\t\t\tprefix = sq * sq;\n\t\t\t\tprefix *= prefix;\n\t\t\t}\n\t\t\telse if (\n\t\t\t\tamza > MIN_LN &&\n\t\t\t\tamza < MAX_LN\n\t\t\t) {\n\t\t\t\tprefix = pow( (z * exp(amza)) / agh, a );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprefix = exp( alz + amz );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprefix = pow( z/agh, a ) * exp( amz );\n\t\t}\n\t}\n\tprefix *= sqrt( agh/E ) / lanczosSumExpGScaled( a );\n\treturn prefix;\n}\n\n\n// EXPORTS //\n\nmodule.exports = regularizedGammaPrefix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_61_0/boost/math/special_functions/beta.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gammaDeltaRatio = require( './../../../../base/special/gamma-delta-ratio' );\nvar factorial = require( './../../../../base/special/factorial' );\nvar gammainc = require( './../../../../base/special/gammainc' );\nvar log1p = require( './../../../../base/special/log1p' );\nvar abs = require( './../../../../base/special/abs' );\nvar pow = require( './../../../../base/special/pow' );\nvar ln = require( './../../../../base/special/ln' );\nvar MIN_VALUE = require( '@stdlib/constants/float64/smallest-normal' );\nvar EPSILON = require( '@stdlib/constants/float64/eps' );\nvar fullIGammaPrefix = require( './full_igamma_prefix.js' );\nvar regularizedGammaPrefix = require( './regularized_gamma_prefix.js' );\n\n\n// VARIABLES //\n\nvar p = new Array( 30 );\n\n\n// MAIN //\n\n/**\n* This is DiDonato and Morris's BGRAT routine, see Eq's 9 through 9.6.\n*\n* @private\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {Probability} x - function parameter\n* @param {Probability} y - probability equal to `1-x`\n* @param {NonNegativeInteger} s0 - initial value\n* @param {number} mult - initial value\n* @param {boolean} normalized - boolean indicating whether to evaluate the regularized or non-regularized incomplete beta function\n* @returns {number} function value\n*/\nfunction betaSmallBLargeASeries( a, b, x, y, s0, mult, normalized ) {\n\tvar prefix;\n\tvar tmp1;\n\tvar tnp1;\n\tvar sum;\n\tvar b2n;\n\tvar bm1;\n\tvar lx2;\n\tvar lxp;\n\tvar mbn;\n\tvar lx;\n\tvar t4;\n\tvar h;\n\tvar j;\n\tvar m;\n\tvar n;\n\tvar r;\n\tvar t;\n\tvar u;\n\n\t// Some values we'll need later, these are Eq 9.1:\n\tbm1 = b - 1.0;\n\tt = a + ( bm1 / 2.0 );\n\tif ( y < 0.35 ) {\n\t\tlx = log1p( -y );\n\t} else {\n\t\tlx = ln( x );\n\t}\n\tu = -t * lx;\n\n\t// And from from 9.2:\n\th = regularizedGammaPrefix( b, u );\n\tif ( h <= MIN_VALUE ) {\n\t\treturn s0;\n\t}\n\tif ( normalized ) {\n\t\tprefix = h / gammaDeltaRatio( a, b );\n\t\tprefix /= pow( t, b );\n\t} else {\n\t\tprefix = fullIGammaPrefix( b, u ) / pow( t, b );\n\t}\n\tprefix *= mult;\n\n\t// We need the quantity Pn. Unfortunately, this is computed recursively and requires a full history of all the previous values. No choice but to declare a big table and hope it's big enough...\n\tp[ 0 ] = 1;  // see 9.3.\n\n\t// Now an initial value for J, see 9.6: gammainc( u, b, regularized, upper )\n\tj = gammainc( u, b, true, true );\n\tj /= h;\n\n\t// Now we can start to pull things together and evaluate the sum in Eq 9:\n\tsum = s0 + ( prefix * j ); // Value at N = 0\n\n\t// Some variables we'll need...\n\ttnp1 = 1.0; // 2*N+1\n\tlx2 = lx / 2.0;\n\tlx2 *= lx2;\n\tlxp = 1.0;\n\tt4 = 4.0 * t * t;\n\tb2n = b;\n\tfor ( n = 1; n < p.length; ++n ) {\n\t\t// Begin by evaluating the next Pn from Eq 9.4:\n\t\ttnp1 += 2.0;\n\t\tp[ n ] = 0.0;\n\t\tmbn = b - n;\n\t\ttmp1 = 3;\n\t\tfor ( m = 1; m < n; ++m ) {\n\t\t\tmbn = ( m * b ) - n;\n\t\t\tp[ n ] += mbn * p[ n-m ] / factorial( tmp1 );\n\t\t\ttmp1 += 2;\n\t\t}\n\t\tp[ n ] /= n;\n\t\tp[ n ] += bm1 / factorial( tnp1 );\n\n\t\t// Now we want Jn from Jn-1 using Eq 9.6:\n\t\tj = ( ( b2n * ( b2n+1.0 ) * j ) + ( ( u+b2n+1.0 ) * lxp ) ) / t4;\n\t\tlxp *= lx2;\n\t\tb2n += 2.0;\n\n\t\t// Pull it together with Eq 9:\n\t\tr = prefix * p[ n ] * j;\n\t\tsum += r;\n\t\tif ( r > 1.0 ) {\n\t\t\tif ( abs( r ) < abs( EPSILON * sum ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if ( abs( r / EPSILON ) < abs( sum ) ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn sum;\n}\n\n\n// EXPORTS //\n\nmodule.exports = betaSmallBLargeASeries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/beta.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the delta in `beta(a,b,x) = prefix + delta * beta(a+k,b,x)`.\n*\n* ## Notes\n*\n* Specifically, the function calculates\n*\n* ```tex\n* \\frac{ (a)(a+1)(a+2)...(a+k-1) }{ (b)(b+1)(b+2)...(b+k-1) }\n* ```\n*\n* The function should only called with small `k`; for large `k`, it is grossly inefficient.\n*\n* @private\n* @param {number} a - input value\n* @param {number} b - input value\n* @param {NonNegativeInteger} k - input value\n* @returns {number} ratio value\n*/\nfunction risingFactorialRatio( a, b, k ) {\n\tvar result;\n\tvar i;\n\tif ( k === 0 ) {\n\t\treturn 1.0;\n\t}\n\tresult = 1.0;\n\tfor ( i = 0; i < k; i++ ) {\n\t\tresult *= ( a + i ) / ( b + i );\n\t}\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = risingFactorialRatio;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( './../../../../base/special/abs' );\nvar max = require( './../../../../base/special/max' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Returns the maximum absolute value.\n*\n* @param {number} [x] - first number\n* @param {number} [y] - second number\n* @param {...number} [args] - numbers\n* @returns {number} maximum absolute value\n*\n* @example\n* var v = maxabs( 3.14, -4.2 );\n* // returns 4.2\n*\n* @example\n* var v = maxabs( 5.9, 3.14, 4.2 );\n* // returns 5.9\n*\n* @example\n* var v = maxabs( 3.14, NaN );\n* // returns NaN\n*\n* @example\n* var v = maxabs( +0.0, -0.0 );\n* // returns +0.0\n*/\nfunction maxabs( x, y ) {\n\tvar nargs;\n\tvar args;\n\tvar i;\n\n\tnargs = arguments.length;\n\tif ( nargs === 0 ) {\n\t\treturn PINF;\n\t}\n\tif ( nargs === 2 ) {\n\t\treturn max( abs( x ), abs( y ) );\n\t}\n\targs = [];\n\tfor ( i = 0; i < nargs; i++ ) {\n\t\targs.push( abs( arguments[ i ] ) );\n\t}\n\treturn max.apply( null, args );\n}\n\n\n// EXPORTS //\n\nmodule.exports = maxabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( './../../../../base/special/abs' );\nvar min = require( './../../../../base/special/min' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Returns the minimum absolute value.\n*\n* @param {number} [x] - first number\n* @param {number} [y] - second number\n* @param {...number} [args] - numbers\n* @returns {number} minimum absolute value\n*\n* @example\n* var v = minabs( -3.14, 4.2 );\n* // returns 3.14\n*\n* @example\n* var v = minabs( 5.9, 3.14, 4.2 );\n* // returns 3.14\n*\n* @example\n* var v = minabs( 3.14, NaN );\n* // returns NaN\n*\n* @example\n* var v = minabs( +0.0, -0.0 );\n* // returns +0.0\n*/\nfunction minabs( x, y ) {\n\tvar nargs;\n\tvar args;\n\tvar i;\n\n\tnargs = arguments.length;\n\tif ( nargs === 0 ) {\n\t\treturn PINF;\n\t}\n\tif ( nargs === 2 ) {\n\t\treturn min( abs( x ), abs( y ) );\n\t}\n\targs = [];\n\tfor ( i = 0; i < nargs; i++ ) {\n\t\targs.push( abs( arguments[ i ] ) );\n\t}\n\treturn min.apply( null, args );\n}\n\n\n// EXPORTS //\n\nmodule.exports = minabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_62_0/boost/math/special_functions/beta.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar lanczosSumExpGScaled = require( './../../../../base/special/gamma-lanczos-sum-expg-scaled' );\nvar maxabs = require( './../../../../base/special/maxabs' );\nvar minabs = require( './../../../../base/special/minabs' );\nvar expm1 = require( './../../../../base/special/expm1' );\nvar log1p = require( './../../../../base/special/log1p' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar abs = require( './../../../../base/special/abs' );\nvar exp = require( './../../../../base/special/exp' );\nvar pow = require( './../../../../base/special/pow' );\nvar min = require( './../../../../base/special/min' );\nvar ln = require( './../../../../base/special/ln' );\nvar MAX_LN = require( '@stdlib/constants/float64/max-ln' );\nvar MIN_LN = require( '@stdlib/constants/float64/min-ln' );\nvar G = require( '@stdlib/constants/float64/gamma-lanczos-g' );\nvar E = require( '@stdlib/constants/float64/e' );\n\n\n// MAIN //\n\n/**\n* Computes the leading power terms in the incomplete beta function.\n*\n* When normalized,\n*\n* ```tex\n* \\frac{ x^a y^b }{ \\operatorname{Beta}(a,b) }\n* ```\n*\n* and otherwise\n*\n* ```tex\n* x^a y^b\n* ```\n*\n* ## Notes\n*\n* -   Almost all of the error in the incomplete beta comes from this function, particularly when \\\\( a \\\\) and \\\\( b \\\\) are large. Computing large powers are _hard_ though, and using logarithms just leads to horrendous cancellation errors.\n*\n* -   For \\\\( l1 * l2 > 0 \\\\) or \\\\( \\operatorname{min}( a, b ) < 1 \\\\), the two power terms both go in the same direction (toward zero or toward infinity). In this case if either term overflows or underflows, then the product of the two must do so also. Alternatively, if one exponent is less than one, then we can't productively use it to eliminate overflow or underflow from the other term.  Problems with spurious overflow/underflow can't be ruled out. In this case, but it is _very_ unlikely since one of the power terms will evaluate to a number close to 1.\n*\n* -   If \\\\( \\max( \\abs(l1), \\abs(l2) ) < 0.5 \\\\), both exponents are near one and both the exponents are greater than one, and, further, these two power terms tend in opposite directions (one toward zero, the other toward infinity), so we have to combine the terms to avoid any risk of overflow or underflow. We do this by moving one power term inside the other, we have:\n*\n*     ```tex\n*     (1 + l_1)^a \\cdot (1 + l_2)^b \\\\\n*     = ((1 + l_1) \\cdot (1 + l_2)^(b/a))^a \\\\\n*     = (1 + l_1 + l_3 + l_1*l_3)^a\n*     ```\n*\n*     and\n*\n*     ```tex\n*     l_3 = (1 + l_2)^(b/a) - 1 \\\\\n*     = \\exp((b/a) * \\ln(1 + l_2)) - 1\n*     ```\n*\n*     The tricky bit is deciding which term to move inside. By preference, we move the larger term inside, so that the size of the largest exponent is reduced.  However, that can only be done as long as l3 (see above) is also small.\n*\n* @private\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {Probability} x - function parameter\n* @param {Probability} y - probability equal to `1-x`\n* @param {boolean} normalized - boolean indicating whether to evaluate the power terms of the regularized or non-regularized incomplete beta function\n* @returns {number} power terms\n*/\nfunction ibetaPowerTerms( a, b, x, y, normalized ) {\n\tvar result;\n\tvar smallA;\n\tvar ratio;\n\tvar agh;\n\tvar bgh;\n\tvar cgh;\n\tvar l1;\n\tvar l2;\n\tvar l3;\n\tvar p1;\n\tvar b1;\n\tvar b2;\n\tvar c;\n\tvar l;\n\n\tif ( !normalized ) {\n\t\t// Can we do better here?\n\t\treturn pow( x, a ) * pow( y, b );\n\t}\n\tc = a + b;\n\n\t// Combine power terms with Lanczos approximation:\n\tagh = a + G - 0.5;\n\tbgh = b + G - 0.5;\n\tcgh = c + G - 0.5;\n\tresult = lanczosSumExpGScaled( c );\n\tresult /= lanczosSumExpGScaled( a ) * lanczosSumExpGScaled( b );\n\n\t// Combine with the leftover terms from the Lanczos approximation:\n\tresult *= sqrt( bgh / E );\n\tresult *= sqrt( agh / cgh );\n\n\t// `l1` and `l2` are the base of the exponents minus one:\n\tl1 = ( ( x * b ) - ( y * agh ) ) / agh;\n\tl2 = ( ( y * a ) - ( x * bgh ) ) / bgh;\n\tif ( minabs( l1, l2 ) < 0.2 ) {\n\t\t// When the base of the exponent is very near 1 we get really gross errors unless extra care is taken:\n\t\tif ( l1 * l2 > 0 || min( a, b ) < 1 ) {\n\t\t\tif ( abs(l1) < 0.1 ) {\n\t\t\t\tresult *= exp( a * log1p( l1 ) );\n\t\t\t} else {\n\t\t\t\tresult *= pow( ( x*cgh ) / agh, a );\n\t\t\t}\n\t\t\tif ( abs(l2) < 0.1 ) {\n\t\t\t\tresult *= exp( b * log1p( l2 ) );\n\t\t\t} else {\n\t\t\t\tresult *= pow((y * cgh) / bgh, b);\n\t\t\t}\n\t\t}\n\t\telse if ( maxabs( l1, l2 ) < 0.5 ) {\n\t\t\tsmallA = a < b;\n\t\t\tratio = b / a;\n\t\t\tif (\n\t\t\t\t(smallA && (ratio * l2 < 0.1)) ||\n\t\t\t\t(!smallA && (l1 / ratio > 0.1))\n\t\t\t) {\n\t\t\t\tl3 = expm1( ratio * log1p( l2 ) );\n\t\t\t\tl3 = l1 + l3 + ( l3 * l1 );\n\t\t\t\tl3 = a * log1p( l3 );\n\t\t\t\tresult *= exp( l3 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tl3 = expm1( log1p( l1 ) / ratio );\n\t\t\t\tl3 = l2 + l3 + ( l3 * l2 );\n\t\t\t\tl3 = b * log1p( l3 );\n\t\t\t\tresult *= exp( l3 );\n\t\t\t}\n\t\t}\n\t\telse if ( abs(l1) < abs(l2) ) {\n\t\t\t// First base near 1 only:\n\t\t\tl = ( a * log1p( l1 ) ) + ( b * ln( ( y*cgh ) / bgh ) );\n\t\t\tif ( l <= MIN_LN || l >= MAX_LN ) {\n\t\t\t\tl += ln(result);\n\t\t\t\tif ( l >= MAX_LN ) {\n\t\t\t\t\treturn NaN;\n\t\t\t\t}\n\t\t\t\tresult = exp( l );\n\t\t\t} else {\n\t\t\t\tresult *= exp( l );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Second base near 1 only:\n\t\t\tl = ( b * log1p( l2 ) ) + ( a * ln( (x*cgh) / agh ) );\n\t\t\tif ( l <= MIN_LN || l >= MAX_LN ) {\n\t\t\t\tl += ln(result);\n\t\t\t\tif ( l >= MAX_LN ) {\n\t\t\t\t\treturn NaN;\n\t\t\t\t}\n\t\t\t\tresult = exp( l );\n\t\t\t} else {\n\t\t\t\tresult *= exp( l );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// General case:\n\t\tb1 = (x * cgh) / agh;\n\t\tb2 = (y * cgh) / bgh;\n\t\tl1 = a * ln(b1);\n\t\tl2 = b * ln(b2);\n\t\tif (\n\t\t\tl1 >= MAX_LN ||\n\t\t\tl1 <= MIN_LN ||\n\t\t\tl2 >= MAX_LN ||\n\t\t\tl2 <= MIN_LN\n\t\t) {\n\t\t\t// Oops, under/overflow, sidestep if we can:\n\t\t\tif ( a < b ) {\n\t\t\t\tp1 = pow( b2, b / a );\n\t\t\t\tl3 = a * ( ln(b1) + ln(p1) );\n\t\t\t\tif ( l3 < MAX_LN && l3 > MIN_LN ) {\n\t\t\t\t\tresult *= pow( p1 * b1, a );\n\t\t\t\t} else {\n\t\t\t\t\tl2 += l1 + ln(result);\n\t\t\t\t\tif ( l2 >= MAX_LN ) {\n\t\t\t\t\t\treturn NaN;\n\t\t\t\t\t}\n\t\t\t\t\tresult = exp( l2 );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tp1 = pow( b1, a / b );\n\t\t\t\tl3 = ( ln(p1) + ln(b2) ) * b;\n\t\t\t\tif ( l3 < MAX_LN && l3 > MIN_LN ) {\n\t\t\t\t\tresult *= pow( p1 * b2, b );\n\t\t\t\t} else {\n\t\t\t\t\tl2 += l1 + ln( result );\n\t\t\t\t\tif (l2 >= MAX_LN) {\n\t\t\t\t\t\treturn NaN;\n\t\t\t\t\t}\n\t\t\t\t\tresult = exp( l2 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Finally the normal case:\n\t\t\tresult *= pow( b1, a ) * pow( b2, b );\n\t\t}\n\t}\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ibetaPowerTerms;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the maximum absolute value.\n*\n* @module @stdlib/math/base/special/maxabs\n*\n* @example\n* var maxabs = require( '@stdlib/math/base/special/maxabs' );\n*\n* var v = maxabs( 3.14, -4.2 );\n* // returns 4.2\n*\n* v = maxabs( 5.9, 3.14, 4.2 );\n* // returns 5.9\n*\n* v = maxabs( 3.14, NaN );\n* // returns NaN\n*\n* v = maxabs( +0.0, -0.0 );\n* // returns +0.0\n*/\n\n// MODULES //\n\nvar maxabs = require( './maxabs.js' );\n\n\n// EXPORTS //\n\nmodule.exports = maxabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the minimum absolute value.\n*\n* @module @stdlib/math/base/special/minabs\n*\n* @example\n* var minabs = require( '@stdlib/math/base/special/minabs' );\n*\n* var v = minabs( -3.14, 4.2 );\n* // returns 3.14\n*\n* v = min( 5.9, 3.14, 4.2 );\n* // returns 3.14\n*\n* v = min( 3.14, NaN );\n* // returns NaN\n*\n* v = min( +0.0, -0.0 );\n* // returns +0.0\n*/\n\n// MODULES //\n\nvar minabs = require( './minabs.js' );\n\n\n// EXPORTS //\n\nmodule.exports = minabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_61_0/boost/math/special_functions/beta.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar continuedFraction = require( './../../../../base/tools/continued-fraction' );\nvar ibetaPowerTerms = require( './ibeta_power_terms.js' );\n\n\n// VARIABLES //\n\nvar OPTS = {\n\t'keep': true,\n\t'maxIter': 1000\n};\n\n\n// FUNCTIONS //\n\n/**\n* Continued fraction for the incomplete beta.\n*\n* @private\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {Probability} x - function parameter\n* @param {Probability} y - probability equal to `1-x`\n* @returns {Function} series function\n*/\nfunction ibetaFraction2t( a, b, x, y ) {\n\tvar m = 0;\n\treturn next;\n\n\t/**\n\t* Calculate the numerator and denominator of the next term of the series.\n\t*\n\t* @private\n\t* @returns {Array} series expansion terms\n\t*/\n\tfunction next() {\n\t\tvar denom;\n\t\tvar aN;\n\t\tvar bN;\n\n\t\taN = (a + m - 1) * (a + b + m - 1) * m * (b - m) * x * x;\n\t\tdenom = a + ( 2.0*m ) - 1.0;\n\t\taN /= denom * denom;\n\t\tbN = m;\n\t\tbN += (m * (b - m) * x) / ( a + ( 2.0*m ) - 1.0 );\n\t\tbN += ( (a+m) * ( (a*y) - (b*x) + 1.0 + ( m*(2.0-x) ) ) ) / ( a + (2.0*m) + 1.0 ); // eslint-disable-line max-len\n\t\tm += 1;\n\t\treturn [ aN, bN ];\n\t}\n}\n\n\n// MAIN //\n\n/**\n* Evaluates the incomplete beta via the continued fraction representation.\n*\n* @private\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {Probability} x - function parameter\n* @param {Probability} y - probability equal to `1-x`\n* @param {boolean} normalized - boolean indicating whether to evaluate the power terms of the regularized or non-regularized incomplete beta function\n* @param {(Array|TypedArray|Object)} out - output array holding the derivative as the second element\n* @returns {number} incomplete beta value\n*/\nfunction ibetaFraction2( a, b, x, y, normalized, out ) {\n\tvar result;\n\tvar fract;\n\tvar f;\n\n\tresult = ibetaPowerTerms( a, b, x, y, normalized );\n\tif ( out ) {\n\t\tout[ 1 ] = result;\n\t}\n\tif ( result === 0.0 ) {\n\t\treturn result;\n\t}\n\tf = ibetaFraction2t( a, b, x, y );\n\tfract = continuedFraction( f, OPTS );\n\treturn result / fract;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ibetaFraction2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../../../base/assert/is-integer' );\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar isOdd = require( './../../../../base/assert/is-odd' );\nvar round = require( './../../../../base/special/round' );\n\n\n// MAIN //\n\n/**\n* Computes the binomial coefficient of two integers.\n*\n* ## Method\n*\n* -   Instead of evaluating the factorial form, which is inefficient and prone to overflow for large inputs arguments, this module computes the following multiplicative representation of the binomial coefficient for integer arguments\n*\n*     ```tex\n*     \\binom nk = \\prod_{i=1}^k \\frac{n+1-i}{i}\n*     ```\n*\n* @param {integer} n - input value\n* @param {integer} k - second input value\n* @returns {integer} function value\n*\n* @example\n* var v = binomcoef( 8, 2 );\n* // returns 28\n*\n* @example\n* var v = binomcoef( 0, 0 );\n* // returns 1\n*\n* @example\n* var v = binomcoef( -4, 2 );\n* // returns 10\n*\n* @example\n* var v = binomcoef( NaN, 3 );\n* // returns NaN\n*\n* @example\n* var v = binomcoef( 5, NaN );\n* // returns NaN\n*\n* @example\n* var v = binomcoef( NaN, NaN );\n* // returns NaN\n*/\nfunction binomcoef( n, k ) {\n\tvar res;\n\tvar j;\n\tif ( isnan( n ) || isnan( k ) ) {\n\t\treturn NaN;\n\t}\n\tif ( !isInteger( n ) || !isInteger( k ) ) {\n\t\treturn NaN;\n\t}\n\tif ( k < 0 ) {\n\t\treturn 0;\n\t}\n\tif ( n < 0 ) {\n\t\tres = binomcoef( -n + k - 1, k );\n\t\tif ( isOdd( k ) ) {\n\t\t\tres = -res;\n\t\t}\n\t\treturn res;\n\t}\n\tif ( k > n ) {\n\t\treturn 0;\n\t}\n\tif ( k === 0 || k === n ) {\n\t\treturn 1;\n\t}\n\tif ( k === 1 || k === n - 1 ) {\n\t\treturn n;\n\t}\n\tif ( n - k < k ) {\n\t\tk = n - k;\n\t}\n\t// Use recursive definition...\n\tres = n;\n\tfor ( j = 2; j <= k; j++ ) {\n\t\tres *= ( n - j + 1 ) / j;\n\t}\n\t// Correct for rounding errors...\n\treturn ( isInteger( res ) ) ? res : round( res );\n}\n\n\n// EXPORTS //\n\nmodule.exports = binomcoef;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_61_0/boost/math/special_functions/beta.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar binomcoef = require( './../../../../base/special/binomcoef' );\nvar floor = require( './../../../../base/special/floor' );\nvar pow = require( './../../../../base/special/pow' );\nvar MIN_VALUE = require( '@stdlib/constants/float64/smallest-normal' );\n\n\n// MAIN //\n\n/**\n* For integer arguments we can relate the incomplete beta to the complement of the binomial distribution cdf and use this finite sum.\n*\n* @private\n* @param {NonNegativeInteger} n - number of trials\n* @param {NonNegativeInteger} k - function input\n* @param {Probability} x - function input\n* @param {Probability} y - probability equal to `1-x`\n* @returns {number} sum\n*/\nfunction binomialCCDF( n, k, x, y ) {\n\tvar startTerm;\n\tvar result;\n\tvar start;\n\tvar term;\n\tvar i;\n\n\tresult = pow( x, n );\n\tif ( result > MIN_VALUE ) {\n\t\tterm = result;\n\t\tfor ( i = floor( n - 1 ); i > k; i-- ) {\n\t\t\tterm *= ((i + 1) * y) / ((n - i) * x);\n\t\t\tresult += term;\n\t\t}\n\t} else {\n\t\t// First term underflows so we need to start at the mode of the distribution and work outwards:\n\t\tstart = floor( n * x );\n\t\tif ( start <= k + 1 ) {\n\t\t\tstart = floor( k + 2 );\n\t\t}\n\t\tresult = pow( x, start ) * pow( y, n - start );\n\t\tresult *= binomcoef( floor(n), floor(start) );\n\t\tif ( result === 0.0 ) {\n\t\t\t// OK, starting slightly above the mode didn't work, we'll have to sum the terms the old fashioned way:\n\t\t\tfor ( i = start - 1; i > k; i-- ) {\n\t\t\t\tresult += pow( x, i ) * pow( y, n - i );\n\t\t\t\tresult *= binomcoef( floor(n), floor(i) );\n\t\t\t}\n\t\t} else {\n\t\t\tterm = result;\n\t\t\tstartTerm = result;\n\t\t\tfor ( i = start - 1; i > k; i-- ) {\n\t\t\t\tterm *= ((i + 1) * y) / ((n - i) * x);\n\t\t\t\tresult += term;\n\t\t\t}\n\t\t\tterm = startTerm;\n\t\t\tfor ( i = start + 1; i <= n; i++ ) {\n\t\t\t\tterm *= (n - i + 1) * x / (i * y);\n\t\t\t\tresult += term;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = binomialCCDF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the binomial coefficient.\n*\n* @module @stdlib/math/base/special/binomcoef\n*\n* @example\n* var binomcoef = require( '@stdlib/math/base/special/binomcoef' );\n*\n* var v = binomcoef( 8, 2 );\n* // returns 28\n*\n* v = binomcoef( 0, 0 );\n* // returns 1\n*\n* v = binomcoef( -4, 2 );\n* // returns 10\n*\n* v = binomcoef( 5, 3 );\n* // returns 10\n*\n* v = binomcoef( NaN, 3 );\n* // returns NaN\n*\n* v = binomcoef( 5, NaN );\n* // returns NaN\n*\n* v = binomcoef( NaN, NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar binomcoef = require( './binomcoef.js' );\n\n\n// EXPORTS //\n\nmodule.exports = binomcoef;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_61_0/boost/math/special_functions/beta.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ibetaPowerTerms = require( './ibeta_power_terms.js' );\n\n\n// MAIN //\n\n/**\n* Computes the difference between `ibeta(a,b,x)` and `ibeta(a+k,b,x)`.\n*\n* @private\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {Probability} x - function parameter\n* @param {Probability} y - probability equal to `1-x`\n* @param {NonNegativeInteger} k - function input\n* @param {boolean} normalized - boolean indicating whether to evaluate the power terms of the regularized or non-regularized incomplete beta function\n* @param {(Array|TypedArray|Object)} out - output array holding the derivative as the second element\n* @returns {number} difference between ibeta(a,b,x) and ibeta(a+k,b,x)\n*/\nfunction ibetaAStep( a, b, x, y, k, normalized, out ) {\n\tvar prefix;\n\tvar term;\n\tvar sum;\n\tvar i;\n\n\tprefix = ibetaPowerTerms( a, b, x, y, normalized );\n\tif ( out ) {\n\t\tout[ 1 ] = prefix;\n\t}\n\tprefix /= a;\n\tif ( prefix === 0.0 ) {\n\t\treturn prefix;\n\t}\n\tsum = 1.0;\n\tterm = 1.0;\n\n\t// Series summation from 0 to k-1:\n\tfor ( i = 0; i < k-1; ++i ) {\n\t\tterm *= (a+b+i) * x / (a+i+1.0);\n\t\tsum += term;\n\t}\n\tprefix *= sum;\n\treturn prefix;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ibetaAStep;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/beta.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar lanczosSumExpGScaled = require( './../../../../base/special/gamma-lanczos-sum-expg-scaled' );\nvar sumSeries = require( './../../../../base/tools/sum-series' );\nvar log1p = require( './../../../../base/special/log1p' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar exp = require( './../../../../base/special/exp' );\nvar pow = require( './../../../../base/special/pow' );\nvar ln = require( './../../../../base/special/ln' );\nvar MIN_VALUE = require( '@stdlib/constants/float64/smallest-normal' );\nvar MAX_LN = require( '@stdlib/constants/float64/max-ln' );\nvar MIN_LN = require( '@stdlib/constants/float64/min-ln' );\nvar G = require( '@stdlib/constants/float64/gamma-lanczos-g' );\nvar E = require( '@stdlib/constants/float64/e' );\n\n\n// VARIABLES //\n\nvar opts = {\n\t'maxTerms': 100\n};\n\n\n// FUNCTIONS //\n\n/**\n* Series approximation to the incomplete beta.\n*\n* @private\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {Probability} x - function parameter\n* @param {number} result - initial result value\n* @returns {Function} series function\n*/\nfunction ibetaSeriesT( a, b, x, result ) {\n\tvar poch = 1.0 - b;\n\tvar n = 1;\n\treturn next;\n\n\t/**\n\t* Calculate the next term of the series.\n\t*\n\t* @private\n\t* @returns {number} series expansion term\n\t*/\n\tfunction next() {\n\t\tvar r = result / a;\n\t\ta += 1.0;\n\t\tresult *= poch * x / n;\n\t\tn += 1;\n\t\tpoch += 1.0;\n\t\treturn r;\n\t}\n}\n\n\n// MAIN //\n\n/**\n* Incomplete beta series.\n*\n* @private\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {Probability} x - function parameter\n* @param {NonNegativeInteger} s0 - initial value\n* @param {boolean} normalized - boolean indicating whether to evaluate the power terms of the regularized or non-regularized incomplete beta function\n* @param {(Array|TypedArray|Object)} out - output array holding the derivative as the second element\n* @param {Probability} y - probability equal to `1-x`\n* @returns {number} function value\n*/\nfunction ibetaSeries( a, b, x, s0, normalized, out, y ) {\n\tvar result;\n\tvar agh;\n\tvar bgh;\n\tvar cgh;\n\tvar l1;\n\tvar l2;\n\tvar c;\n\tvar s;\n\n\tif ( normalized ) {\n\t\tc = a + b;\n\n\t\t// Incomplete beta power term, combined with the Lanczos approximation:\n\t\tagh = a + G - 0.5;\n\t\tbgh = b + G - 0.5;\n\t\tcgh = c + G - 0.5;\n\t\tresult = lanczosSumExpGScaled( c ) / ( lanczosSumExpGScaled( a ) * lanczosSumExpGScaled( b ) ); // eslint-disable-line max-len\n\n\t\tl1 = ln( cgh / bgh ) * ( b - 0.5 );\n\t\tl2 = ln( x * cgh / agh ) * a;\n\n\t\t// Check for over/underflow in the power terms:\n\t\tif (\n\t\t\tl1 > MIN_LN &&\n\t\t\tl1 < MAX_LN &&\n\t\t\tl2 > MIN_LN &&\n\t\t\tl2 < MAX_LN\n\t\t) {\n\t\t\tif ( a * b < bgh * 10.0 ) {\n\t\t\t\tresult *= exp( ( b-0.5 ) * log1p( a / bgh ) );\n\t\t\t} else {\n\t\t\t\tresult *= pow( cgh / bgh, b - 0.5 );\n\t\t\t}\n\t\t\tresult *= pow( x * cgh / agh, a );\n\t\t\tresult *= sqrt( agh / E );\n\n\t\t\tif ( out ) {\n\t\t\t\tout[ 1 ] = result * pow( y, b );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// We need logs, and this *will* cancel:\n\t\t\tresult = ln( result ) + l1 + l2 + ( ( ln( agh ) - 1.0 ) / 2.0 );\n\t\t\tif ( out ) {\n\t\t\t\tout[ 1 ] = exp( result + ( b * ln( y ) ) );\n\t\t\t}\n\t\t\tresult = exp( result );\n\t\t}\n\t}\n\telse {\n\t\t// Non-normalized, just compute the power:\n\t\tresult = pow( x, a );\n\t}\n\tif ( result < MIN_VALUE ) {\n\t\treturn s0; // Safeguard: series can't cope with denorms.\n\t}\n\ts = ibetaSeriesT( a, b, x, result );\n\topts.initialValue = s0;\n\treturn sumSeries( s, opts );\n}\n\n\n// EXPORTS //\n\nmodule.exports = ibetaSeries;\n","/* eslint-disable max-statements, max-lines */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_61_0/boost/math/special_functions/beta.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar expm1 = require( './../../../../base/special/expm1' );\nvar floor = require( './../../../../base/special/floor' );\nvar log1p = require( './../../../../base/special/log1p' );\nvar asin = require( './../../../../base/special/asin' );\nvar beta = require( './../../../../base/special/beta' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar exp = require( './../../../../base/special/exp' );\nvar pow = require( './../../../../base/special/pow' );\nvar max = require( './../../../../base/special/max' );\nvar min = require( './../../../../base/special/min' );\nvar MAX_FLOAT64 = require( '@stdlib/constants/float64/max' );\nvar MIN_FLOAT64 = require( '@stdlib/constants/float64/smallest-normal' );\nvar MAX_INT32 = require( '@stdlib/constants/int32/max' );\nvar HALF_PI = require( '@stdlib/constants/float64/half-pi' );\nvar PI = require( '@stdlib/constants/float64/pi' );\nvar betaSmallBLargeASeries = require( './beta_small_b_large_a_series.js' );\nvar risingFactorialRatio = require( './rising_factorial_ratio.js' );\nvar ibetaPowerTerms = require( './ibeta_power_terms.js' );\nvar ibetaFraction2 = require( './ibeta_fraction2.js');\nvar binomialCCDF = require( './binomial_ccdf.js' );\nvar ibetaAStep = require( './ibeta_a_step.js' );\nvar ibetaSeries = require( './ibeta_series.js' );\n\n\n// VARIABLES //\n\nvar ONE_OVER_PI = 1.0 / PI;\n\n\n// MAIN //\n\n/**\n* Evaluates the incomplete beta function and its first derivative and assigns results to a provided output array.\n*\n* ## Notes\n*\n* -   This function divides up the input range and selects the right implementation method for each domain.\n*\n* @param {Probability} x - function input\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {boolean} regularized - boolean indicating if the function should evaluate the regularized boolean beta function\n* @param {boolean} upper - boolean indicating if the function should return the upper tail of the incomplete beta function instead\n* @param {(Array|TypedArray|Object)} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {(Array|TypedArray|Object)} function value and first derivative\n*\n* @example\n* var out = ibetaImp( 0.5, 2.0, 2.0, false, false, [ 0.0, 0.0 ], 1, 0 );\n* // returns [ ~0.083, ~1.5 ]\n*\n* @example\n* var out = ibetaImp( 0.2, 1.0, 2.0, false, true, [ 0.0, 0.0 ], 1, 0 );\n* // returns [ 0.32, 1.6 ]\n*\n* @example\n* var out = ibetaImp( 0.2, 1.0, 2.0, true, true, [ 0.0, 0.0 ], 1, 0 );\n* // returns [ 0.64, 1.6 ]\n*/\nfunction ibetaImp( x, a, b, regularized, upper, out, stride, offset ) {\n\tvar lambda;\n\tvar prefix;\n\tvar fract;\n\tvar bbar;\n\tvar div;\n\tvar tmp;\n\tvar i0;\n\tvar i1;\n\tvar k;\n\tvar n;\n\tvar p;\n\tvar y;\n\n\ty = 1.0 - x;\n\ti0 = offset;\n\ti1 = offset + stride;\n\n\t// Derivative not set...\n\tout[ i1 ] = -1;\n\tif ( isnan( x ) || x < 0.0 || x > 1.0 ) {\n\t\tout[ i0 ] = NaN;\n\t\tout[ i1 ] = NaN;\n\t\treturn out;\n\t}\n\tif ( regularized ) {\n\t\tif ( a < 0.0 || b < 0.0 ) {\n\t\t\tout[ i0 ] = NaN;\n\t\t\tout[ i1 ] = NaN;\n\t\t\treturn out;\n\t\t}\n\t\t// Extend to a few very special cases...\n\t\tif ( a === 0.0 ) {\n\t\t\tif ( b === 0.0 ) {\n\t\t\t\tout[ i0 ] = NaN;\n\t\t\t\tout[ i1 ] = NaN;\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\tif ( b > 0.0 ) {\n\t\t\t\tout[ i0 ] = ( upper ) ? 0.0 : 1.0;\n\t\t\t\treturn out;\n\t\t\t}\n\t\t} else if ( b === 0.0 ) {\n\t\t\tif ( a > 0.0 ) {\n\t\t\t\tout[ i0 ] = ( upper ) ? 1.0 : 0.0;\n\t\t\t\treturn out;\n\t\t\t}\n\t\t}\n\t} else if ( a <= 0.0 || b <= 0.0 ) {\n\t\tout[ i0 ] = NaN;\n\t\tout[ i1 ] = NaN;\n\t\treturn out;\n\t}\n\tif ( x === 0.0 ) {\n\t\tif ( a === 1.0 ) {\n\t\t\tout[ i1 ] = 1.0;\n\t\t} else {\n\t\t\tout[ i1 ] = ( a < 1.0 ) ? MAX_FLOAT64 / 2.0 : MIN_FLOAT64 * 2.0;\n\t\t}\n\t\tif ( upper ) {\n\t\t\tout[ i0 ] = ( regularized ) ? 1.0 : beta( a, b );\n\t\t\treturn out;\n\t\t}\n\t\tout[ i0 ] = 0.0;\n\t\treturn out;\n\t}\n\tif ( x === 1.0 ) {\n\t\tif ( b === 1.0 ) {\n\t\t\tout[ i1 ] = 1.0;\n\t\t} else {\n\t\t\tout[ i1 ] = ( b < 1.0 ) ? MAX_FLOAT64 / 2.0 : MIN_FLOAT64 * 2.0;\n\t\t}\n\t\tif ( upper ) {\n\t\t\tout[ i0 ] = 0.0;\n\t\t} else {\n\t\t\tout[ i0 ] = ( regularized ) ? 1.0 : beta( a, b );\n\t\t}\n\t\treturn out;\n\t}\n\tif ( a === 0.5 && b === 0.5 ) {\n\t\tout[ i1 ] = ONE_OVER_PI * sqrt( y * x );\n\n\t\t// We have an arcsine distribution:\n\t\tp = ( upper ) ? asin( sqrt(y) ) : asin( sqrt(x) );\n\t\tp /= HALF_PI;\n\t\tif ( !regularized ) {\n\t\t\tp *= PI;\n\t\t}\n\t\tout[ i0 ] = p;\n\t\treturn out;\n\t}\n\tif ( a === 1.0 ) {\n\t\ttmp = b;\n\t\tb = a;\n\t\ta = tmp;\n\n\t\ttmp = y;\n\t\ty = x;\n\t\tx = tmp;\n\n\t\tupper = !upper;\n\t}\n\tif ( b === 1.0 ) {\n\t\t// Special case see: http://functions.wolfram.com/GammaBetaErf/BetaRegularized/03/01/01/\n\t\tif ( a === 1.0 ) {\n\t\t\tout[ i0 ] = ( upper ) ? y : x;\n\t\t\tout[ i1 ] = 1.0;\n\t\t\treturn out;\n\t\t}\n\t\tout[ i1 ] = a * pow( x, a - 1.0 );\n\t\tif ( y < 0.5 ) {\n\t\t\tp = ( upper ) ? -expm1( a * log1p(-y) ) : exp( a * log1p(-y) );\n\t\t} else {\n\t\t\tp = ( upper ) ? -( pow( x, a ) - 1.0 ) : pow( x, a );\n\t\t}\n\t\tif ( !regularized ) {\n\t\t\tp /= a;\n\t\t}\n\t\tout[ i0 ] = p;\n\t\treturn out;\n\t}\n\tif ( min( a, b ) <= 1.0 ) {\n\t\tif ( x > 0.5 ) {\n\t\t\ttmp = b;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\n\t\t\ttmp = y;\n\t\t\ty = x;\n\t\t\tx = tmp;\n\n\t\t\tupper = !upper;\n\t\t}\n\t\tif ( max( a, b ) <= 1.0 ) {\n\t\t\t// Both a,b < 1:\n\t\t\tif ( (a >= min( 0.2, b ) ) || ( pow(x, a) <= 0.9 ) ) {\n\t\t\t\tif ( upper ) {\n\t\t\t\t\tfract = -( ( regularized ) ? 1.0 : beta( a, b ) );\n\t\t\t\t\tupper = false;\n\t\t\t\t\tfract = -ibetaSeries( a, b, x, fract, regularized, out, y );\n\t\t\t\t} else {\n\t\t\t\t\tfract = ibetaSeries( a, b, x, 0, regularized, out, y );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttmp = b;\n\t\t\t\tb = a;\n\t\t\t\ta = tmp;\n\n\t\t\t\ttmp = y;\n\t\t\t\ty = x;\n\t\t\t\tx = tmp;\n\n\t\t\t\tupper = !upper;\n\t\t\t\tif ( y >= 0.3 ) {\n\t\t\t\t\tif ( upper ) {\n\t\t\t\t\t\tfract = -( ( regularized ) ? 1.0 : beta( a, b ) );\n\t\t\t\t\t\tupper = false;\n\t\t\t\t\t\tfract = -ibetaSeries( a, b, x, fract, regularized, out, y ); // eslint-disable-line max-len\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfract = ibetaSeries( a, b, x, 0, regularized, out, y );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Sidestep on a, and then use the series representation:\n\t\t\t\t\tif ( regularized ) {\n\t\t\t\t\t\tprefix = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprefix = risingFactorialRatio( a + b, a, 20 );\n\t\t\t\t\t}\n\t\t\t\t\tfract = ibetaAStep( a, b, x, y, 20, regularized, out );\n\t\t\t\t\tif ( upper ) {\n\t\t\t\t\t\tfract -= ( ( regularized ) ? 1 : beta( a, b ) );\n\t\t\t\t\t\tupper = false;\n\t\t\t\t\t\tfract = -betaSmallBLargeASeries( a + 20.0, b, x, y, fract, prefix, regularized ); // eslint-disable-line max-len\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfract = betaSmallBLargeASeries( a + 20.0, b, x, y, fract, prefix, regularized ); // eslint-disable-line max-len\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( b <= 1.0 || ( x < 0.1 && ( pow( b * x, a ) <= 0.7 ) ) ) {\n\t\t\tif ( upper ) {\n\t\t\t\tfract = -( ( regularized ) ? 1 : beta( a, b ) );\n\t\t\t\tupper = false;\n\t\t\t\tfract = -ibetaSeries( a, b, x, fract, regularized, out, y );\n\t\t\t} else {\n\t\t\t\tfract = ibetaSeries( a, b, x, 0.0, regularized, out, y );\n\t\t\t}\n\t\t} else {\n\t\t\ttmp = b;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\n\t\t\ttmp = y;\n\t\t\ty = x;\n\t\t\tx = tmp;\n\t\t\tupper = !upper;\n\n\t\t\tif ( y >= 0.3 ) {\n\t\t\t\tif (upper) {\n\t\t\t\t\tfract = -(( regularized ) ? 1.0 : beta( a, b ));\n\t\t\t\t\tupper = false;\n\t\t\t\t\tfract = -ibetaSeries( a, b, x, fract, regularized, out, y );\n\t\t\t\t} else {\n\t\t\t\t\tfract = ibetaSeries( a, b, x, 0.0, regularized, out, y );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( a >= 15.0 ) {\n\t\t\t\tif ( upper ) {\n\t\t\t\t\tfract = -(( regularized ) ? 1.0 : beta( a, b ));\n\t\t\t\t\tupper = false;\n\t\t\t\t\tfract = -betaSmallBLargeASeries( a, b, x, y, fract, 1.0, regularized ); // eslint-disable-line max-len\n\t\t\t\t} else {\n\t\t\t\t\tfract = betaSmallBLargeASeries( a, b, x, y, 0.0, 1.0, regularized ); // eslint-disable-line max-len\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( regularized ) {\n\t\t\t\t\tprefix = 1;\n\t\t\t\t} else {\n\t\t\t\t\t// Sidestep to improve errors:\n\t\t\t\t\tprefix = risingFactorialRatio( a + b, a, 20.0 );\n\t\t\t\t}\n\t\t\t\tfract = ibetaAStep( a, b, x, y, 20.0, regularized, out );\n\t\t\t\tif ( upper ) {\n\t\t\t\t\tfract -= ( ( regularized ) ? 1.0 : beta( a, b ) );\n\t\t\t\t\tupper = false;\n\t\t\t\t\tfract = -betaSmallBLargeASeries( a + 20.0, b, x, y, fract, prefix, regularized ); // eslint-disable-line max-len\n\t\t\t\t} else {\n\t\t\t\t\tfract = betaSmallBLargeASeries( a + 20.0, b, x, y, fract, prefix, regularized ); // eslint-disable-line max-len\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// Both a,b >= 1:\n\t\tif ( a < b ) {\n\t\t\tlambda = a - ( (a + b) * x );\n\t\t} else {\n\t\t\tlambda = ( (a + b) * y ) - b;\n\t\t}\n\t\tif ( lambda < 0.0 ) {\n\t\t\ttmp = b;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\n\t\t\ttmp = y;\n\t\t\ty = x;\n\t\t\tx = tmp;\n\t\t\tupper = !upper;\n\t\t}\n\t\tif ( b < 40.0 ) {\n\t\t\tif (\n\t\t\t\tfloor(a) === a &&\n\t\t\t\tfloor(b) === b &&\n\t\t\t\ta < MAX_INT32 - 100\n\t\t\t) {\n\t\t\t\t// Relate to the binomial distribution and use a finite sum:\n\t\t\t\tk = a - 1.0;\n\t\t\t\tn = b + k;\n\t\t\t\tfract = binomialCCDF( n, k, x, y );\n\t\t\t\tif ( !regularized ) {\n\t\t\t\t\tfract *= beta( a, b );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( b * x <= 0.7 ) {\n\t\t\t\tif ( upper ) {\n\t\t\t\t\tfract = -( ( regularized ) ? 1.0 : beta( a, b ) );\n\t\t\t\t\tupper = false;\n\t\t\t\t\tfract = -ibetaSeries( a, b, x, fract, regularized, out, y );\n\t\t\t\t} else {\n\t\t\t\t\tfract = ibetaSeries( a, b, x, 0.0, regularized, out, y );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( a > 15.0 ) {\n\t\t\t\t// Sidestep so we can use the series representation:\n\t\t\t\tn = floor( b );\n\t\t\t\tif ( n === b ) {\n\t\t\t\t\tn -= 1;\n\t\t\t\t}\n\t\t\t\tbbar = b - n;\n\t\t\t\tif ( regularized ) {\n\t\t\t\t\tprefix = 1;\n\t\t\t\t} else {\n\t\t\t\t\tprefix = risingFactorialRatio( a + bbar, bbar, n );\n\t\t\t\t}\n\t\t\t\tfract = ibetaAStep( bbar, a, y, x, n, regularized );\n\t\t\t\tfract = betaSmallBLargeASeries( a, bbar, x, y, fract, 1.0, regularized ); // eslint-disable-line max-len\n\t\t\t\tfract /= prefix;\n\t\t\t}\n\t\t\telse if ( regularized ) {\n\t\t\t\tn = floor( b );\n\t\t\t\tbbar = b - n;\n\t\t\t\tif ( bbar <= 0 ) {\n\t\t\t\t\tn -= 1;\n\t\t\t\t\tbbar += 1;\n\t\t\t\t}\n\t\t\t\tfract = ibetaAStep( bbar, a, y, x, n, regularized );\n\t\t\t\tfract += ibetaAStep( a, bbar, x, y, 20.0, regularized );\n\t\t\t\tif ( upper ) {\n\t\t\t\t\tfract -= 1;\n\t\t\t\t}\n\t\t\t\tfract = betaSmallBLargeASeries( a + 20.0, bbar, x, y, fract, 1, regularized ); // eslint-disable-line max-len\n\t\t\t\tif ( upper ) {\n\t\t\t\t\tfract = -fract;\n\t\t\t\t\tupper = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfract = ibetaFraction2( a, b, x, y, regularized, out );\n\t\t\t}\n\t\t} else {\n\t\t\tfract = ibetaFraction2( a, b, x, y, regularized, out );\n\t\t}\n\t}\n\tif ( out[ i1 ] < 0.0 ) {\n\t\tout[ i1 ] = ibetaPowerTerms( a, b, x, y, true );\n\t}\n\tdiv = y * x;\n\tif ( out[ i1 ] !== 0.0 ) {\n\t\tif ( ( MAX_FLOAT64 * div < out[ i1 ] ) ) {\n\t\t\t// Overflow, return an arbitrarily large value:\n\t\t\tout[ i1 ] = MAX_FLOAT64 / 2.0;\n\t\t} else {\n\t\t\tout[ i1 ] /= div;\n\t\t}\n\t}\n\tout[ i0 ] = ( upper ) ? ( ( regularized ) ? 1.0 : beta( a, b ) ) - fract : fract; // eslint-disable-line max-len\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ibetaImp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar compute = require( './assign.js' );\n\n\n// MAIN //\n\n/**\n* Evaluates the incomplete beta function and its first derivative.\n*\n* @param {Probability} x - function input\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {boolean} regularized - boolean indicating if the function should evaluate the regularized boolean beta function\n* @param {boolean} upper - boolean indicating if the function should return the upper tail of the incomplete beta function instead\n* @returns {Array} function value and first derivative\n*\n* @example\n* var out = kernelBetainc( 0.5, 2.0, 2.0, false, false );\n* // returns [ ~0.083, ~1.5 ]\n*\n* @example\n* var out = kernelBetainc( 0.2, 1.0, 2.0, true, false );\n* // returns [ 0.36, 1.6 ]\n*/\nfunction kernelBetainc( x, a, b, regularized, upper ) {\n\treturn compute( x, a, b, regularized, upper, [ 0.0, 0.0 ], 1, 0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = kernelBetainc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the incomplete beta function and its first derivative.\n*\n* @module @stdlib/math/base/special/kernel-betainc\n*\n* @example\n* var kernelBetainc = require( '@stdlib/math/base/special/kernel-betainc' );\n*\n* var out = kernelBetainc( 0.5, 2.0, 2.0, false, false );\n* // returns [ ~0.083, ~1.5 ]\n*\n* out = kernelBetainc( 0.2, 1.0, 2.0, true, false );\n* // returns [ 0.36, 1.6 ]\n*\n* @example\n* var kernelBetainc = require( '@stdlib/math/base/special/kernel-betainc' );\n*\n* var arr = [ 0.0, 0.0 ];\n* var out = kernelBetainc.assign( 0.2, 1.0, 2.0, true, true, arr, 1, 0 );\n* // returns [ 0.64, 1.6 ]\n*\n* var bool = ( arr === out );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar assign = require( './assign.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar kernelBetainc = require( './../../../../base/special/kernel-betainc' ).assign;\n\n\n// MAIN //\n\n/**\n* Evaluates the incomplete beta function.\n*\n* @param {Probability} x - function parameter\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {boolean} [regularized=true] - boolean indicating if the function should evaluate the regularized or non-regularized incomplete beta function\n* @param {boolean} [upper=false] - boolean indicating if the function should return the upper tail of the incomplete beta function\n* @returns {number} function value\n*\n* @example\n* var y = betainc( 0.5, 2.0, 2.0 );\n* // returns 0.5\n*\n* @example\n* var y = betainc( 0.5, 2.0, 2.0, false );\n* // returns ~0.083\n*\n* @example\n* var y = betainc( 0.2, 1.0, 2.0 );\n* // returns 0.36\n*/\nfunction betainc( x, a, b, regularized, upper ) {\n\tvar out = [ 0.0, 0.0 ];\n\tregularized = ( regularized === false ) ? false : true; // eslint-disable-line no-unneeded-ternary\n\tupper = ( upper === true ) ? true : false; // eslint-disable-line no-unneeded-ternary\n\tkernelBetainc( x, a, b, regularized, upper, out, 1, 0 );\n\treturn out[ 0 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = betainc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the incomplete beta function.\n*\n* @module @stdlib/math/base/special/betainc\n*\n* @example\n* var betainc = require( '@stdlib/math/base/special/betainc' );\n*\n* var y = betainc( 0.5, 2.0, 2.0 );\n* // returns 0.5\n*\n* y = betainc( 0.5, 2.0, 2.0, false );\n* // returns ~0.083\n*\n* y = betainc( 0.2, 1.0, 2.0 );\n* // returns 0.36\n*\n* y = betainc( 0.2, 1.0, 2.0, true, true );\n* // returns 0.64\n*/\n\n// MODULES //\n\nvar betainc = require( './betainc.js' );\n\n\n// EXPORTS //\n\nmodule.exports = betainc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar betainc = require( '@stdlib/math/base/special/betainc' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for an F distribution with numerator degrees of freedom `d1` and denominator degrees of freedom `d2` at a value `x`.\n*\n* @param {number} x - input value\n* @param {PositiveNumber} d1 - numerator degrees of freedom\n* @param {PositiveNumber} d2 - denominator degrees of freedom\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 2.0, 1.0, 1.0 );\n* // returns ~0.608\n*\n* @example\n* var y = cdf( 2.0, 8.0, 4.0 );\n* // returns ~0.737\n*\n* @example\n* var y = cdf( -1.0, 2.0, 2.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( +Infinity, 4.0, 2.0 );\n* // returns 1.0\n*\n* @example\n* var y = cdf( -Infinity, 4.0, 2.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( NaN, 1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 1.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 1.0, -1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, -1.0, 1.0 );\n* // returns NaN\n*/\nfunction cdf( x, d1, d2 ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( d1 ) ||\n\t\tisnan( d2 ) ||\n\t\td1 <= 0.0 ||\n\t\td2 <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x <= 0.0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( x === PINF ) {\n\t\treturn 1.0;\n\t}\n\tif ( d1 * x > d2 ) {\n\t\treturn betainc( (d1*x)/(d2+(d1*x)), d1/2.0, d2 /2.0, true, false );\n\t}\n\treturn betainc( d2/(d2+(d1*x)), d2/2.0, d1/2.0, true, true );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Creates a function which always returns the same value.\n*\n* @param {*} [value] - value to always return\n* @returns {Function} constant function\n*\n* @example\n* var fcn = wrap( 3.14 );\n*\n* var v = fcn();\n* // returns 3.14\n*\n* v = fcn();\n* // returns 3.14\n*\n* v = fcn();\n* // returns 3.14\n*/\nfunction wrap( value ) {\n\treturn constantFunction;\n\n\t/**\n\t* Constant function.\n\t*\n\t* @private\n\t* @returns {*} constant value\n\t*/\n\tfunction constantFunction() {\n\t\treturn value;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a constant function.\n*\n* @module @stdlib/utils/constant-function\n*\n* @example\n* var constantFunction = require( '@stdlib/utils/constant-function' );\n*\n* var fcn = constantFunction( 3.14 );\n*\n* var v = fcn();\n* // returns 3.14\n*\n* v = fcn();\n* // returns 3.14\n*\n* v = fcn();\n* // returns 3.14\n*/\n\n// MODULES //\n\nvar constantFunction = require( './constant_function.js' );\n\n\n// EXPORTS //\n\nmodule.exports = constantFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar betainc = require( '@stdlib/math/base/special/betainc' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for an F distribution with numerator degrees of freedom `d1` and denominator degrees of freedom `d2`.\n*\n* @param {PositiveNumber} d1 - numerator degrees of freedom\n* @param {PositiveNumber} d2 - denominator degrees of freedom\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 10.0, 2.0 );\n*\n* var y = cdf( 10.0 );\n* // returns ~0.906\n*\n* y = cdf( 8.0 );\n* // returns ~0.884\n*/\nfunction factory( d1, d2 ) {\n\tif (\n\t\tisnan( d1 ) ||\n\t\tisnan( d2 ) ||\n\t\td1 <= 0.0 ||\n\t\td2 <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for an F distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 10.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x <= 0.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tif ( x === PINF ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\tif ( d1 * x > d2 ) {\n\t\t\treturn betainc( (d1*x)/(d2+(d1*x)), d1/2.0, d2/2.0, true, false );\n\t\t}\n\t\treturn betainc( d2/(d2+(d1*x)), d2/2.0, d1/2.0, true, true );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the cumulative distribution function (CDF) for an F distribution.\n*\n* @module @stdlib/stats/base/dists/f/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/f/cdf' );\n*\n* var y = cdf( 2.0, 1.0, 1.0 );\n* // returns ~0.608\n*\n* y = cdf( 2.0, 8.0, 4.0 );\n* // returns ~0.737\n*\n* y = cdf( -1.0, 2.0, 2.0 );\n* // returns 0.0\n*\n* var mycdf = cdf.factory( 10.0, 2.0 );\n*\n* y = mycdf( 10.0 );\n* // returns ~0.906\n*\n* y = mycdf( 8.0 );\n* // returns ~0.884\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( './../../../is-array' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns a function which tests if every element in an array passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arrayfcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\nfunction arrayfcn( predicate ) {\n\tif ( typeof predicate !== 'function' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', predicate ) );\n\t}\n\treturn every;\n\n\t/**\n\t* Tests if every element in an array passes a test condition.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether a value is an array for which all elements pass a test condition\n\t*/\n\tfunction every( value ) {\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isArray( value ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tlen = value.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( predicate( value[ i ] ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = arrayfcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a function which tests if every element in an array passes a test condition.\n*\n* @module @stdlib/assert/tools/array-function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n* var arrayfcn = require( '@stdlib/assert/tools/array-function' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arrayfcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\n\n// MODULES //\n\nvar arrayfcn = require( './arrayfcn.js' );\n\n\n// EXPORTS //\n\nmodule.exports = arrayfcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is object-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is object-like\n*\n* @example\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( [] );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( null );\n* // returns false\n*/\nfunction isObjectLike( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isObjectLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is object-like.\n*\n* @module @stdlib/assert/is-object-like\n*\n* @example\n* var isObjectLike = require( '@stdlib/assert/is-object-like' );\n*\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* bool = isObjectLike( [] );\n* // returns true\n*\n* bool = isObjectLike( null );\n* // returns false\n*\n* @example\n* var isObjectLike = require( '@stdlib/assert/is-object-like' ).isObjectLikeArray;\n*\n* var bool = isObjectLike( [ {}, [] ] );\n* // returns true\n*\n* bool = isObjectLike( [ {}, '3.0' ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-function' );\nvar isObjectLike = require( './main.js' );\n\n\n// MAIN //\n\nsetReadOnly( isObjectLike, 'isObjectLikeArray', arrayfun( isObjectLike ) );\n\n\n// EXPORTS //\n\nmodule.exports = isObjectLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObjectLike = require( './../../is-object-like' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Buffer instance.\n*\n* @param {*} value - value to validate\n* @returns {boolean} boolean indicating if a value is a Buffer instance\n*\n* @example\n* var v = isBuffer( new Buffer( 'beep' ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( new Buffer( [1,2,3,4] ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( {} );\n* // returns false\n*\n* @example\n* var v = isBuffer( [] );\n* // returns false\n*/\nfunction isBuffer( value ) {\n\treturn (\n\t\tisObjectLike( value ) &&\n\t\t(\n\t\t\t// eslint-disable-next-line no-underscore-dangle\n\t\t\tvalue._isBuffer || // for envs missing Object.prototype.constructor (e.g., Safari 5-7)\n\t\t\t(\n\t\t\t\tvalue.constructor &&\n\n\t\t\t\t// WARNING: `typeof` is not a foolproof check, as certain envs consider RegExp and NodeList instances to be functions\n\t\t\t\ttypeof value.constructor.isBuffer === 'function' &&\n\t\t\t\tvalue.constructor.isBuffer( value )\n\t\t\t)\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Buffer instance.\n*\n* @module @stdlib/assert/is-buffer\n*\n* @example\n* var isBuffer = require( '@stdlib/assert/is-buffer' );\n*\n* var v = isBuffer( new Buffer( 'beep' ) );\n* // returns true\n*\n* v = isBuffer( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isBuffer = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar RE = /./;\n\n\n// EXPORTS //\n\nmodule.exports = RE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a boolean primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean primitive\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var bool = isBoolean( new Boolean( true ) );\n* // returns false\n*/\nfunction isBoolean( value ) {\n\treturn ( typeof value === 'boolean' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toString = require( './tostring.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Boolean.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar test = require( './try2serialize.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean object\n*\n* @example\n* var bool = isBoolean( true );\n* // returns false\n*\n* @example\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Boolean ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Boolean]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a boolean\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* var bool = isBoolean( new Boolean( true ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a boolean.\n*\n* @module @stdlib/assert/is-boolean\n*\n* @example\n* var isBoolean = require( '@stdlib/assert/is-boolean' );\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* // Use interface to check for boolean primitives...\n* var isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( true ) );\n* // returns false\n*\n* @example\n* // Use interface to check for boolean objects...\n* var isBoolean = require( '@stdlib/assert/is-boolean' ).isObject;\n*\n* var bool = isBoolean( true );\n* // returns false\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isBoolean = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isBoolean, 'isPrimitive', isPrimitive );\nsetReadOnly( isBoolean, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the global object using code generation.\n*\n* @private\n* @returns {Object} global object\n*/\nfunction getGlobal() {\n\treturn new Function( 'return this;' )(); // eslint-disable-line no-new-func\n}\n\n\n// EXPORTS //\n\nmodule.exports = getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof self === 'object' ) ? self : null;\n\n\n// EXPORTS //\n\nmodule.exports = obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof window === 'object' ) ? window : null;\n\n\n// EXPORTS //\n\nmodule.exports = obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof global === 'object' ) ? global : null;\n\n\n// EXPORTS //\n\nmodule.exports = obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar getThis = require( './codegen.js' );\nvar Self = require( './self.js' );\nvar Win = require( './window.js' );\nvar Global = require( './global.js' );\n\n\n// MAIN //\n\n/**\n* Returns the global object.\n*\n* ## Notes\n*\n* -   Using code generation is the **most** reliable way to resolve the global object; however, doing so is likely to violate content security policies (CSPs) in, e.g., Chrome Apps and elsewhere.\n*\n* @param {boolean} [codegen=false] - boolean indicating whether to use code generation to resolve the global object\n* @throws {TypeError} must provide a boolean\n* @throws {Error} unable to resolve global object\n* @returns {Object} global object\n*\n* @example\n* var g = getGlobal();\n* // returns {...}\n*/\nfunction getGlobal( codegen ) {\n\tif ( arguments.length ) {\n\t\tif ( !isBoolean( codegen ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a boolean. Value: `%s`.', codegen ) );\n\t\t}\n\t\tif ( codegen ) {\n\t\t\treturn getThis();\n\t\t}\n\t\t// Fall through...\n\t}\n\t// Case: browsers and web workers\n\tif ( Self ) {\n\t\treturn Self;\n\t}\n\t// Case: browsers\n\tif ( Win ) {\n\t\treturn Win;\n\t}\n\t// Case: Node.js\n\tif ( Global ) {\n\t\treturn Global;\n\t}\n\t// Case: unknown\n\tthrow new Error( 'unexpected error. Unable to resolve global object.' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the global object.\n*\n* @module @stdlib/utils/global\n*\n* @example\n* var getGlobal = require( '@stdlib/utils/global' );\n*\n* var g = getGlobal();\n* // returns {...}\n*/\n\n// MODULES //\n\nvar getGlobal = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getGlobal = require( './../../../global' );\n\n\n// MAIN //\n\nvar root = getGlobal();\nvar nodeList = root.document && root.document.childNodes;\n\n\n// EXPORTS //\n\nmodule.exports = nodeList;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar typedarray = Int8Array; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = typedarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar RE = require( './fixtures/re.js' );\nvar nodeList = require( './fixtures/nodelist.js' );\nvar typedarray = require( './fixtures/typedarray.js' );\n\n\n// MAIN //\n\n/**\n* Checks whether a polyfill is needed when using the `typeof` operator.\n*\n* @private\n* @returns {boolean} boolean indicating whether a polyfill is needed\n*/\nfunction check() {\n\tif (\n\t\t// Chrome 1-12 returns 'function' for regular expression instances (see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof):\n\t\ttypeof RE === 'function' ||\n\n\t\t// Safari 8 returns 'object' for typed array and weak map constructors (underscore #1929):\n\t\ttypeof typedarray === 'object' ||\n\n\t\t// PhantomJS 1.9 returns 'function' for `NodeList` instances (underscore #2236):\n\t\ttypeof nodeList === 'function'\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\nfunction reFunctionName() {\n\treturn /^\\s*function\\s*([^(]*)/i;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reFunctionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reFunctionName = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Captures everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* Regular expression: `/^\\s*function\\s*([^(]*)/i`\n*\n* -   `/^\\s*`\n*     -   Match zero or more spaces at beginning\n*\n* -   `function`\n*     -   Match the word `function`\n*\n* -   `\\s*`\n*     -   Match zero or more spaces after the word `function`\n*\n* -   `()`\n*     -   Capture\n*\n* -   `[^(]*`\n*     -   Match anything except a left parenthesis `(` zero or more times\n*\n* -   `/i`\n*     -   ignore case\n*\n* @constant\n* @type {RegExp}\n* @default /^\\s*function\\s*([^(]*)/i\n*/\nvar RE_FUNCTION_NAME = reFunctionName();\n\n\n// EXPORTS //\n\nmodule.exports = RE_FUNCTION_NAME;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @module @stdlib/regexp/function-name\n*\n* @example\n* var reFunctionName = require( '@stdlib/regexp/function-name' );\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reFunctionName = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reFunctionName, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reFunctionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( './../../native-class' );\nvar RE = require( '@stdlib/regexp/function-name' ).REGEXP;\nvar isBuffer = require( '@stdlib/assert/is-buffer' );\n\n\n// MAIN //\n\n/**\n* Determines the name of a value's constructor.\n*\n* @param {*} v - input value\n* @returns {string} name of a value's constructor\n*\n* @example\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* @example\n* var v = constructorName( 5 );\n* // returns 'Number'\n*\n* @example\n* var v = constructorName( null );\n* // returns 'Null'\n*\n* @example\n* var v = constructorName( undefined );\n* // returns 'Undefined'\n*\n* @example\n* var v = constructorName( function noop() {} );\n* // returns 'Function'\n*/\nfunction constructorName( v ) {\n\tvar match;\n\tvar name;\n\tvar ctor;\n\tname = nativeClass( v ).slice( 8, -1 );\n\tif ( (name === 'Object' || name === 'Error') && v.constructor ) {\n\t\tctor = v.constructor;\n\t\tif ( typeof ctor.name === 'string' ) {\n\t\t\treturn ctor.name;\n\t\t}\n\t\tmatch = RE.exec( ctor.toString() );\n\t\tif ( match ) {\n\t\t\treturn match[ 1 ];\n\t\t}\n\t}\n\tif ( isBuffer( v ) ) {\n\t\treturn 'Buffer';\n\t}\n\treturn name;\n}\n\n\n// EXPORTS //\n\nmodule.exports = constructorName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine the name of a value's constructor.\n*\n* @module @stdlib/utils/constructor-name\n*\n* @example\n* var constructorName = require( '@stdlib/utils/constructor-name' );\n*\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* v = constructorName( {} );\n* // returns 'Object'\n*\n* v = constructorName( true );\n* // returns 'Boolean'\n*/\n\n// MODULES //\n\nvar constructorName = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = constructorName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctorName = require( './../../constructor-name' );\n\n\n// NOTES //\n\n/*\n* Built-in `typeof` operator behavior:\n*\n* ```text\n* typeof null => 'object'\n* typeof undefined => 'undefined'\n* typeof 'a' => 'string'\n* typeof 5 => 'number'\n* typeof NaN => 'number'\n* typeof true => 'boolean'\n* typeof false => 'boolean'\n* typeof {} => 'object'\n* typeof [] => 'object'\n* typeof function foo(){} => 'function'\n* typeof function* foo(){} => 'object'\n* typeof Symbol() => 'symbol'\n* ```\n*\n*/\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\tvar type;\n\n\t// Address `typeof null` => `object` (see http://wiki.ecmascript.org/doku.php?id=harmony:typeof_null):\n\tif ( v === null ) {\n\t\treturn 'null';\n\t}\n\ttype = typeof v;\n\n\t// If the `typeof` operator returned something other than `object`, we are done. Otherwise, we need to check for an internal class name or search for a constructor.\n\tif ( type === 'object' ) {\n\t\treturn ctorName( v ).toLowerCase();\n\t}\n\treturn type;\n}\n\n\n// EXPORTS //\n\nmodule.exports = typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctorName = require( './../../constructor-name' );\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\treturn ctorName( v ).toLowerCase();\n}\n\n\n// EXPORTS //\n\nmodule.exports = typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine a value's type.\n*\n* @module @stdlib/utils/type-of\n*\n* @example\n* var typeOf = require( '@stdlib/utils/type-of' );\n*\n* var str = typeOf( 'a' );\n* // returns 'string'\n*\n* str = typeOf( 5 );\n* // returns 'number'\n*/\n\n// MODULES //\n\nvar usePolyfill = require( './check.js' );\nvar typeOf = require( './typeof.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar main = ( usePolyfill() ) ? polyfill : typeOf;\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar typeOf = require( '@stdlib/utils/type-of' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a function.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a function\n*\n* @example\n* function beep() {\n*     return 'beep';\n* }\n*\n* var bool = isFunction( beep );\n* // returns true\n*/\nfunction isFunction( value ) {\n\t// Note: cannot use `typeof` directly, as various browser engines incorrectly return `'function'` when operating on non-function objects, such as regular expressions and NodeLists.\n\treturn ( typeOf( value ) === 'function' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a function.\n*\n* @module @stdlib/assert/is-function\n*\n* @example\n* var isFunction = require( '@stdlib/assert/is-function' );\n*\n* function beep() {\n*     return 'beep';\n* }\n*\n* var bool = isFunction( beep );\n* // returns true\n*/\n\n// MODULES //\n\nvar isFunction = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar getProto = Object.getPrototypeOf;\n\n\n// EXPORTS //\n\nmodule.exports = getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the value of the `__proto__` property.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {*} value of `__proto__` property\n*/\nfunction getProto( obj ) {\n\t// eslint-disable-next-line no-proto\n\treturn obj.__proto__;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( './../../native-class' );\nvar getProto = require( './proto.js' );\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {(Object|null)} prototype\n*/\nfunction getPrototypeOf( obj ) {\n\tvar proto = getProto( obj );\n\tif ( proto || proto === null ) {\n\t\treturn proto;\n\t}\n\tif ( nativeClass( obj.constructor ) === '[object Function]' ) {\n\t\t// May break if the constructor has been tampered with...\n\t\treturn obj.constructor.prototype;\n\t}\n\tif ( obj instanceof Object ) {\n\t\treturn Object.prototype;\n\t}\n\t// Return `null` for objects created via `Object.create( null )`. Also return `null` for cross-realm objects on browsers that lack `__proto__` support, such as IE < 11.\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar builtin = require( './native.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar getProto;\nif ( isFunction( Object.getPrototypeOf ) ) {\n\tgetProto = builtin;\n} else {\n\tgetProto = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getProto = require( './detect.js' );\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @param {*} value - input value\n* @returns {(Object|null)} prototype\n*\n* @example\n* var proto = getPrototypeOf( {} );\n* // returns {}\n*/\nfunction getPrototypeOf( value ) {\n\tif (\n\t\tvalue === null ||\n\t\tvalue === void 0\n\t) {\n\t\treturn null;\n\t}\n\t// In order to ensure consistent ES5/ES6 behavior, cast input value to an object (strings, numbers, booleans); ES5 `Object.getPrototypeOf` throws when provided primitives and ES6 `Object.getPrototypeOf` casts:\n\tvalue = Object( value );\n\n\treturn getProto( value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the prototype of a provided object.\n*\n* @module @stdlib/utils/get-prototype-of\n*\n* @example\n* var getPrototype = require( '@stdlib/utils/get-prototype-of' );\n*\n* var proto = getPrototype( {} );\n* // returns {}\n*/\n\n// MODULES //\n\nvar getPrototype = require( './get_prototype_of.js' );\n\n\n// EXPORTS //\n\nmodule.exports = getPrototype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an `Error` object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `Error` object\n*\n* @example\n* var bool = isError( new Error( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isError( {} );\n* // returns false\n*/\nfunction isError( value ) {\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for `Error` objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tif ( value instanceof Error ) {\n\t\treturn true;\n\t}\n\t// Walk the prototype tree until we find an object having the desired native class...\n\twhile ( value ) {\n\t\tif ( nativeClass( value ) === '[object Error]' ) {\n\t\t\treturn true;\n\t\t}\n\t\tvalue = getPrototypeOf( value );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an `Error` object.\n*\n* @module @stdlib/assert/is-error\n*\n* @example\n* var isError = require( '@stdlib/assert/is-error' );\n*\n* var bool = isError( new Error( 'beep' ) );\n* // returns true\n*\n* bool = isError( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isError = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar valueOf = require( './valueof.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to extract a string value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a string can be extracted\n*/\nfunction test( value ) {\n\ttry {\n\t\tvalueOf.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar valueOf = String.prototype.valueOf; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = valueOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar test = require( './try2valueof.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string object\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns false\n*/\nfunction isString( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof String ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object String]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a string\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*/\nfunction isString( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a string.\n*\n* @module @stdlib/assert/is-string\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' );\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 5 );\n* // returns false\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' ).isObject;\n*\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 'beep' );\n* // returns false\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' ).isPrimitive;\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isString = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isString, 'isPrimitive', isPrimitive );\nsetReadOnly( isString, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to parse a regular expression string.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_REGEXP = reRegExp();\n*\n* var bool = RE_REGEXP.test( '/^beep$/' );\n* // returns true\n*\n* bool = RE_REGEXP.test( '' );\n* // returns false\n*/\nfunction reRegExp() {\n\treturn /^\\/((?:\\\\\\/|[^\\/])+)\\/([imgy]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nmodule.exports = reRegExp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reRegExp = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches parts of a regular expression string.\n*\n* Regular expression: `/^\\/((?:\\\\\\/|[^\\/])+)\\/([imgy]*)$/`\n*\n* -   `/^\\/`\n*     -   match a string that begins with a `/`\n*\n* -   `()`\n*     -   capture\n*\n* -   `(?:)+`\n*     -   capture, but do not remember, a group of characters which occur one or more times\n*\n* -   `\\\\\\/`\n*     -   match the literal `\\/`\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\/]`\n*     -   anything which is not the literal `\\/`\n*\n* -   `\\/`\n*     -   match the literal `/`\n*\n* -   `([imgy]*)`\n*     -   capture any characters matching `imgy` occurring zero or more times\n*\n* -   `$/`\n*     -   string end\n*\n*\n* @constant\n* @type {RegExp}\n* @default /^\\/((?:\\\\\\/|[^\\/])+)\\/([imgy]*)$/\n*/\nvar RE_REGEXP = reRegExp();\n\n\n// EXPORTS //\n\nmodule.exports = RE_REGEXP;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to parse a regular expression string.\n*\n* @module @stdlib/regexp/regexp\n*\n* @example\n* var reRegExp = require( '@stdlib/regexp/regexp' );\n*\n* var RE_REGEXP = reRegExp();\n*\n* var bool = RE_REGEXP.test( '/^beep$/' );\n* // returns true\n*\n* bool = RE_REGEXP.test( '' );\n* // returns false\n*\n* @example\n* var reRegExp = require( '@stdlib/regexp/regexp' );\n*\n* var RE_REGEXP = reRegExp();\n*\n* var parts = RE_REGEXP.exec( '/^.*$/ig' );\n* // returns [ '/^.*$/ig', '^.*$', 'ig', 'index': 0, 'input': '/^.*$/ig' ]\n*/\n\n// MAIN //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reRegExp = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reRegExp, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reRegExp;\n\n\n// EXPORTS //\n\nmodule.exports = reRegExp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar reRegExp = require( '@stdlib/regexp/regexp' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Parses a regular expression string and returns a new regular expression.\n*\n* @param {string} str - regular expression string\n* @throws {TypeError} must provide a regular expression string\n* @returns {(RegExp|null)} regular expression or null\n*\n* @example\n* var re = reFromString( '/beep/' );\n* // returns /beep/\n*/\nfunction reFromString( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a regular expression string. Value: `%s`.', str ) );\n\t}\n\t// Capture the regular expression pattern and any flags:\n\tstr = reRegExp().exec( str );\n\n\t// Create a new regular expression:\n\treturn ( str ) ? new RegExp( str[1], str[2] ) : null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reFromString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a regular expression from a regular expression string.\n*\n* @module @stdlib/utils/regexp-from-string\n*\n* @example\n* var reFromString = require( '@stdlib/utils/regexp-from-string' );\n*\n* var re = reFromString( '/beep/' );\n* // returns /beep/\n*/\n\n// MODULES //\n\nvar reFromString = require( './from_string.js' );\n\n\n// EXPORTS //\n\nmodule.exports = reFromString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\nvar isNan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `NaN` number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `NaN` number primitive\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\nvar isNan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value of `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value of `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( null );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is `NaN`.\n*\n* @module @stdlib/assert/is-nan\n*\n* @example\n* var isnan = require( '@stdlib/assert/is-nan' );\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( null );\n* // returns false\n*\n* @example\n* var isnan = require( '@stdlib/assert/is-nan' ).isPrimitive;\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns false\n*\n* @example\n* var isnan = require( '@stdlib/assert/is-nan' ).isObject;\n*\n* var bool = isnan( NaN );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isnan = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isnan, 'isPrimitive', isPrimitive );\nsetReadOnly( isnan, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar MAX_LENGTH = require( '@stdlib/constants/array/max-typed-array-length' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a collection.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a collection\n*\n* @example\n* var bool = isCollection( [] );\n* // returns true\n*\n* @example\n* var bool = isCollection( {} );\n* // returns false\n*/\nfunction isCollection( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isCollection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a collection.\n*\n* @module @stdlib/assert/is-collection\n*\n* @example\n* var isCollection = require( '@stdlib/assert/is-collection' );\n*\n* var bool = isCollection( [] );\n* // returns true\n*\n* bool = isCollection( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isCollection = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isCollection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns the first index at which a given element can be found.\n*\n* @param {ArrayLike} arr - array-like object\n* @param {*} searchElement - element to find\n* @param {integer} [fromIndex] - starting index (if negative, the start index is determined relative to last element)\n* @throws {TypeError} must provide an array-like object\n* @throws {TypeError} third argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 3 );\n* // returns 1\n*\n* @example\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 5 );\n* // returns -1\n*\n* @example\n* // Using a `fromIndex`:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* var idx = indexOf( arr, 2, 3 );\n* // returns 5\n*\n* @example\n* // `fromIndex` which exceeds `array` length:\n* var arr = [ 1, 2, 3, 4, 2, 5 ];\n* var idx = indexOf( arr, 2, 10 );\n* // returns -1\n*\n* @example\n* // Negative `fromIndex`:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6, 2 ];\n* var idx = indexOf( arr, 2, -4 );\n* // returns 5\n*\n* idx = indexOf( arr, 2, -1 );\n* // returns 7\n*\n* @example\n* // Negative `fromIndex` exceeding input `array` length:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* var idx = indexOf( arr, 2, -10 );\n* // returns 1\n*\n* @example\n* // Array-like objects:\n* var str = 'bebop';\n* var idx = indexOf( str, 'o' );\n* // returns 3\n*/\nfunction indexOf( arr, searchElement, fromIndex ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( arr ) && !isString( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tlen = arr.length;\n\tif ( len === 0 ) {\n\t\treturn -1;\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex >= 0 ) {\n\t\t\tif ( fromIndex >= len ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\ti = fromIndex;\n\t\t} else {\n\t\t\ti = len + fromIndex;\n\t\t\tif ( i < 0 ) {\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\ti = 0;\n\t}\n\t// Check for `NaN`...\n\tif ( isnan( searchElement ) ) {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( isnan( arr[i] ) ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( arr[ i ] === searchElement ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n// EXPORTS //\n\nmodule.exports = indexOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the first index at which a given element can be found.\n*\n* @module @stdlib/utils/index-of\n*\n* @example\n* var indexOf = require( '@stdlib/utils/index-of' );\n*\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 3 );\n* // returns 1\n*\n* arr = [ 4, 3, 2, 1 ];\n* idx = indexOf( arr, 5 );\n* // returns -1\n*\n* // Using a `fromIndex`:\n* arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* idx = indexOf( arr, 2, 3 );\n* // returns 5\n*\n* // `fromIndex` which exceeds `array` length:\n* arr = [ 1, 2, 3, 4, 2, 5 ];\n* idx = indexOf( arr, 2, 10 );\n* // returns -1\n*\n* // Negative `fromIndex`:\n* arr = [ 1, 2, 3, 4, 5, 2, 6, 2 ];\n* idx = indexOf( arr, 2, -4 );\n* // returns 5\n*\n* idx = indexOf( arr, 2, -1 );\n* // returns 7\n*\n* // Negative `fromIndex` exceeding input `array` length:\n* arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* idx = indexOf( arr, 2, -10 );\n* // returns 1\n*\n* // Array-like objects:\n* var str = 'bebop';\n* idx = indexOf( str, 'o' );\n* // returns 3\n*/\n\n// MODULES //\n\nvar indexOf = require( './index_of.js' );\n\n\n// EXPORTS //\n\nmodule.exports = indexOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.keys()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\treturn Object.keys( Object( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar keys = require( './builtin.js' );\n\n\n// FUNCTIONS //\n\n/**\n* Tests the built-in `Object.keys()` implementation when provided `arguments`.\n*\n* @private\n* @returns {boolean} boolean indicating whether the built-in implementation returns the expected number of keys\n*/\nfunction test() {\n\treturn ( keys( arguments ) || '' ).length !== 2;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether the built-in `Object.keys()` implementation supports providing `arguments` as an input value.\n*\n* ## Notes\n*\n* -   Safari 5.0 does **not** support `arguments` as an input value.\n*\n* @private\n* @returns {boolean} boolean indicating whether a built-in implementation supports `arguments`\n*/\nfunction check() {\n\treturn test( 1, 2 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.keys !== 'undefined' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an `arguments` object.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `arguments` object\n*\n* @example\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* @example\n* var bool = isArguments( [] );\n* // returns false\n*/\nfunction isArguments( value ) {\n\treturn ( nativeClass( value ) === '[object Arguments]' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArguments = require( './main.js' );\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Detects whether an environment returns the expected internal class of the `arguments` object.\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment behaves as expected\n*\n* @example\n* var bool = detect();\n* // returns <boolean>\n*/\nfunction detect() {\n\treturn isArguments( arguments );\n}\n\n\n// MAIN //\n\nbool = detect();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isEnum = require( './native.js' );\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Detects whether an environment has a bug where String indices are not detected as \"enumerable\" properties. Observed in Node v0.10.\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment has the bug\n*/\nfunction detect() {\n\treturn !isEnum.call( 'beep', '0' );\n}\n\n\n// MAIN //\n\nbool = detect();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if an object's own property is enumerable.\n*\n* @private\n* @name isEnumerableProperty\n* @type {Function}\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is enumerable\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\nvar isEnumerableProperty = Object.prototype.propertyIsEnumerable;\n\n\n// EXPORTS //\n\nmodule.exports = isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' );\nvar isnan = require( './../../is-nan' ).isPrimitive;\nvar isInteger = require( './../../is-integer' ).isPrimitive;\nvar isEnum = require( './native.js' );\nvar hasStringEnumBug = require( './has_string_enumerability_bug.js' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property is enumerable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is enumerable\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\nfunction isEnumerableProperty( value, property ) {\n\tvar bool;\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\tbool = isEnum.call( value, property );\n\tif ( !bool && hasStringEnumBug && isString( value ) ) {\n\t\t// Note: we only check for indices, as properties attached to a `String` object are properly detected as enumerable above.\n\t\tproperty = +property;\n\t\treturn (\n\t\t\t!isnan( property ) &&\n\t\t\tisInteger( property ) &&\n\t\t\tproperty >= 0 &&\n\t\t\tproperty < value.length\n\t\t);\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own property is enumerable.\n*\n* @module @stdlib/assert/is-enumerable-property\n*\n* @example\n* var isEnumerableProperty = require( '@stdlib/assert/is-enumerable-property' );\n*\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isEnumerableProperty = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( './../../has-own-property' );\nvar isEnumerableProperty = require( './../../is-enumerable-property' );\nvar isArray = require( './../../is-array' );\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar MAX_LENGTH = require( '@stdlib/constants/uint32/max' );\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an `arguments` object.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `arguments` object\n*\n* @example\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* @example\n* var bool = isArguments( [] );\n* // returns false\n*/\nfunction isArguments( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object' &&\n\t\t!isArray( value ) &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH &&\n\t\thasOwnProp( value, 'callee' ) &&\n\t\t!isEnumerableProperty( value, 'callee' )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an `arguments` object.\n*\n* @module @stdlib/assert/is-arguments\n*\n* @example\n* var isArguments = require( '@stdlib/assert/is-arguments' );\n*\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* bool = isArguments( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar hasArgumentsClass = require( './detect.js' );\nvar main = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar isArguments;\nif ( hasArgumentsClass ) {\n\tisArguments = main;\n} else {\n\tisArguments = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArguments = require( '@stdlib/assert/is-arguments' );\nvar builtin = require( './builtin.js' );\n\n\n// VARIABLES //\n\nvar slice = Array.prototype.slice;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\tif ( isArguments( value ) ) {\n\t\treturn builtin( slice.call( value ) );\n\t}\n\treturn builtin( value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* No operation.\n*\n* @example\n* noop();\n* // ...does nothing.\n*/\nfunction noop() {\n\t// Empty function...\n}\n\n\n// EXPORTS //\n\nmodule.exports = noop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isEnumerableProperty = require( '@stdlib/assert/is-enumerable-property' );\nvar noop = require( './../../noop' );\n\n\n// MAIN //\n\n// Note: certain environments treat an object's prototype as enumerable, which, as a matter of convention, it shouldn't be...\nvar bool = isEnumerableProperty( noop, 'prototype' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isEnumerableProperty = require( '@stdlib/assert/is-enumerable-property' );\n\n\n// VARIABLES //\n\nvar obj = {\n\t'toString': null\n};\n\n\n// MAIN //\n\n// Note: certain environments don't allow enumeration of overwritten properties which are considered non-enumerable...\nvar bool = !isEnumerableProperty( obj, 'toString' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests whether a value equals the prototype of its constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value equals the prototype of its constructor\n*/\nfunction isConstructorPrototype( value ) {\n\treturn ( value.constructor && value.constructor.prototype === value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isConstructorPrototype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar indexOf = require( './../../index-of' );\nvar typeOf = require( './../../type-of' );\nvar isConstructorPrototype = require( './is_constructor_prototype.js' );\nvar EXCLUDED_KEYS = require( './excluded_keys.json' );\nvar win = require( './window.js' );\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Determines whether an environment throws when comparing to the prototype of a value's constructor (e.g., [IE9][1]).\n*\n* [1]: https://stackoverflow.com/questions/7688070/why-is-comparing-the-constructor-property-of-two-windows-unreliable\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment is buggy\n*/\nfunction check() {\n\tvar k;\n\tif ( typeOf( win ) === 'undefined' ) {\n\t\treturn false;\n\t}\n\tfor ( k in win ) { // eslint-disable-line guard-for-in\n\t\ttry {\n\t\t\tif (\n\t\t\t\tindexOf( EXCLUDED_KEYS, k ) === -1 &&\n\t\t\t\thasOwnProp( win, k ) &&\n\t\t\t\twin[ k ] !== null &&\n\t\t\t\ttypeOf( win[ k ] ) === 'object'\n\t\t\t) {\n\t\t\t\tisConstructorPrototype( win[ k ] );\n\t\t\t}\n\t\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\nbool = check();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar w = ( typeof window === 'undefined' ) ? void 0 : window;\n\n\n// EXPORTS //\n\nmodule.exports = w;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof window !== 'undefined' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasAutomationEqualityBug = require( './has_automation_equality_bug.js' );\nvar isConstructorPrototype = require( './is_constructor_prototype.js' );\nvar HAS_WINDOW = require( './has_window.js' );\n\n\n// MAIN //\n\n/**\n* Wraps the test for constructor prototype equality to accommodate buggy environments (e.g., environments which throw when testing equality).\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value equals the prototype of its constructor\n*/\nfunction wrapper( value ) {\n\tif ( HAS_WINDOW === false && !hasAutomationEqualityBug ) {\n\t\treturn isConstructorPrototype( value );\n\t}\n\ttry {\n\t\treturn isConstructorPrototype( value );\n\t} catch ( error ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = wrapper;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObjectLike = require( '@stdlib/assert/is-object-like' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isArguments = require( '@stdlib/assert/is-arguments' );\nvar HAS_ENUM_PROTO_BUG = require( './has_enumerable_prototype_bug.js' );\nvar HAS_NON_ENUM_PROPS_BUG = require( './has_non_enumerable_properties_bug.js' );\nvar isConstructorPrototype = require( './is_constructor_prototype_wrapper.js' );\nvar NON_ENUMERABLE = require( './non_enumerable.json' );\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\tvar skipConstructor;\n\tvar skipPrototype;\n\tvar isFcn;\n\tvar out;\n\tvar k;\n\tvar p;\n\tvar i;\n\n\tout = [];\n\tif ( isArguments( value ) ) {\n\t\t// Account for environments which treat `arguments` differently...\n\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\tout.push( i.toString() );\n\t\t}\n\t\t// Note: yes, we are precluding the `arguments` array-like object from having other enumerable properties; however, this should (1) be very rare and (2) not be encouraged (e.g., doing something like `arguments.a = 'b'`; in certain engines directly manipulating the `arguments` value results in automatic de-optimization).\n\t\treturn out;\n\t}\n\tif ( typeof value === 'string' ) {\n\t\t// Account for environments which do not treat string character indices as \"own\" properties...\n\t\tif ( value.length > 0 && !hasOwnProp( value, '0' ) ) {\n\t\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\t\tout.push( i.toString() );\n\t\t\t}\n\t\t}\n\t} else {\n\t\tisFcn = ( typeof value === 'function' );\n\t\tif ( isFcn === false && !isObjectLike( value ) ) {\n\t\t\treturn out;\n\t\t}\n\t\tskipPrototype = ( HAS_ENUM_PROTO_BUG && isFcn );\n\t}\n\tfor ( k in value ) {\n\t\tif ( !( skipPrototype && k === 'prototype' ) && hasOwnProp( value, k ) ) {\n\t\t\tout.push( String( k ) );\n\t\t}\n\t}\n\tif ( HAS_NON_ENUM_PROPS_BUG ) {\n\t\tskipConstructor = isConstructorPrototype( value );\n\t\tfor ( i = 0; i < NON_ENUMERABLE.length; i++ ) {\n\t\t\tp = NON_ENUMERABLE[ i ];\n\t\t\tif ( !( skipConstructor && p === 'constructor' ) && hasOwnProp( value, p ) ) {\n\t\t\t\tout.push( String( p ) );\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasArgumentsBug = require( './has_arguments_bug.js' );\nvar HAS_BUILTIN = require( './has_builtin.js' );\nvar builtin = require( './builtin.js' );\nvar wrapper = require( './builtin_wrapper.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @name keys\n* @type {Function}\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nvar keys;\nif ( HAS_BUILTIN ) {\n\tif ( hasArgumentsBug() ) {\n\t\tkeys = wrapper;\n\t} else {\n\t\tkeys = builtin;\n\t}\n} else {\n\tkeys = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's own enumerable property names.\n*\n* @module @stdlib/utils/keys\n*\n* @example\n* var keys = require( '@stdlib/utils/keys' );\n*\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\n\n// MODULES //\n\nvar keys = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.getOwnPropertyNames !== 'undefined' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar propertyNames = Object.getOwnPropertyNames;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable and non-enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyNames()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var keys = getOwnPropertyNames( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction getOwnPropertyNames( value ) {\n\treturn propertyNames( Object( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = getOwnPropertyNames;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar keys = require( './../../keys' );\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable and non-enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyNames()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n* -   In environments lacking support for `Object.getOwnPropertyNames()`, property descriptors are unavailable, and thus all properties can be safely assumed to be enumerable. Hence, we can defer to calling `Object.keys`, which retrieves all own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var keys = getOwnPropertyNames( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction getOwnPropertyNames( value ) {\n\treturn keys( Object( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = getOwnPropertyNames;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's own enumerable and non-enumerable property names.\n*\n* @module @stdlib/utils/property-names\n*\n* @example\n* var getOwnPropertyNames = require( '@stdlib/utils/property-names' );\n*\n* var keys = getOwnPropertyNames({\n*   'foo': 'bar',\n*   'beep': 'boop'\n* });\n* // e.g., returns [ 'foo', 'beep' ]\n*/\n\n// MODULES //\n\nvar HAS_BUILTIN = require( './has_builtin.js' );\nvar builtin = require( './builtin.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar main;\nif ( HAS_BUILTIN ) {\n\tmain = builtin;\n} else {\n\tmain = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.getOwnPropertyDescriptor !== 'undefined' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar propertyDescriptor = Object.getOwnPropertyDescriptor;\n\n\n// MAIN //\n\n/**\n* Returns a property descriptor for an object's own property.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if provided `undefined` or `null`, rather than throwing an error.\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if an object does not have a provided property, rather than `undefined`.\n*\n* @private\n* @param {*} value - input object\n* @param {(string|symbol)} property - property\n* @returns {(Object|null)} property descriptor or null\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var desc = getOwnPropertyDescriptor( obj, 'foo' );\n* // returns {'configurable':true,'enumerable':true,'writable':true,'value':3.14}\n*/\nfunction getOwnPropertyDescriptor( value, property ) {\n\tvar desc;\n\tif ( value === null || value === void 0 ) {\n\t\treturn null;\n\t}\n\tdesc = propertyDescriptor( value, property );\n\treturn ( desc === void 0 ) ? null : desc;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getOwnPropertyDescriptor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\n\n\n// MAIN //\n\n/**\n* Returns a property descriptor for an object's own property.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if provided `undefined` or `null`, rather than throwing an error.\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if an object does not have a provided property, rather than `undefined`.\n* -   In environments lacking `Object.getOwnPropertyDescriptor()` support, property descriptors do not exist. In non-supporting environment, if an object has a provided property, this function returns a descriptor object equivalent to that returned in a supporting environment; otherwise, the function returns `null`.\n*\n* @private\n* @param {*} value - input object\n* @param {(string|symbol)} property - property\n* @returns {(Object|null)} property descriptor or null\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var desc = getOwnPropertyDescriptor( obj, 'foo' );\n* // returns {'configurable':true,'enumerable':true,'writable':true,'value':3.14}\n*/\nfunction getOwnPropertyDescriptor( value, property ) {\n\tif ( hasOwnProp( value, property ) ) {\n\t\treturn {\n\t\t\t'configurable': true,\n\t\t\t'enumerable': true,\n\t\t\t'writable': true,\n\t\t\t'value': value[ property ]\n\t\t};\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getOwnPropertyDescriptor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a property descriptor for an object's own property.\n*\n* @module @stdlib/utils/property-descriptor\n*\n* @example\n* var getOwnPropertyDescriptor = require( '@stdlib/utils/property-descriptor' );\n*\n* var obj = {\n*   'foo': 'bar',\n*   'beep': 'boop'\n* };\n*\n* var keys = getOwnPropertyDescriptor( obj, 'foo' );\n* // returns {'configurable':true,'enumerable':true,'writable':true,'value':'bar'}\n*/\n\n// MODULES //\n\nvar HAS_BUILTIN = require( './has_builtin.js' );\nvar builtin = require( './builtin.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar main;\nif ( HAS_BUILTIN ) {\n\tmain = builtin;\n} else {\n\tmain = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Buffer === 'function' ) ? Buffer : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBuffer = require( './../../is-buffer' );\nvar GlobalBuffer = require( './buffer.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Buffer` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Buffer` support\n*\n* @example\n* var bool = hasNodeBufferSupport();\n* // returns <boolean>\n*/\nfunction hasNodeBufferSupport() {\n\tvar bool;\n\tvar b;\n\n\tif ( typeof GlobalBuffer !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tif ( typeof GlobalBuffer.from === 'function' ) {\n\t\t\tb = GlobalBuffer.from( [ 1, 2, 3, 4 ] );\n\t\t} else {\n\t\t\tb = new GlobalBuffer( [ 1, 2, 3, 4 ] ); // Note: this is deprecated behavior starting in Node v6 (see https://nodejs.org/api/buffer.html#buffer_new_buffer_array)\n\t\t}\n\t\tbool = (\n\t\t\tisBuffer( b ) &&\n\t\t\tb[ 0 ] === 1 &&\n\t\t\tb[ 1 ] === 2 &&\n\t\t\tb[ 2 ] === 3 &&\n\t\t\tb[ 3 ] === 4\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasNodeBufferSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Buffer` support.\n*\n* @module @stdlib/assert/has-node-buffer-support\n*\n* @example\n* var hasNodeBufferSupport = require( '@stdlib/assert/has-node-buffer-support' );\n*\n* var bool = hasNodeBufferSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasNodeBufferSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasNodeBufferSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write (browser) polyfill\n\n// MAIN //\n\n/**\n* Buffer constructor.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Buffer constructor.\n*\n* @module @stdlib/buffer/ctor\n*\n* @example\n* var ctor = require( '@stdlib/buffer/ctor' );\n*\n* var b = new ctor( [ 1, 2, 3, 4 ] );\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nvar hasNodeBufferSupport = require( '@stdlib/assert/has-node-buffer-support' );\nvar main = require( './buffer.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasNodeBufferSupport() ) {\n\tctor = main;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = require( 'buffer' ).Buffer; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar Buffer = require( './../../ctor' );\n\n\n// MAIN //\n\nvar bool = isFunction( Buffer.from );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBuffer = require( '@stdlib/assert/is-buffer' );\nvar format = require( '@stdlib/string/format' );\nvar Buffer = require( './../../ctor' );\n\n\n// MAIN //\n\n/**\n* Copies buffer data to a new `Buffer` instance.\n*\n* @param {Buffer} buffer - buffer from which to copy\n* @throws {TypeError} must provide a `Buffer` instance\n* @returns {Buffer} new `Buffer` instance\n*\n* @example\n* var fromArray = require( '@stdlib/buffer/from-array' );\n*\n* var b1 = fromArray( [ 1, 2, 3, 4 ] );\n* // returns <Buffer>\n*\n* var b2 = fromBuffer( b1 );\n* // returns <Buffer>\n*/\nfunction fromBuffer( buffer ) {\n\tif ( !isBuffer( buffer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a Buffer. Value: `%s`.', buffer ) );\n\t}\n\treturn Buffer.from( buffer );\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBuffer = require( '@stdlib/assert/is-buffer' );\nvar format = require( '@stdlib/string/format' );\nvar Buffer = require( './../../ctor' );\n\n\n// MAIN //\n\n/**\n* Copies buffer data to a new `Buffer` instance.\n*\n* @param {Buffer} buffer - buffer from which to copy\n* @throws {TypeError} must provide a `Buffer` instance\n* @returns {Buffer} new `Buffer` instance\n*\n* @example\n* var fromArray = require( '@stdlib/buffer/from-array' );\n*\n* var b1 = fromArray( [ 1, 2, 3, 4 ] );\n* // returns <Buffer>\n*\n* var b2 = fromBuffer( b1 );\n* // returns <Buffer>\n*/\nfunction fromBuffer( buffer ) {\n\tif ( !isBuffer( buffer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a Buffer. Value: `%s`.', buffer ) );\n\t}\n\treturn new Buffer( buffer ); // eslint-disable-line no-buffer-constructor\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Copy buffer data to a new `Buffer` instance.\n*\n* @module @stdlib/buffer/from-buffer\n*\n* @example\n* var fromArray = require( '@stdlib/buffer/from-array' );\n* var copyBuffer = require( '@stdlib/buffer/from-buffer' );\n*\n* var b1 = fromArray( [ 1, 2, 3, 4 ] );\n* // returns <Buffer>\n*\n* var b2 = copyBuffer( b1 );\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nvar hasFrom = require( './has_from.js' );\nvar main = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar copyBuffer;\nif ( hasFrom ) {\n\tcopyBuffer = main;\n} else {\n\tcopyBuffer = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = copyBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasInt8Array = ( typeof Int8Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int8Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int8Array\n*\n* @example\n* var bool = isInt8Array( new Int8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt8Array( [] );\n* // returns false\n*/\nfunction isInt8Array( value ) {\n\treturn (\n\t\t( hasInt8Array && value instanceof Int8Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int8Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInt8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int8Array === 'function' ) ? Int8Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInt8Array = require( './../../is-int8array' );\nvar INT8_MAX = require( '@stdlib/constants/int8/max' );\nvar INT8_MIN = require( '@stdlib/constants/int8/min' );\nvar GlobalInt8Array = require( './int8array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Int8Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int8Array` support\n*\n* @example\n* var bool = hasInt8ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt8ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt8Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt8Array( [ 1, 3.14, -3.14, INT8_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt8Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&     // truncation\n\t\t\tarr[ 2 ] === -3 &&    // truncation\n\t\t\tarr[ 3 ] === INT8_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasInt8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum signed 8-bit integer.\n*\n* @module @stdlib/constants/int8/min\n* @type {integer32}\n*\n* @example\n* var INT8_MIN = require( '@stdlib/constants/int8/min' );\n* // returns -128\n*/\n\n\n// MAIN //\n\n/**\n* Minimum signed 8-bit integer.\n*\n* ## Notes\n*\n* The number is given by\n*\n* ```tex\n* -(2^{7})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 10000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -128\n*/\nvar INT8_MIN = -128|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = INT8_MIN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 8-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 8-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int8\n*\n* @example\n* var ctor = require( '@stdlib/array/int8' );\n*\n* var arr = new ctor( 10 );\n* // returns <Int8Array>\n*/\n\n// MODULES //\n\nvar hasInt8ArraySupport = require( '@stdlib/assert/has-int8array-support' );\nvar builtin = require( './int8array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt8ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int8Array === 'function' ) ? Int8Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Int8Array` support.\n*\n* @module @stdlib/assert/has-int8array-support\n*\n* @example\n* var hasInt8ArraySupport = require( '@stdlib/assert/has-int8array-support' );\n*\n* var bool = hasInt8ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasInt8ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasInt8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint8ClampedArray = ( typeof Uint8ClampedArray === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint8ClampedArray.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint8ClampedArray\n*\n* @example\n* var bool = isUint8ClampedArray( new Uint8ClampedArray( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint8ClampedArray( [] );\n* // returns false\n*/\nfunction isUint8ClampedArray( value ) {\n\treturn (\n\t\t( hasUint8ClampedArray && value instanceof Uint8ClampedArray ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint8ClampedArray]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint8ClampedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint8ClampedArray === 'function' ) ? Uint8ClampedArray : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint8ClampedArray = require( './../../is-uint8clampedarray' );\nvar GlobalUint8ClampedArray = require( './uint8clampedarray.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint8ClampedArray` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint8ClampedArray` support\n*\n* @example\n* var bool = hasUint8ClampedArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint8ClampedArraySupport() { // eslint-disable-line id-length\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint8ClampedArray !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalUint8ClampedArray( [ -1, 0, 1, 3.14, 4.99, 255, 256 ] );\n\t\tbool = (\n\t\t\tisUint8ClampedArray( arr ) &&\n\t\t\tarr[ 0 ] === 0 &&   // clamped\n\t\t\tarr[ 1 ] === 0 &&\n\t\t\tarr[ 2 ] === 1 &&\n\t\t\tarr[ 3 ] === 3 &&   // round to nearest\n\t\t\tarr[ 4 ] === 5 &&   // round to nearest\n\t\t\tarr[ 5 ] === 255 &&\n\t\t\tarr[ 6 ] === 255    // clamped\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint8ClampedArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order clamped to 0-255.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order clamped to 0-255.\n*\n* @module @stdlib/array/uint8c\n*\n* @example\n* var ctor = require( '@stdlib/array/uint8c' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8ClampedArray>\n*/\n\n// MODULES //\n\nvar hasUint8ClampedArraySupport = require( '@stdlib/assert/has-uint8clampedarray-support' ); // eslint-disable-line id-length\nvar builtin = require( './uint8clampedarray.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint8ClampedArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint8ClampedArray === 'function' ) ? Uint8ClampedArray : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint8ClampedArray` support.\n*\n* @module @stdlib/assert/has-uint8clampedarray-support\n*\n* @example\n* var hasUint8ClampedArraySupport = require( '@stdlib/assert/has-uint8clampedarray-support' );\n*\n* var bool = hasUint8ClampedArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint8ClampedArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint8ClampedArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasInt16Array = ( typeof Int16Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int16Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int16Array\n*\n* @example\n* var bool = isInt16Array( new Int16Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt16Array( [] );\n* // returns false\n*/\nfunction isInt16Array( value ) {\n\treturn (\n\t\t( hasInt16Array && value instanceof Int16Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int16Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInt16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int16Array === 'function' ) ? Int16Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInt16Array = require( './../../is-int16array' );\nvar INT16_MAX = require( '@stdlib/constants/int16/max' );\nvar INT16_MIN = require( '@stdlib/constants/int16/min' );\nvar GlobalInt16Array = require( './int16array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Int16Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int16Array` support\n*\n* @example\n* var bool = hasInt16ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt16ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt16Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt16Array( [ 1, 3.14, -3.14, INT16_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt16Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&      // truncation\n\t\t\tarr[ 2 ] === -3 &&     // truncation\n\t\t\tarr[ 3 ] === INT16_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasInt16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum signed 16-bit integer.\n*\n* @module @stdlib/constants/int16/min\n* @type {integer32}\n*\n* @example\n* var INT16_MIN = require( '@stdlib/constants/int16/min' );\n* // returns -32768\n*/\n\n\n// MAIN //\n\n/**\n* Minimum signed 16-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* -(2^{15})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 1000000000000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -32768\n*/\nvar INT16_MIN = -32768|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = INT16_MIN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 16-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 16-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int16\n*\n* @example\n* var ctor = require( '@stdlib/array/int16' );\n*\n* var arr = new ctor( 10 );\n* // returns <Int16Array>\n*/\n\n// MODULES //\n\nvar hasInt16ArraySupport = require( '@stdlib/assert/has-int16array-support' );\nvar builtin = require( './int16array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt16ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int16Array === 'function' ) ? Int16Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Int16Array` support.\n*\n* @module @stdlib/assert/has-int16array-support\n*\n* @example\n* var hasInt16ArraySupport = require( '@stdlib/assert/has-int16array-support' );\n*\n* var bool = hasInt16ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasInt16ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasInt16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasInt32Array = ( typeof Int32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int32Array\n*\n* @example\n* var bool = isInt32Array( new Int32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt32Array( [] );\n* // returns false\n*/\nfunction isInt32Array( value ) {\n\treturn (\n\t\t( hasInt32Array && value instanceof Int32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInt32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int32Array === 'function' ) ? Int32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInt32Array = require( './../../is-int32array' );\nvar INT32_MAX = require( '@stdlib/constants/int32/max' );\nvar INT32_MIN = require( '@stdlib/constants/int32/min' );\nvar GlobalInt32Array = require( './int32array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Int32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int32Array` support\n*\n* @example\n* var bool = hasInt32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt32Array( [ 1, 3.14, -3.14, INT32_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&      // truncation\n\t\t\tarr[ 2 ] === -3 &&     // truncation\n\t\t\tarr[ 3 ] === INT32_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasInt32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum signed 32-bit integer.\n*\n* @module @stdlib/constants/int32/min\n* @type {integer32}\n*\n* @example\n* var INT32_MIN = require( '@stdlib/constants/int32/min' );\n* // returns -2147483648\n*/\n\n\n// MAIN //\n\n/**\n* Minimum signed 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* -(2^{31})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 10000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -2147483648\n*/\nvar INT32_MIN = -2147483648|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = INT32_MIN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 32-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 32-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int32\n*\n* @example\n* var ctor = require( '@stdlib/array/int32' );\n*\n* var arr = new ctor( 10 );\n* // returns <Int32Array>\n*/\n\n// MODULES //\n\nvar hasInt32ArraySupport = require( '@stdlib/assert/has-int32array-support' );\nvar builtin = require( './int32array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int32Array === 'function' ) ? Int32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Int32Array` support.\n*\n* @module @stdlib/assert/has-int32array-support\n*\n* @example\n* var hasInt32ArraySupport = require( '@stdlib/assert/has-int32array-support' );\n*\n* var bool = hasInt32ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasInt32ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasInt32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasFloat32Array = ( typeof Float32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Float32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float32Array\n*\n* @example\n* var bool = isFloat32Array( new Float32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat32Array( [] );\n* // returns false\n*/\nfunction isFloat32Array( value ) {\n\treturn (\n\t\t( hasFloat32Array && value instanceof Float32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Float32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFloat32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Float32Array === 'function' ) ? Float32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFloat32Array = require( './../../is-float32array' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar GlobalFloat32Array = require( './float32array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Float32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float32Array` support\n*\n* @example\n* var bool = hasFloat32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasFloat32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalFloat32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalFloat32Array( [ 1.0, 3.14, -3.14, 5.0e40 ] );\n\t\tbool = (\n\t\t\tisFloat32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1.0 &&\n\t\t\tarr[ 1 ] === 3.140000104904175 &&\n\t\t\tarr[ 2 ] === -3.140000104904175 &&\n\t\t\tarr[ 3 ] === PINF\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasFloat32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of single-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of single-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array/float32\n*\n* @example\n* var ctor = require( '@stdlib/array/float32' );\n*\n* var arr = new ctor( 10 );\n* // returns <Float32Array>\n*/\n\n// MODULES //\n\nvar hasFloat32ArraySupport = require( '@stdlib/assert/has-float32array-support' );\nvar builtin = require( './float32array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasFloat32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Float32Array === 'function' ) ? Float32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Float32Array` support.\n*\n* @module @stdlib/assert/has-float32array-support\n*\n* @example\n* var hasFloat32ArraySupport = require( '@stdlib/assert/has-float32array-support' );\n*\n* var bool = hasFloat32ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasFloat32ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasFloat32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Int8Array = require( '@stdlib/array/int8' );\nvar Uint8Array = require( '@stdlib/array/uint8' );\nvar Uint8ClampedArray = require( '@stdlib/array/uint8c' );\nvar Int16Array = require( '@stdlib/array/int16' );\nvar Uint16Array = require( '@stdlib/array/uint16' );\nvar Int32Array = require( '@stdlib/array/int32' );\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float32Array = require( '@stdlib/array/float32' );\nvar Float64Array = require( '@stdlib/array/float64' );\n\n\n// VARIABLES //\n\nvar hash;\n\n\n// FUNCTIONS //\n\n/**\n* Copies an `Int8Array`.\n*\n* @private\n* @param {Int8Array} arr - array to copy\n* @returns {Int8Array} new array\n*/\nfunction int8array( arr ) {\n\treturn new Int8Array( arr );\n}\n\n/**\n* Copies a `Uint8Array`.\n*\n* @private\n* @param {Uint8Array} arr - array to copy\n* @returns {Uint8Array} new array\n*/\nfunction uint8array( arr ) {\n\treturn new Uint8Array( arr );\n}\n\n/**\n* Copies a `Uint8ClampedArray`.\n*\n* @private\n* @param {Uint8ClampedArray} arr - array to copy\n* @returns {Uint8ClampedArray} new array\n*/\nfunction uint8clampedarray( arr ) {\n\treturn new Uint8ClampedArray( arr );\n}\n\n/**\n* Copies an `Int16Array`.\n*\n* @private\n* @param {Int16Array} arr - array to copy\n* @returns {Int16Array} new array\n*/\nfunction int16array( arr ) {\n\treturn new Int16Array( arr );\n}\n\n/**\n* Copies a `Uint16Array`.\n*\n* @private\n* @param {Uint16Array} arr - array to copy\n* @returns {Uint16Array} new array\n*/\nfunction uint16array( arr ) {\n\treturn new Uint16Array( arr );\n}\n\n/**\n* Copies an `Int32Array`.\n*\n* @private\n* @param {Int32Array} arr - array to copy\n* @returns {Int32Array} new array\n*/\nfunction int32array( arr ) {\n\treturn new Int32Array( arr );\n}\n\n/**\n* Copies a `Uint32Array`.\n*\n* @private\n* @param {Uint32Array} arr - array to copy\n* @returns {Uint32Array} new array\n*/\nfunction uint32array( arr ) {\n\treturn new Uint32Array( arr );\n}\n\n/**\n* Copies a `Float32Array`.\n*\n* @private\n* @param {Float32Array} arr - array to copy\n* @returns {Float32Array} new array\n*/\nfunction float32array( arr ) {\n\treturn new Float32Array( arr );\n}\n\n/**\n* Copies a `Float64Array`.\n*\n* @private\n* @param {Float64Array} arr - array to copy\n* @returns {Float64Array} new array\n*/\nfunction float64array( arr ) {\n\treturn new Float64Array( arr );\n}\n\n/**\n* Returns a hash of functions for copying typed arrays.\n*\n* @private\n* @returns {Object} function hash\n*/\nfunction typedarrays() {\n\tvar out = {\n\t\t'int8array': int8array,\n\t\t'uint8array': uint8array,\n\t\t'uint8clampedarray': uint8clampedarray,\n\t\t'int16array': int16array,\n\t\t'uint16array': uint16array,\n\t\t'int32array': int32array,\n\t\t'uint32array': uint32array,\n\t\t'float32array': float32array,\n\t\t'float64array': float64array\n\t};\n\treturn out;\n}\n\n\n// MAIN //\n\nhash = typedarrays();\n\n\n// EXPORTS //\n\nmodule.exports = hash;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isArray = require( '@stdlib/assert/is-array' );\nvar isBuffer = require( '@stdlib/assert/is-buffer' );\nvar isError = require( '@stdlib/assert/is-error' );\nvar typeOf = require( './../../type-of' );\nvar regexp = require( './../../regexp-from-string' );\nvar indexOf = require( './../../index-of' );\nvar objectKeys = require( './../../keys' );\nvar propertyNames = require( './../../property-names' );\nvar propertyDescriptor = require( './../../property-descriptor' );\nvar getPrototypeOf = require( './../../get-prototype-of' );\nvar defineProperty = require( './../../define-property' );\nvar copyBuffer = require( '@stdlib/buffer/from-buffer' );\nvar typedArrays = require( './typed_arrays.js' );\n\n\n// FUNCTIONS //\n\n/**\n* Clones a class instance.\n*\n* ## Notes\n*\n* -   This should **only** be used for simple cases. Any instances with privileged access to variables (e.g., within closures) cannot be cloned. This approach should be considered **fragile**.\n* -   The function is greedy, disregarding the notion of a `level`. Instead, the function deep copies all properties, as we assume the concept of `level` applies only to the class instance reference but not to its internal state. This prevents, in theory, two instances from sharing state.\n*\n*\n* @private\n* @param {Object} val - class instance\n* @returns {Object} new instance\n*/\nfunction cloneInstance( val ) {\n\tvar cache;\n\tvar names;\n\tvar name;\n\tvar refs;\n\tvar desc;\n\tvar tmp;\n\tvar ref;\n\tvar i;\n\n\tcache = [];\n\trefs = [];\n\n\tref = Object.create( getPrototypeOf( val ) );\n\tcache.push( val );\n\trefs.push( ref );\n\n\tnames = propertyNames( val );\n\tfor ( i = 0; i < names.length; i++ ) {\n\t\tname = names[ i ];\n\t\tdesc = propertyDescriptor( val, name );\n\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\ttmp = ( isArray( val[name] ) ) ? [] : {};\n\t\t\tdesc.value = deepCopy( val[name], tmp, cache, refs, -1 );\n\t\t}\n\t\tdefineProperty( ref, name, desc );\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( ref );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( ref );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( ref );\n\t}\n\treturn ref;\n}\n\n/**\n* Copies an error object.\n*\n* @private\n* @param {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error - error to copy\n* @returns {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error copy\n*\n* @example\n* var err1 = new TypeError( 'beep' );\n*\n* var err2 = copyError( err1 );\n* // returns <TypeError>\n*/\nfunction copyError( error ) {\n\tvar cache = [];\n\tvar refs = [];\n\tvar keys;\n\tvar desc;\n\tvar tmp;\n\tvar key;\n\tvar err;\n\tvar i;\n\n\t// Create a new error...\n\terr = new error.constructor( error.message );\n\n\tcache.push( error );\n\trefs.push( err );\n\n\t// If a `stack` property is present, copy it over...\n\tif ( error.stack ) {\n\t\terr.stack = error.stack;\n\t}\n\t// Node.js specific (system errors)...\n\tif ( error.code ) {\n\t\terr.code = error.code;\n\t}\n\tif ( error.errno ) {\n\t\terr.errno = error.errno;\n\t}\n\tif ( error.syscall ) {\n\t\terr.syscall = error.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = objectKeys( error );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tdesc = propertyDescriptor( error, key );\n\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\ttmp = ( isArray( error[ key ] ) ) ? [] : {};\n\t\t\tdesc.value = deepCopy( error[ key ], tmp, cache, refs, -1 );\n\t\t}\n\t\tdefineProperty( err, key, desc );\n\t}\n\treturn err;\n}\n\n\n// MAIN //\n\n/**\n* Recursively performs a deep copy of an input object.\n*\n* @private\n* @param {*} val - value to copy\n* @param {(Array|Object)} copy - copy\n* @param {Array} cache - an array of visited objects\n* @param {Array} refs - an array of object references\n* @param {NonNegativeInteger} level - copy depth\n* @returns {*} deep copy\n*/\nfunction deepCopy( val, copy, cache, refs, level ) {\n\tvar parent;\n\tvar keys;\n\tvar name;\n\tvar desc;\n\tvar ctor;\n\tvar key;\n\tvar ref;\n\tvar x;\n\tvar i;\n\tvar j;\n\n\tlevel -= 1;\n\n\t// Primitives and functions...\n\tif (\n\t\ttypeof val !== 'object' ||\n\t\tval === null\n\t) {\n\t\treturn val;\n\t}\n\tif ( isBuffer( val ) ) {\n\t\treturn copyBuffer( val );\n\t}\n\tif ( isError( val ) ) {\n\t\treturn copyError( val );\n\t}\n\t// Objects...\n\tname = typeOf( val );\n\n\tif ( name === 'date' ) {\n\t\treturn new Date( +val );\n\t}\n\tif ( name === 'regexp' ) {\n\t\treturn regexp( val.toString() );\n\t}\n\tif ( name === 'set' ) {\n\t\treturn new Set( val );\n\t}\n\tif ( name === 'map' ) {\n\t\treturn new Map( val );\n\t}\n\tif (\n\t\tname === 'string' ||\n\t\tname === 'boolean' ||\n\t\tname === 'number'\n\t) {\n\t\t// If provided an `Object`, return an equivalent primitive!\n\t\treturn val.valueOf();\n\t}\n\tctor = typedArrays[ name ];\n\tif ( ctor ) {\n\t\treturn ctor( val );\n\t}\n\t// Class instances...\n\tif (\n\t\tname !== 'array' &&\n\t\tname !== 'object'\n\t) {\n\t\t// Cloning requires ES5 or higher...\n\t\tif ( typeof Object.freeze === 'function' ) {\n\t\t\treturn cloneInstance( val );\n\t\t}\n\t\treturn {};\n\t}\n\t// Arrays and plain objects...\n\tkeys = objectKeys( val );\n\tif ( level > 0 ) {\n\t\tparent = name;\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tx = val[ key ];\n\n\t\t\t// Primitive, Buffer, special class instance...\n\t\t\tname = typeOf( x );\n\t\t\tif (\n\t\t\t\ttypeof x !== 'object' ||\n\t\t\t\tx === null ||\n\t\t\t\t(\n\t\t\t\t\tname !== 'array' &&\n\t\t\t\t\tname !== 'object'\n\t\t\t\t) ||\n\t\t\t\tisBuffer( x )\n\t\t\t) {\n\t\t\t\tif ( parent === 'object' ) {\n\t\t\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\t\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\t\t\t\tdesc.value = deepCopy( x );\n\t\t\t\t\t}\n\t\t\t\t\tdefineProperty( copy, key, desc );\n\t\t\t\t} else {\n\t\t\t\t\tcopy[ key ] = deepCopy( x );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Circular reference...\n\t\t\ti = indexOf( cache, x );\n\t\t\tif ( i !== -1 ) {\n\t\t\t\tcopy[ key ] = refs[ i ];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Plain array or object...\n\t\t\tref = ( isArray( x ) ) ? new Array( x.length ) : {};\n\t\t\tcache.push( x );\n\t\t\trefs.push( ref );\n\t\t\tif ( parent === 'array' ) {\n\t\t\t\tcopy[ key ] = deepCopy( x, ref, cache, refs, level );\n\t\t\t} else {\n\t\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\t\t\tdesc.value = deepCopy( x, ref, cache, refs, level );\n\t\t\t\t}\n\t\t\t\tdefineProperty( copy, key, desc );\n\t\t\t}\n\t\t}\n\t} else if ( name === 'array' ) {\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tcopy[ key ] = val[ key ];\n\t\t}\n\t} else {\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\tdefineProperty( copy, key, desc );\n\t\t}\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( copy );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( copy );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( copy );\n\t}\n\treturn copy;\n}\n\n\n// EXPORTS //\n\nmodule.exports = deepCopy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( '@stdlib/assert/is-array' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar deepCopy = require( './deep_copy.js' );\n\n\n// MAIN //\n\n/**\n* Copies or deep clones a value to an arbitrary depth.\n*\n* @param {*} value - value to copy\n* @param {NonNegativeInteger} [level=+infinity] - copy depth\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {*} value copy\n*\n* @example\n* var out = copy( 'beep' );\n* // returns 'beep'\n*\n* @example\n* var value = [\n*     {\n*         'a': 1,\n*         'b': true,\n*         'c': [ 1, 2, 3 ]\n*     }\n* ];\n* var out = copy( value );\n* // returns [ { 'a': 1, 'b': true, 'c': [ 1, 2, 3 ] } ]\n*\n* var bool = ( value[0].c === out[0].c );\n* // returns false\n*/\nfunction copy( value, level ) {\n\tvar out;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', level ) );\n\t\t}\n\t\tif ( level === 0 ) {\n\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tlevel = PINF;\n\t}\n\tout = ( isArray( value ) ) ? new Array( value.length ) : {};\n\treturn deepCopy( value, out, [value], [out], level );\n}\n\n\n// EXPORTS //\n\nmodule.exports = copy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Copy or deep clone a value to an arbitrary depth.\n*\n* @module @stdlib/utils/copy\n*\n* @example\n* var copy = require( '@stdlib/utils/copy' );\n*\n* var out = copy( 'beep' );\n* // returns 'beep'\n*\n* @example\n* var copy = require( '@stdlib/utils/copy' );\n*\n* var value = [\n*     {\n*         'a': 1,\n*         'b': true,\n*         'c': [ 1, 2, 3 ]\n*     }\n* ];\n* var out = copy( value );\n* // returns [ {'a': 1, 'b': true, 'c': [ 1, 2, 3 ] } ]\n*\n* var bool = ( value[0].c === out[0].c );\n* // returns false\n*/\n\n// MODULES //\n\nvar copy = require( './copy.js' );\n\n\n// EXPORTS //\n\nmodule.exports = copy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( './../../is-array' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an object; e.g., `{}`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an object\n*\n* @example\n* var bool = isObject( {} );\n* // returns true\n*\n* @example\n* var bool = isObject( null );\n* // returns false\n*/\nfunction isObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t!isArray( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an object.\n*\n* @module @stdlib/assert/is-object\n*\n* @example\n* var isObject = require( '@stdlib/assert/is-object' );\n*\n* var bool = isObject( {} );\n* // returns true\n*\n* bool = isObject( true );\n* // returns false\n*/\n\n// MODULES //\n\nvar isObject = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( './../../is-object' );\nvar isFunction = require( './../../is-function' );\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar hasOwnProp = require( './../../has-own-property' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar objectPrototype = Object.prototype;\n\n\n// FUNCTIONS //\n\n/**\n* Tests that an object only has own properties.\n*\n* @private\n* @param {Object} obj - value to test\n* @returns {boolean} boolean indicating if an object only has own properties\n*/\nfunction ownProps( obj ) {\n\tvar key;\n\n\t// NOTE: possibility of perf boost if key enumeration order is known (see http://stackoverflow.com/questions/18531624/isplainobject-thing).\n\tfor ( key in obj ) {\n\t\tif ( !hasOwnProp( obj, key ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests if a value is a plain object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a plain object\n*\n* @example\n* var bool = isPlainObject( {} );\n* // returns true\n*\n* @example\n* var bool = isPlainObject( null );\n* // returns false\n*/\nfunction isPlainObject( value ) {\n\tvar proto;\n\n\t// Screen for obvious non-objects...\n\tif ( !isObject( value ) ) {\n\t\treturn false;\n\t}\n\t// Objects with no prototype (e.g., `Object.create( null )`) are plain...\n\tproto = getPrototypeOf( value );\n\tif ( !proto ) {\n\t\treturn true;\n\t}\n\t// Objects having a prototype are plain if and only if they are constructed with a global `Object` function and the prototype points to the prototype of a plain object...\n\treturn (\n\t\t// Cannot have own `constructor` property:\n\t\t!hasOwnProp( value, 'constructor' ) &&\n\n\t\t// Prototype `constructor` property must be a function (see also https://bugs.jquery.com/ticket/9897 and http://stackoverflow.com/questions/18531624/isplainobject-thing):\n\t\thasOwnProp( proto, 'constructor' ) &&\n\t\tisFunction( proto.constructor ) &&\n\t\tnativeClass( proto.constructor ) === '[object Function]' &&\n\n\t\t// Test for object-specific method:\n\t\thasOwnProp( proto, 'isPrototypeOf' ) &&\n\t\tisFunction( proto.isPrototypeOf ) &&\n\n\t\t(\n\t\t\t// Test if the prototype matches the global `Object` prototype (same realm):\n\t\t\tproto === objectPrototype ||\n\n\t\t\t// Test that all properties are own properties (cross-realm; *most* likely a plain object):\n\t\t\townProps( value )\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPlainObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a plain object.\n*\n* @module @stdlib/assert/is-plain-object\n*\n* @example\n* var isPlainObject = require( '@stdlib/assert/is-plain-object' );\n*\n* var bool = isPlainObject( {} );\n* // returns true\n*\n* bool = isPlainObject( null );\n* // returns false\n*/\n\n// MODULES //\n\nvar isPlainObject = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isPlainObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar isnan = require( '@stdlib/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'alpha': 0.6\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t\tif ( opts.alpha < 0.0 || opts.alpha > 1.0 ) {\n\t\t\treturn new RangeError( format( 'invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar SORT_OPTS = {\n\t'numeric': true // Use numeric collation such that \"1\" < \"2\" < \"10\"...\n};\n\n\n// FUNCTIONS //\n\n/**\n* Comparator function to sort values in ascending order.\n*\n* @private\n* @param {*} a - first value\n* @param {*} b - second value\n* @returns {number} negative number if `a` comes before `b, positive if `a` comes after `b`, and `0` if they are equivalent\n*/\nfunction ascending( a, b ) {\n\treturn String( a ).localeCompare( String( b ), void 0, SORT_OPTS );\n}\n\n\n// MAIN //\n\n/**\n* Returns the unique elements in an array.\n*\n* @private\n* @param {Array} arr - input array\n* @returns {Array} array of unique elements\n*/\nfunction unique( arr ) {\n\tvar len;\n\tvar out;\n\tvar val;\n\tvar i;\n\tvar j;\n\n\t// Copy the array to avoid mutation:\n\tout = Array.prototype.slice.call( arr );\n\tlen = out.length;\n\n\t// Sort array in ascending order:\n\tout.sort( ascending );\n\n\t// Loop through the array, only incrementing a pointer when successive values are different. When a succeeding value is different, move the pointer and set the next value. In the trivial case where all array elements are unique, we incur a slight penalty in resetting the element value for each unique value. In other cases, we simply move a unique value to a new position in the array. The end result is a sorted array with unique values.\n\tfor ( i = 1, j = 0; i < len; i++ ) {\n\t\tval = out[ i ];\n\t\tif ( out[ j ] !== val ) {\n\t\t\tj += 1;\n\t\t\tout[ j ] = val;\n\t\t}\n\t}\n\t// Truncate the array:\n\tout.length = j+1;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = unique;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a corrected sample standard deviation incrementally.\n*\n* @module @stdlib/stats/incr/stdev\n*\n* @example\n* var incrstdev = require( '@stdlib/stats/incr/stdev' );\n*\n* var accumulator = incrstdev();\n*\n* var s = accumulator();\n* // returns null\n*\n* s = accumulator( 2.0 );\n* // returns 0.0\n*\n* s = accumulator( -5.0 );\n* // returns ~4.95\n*\n* s = accumulator();\n* // returns ~4.95\n*/\n\n// MODULES //\n\nvar incrstdev = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrstdev;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a corrected sample standard deviation.\n*\n* ## Method\n*\n* -   This implementation uses Welford's algorithm for efficient computation, which can be derived as follows. Let\n*\n*     ```tex\n*     \\begin{align*}\n*     S_n &= n \\sigma_n^2 \\\\\n*         &= \\sum_{i=1}^{n} (x_i - \\mu_n)^2 \\\\\n*         &= \\biggl(\\sum_{i=1}^{n} x_i^2 \\biggr) - n\\mu_n^2\n*     \\end{align*}\n*     ```\n*\n*     Accordingly,\n*\n*     ```tex\n*     \\begin{align*}\n*     S_n - S_{n-1} &= \\sum_{i=1}^{n} x_i^2 - n\\mu_n^2 - \\sum_{i=1}^{n-1} x_i^2 + (n-1)\\mu_{n-1}^2 \\\\\n*                   &= x_n^2 - n\\mu_n^2 + (n-1)\\mu_{n-1}^2 \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + n(\\mu_{n-1}^2 - \\mu_n^2) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + n(\\mu_{n-1} - \\mu_n)(\\mu_{n-1} + \\mu_n) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + (\\mu_{n-1} - x_n)(\\mu_{n-1} + \\mu_n) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + \\mu_{n-1}^2 - x_n\\mu_n - x_n\\mu_{n-1} + \\mu_n\\mu_{n-1} \\\\\n*                   &= x_n^2 - x_n\\mu_n - x_n\\mu_{n-1} + \\mu_n\\mu_{n-1} \\\\\n*                   &= (x_n - \\mu_{n-1})(x_n - \\mu_n) \\\\\n*                   &= S_{n-1} + (x_n - \\mu_{n-1})(x_n - \\mu_n)\n*     \\end{align*}\n*     ```\n*\n*     where we use the identity\n*\n*     ```tex\n*     x_n - \\mu_{n-1} = n (\\mu_n - \\mu_{n-1})\n*     ```\n*\n* ## References\n*\n* -   Welford, B. P. 1962. \"Note on a Method for Calculating Corrected Sums of Squares and Products.\" _Technometrics_ 4 (3). Taylor & Francis: 419–20. doi:[10.1080/00401706.1962.10490022](https://doi.org/10.1080/00401706.1962.10490022).\n* -   van Reeken, A. J. 1968. \"Letters to the Editor: Dealing with Neely's Algorithms.\" _Communications of the ACM_ 11 (3): 149–50. doi:[10.1145/362929.362961](https://doi.org/10.1145/362929.362961).\n*\n* @param {number} [mean] - mean value\n* @throws {TypeError} must provide a number primitive\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrstdev();\n*\n* var s = accumulator();\n* // returns null\n*\n* s = accumulator( 2.0 );\n* // returns 0.0\n*\n* s = accumulator( -5.0 );\n* // returns ~4.95\n*\n* s = accumulator();\n* // returns ~4.95\n*\n* @example\n* var accumulator = incrstdev( 3.0 );\n*/\nfunction incrstdev( mean ) {\n\tvar delta;\n\tvar mu;\n\tvar M2;\n\tvar N;\n\n\tM2 = 0.0;\n\tN = 0;\n\tif ( arguments.length ) {\n\t\tif ( !isNumber( mean ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a number. Value: `%s`.', mean ) );\n\t\t}\n\t\tmu = mean;\n\t\treturn accumulator2;\n\t}\n\tmu = 0.0;\n\treturn accumulator1;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated corrected sample standard deviation. If not provided a value, the accumulator function returns the current corrected sample standard deviation.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} corrected sample standard deviation or null\n\t*/\n\tfunction accumulator1( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn ( isnan( M2 ) ) ? NaN : 0.0;\n\t\t\t}\n\t\t\treturn sqrt( M2/(N-1) );\n\t\t}\n\t\tN += 1;\n\t\tdelta = x - mu;\n\t\tmu += delta / N;\n\t\tM2 += delta * ( x-mu );\n\t\tif ( N < 2 ) {\n\t\t\treturn ( isnan( M2 ) ) ? NaN : 0.0;\n\t\t}\n\t\treturn sqrt( M2/(N-1) );\n\t}\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated corrected sample standard deviation. If not provided a value, the accumulator function returns the current corrected sample standard deviation.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} corrected sample standard deviation or null\n\t*/\n\tfunction accumulator2( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn sqrt( M2/N );\n\t\t}\n\t\tN += 1;\n\t\tdelta = x - mu;\n\t\tM2 += delta * delta;\n\t\treturn sqrt( M2/N );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrstdev;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar incrstdev = require( './../../incr/stdev' );\n\n\n// MAIN //\n\n/**\n* Computes the vector of means for each treatment.\n*\n* @private\n* @param {NumericArray} x - measured values\n* @param {Array} factor - array of treatments\n* @param {Array} treats - unique treatments\n* @returns {Object} summary statistics for the categories.\n*/\nfunction meanTable( x, factor, treats ) {\n\tvar tableOfMeans;\n\tvar factorCount;\n\tvar accumulator;\n\tvar newMean;\n\tvar j;\n\tvar i;\n\tvar k;\n\n\tfactorCount = treats.length;\n\ttableOfMeans = {};\n\tfor ( j = 0; j < factorCount; j++ ) {\n\t\taccumulator = incrstdev();\n\t\ttableOfMeans[ treats[j] ] = {\n\t\t\t'mean': 0,\n\t\t\t'sampleSize': 0,\n\t\t\t'SD': accumulator\n\t\t};\n\t\tfor ( i = 0; i < x.length; i++ ) {\n\t\t\tif ( factor[i] === treats[j] ) {\n\t\t\t\ttableOfMeans[ treats[j] ][ 'SD' ] = accumulator( x[i] );\n\t\t\t}\n\t\t}\n\t}\n\t// Go through, add to meanTable by indexing factor[i]\n\t// X[i] is the individual continuous\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\ttableOfMeans[factor[i]]['mean'] += x[i];\n\t\ttableOfMeans[factor[i]]['sampleSize'] += 1;\n\t}\n\n\t// Now make the mean by dividing by the sample size\n\t// Get the standard deviation through the helper function\n\tfor ( k = 0; k < factorCount; k++ ) {\n\t\tnewMean = tableOfMeans[treats[k]]['mean'] / tableOfMeans[treats[k]]['sampleSize'];\n\t\ttableOfMeans[treats[k]]['mean'] = newMean;\n\t}\n\treturn tableOfMeans;\n}\n\n\n// EXPORTS //\n\nmodule.exports = meanTable;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Computes the arithmetic mean of a numeric array.\n*\n* @private\n* @param {NumericArray} arr - input array\n* @returns {number} arithmetic mean\n*/\nfunction mean( arr ) {\n\tvar delta;\n\tvar len;\n\tvar mu;\n\tvar i;\n\n\tmu = 0.0;\n\tlen = arr.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tdelta = arr[ i ] - mu;\n\t\tmu += delta / (i+1);\n\t}\n\treturn mu;\n}\n\n\n// EXPORTS //\n\nmodule.exports = mean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a positive integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a positive integer\n*\n* @example\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( null );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a positive integer.\n*\n* @module @stdlib/assert/is-positive-integer\n*\n* @example\n* var isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\n*\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* bool = isPositiveInteger( null );\n* // returns false\n*\n* @example\n* var isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* var isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isObject;\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isPositiveInteger = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isPositiveInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isPositiveInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar isInfinite = require( './../../../../base/assert/is-infinite' );\nvar pow = require( './../../../../base/special/pow' );\nvar abs = require( './../../../../base/special/abs' );\nvar round = require( './../../../../base/special/round' );\nvar MAX_SAFE_INTEGER = require( '@stdlib/constants/float64/max-safe-integer' );\nvar MAX_EXP = require( '@stdlib/constants/float64/max-base10-exponent' );\nvar MIN_EXP = require( '@stdlib/constants/float64/min-base10-exponent' );\nvar MIN_EXP_SUBNORMAL = require( '@stdlib/constants/float64/min-base10-exponent-subnormal' );\n\n\n// VARIABLES //\n\nvar MAX_INT = MAX_SAFE_INTEGER + 1;\nvar HUGE = 1.0e+308;\n\n\n// MAIN //\n\n/**\n* Rounds a numeric value to the nearest multiple of \\\\(10^n\\\\).\n*\n* ## Method\n*\n* 1.  If \\\\(|x| <= 2^{53}\\\\) and \\\\(|n| <= 308\\\\), we can use the formula\n*\n*     ```tex\n*     \\operatorname{roundn}(x,n) = \\frac{\\operatorname{round}(x \\cdot 10^{-n})}{10^{-n}}\n*     ```\n*\n*     which shifts the decimal to the nearest multiple of \\\\(10^n\\\\), performs a standard \\\\(\\mathrm{round}\\\\) operation, and then shifts the decimal to its original position.\n*\n*     <!-- <note> -->\n*\n*     If \\\\(x \\cdot 10^{-n}\\\\) overflows, \\\\(x\\\\) lacks a sufficient number of decimal digits to have any effect when rounding. Accordingly, the rounded value is \\\\(x\\\\).\n*\n*     <!-- </note> -->\n*\n*     <!-- <note> -->\n*\n*     Note that rescaling \\\\(x\\\\) can result in unexpected behavior. For instance, the result of \\\\(\\operatorname{roundn}(0.2+0.1,-16)\\\\) is \\\\(0.3000000000000001\\\\) and not \\\\(0.3\\\\). While possibly unexpected, this is not a bug. The behavior stems from the fact that most decimal fractions cannot be exactly represented as floating-point numbers. And further, rescaling can lead to slightly different fractional values, which, in turn, affects the result of \\\\(\\mathrm{round}\\\\).\n*\n*     <!-- </note> -->\n*\n* 2.  If \\\\(n > 308\\\\), we recognize that the maximum absolute double-precision floating-point number is \\\\(\\approx 1.8\\mbox{e}308\\\\) and, thus, the result of rounding any possible finite number \\\\(x\\\\) to the nearest \\\\(10^n\\\\) is \\\\(0.0\\\\). To ensure consistent behavior with \\\\(\\operatorname{round}(x)\\\\), the sign of \\\\(x\\\\) is preserved.\n*\n* 3.  If \\\\(n < -324\\\\), \\\\(n\\\\) exceeds the maximum number of possible decimal places (such as with subnormal numbers), and, thus, the rounded value is \\\\(x\\\\).\n*\n* 4.  If \\\\(x > 2^{53}\\\\), \\\\(x\\\\) is **always** an integer (i.e., \\\\(x\\\\) has no decimal digits). If \\\\(n <= 0\\\\), the rounded value is \\\\(x\\\\).\n*\n* 5.  If \\\\(n < -308\\\\), we let \\\\(m = n + 308\\\\) and modify the above formula to avoid overflow.\n*\n*     ```tex\n*     \\operatorname{roundn}(x,n) = \\frac{\\biggl(\\frac{\\operatorname{round}( (x \\cdot 10^{308}) 10^{-m})}{10^{308}}\\biggr)}{10^{-m}}\n*     ```\n*\n*     If overflow occurs, the rounded value is \\\\(x\\\\).\n*\n*\n* ## Special Cases\n*\n* ```tex\n* \\begin{align*}\n* \\operatorname{roundn}(\\mathrm{NaN}, n) &= \\mathrm{NaN} \\\\\n* \\operatorname{roundn}(x, \\mathrm{NaN}) &= \\mathrm{NaN} \\\\\n* \\operatorname{roundn}(x, \\pm\\infty) &= \\mathrm{NaN} \\\\\n* \\operatorname{roundn}(\\pm\\infty, n) &= \\pm\\infty \\\\\n* \\operatorname{roundn}(\\pm 0, n) &= \\pm 0\n* \\end{align*}\n* ```\n*\n* ## Notes\n*\n* 1.  Alternative algorithms:\n*\n*     -   Round by [casting][1] \\\\(x\\\\) to an exponential string.\n*     -   Native Python implementation [1][2] and [2][3].\n*\n* [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\n* [2]: https://hg.python.org/releasing/2.7.9/file/tip/Objects/floatobject.c#l1082\n* [3]: https://hg.python.org/releasing/2.7.9/file/tip/Objects/floatobject.c#l1226\n*\n*\n* @param {number} x - input value\n* @param {integer} n - integer power of `10`\n* @returns {number} rounded value\n*\n* @example\n* // Round a value to 2 decimal places:\n* var v = roundn( 3.141592653589793, -2 );\n* // returns 3.14\n*\n* @example\n* // If n = 0, `roundn` behaves like `round`:\n* var v = roundn( 3.141592653589793, 0 );\n* // returns 3.0\n*\n* @example\n* // Round a value to the nearest thousand:\n* var v = roundn( 12368.0, 3 );\n* // returns 12000.0\n*/\nfunction roundn( x, n ) {\n\tvar s;\n\tvar y;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( n ) ||\n\t\tisInfinite( n )\n\t) {\n\t\treturn NaN;\n\t}\n\tif (\n\t\t// Handle infinities...\n\t\tisInfinite( x ) ||\n\n\t\t// Handle +-0...\n\t\tx === 0.0 ||\n\n\t\t// If `n` exceeds the maximum number of feasible decimal places (such as with subnormal numbers), nothing to round...\n\t\tn < MIN_EXP_SUBNORMAL ||\n\n\t\t// If `|x|` is large enough, no decimals to round...\n\t\t( abs( x ) > MAX_INT && n <= 0 )\n\t) {\n\t\treturn x;\n\t}\n\t// The maximum absolute double is ~1.8e308. Accordingly, any possible finite `x` rounded to the nearest >=10^309 is 0.0.\n\tif ( n > MAX_EXP ) {\n\t\treturn 0.0 * x; // preserve the sign (same behavior as round)\n\t}\n\t// If we overflow, return `x`, as the number of digits to the right of the decimal is too small (i.e., `x` is too large / lacks sufficient fractional precision) for there to be any effect when rounding...\n\tif ( n < MIN_EXP ) {\n\t\ts = pow( 10.0, -(n + MAX_EXP) );\n\t\ty = (x*HUGE) * s; // order of operation matters!\n\t\tif ( isInfinite( y ) ) {\n\t\t\treturn x;\n\t\t}\n\t\treturn ( round(y)/HUGE ) / s;\n\t}\n\ts = pow( 10.0, -n );\n\ty = x * s;\n\tif ( isInfinite( y ) ) {\n\t\treturn x;\n\t}\n\treturn round( y ) / s;\n}\n\n\n// EXPORTS //\n\nmodule.exports = roundn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round a numeric value to the nearest multiple of `10^n`.\n*\n* @module @stdlib/math/base/special/roundn\n*\n* @example\n* var roundn = require( '@stdlib/math/base/special/roundn' );\n*\n* // Round a value to 2 decimal places:\n* var v = roundn( 3.141592653589793, -2 );\n* // returns 3.14\n*\n* // If n = 0, `roundn` behaves like `round`:\n* v = roundn( 3.141592653589793, 0 );\n* // returns 3.0\n*\n* // Round a value to the nearest thousand:\n* v = roundn( 12368.0, 3 );\n* // returns 12000.0\n*/\n\n// MODULES //\n\nvar roundn = require( './roundn.js' );\n\n\n// EXPORTS //\n\nmodule.exports = roundn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The minimum base 10 exponent for a subnormal double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/min-base10-exponent-subnormal\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MIN_BASE10_EXPONENT_SUBNORMAL = require( '@stdlib/constants/float64/min-base10-exponent-subnormal' );\n* // returns -324\n*/\n\n\n// MAIN //\n\n/**\n* The minimum base 10 exponent for a subnormal double-precision floating-point number.\n*\n* @constant\n* @type {integer32}\n* @default -324\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MIN_BASE10_EXPONENT_SUBNORMAL = -324|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MIN_BASE10_EXPONENT_SUBNORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The maximum base 10 exponent for a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/max-base10-exponent\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MAX_BASE10_EXPONENT = require( '@stdlib/constants/float64/max-base10-exponent' );\n* // returns 308\n*/\n\n\n// MAIN //\n\n/**\n* The maximum base 10 exponent for a double-precision floating-point number.\n*\n* @constant\n* @type {integer32}\n* @default 308\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_BASE10_EXPONENT = 308|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MAX_BASE10_EXPONENT;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The minimum base 10 exponent for a normal double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/min-base10-exponent\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MIN_BASE10_EXPONENT = require( '@stdlib/constants/float64/min-base10-exponent' );\n* // returns -308\n*/\n\n\n// MAIN //\n\n/**\n* The minimum base 10 exponent for a normal double-precision floating-point number.\n*\n* ```text\n* 2^-1022 = 2.2250738585072014e-308 => -308\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -308\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MIN_BASE10_EXPONENT = -308|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MIN_BASE10_EXPONENT;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar FLOAT64_MAX_SAFE_INTEGER = require( '@stdlib/constants/float64/max-safe-integer' );\nvar format = require( './../../format' );\n\n\n// MAIN //\n\n/**\n* Repeats a string a specified number of times and returns the concatenated result.\n*\n* ## Method\n*\n* The algorithmic trick used in the implementation is to treat string concatenation the same as binary addition (i.e., any natural number (nonnegative integer) can be expressed as a sum of powers of two).\n*\n* For example,\n*\n* ```text\n* n = 10 => 1010 => 2^3 + 2^0 + 2^1 + 2^0\n* ```\n*\n* We can produce a 10-repeat string by \"adding\" the results of a 8-repeat string and a 2-repeat string.\n*\n* The implementation is then as follows:\n*\n* 1.  Let `s` be the string to be repeated and `o` be an output string.\n*\n* 2.  Initialize an output string `o`.\n*\n* 3.  Check the least significant bit to determine if the current `s` string should be \"added\" to the output \"total\".\n*\n*     -   if the bit is a one, add\n*     -   otherwise, move on\n*\n* 4.  Double the string `s` by adding `s` to `s`.\n*\n* 5.  Right-shift the bits of `n`.\n*\n* 6.  Check if we have shifted off all bits.\n*\n*     -   if yes, done.\n*     -   otherwise, move on\n*\n* 7.  Repeat 3-6.\n*\n* The result is that, as the string is repeated, we continually check to see if the doubled string is one which we want to add to our \"total\".\n*\n* The algorithm runs in `O(log_2(n))` compared to `O(n)`.\n*\n*\n* @param {string} str - string to repeat\n* @param {NonNegativeInteger} n - number of times to repeat the string\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {RangeError} output string length must not exceed maximum allowed string length\n* @returns {string} repeated string\n*\n* @example\n* var str = repeat( 'a', 5 );\n* // returns 'aaaaa'\n*\n* @example\n* var str = repeat( '', 100 );\n* // returns ''\n*\n* @example\n* var str = repeat( 'beep', 0 );\n* // returns ''\n*/\nfunction repeat( str, n ) {\n\tvar rpt;\n\tvar cnt;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isNonNegativeInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', n ) );\n\t}\n\tif ( str.length === 0 || n === 0 ) {\n\t\treturn '';\n\t}\n\t// Check that output string will not exceed the maximum string length:\n\tif ( str.length * n > FLOAT64_MAX_SAFE_INTEGER ) {\n\t\tthrow new RangeError( format( 'invalid argument. Output string length exceeds maximum allowed string length. Value: `%u`.', str.length * n ) );\n\t}\n\trpt = '';\n\tcnt = n;\n\tfor ( ; ; ) {\n\t\t// If the count is odd, append the current concatenated string:\n\t\tif ( (cnt&1) === 1 ) {\n\t\t\trpt += str;\n\t\t}\n\t\t// Right-shift the bits:\n\t\tcnt >>>= 1;\n\t\tif ( cnt === 0 ) {\n\t\t\tbreak;\n\t\t}\n\t\t// Double the string:\n\t\tstr += str;\n\t}\n\treturn rpt;\n}\n\n\n// EXPORTS //\n\nmodule.exports = repeat;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar roundn = require( '@stdlib/math/base/special/roundn' );\nvar repeat = require( '@stdlib/string/repeat' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// FUNCTIONS //\n\n/**\n* Returns n spaces.\n*\n* @private\n* @param {integer} n - number of spaces\n* @returns {string} n spaces\n*/\nfunction spaces( n ) {\n\tif ( n <= 0 ) {\n\t\treturn '';\n\t}\n\treturn repeat( ' ', n );\n}\n\n\n// MAIN //\n\n/**\n* Returns a function to pretty print test results.\n*\n* @private\n* @param {Object} results - test results\n* @returns {Function} pretty print function\n*/\nfunction prettyPrint( results ) {\n\treturn print;\n\n\t/**\n\t* Pretty-print output of ANOVA.\n\t*\n\t* @private\n\t* @param {Object} [opts] - options object\n\t* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n\t* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n\t* @throws {TypeError} options argument must be an object\n\t* @throws {TypeError} must provide valid options\n\t* @returns {string} formatted results\n\t*/\n\tfunction print( opts ) {\n\t\tvar statistic;\n\t\tvar decision;\n\t\tvar treatMS;\n\t\tvar treatDF;\n\t\tvar treatSS;\n\t\tvar extra1;\n\t\tvar extra2;\n\t\tvar extra3;\n\t\tvar errMS;\n\t\tvar errDF;\n\t\tvar errSS;\n\t\tvar ndgts;\n\t\tvar dgts;\n\t\tvar str;\n\n\t\tdgts = 4;\n\t\tdecision = true;\n\t\tif ( arguments.length > 0 ) {\n\t\t\tif ( !isObject( opts ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', opts ) );\n\t\t\t}\n\t\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', opts.digits ) );\n\t\t\t\t}\n\t\t\t\tdgts = opts.digits;\n\t\t\t}\n\t\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', opts.decision ) );\n\t\t\t\t}\n\t\t\t\tdecision = opts.decision;\n\t\t\t}\n\t\t}\n\t\tndgts = -dgts;\n\n\t\tstr = '';\n\t\tstr += results.method;\n\t\tstr += '\\n\\n';\n\n\t\t// Hypothesis\n\t\tstr += 'Null Hypothesis: All Means Equal';\n\t\tstr += '\\n';\n\t\tstr += 'Alternate Hypothesis: At Least one Mean not Equal';\n\t\tstr += '\\n\\n';\n\n\t\ttreatSS = roundn( results.treatment.ss, ndgts ).toString();\n\t\terrSS = roundn( results.error.ss, ndgts ).toString();\n\t\ttreatMS = roundn( results.treatment.ms, ndgts ).toString();\n\t\terrMS = roundn( results.error.ms, ndgts ).toString();\n\t\ttreatDF = results.treatment.df.toString();\n\t\terrDF = results.error.df.toString();\n\t\tstatistic = roundn( results.statistic, ndgts ).toString();\n\n\t\textra1 = max( max( treatDF.length, errDF.length ), 2 );\n\t\textra2 = max( max( treatSS.length, errSS.length ), 2 );\n\t\textra3 = max( max( treatMS.length, errMS.length ), 3 );\n\n\t\t// Formatted table\n\t\tstr += '              ';\n\t\tstr += 'df';\n\t\tstr += spaces( 1 + extra1 );\n\t\tstr += 'SS';\n\t\tstr += spaces( 2 + extra2 );\n\t\tstr += 'MS';\n\t\tstr += spaces( 1 + extra3 );\n\t\tstr += 'F Score';\n\t\tstr += spaces( max( 7, statistic.length ) - 7 + 2 );\n\t\tstr += 'P Value';\n\t\tstr += '\\n';\n\n\t\t// Now start adding in values\n\t\tstr += 'Treatment';\n\t\tstr += spaces( 5 );\n\t\tstr += results.treatment.df;\n\t\tstr += spaces( 3 + extra1 - treatDF.length );\n\n\t\tstr += treatSS;\n\t\tstr += spaces( 4 + extra2 - treatSS.length );\n\t\tstr += treatMS;\n\t\tstr += spaces( 3 + extra3 - treatMS.length );\n\t\tstr += statistic;\n\t\tstr += spaces( max( 7, statistic.length ) - statistic.length + 2 );\n\t\tstr += roundn( results.pValue, ndgts );\n\t\tstr += '\\n';\n\n\t\t// Next line\n\t\tstr += 'Errors';\n\t\tstr += '        ';\n\t\tstr += results.error.df;\n\t\tstr += spaces( 3 + extra1 - errDF.length );\n\t\tstr += errSS;\n\t\tstr += spaces( 4 + extra2 - errSS.length );\n\t\tstr += errMS;\n\n\t\tif ( decision ) {\n\t\t\tstr += '\\n\\n';\n\t\t\tif ( results.rejected ) {\n\t\t\t\tstr += 'Reject Null: ';\n\t\t\t\tstr += roundn( results.pValue, ndgts );\n\t\t\t\tstr += ' <= ';\n\t\t\t\tstr += results.alpha;\n\t\t\t} else {\n\t\t\t\tstr += 'Fail to Reject Null: ';\n\t\t\t\tstr += roundn( results.pValue, ndgts );\n\t\t\t\tstr += ' >= ';\n\t\t\t\tstr += results.alpha;\n\t\t\t}\n\t\t}\n\t\treturn str;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = prettyPrint;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumberArray = require( '@stdlib/assert/is-number-array' ).primitives;\nvar isTypedArrayLike = require( '@stdlib/assert/is-typed-array-like' );\nvar isArray = require( '@stdlib/assert/is-array' );\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\nvar cdf = require( './../../base/dists/f/cdf' );\nvar copy = require( '@stdlib/utils/copy' );\nvar defaults = require( './defaults.json' );\nvar validate = require( './validate.js' );\nvar unique = require( './unique.js' );\nvar meanTable = require( './mean_table.js' );\nvar mean = require( './mean.js' );\nvar prettyPrint = require( './print.js' );\n\n\n// MAIN //\n\n/**\n* Perform a one-way analysis of variance (ANOVA).\n*\n* @param {NumericArray} x - measured values\n* @param {Array} factor - array of treatments\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} first argument must be a numeric array\n* @throws {TypeError} second argument must be an array\n* @throws {RangeError} `factor` must contain at least two unique elements\n* @throws {RangeError} length of `x` must be greater than or equal to two\n* @throws {RangeError} `x` and `factor` must have the same length\n* @returns {Object} test results\n*/\nfunction anova1( x, factor, options ) {\n\tvar meanSumSqTreat; // Mean sum of squares\n\tvar meanSumSqError;\n\tvar ssTreatment;\n\tvar sumSqTotal;\n\tvar sumSqError;\n\tvar treatment; // Index variable\n\tvar grandMean;\n\tvar nGroups;\n\tvar fScore;\n\tvar treats;\n\tvar means;\n\tvar numDf;\n\tvar denDf;\n\tvar nobs;\n\tvar pVal;\n\tvar opts;\n\tvar err;\n\tvar out;\n\tvar sq;\n\tvar i;\n\n\tif ( !isTypedArrayLike( x ) && !isNumberArray( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a numeric array. Value: `%s`.', x ) );\n\t}\n\topts = copy( defaults );\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tnobs = x.length;\n\tif ( nobs <= 1 ) {\n\t\tthrow new RangeError( format( 'invalid argument. First argument must contain at least two elements. Value: `%s`.', x ) );\n\t}\n\tif ( !isArray( factor ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array. Value: `%s`.', treats ) );\n\t}\n\n\ttreats = unique( factor );\n\tnGroups = treats.length;\n\tif ( nGroups <= 1 ) {\n\t\tthrow new RangeError( format( 'invalid argument. Second argument must contain at least two unique elements. Value: `%s`.', treats ) );\n\t}\n\tif ( nobs !== factor.length ) {\n\t\tthrow new RangeError( 'invalid arguments. First and second arguments must be arrays having the same length.' );\n\t}\n\n\tsumSqTotal = 0.0;\n\tssTreatment = 0.0;\n\tmeans = meanTable( x, factor, treats );\n\tgrandMean = mean( x );\n\n\t// Now get total ss:\n\tfor ( i = 0; i < nobs; i++ ) {\n\t\tsq = ( x[i] - grandMean ) * ( x[i] - grandMean );\n\t\tsumSqTotal += sq;\n\t}\n\n\tsq = 0.0;\n\tfor ( treatment in means ) {\n\t\tif ( hasOwnProp( means, treatment ) ) {\n\t\t\t// Already have sq defined\n\t\t\tsq = ( means[treatment].mean - grandMean ) *\n\t\t\t\t( means[treatment].mean - grandMean );\n\t\t\tssTreatment += means[treatment].sampleSize * sq;\n\t\t}\n\t}\n\tnumDf = nGroups - 1;\n\tdenDf = nobs - nGroups;\n\tsumSqError = sumSqTotal - ssTreatment;\n\tmeanSumSqTreat = ssTreatment / numDf;\n\tmeanSumSqError = sumSqError / denDf;\n\tfScore = meanSumSqTreat / meanSumSqError;\n\n\tpVal = 1.0 - cdf( fScore, numDf, denDf );\n\n\tout = {};\n\n\ttreatment = {};\n\tsetReadOnly( treatment, 'df', numDf );\n\tsetReadOnly( treatment, 'ss', ssTreatment );\n\tsetReadOnly( treatment, 'ms', meanSumSqTreat );\n\tsetReadOnly( out, 'treatment', treatment );\n\n\terr = {};\n\tsetReadOnly( err, 'df', denDf );\n\tsetReadOnly( err, 'ss', sumSqError );\n\tsetReadOnly( err, 'ms', meanSumSqError );\n\tsetReadOnly( out, 'error', err );\n\n\tsetReadOnly( out, 'statistic', fScore );\n\tsetReadOnly( out, 'pValue', pVal );\n\tsetReadOnly( out, 'means', means );\n\tsetReadOnly( out, 'method', 'One-Way ANOVA' );\n\tsetReadOnly( out, 'alpha', opts.alpha );\n\tsetReadOnly( out, 'rejected', pVal <= opts.alpha );\n\tsetReadOnly( out, 'print', prettyPrint( out ) );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = anova1;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* One-way analysis of variance.\n*\n* @module @stdlib/stats/anova1\n*\n* @example\n* var anova1 = require( '@stdlib/stats/anova1' );\n* var x = [ 1, 3, 5, 2, 4, 6, 8, 7, 10, 11, 12, 15 ];\n* var f = [ 'control', 'treatA', 'treatB', 'treatC', 'control', 'treatA', 'treatB', 'treatC', 'control', 'treatA', 'treatB', 'treatC' ];\n*\n* var out = anova1( x, f );\n* /* returns\n*     {\n*         'treatment': {\n*             'df': 3,\n*             'ss': ~20.667,\n*             'ms': ~6.889\n*          }\n*         'error': {\n*             'df': 8,\n*             'ss': ~185.333,\n*             'ms': ~23.1667,\n*         },\n*         'statistic': ~0.297,\n*         'pValue': ~0.826,\n*         'means': { 'control': { 'mean': 5.0, 'sampleSize': 3, 'SD': ~4.583 },\n*            'treatA': { 'mean': ~6.667, 'sampleSize': 3, 'SD': ~4.041 },\n*            'treatB': { 'mean': ~8.333, 'sampleSize': 3, 'SD': ~3.512 },\n*            'treatC': { 'mean': 8.0, 'sampleSize': 3, 'SD': ~6.557 }\n*         },\n*         'method': 'One-Way ANOVA'\n*     }\n* *\\/\n*\n* var table = out.print();\n* /*\n* One-Way ANOVA\n*\n* Null Hypothesis: All Means Equal\n* Alternate Hypothesis: At Least one Mean not Equal\n*\n*               df   SS          MS        F Score  P Value\n* Treatment     3    20.6667     6.8889    0.2974   0.8265\n* Errors        8    185.3333    23.1667\n*\n* Fail to Reject Null: 0.8265 >= 0.05\n*\n* *\\/\n*/\n\n// MODULES //\n\nvar anova1 = require( './anova1.js' );\n\n\n// EXPORTS //\n\nmodule.exports = anova1;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gammainc = require( '@stdlib/math/base/special/gammainc' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a gamma distribution with shape parameter `alpha` and rate parameter `beta` at a value `x`.\n*\n* @param {number} x - input value\n* @param {NonNegativeNumber} alpha - shape parameter\n* @param {PositiveNumber} beta - rate parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 2.0, 1.0, 1.0 );\n* // returns ~0.865\n*\n* @example\n* var y = cdf( 2.0, 3.0, 1.0 );\n* // returns ~0.323\n*\n* @example\n* var y = cdf( -1.0, 2.0, 2.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( +Infinity, 4.0, 2.0 );\n* // returns 1.0\n*\n* @example\n* var y = cdf( -Infinity, 4.0, 2.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, -1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 1.0, -1.0 );\n* // returns NaN\n*/\nfunction cdf( x, alpha, beta ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( alpha ) ||\n\t\tisnan( beta ) ||\n\t\talpha < 0.0 ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( alpha === 0.0 ) {\n\t\treturn ( x < 0 ) ? 0.0 : 1.0;\n\t}\n\tif ( x <= 0.0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( x === PINF ) {\n\t\treturn 1.0;\n\t}\n\treturn gammainc( x * beta, alpha );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a degenerate distribution with mean value `mu`.\n*\n* @param {number} x - input value\n* @param {number} mu - constant value of distribution\n* @returns {Probability} evaluated cumulative distribution function\n*\n* @example\n* var y = cdf( 2.0, 3.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( 4.0, 3.0 );\n* // returns 1.0\n*\n* @example\n* var y = cdf( 3.0, 3.0 );\n* // returns 1.0\n*\n* @example\n* var y = cdf( NaN, 0.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN );\n* // returns NaN\n*/\nfunction cdf( x, mu ) {\n\tif ( isnan( x ) || isnan( mu ) ) {\n\t\treturn NaN;\n\t}\n\treturn (x < mu) ? 0.0 : 1.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) of a degenerate distribution centered at a provided mean value.\n*\n* @param {number} mu - constant value of distribution\n* @returns {Function} function to evaluate the cumulative distribution function\n*\n* @example\n* var cdf = factory( 5.0 );\n*\n* var y = cdf( 3.0 );\n* // returns 0.0\n*\n* y = cdf( 6.0 );\n* // returns 1.0\n*\n* y = cdf( NaN );\n* // returns NaN\n*/\nfunction factory( mu ) {\n\tif ( isnan( mu ) ) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) of a degenerate distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated cumulative distribution function\n\t*\n\t* @example\n\t* var y = cdf( 10.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn (x < mu) ? 0.0 : 1.0;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Degenerate distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/degenerate/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/degenerate/cdf' );\n*\n* var y = cdf( 2.0, 5.0 );\n* // returns 0.0\n*\n* @example\n* var factory = require( '@stdlib/stats/base/dists/degenerate/cdf' ).factory;\n*\n* var cdf = factory( 5.0 );\n*\n* var y = cdf( 3.0 );\n* // returns 0.0\n*\n* y = cdf( 6.0 );\n* // returns 1.0\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar degenerate = require( './../../../../../base/dists/degenerate/cdf' ).factory;\nvar gammainc = require( '@stdlib/math/base/special/gammainc' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a gamma distribution with shape parameter `alpha` and rate parameter `beta`.\n*\n* @param {NonNegativeNumber} alpha - shape parameter\n* @param {PositiveNumber} beta - rate parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 0.5, 0.1 );\n* var y = cdf( 12.0 );\n* // returns ~0.879\n*\n* y = cdf( 8.0 );\n* // returns ~0.794\n*/\nfunction factory( alpha, beta ) {\n\tif (\n\t\tisnan( alpha ) ||\n\t\tisnan( beta ) ||\n\t\talpha < 0.0 ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( alpha === 0.0 ) {\n\t\treturn degenerate( 0.0 );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a gamma distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tif ( x <= 0.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tif ( x === PINF ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\treturn gammainc( x * beta, alpha );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Gamma distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/gamma/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/gamma/cdf' );\n*\n* var y = cdf( 2.0, 8.0, 3.0 );\n* // returns ~0.256\n*\n* y = cdf( 0.0, 1.0, 1.0 );\n* // returns 0.0\n*\n* var mycdf = cdf.factory( 2.0, 0.5 );\n* y = mycdf( 6.0 );\n* // returns ~0.801\n*\n* y = mycdf( 2.0 );\n* // returns ~0.264\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gammaCDF = require( './../../../../../base/dists/gamma/cdf' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a chi-squared distribution with degrees of freedom `k` at a value `x`.\n*\n* @param {number} x - input value\n* @param {NonNegativeNumber} k - degrees of freedom\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 2.0, 3.0 );\n* // returns ~0.428\n*\n* @example\n* var y = cdf( 1.0, 0.5 );\n* // returns ~0.846\n*\n* @example\n* var y = cdf( -1.0, 4.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative degrees of freedom:\n* var y = cdf( 2.0, -1.0 );\n* // returns NaN\n*/\nfunction cdf( x, k ) {\n\treturn gammaCDF( x, k/2.0, 0.5 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gammaFactory = require( './../../../../../base/dists/gamma/cdf' ).factory;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a chi-squared distribution with degrees of freedom `k`.\n*\n* @param {NonNegativeNumber} k - degrees of freedom\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 3.0 );\n*\n* var y = cdf( 6.0 );\n* // returns ~0.888\n*\n* y = cdf( 1.5 );\n* // returns ~0.318\n*/\nfunction factory( k ) {\n\treturn gammaFactory( k/2.0, 0.5 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Chi-squared distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/chisquare/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/chisquare/cdf' );\n*\n* var y = cdf( 2.0, 8.0 );\n* // returns ~0.019\n*\n* y = cdf( 0.0, 1.0 );\n* // returns 0.0\n*\n* @example\n* var factory = require( '@stdlib/stats/base/dists/chisquare/cdf' ).factory;\n*\n* var cdf = factory( 1.0 );\n*\n* var y = cdf( 2.0 );\n* // returns ~0.843\n*\n* y = cdf( 1.2 );\n* // returns ~0.727\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar indexOf = require( './../../index-of' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'indices', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'returns': '*'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\n\n\n// MAIN //\n\n/**\n* Groups values as arrays associated with distinct keys and outputs element values.\n*\n* ## Notes\n*\n* -   Checking for an \"own\" property is necessary to guard against the edge case where a group identifier which matches a method or property on the `Object` prototype.\n*\n*\n* @private\n* @param {Collection} collection - collection to group\n* @param {Collection} groups - collection defining which group an element in the input collection belongs to\n* @returns {Object} group results\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var out = group( arr, groups );\n* // returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }\n*/\nfunction group( collection, groups ) {\n\tvar out;\n\tvar len;\n\tvar g;\n\tvar i;\n\n\tlen = collection.length;\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tg = groups[ i ].toString();\n\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\tout[ g ].push( collection[ i ] );\n\t\t} else {\n\t\t\tout[ g ] = [ collection[ i ] ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = group;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\n\n\n// MAIN //\n\n/**\n* Groups values as arrays associated with distinct keys and outputs element indices.\n*\n* ## Notes\n*\n* -   Checking for an \"own\" property is necessary to guard against the edge case where a group identifier which matches a method or property on the `Object` prototype.\n*\n*\n* @private\n* @param {Collection} collection - collection to group\n* @param {Collection} groups - collection defining which group an element in the input collection belongs to\n* @returns {Object} group results\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var out = group( arr, groups );\n* // returns { 'b': [ 0, 1, 3 ], 'f': [ 2 ] }\n*/\nfunction group( collection, groups ) {\n\tvar out;\n\tvar len;\n\tvar g;\n\tvar i;\n\n\tlen = collection.length;\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tg = groups[ i ].toString();\n\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\tout[ g ].push( i );\n\t\t} else {\n\t\t\tout[ g ] = [ i ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = group;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\n\n\n// MAIN //\n\n/**\n* Groups values as arrays associated with distinct keys and outputs index-element pairs.\n*\n* ## Notes\n*\n* -   Checking for an \"own\" property is necessary to guard against the edge case where a group identifier which matches a method or property on the `Object` prototype.\n*\n*\n* @private\n* @param {Collection} collection - collection to group\n* @param {Collection} groups - collection defining which group an element in the input collection belongs to\n* @returns {Object} group results\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var out = group( arr, groups );\n* // returns { 'b': [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], 'f': [ [ 2, 'foo' ] ] }\n*/\nfunction group( collection, groups ) {\n\tvar out;\n\tvar len;\n\tvar g;\n\tvar i;\n\n\tlen = collection.length;\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tg = groups[ i ].toString();\n\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\tout[ g ].push( [ i, collection[ i ] ] );\n\t\t} else {\n\t\t\tout[ g ] = [ [ i, collection[ i ] ] ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = group;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar format = require( '@stdlib/string/format' );\nvar validate = require( './validate.js' );\nvar returnValues = require( './return_values.js' );\nvar returnIndices = require( './return_indices.js' );\nvar returnPairs = require( './return_pairs.js' );\n\n\n// MAIN //\n\n/**\n* Groups values as arrays associated with distinct keys.\n*\n* @param {Collection} collection - collection to group\n* @param {Options} [options] - function options\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Collection} groups - collection defining which group an element in the input collection belongs to\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a collection\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} first and last arguments must be the same length\n* @returns {Object} group results\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var out = group( arr, groups );\n* // returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var opts = {\n*     'returns': 'indices'\n* };\n*\n* var out = group( arr, opts, groups );\n* // returns { 'b': [ 0, 1, 3 ], 'f': [ 2 ] }\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var opts = {\n*     'returns': '*'\n* };\n*\n* var out = group( arr, opts, groups );\n* // returns { 'b': [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], 'f': [ [ 2, 'foo' ] ] }\n*/\nfunction group( collection, options, groups ) {\n\tvar opts;\n\tvar err;\n\tvar g;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\topts = {\n\t\t'returns': 'values'\n\t};\n\tif ( arguments.length === 2 ) {\n\t\tg = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tg = groups;\n\t}\n\tif ( !isCollection( g ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a collection. Value: `%s`.', g ) );\n\t}\n\tif ( collection.length !== g.length ) {\n\t\tthrow new RangeError( 'invalid arguments. First and last arguments must be the same length.' );\n\t}\n\tif ( opts.returns === 'values' ) {\n\t\treturn returnValues( collection, g );\n\t}\n\tif ( opts.returns === 'indices' ) {\n\t\treturn returnIndices( collection, g );\n\t}\n\treturn returnPairs( collection, g );\n}\n\n\n// EXPORTS //\n\nmodule.exports = group;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Group values as arrays associated with distinct keys.\n*\n* @module @stdlib/utils/group\n*\n* @example\n* var group = require( '@stdlib/utils/group' );\n*\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var out = group( arr, groups );\n* // returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }\n*\n* @example\n* var group = require( '@stdlib/utils/group' );\n*\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var opts = {\n*     'returns': 'indices'\n* };\n*\n* var out = group( arr, opts, groups );\n* // returns { 'b': [ 0, 1, 3 ], 'f': [ 2 ] }\n*\n* @example\n* var group = require( '@stdlib/utils/group' );\n*\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var opts = {\n*     'returns': '*'\n* };\n*\n* var out = group( arr, opts, groups );\n* // returns { 'b': [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], 'f': [ [ 2, 'foo' ] ] }\n*/\n\n// MODULES //\n\nvar group = require( './group.js' );\n\n\n// EXPORTS //\n\nmodule.exports = group;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Computes the unbiased variance of an array.\n*\n* @private\n* @param {NumericArray} arr - input array\n* @returns {number} variance\n*/\nfunction variance( arr ) {\n\tvar delta;\n\tvar mean;\n\tvar len;\n\tvar M2;\n\tvar i;\n\tvar x;\n\n\tdelta = 0.0;\n\tmean = 0.0;\n\tM2 = 0.0;\n\tlen = arr.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tx = arr[ i ];\n\t\tdelta = x - mean;\n\t\tmean += delta / (i+1);\n\t\tM2 += delta * ( x - mean );\n\t}\n\treturn M2 / ( i - 1 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = variance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( '@stdlib/assert/is-array' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {Array} [options.groups] - array of group indicators\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'groups' ) ) {\n\t\topts.groups = options.groups;\n\t\tif ( !isArray( opts.groups ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an array. Option: `%s`.', 'groups', opts.groups ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\nvar roundn = require( '@stdlib/math/base/special/roundn' );\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Null hypothesis: The variances in all groups are the same.';\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts ) + '\\n';\n\tstr += '    df: ' + roundn( this.df, -dgts );\n\tstr += '\\n\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar objectKeys = require( '@stdlib/utils/keys' );\nvar format = require( '@stdlib/string/format' );\nvar chisqCDF = require( './../../base/dists/chisquare/cdf' );\nvar group = require( '@stdlib/utils/group' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar variance = require( './variance.js' );\nvar validate = require( './validate.js' );\nvar print = require( './print.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Computes Bartlett’s test for equal variances.\n*\n* @param {...NumericArray} arguments - either two or more number arrays or a single numeric array if an array of group indicators is supplied as an option\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {Array} [options.groups] - array of group indicators\n* @throws {TypeError} must provide array-like arguments\n* @throws {RangeError} alpha option has to be a number in the interval `[0,1]`\n* @throws {Error} must provide at least two array-like arguments if `groups` is not set\n* @throws {TypeError} options must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Object} test results\n*\n* @example\n* // Data from Hollander & Wolfe (1973), p. 116:\n* var x = [ 2.9, 3.0, 2.5, 2.6, 3.2 ];\n* var y = [ 3.8, 2.7, 4.0, 2.4 ];\n* var z = [ 2.8, 3.4, 3.7, 2.2, 2.0 ];\n*\n* var out = bartlett( x, y, z );\n* // returns {...}\n*/\nfunction bartlett() {\n\tvar options;\n\tvar ngroups;\n\tvar ninvSum;\n\tvar levels;\n\tvar table;\n\tvar alpha;\n\tvar nSum;\n\tvar vSum;\n\tvar args;\n\tvar opts;\n\tvar pval;\n\tvar stat;\n\tvar arg;\n\tvar err;\n\tvar lnv;\n\tvar out;\n\tvar df;\n\tvar n;\n\tvar v;\n\tvar i;\n\n\targs = [];\n\tngroups = arguments.length;\n\topts = {};\n\tif ( isPlainObject( arguments[ ngroups - 1 ] ) ) {\n\t\toptions = arguments[ ngroups - 1 ];\n\t\tngroups -= 1;\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.groups ) {\n\t\ttable = group( arguments[ 0 ], opts.groups );\n\t\tlevels = objectKeys( table );\n\t\tngroups = levels.length;\n\t\tif ( ngroups < 2 ) {\n\t\t\tthrow new Error( format( 'invalid option. `%s` option must be an array containing at least two unique elements. Option: `%s`.', 'groups', levels ) );\n\t\t}\n\t\tfor ( i = 0; i < ngroups; i++ ) {\n\t\t\targs.push( table[ levels[ i ] ] );\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < ngroups; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t}\n\tnSum = 0;\n\tninvSum = 0.0;\n\tvSum = 0.0;\n\tlnv = 0.0;\n\tn = new Array( ngroups );\n\tv = n.slice();\n\tfor ( i = 0; i < ngroups; i++ ) {\n\t\targ = args[ i ];\n\t\tif ( !isCollection( arg ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide array-like arguments. Value: `%s`.', arg ) );\n\t\t}\n\t\tif ( arg.length === 0 ) {\n\t\t\tthrow new Error( format( 'invalid argument. Supplied arrays cannot be empty. Value: `%s`.', arg ) );\n\t\t}\n\t\tn[ i ] = arg.length - 1;\n\t\tnSum += n[ i ];\n\t\tninvSum += 1.0 / n[ i ];\n\t\tv[ i ] = variance( arg );\n\t\tvSum += ( n[ i ] * v[ i ] );\n\t\tlnv += n[ i ] * ln( v[ i ] );\n\t}\n\tvSum /= nSum;\n\tif ( opts.alpha === void 0 ) {\n\t\talpha = 0.05;\n\t} else {\n\t\talpha = opts.alpha;\n\t}\n\tif ( alpha < 0.0 || alpha > 1.0 ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.', 'alpha', alpha ) );\n\t}\n\n\tstat = ( ( nSum * ln( vSum ) ) - lnv );\n\tstat /= ( 1.0 + ( ( ninvSum - ( 1.0 / nSum ) ) / ( 3 * ( ngroups-1 ) ) ) );\n\tdf = ngroups - 1;\n\tpval = 1.0 - chisqCDF( stat, df );\n\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= alpha );\n\tsetReadOnly( out, 'alpha', alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'df', df );\n\tsetReadOnly( out, 'method', 'Bartlett\\'s test of equal variances' );\n\tsetReadOnly( out, 'print', print );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = bartlett;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute Bartlett’s test for equal variances.\n*\n* @module @stdlib/stats/bartlett-test\n*\n* @example\n* var bartlettTest = require( '@stdlib/stats/bartlett-test' );\n*\n* // Data from Hollander & Wolfe (1973), p. 116:\n* var x = [ 2.9, 3.0, 2.5, 2.6, 3.2 ];\n* var y = [ 3.8, 2.7, 4.0, 2.4 ];\n* var z = [ 2.8, 3.4, 3.7, 2.2, 2.0 ];\n*\n* var out = bartlettTest( x, y, z );\n* // returns {...}\n*/\n\n// MODULES //\n\nvar bartlettTest = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = bartlettTest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.016743100507663373;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.016743100507663373 + (x * (-0.0011295143874558028 + (x * (0.001056288621524929 + (x * (0.00020938631748758808 + (x * (0.000014962478375834237 + (x * (4.4969678992770644e-7 + (x * (4.625961635228786e-9 + (x * (-2.811287356288318e-14 + (x * 9.905570997331033e-17))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (0.5914293448864175 + (x * (0.1381518657490833 + (x * (0.016074608709367652 + (x * (0.0009640118070051656 + (x * (0.000027533547476472603 + (x * (2.82243172016108e-7 + (x * (0.0 + (x * 0.0))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 9.905570997331033e-17 + (x * (-2.811287356288318e-14 + (x * (4.625961635228786e-9 + (x * (4.4969678992770644e-7 + (x * (0.000014962478375834237 + (x * (0.00020938631748758808 + (x * (0.001056288621524929 + (x * (-0.0011295143874558028 + (x * -0.016743100507663373))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.0 + (x * (0.0 + (x * (2.82243172016108e-7 + (x * (0.000027533547476472603 + (x * (0.0009640118070051656 + (x * (0.016074608709367652 + (x * (0.1381518657490833 + (x * (0.5914293448864175 + (x * 1.0))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_48_0/boost/math/special_functions/detail/erf_inv.hpp}. This implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar ln = require( './../../../../base/special/ln' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar rationalFcnR1 = require( './rational_p1q1.js' );\nvar rationalFcnR2 = require( './rational_p2q2.js' );\nvar rationalFcnR3 = require( './rational_p3q3.js' );\nvar rationalFcnR4 = require( './rational_p4q4.js' );\nvar rationalFcnR5 = require( './rational_p5q5.js' );\n\n\n// VARIABLES //\n\nvar Y1 = 8.91314744949340820313e-2;\nvar Y2 = 2.249481201171875;\nvar Y3 = 8.07220458984375e-1;\nvar Y4 = 9.3995571136474609375e-1;\nvar Y5 = 9.8362827301025390625e-1;\n\n\n// MAIN //\n\n/**\n* Evaluates the inverse complementary error function.\n*\n* Note that\n*\n* ```tex\n* \\operatorname{erfc^{-1}}(1-z) = \\operatorname{erf^{-1}}(z)\n* ```\n*\n* ## Method\n*\n* 1.  For \\\\(|x| \\leq 0.5\\\\), we evaluate the inverse error function using the rational approximation\n*\n*     ```tex\n*     \\operatorname{erf^{-1}}(x) = x(x+10)(\\mathrm{Y} + \\operatorname{R}(x))\n*     ```\n*\n*     where \\\\(Y\\\\) is a constant and \\\\(\\operatorname{R}(x)\\\\) is optimized for a low absolute error compared to \\\\(|Y|\\\\).\n*\n*     <!-- <note> -->\n*\n*     Max error \\\\(2.001849\\mbox{e-}18\\\\). Maximum deviation found (error term at infinite precision) \\\\(8.030\\mbox{e-}21\\\\).\n*\n*     <!-- </note> -->\n*\n* 2.  For \\\\(0.5 > 1-|x| \\geq 0\\\\), we evaluate the inverse error function using the rational approximation\n*\n*     ```tex\n*     \\operatorname{erf^{-1}} = \\frac{\\sqrt{-2 \\cdot \\ln(1-x)}}{\\mathrm{Y} + \\operatorname{R}(1-x)}\n*     ```\n*\n*     where \\\\(Y\\\\) is a constant, and \\\\(\\operatorname{R}(q)\\\\) is optimized for a low absolute error compared to \\\\(Y\\\\).\n*\n*     <!-- <note> -->\n*\n*     Max error \\\\(7.403372\\mbox{e-}17\\\\). Maximum deviation found (error term at infinite precision) \\\\(4.811\\mbox{e-}20\\\\).\n*\n*     <!-- </note> -->\n*\n* 3.  For \\\\(1-|x| < 0.25\\\\), we have a series of rational approximations all of the general form\n*\n*     ```tex\n*     p = \\sqrt{-\\ln(1-x)}\n*     ```\n*\n*     Accordingly, the result is given by\n*\n*     ```tex\n*     \\operatorname{erf^{-1}}(x) = p(\\mathrm{Y} + \\operatorname{R}(p-B))\n*     ```\n*\n*     where \\\\(Y\\\\) is a constant, \\\\(B\\\\) is the lowest value of \\\\(p\\\\) for which the approximation is valid, and \\\\(\\operatorname{R}(x-B)\\\\) is optimized for a low absolute error compared to \\\\(Y\\\\).\n*\n*     <!-- <note> -->\n*\n*     Almost all code will only go through the first or maybe second approximation.  After that we are dealing with very small input values.\n*\n*     -   If \\\\(p < 3\\\\), max error \\\\(1.089051\\mbox{e-}20\\\\).\n*     -   If \\\\(p < 6\\\\), max error \\\\(8.389174\\mbox{e-}21\\\\).\n*     -   If \\\\(p < 18\\\\), max error \\\\(1.481312\\mbox{e-}19\\\\).\n*     -   If \\\\(p < 44\\\\), max error \\\\(5.697761\\mbox{e-}20\\\\).\n*     -   If \\\\(p \\geq 44\\\\), max error \\\\(1.279746\\mbox{e-}20\\\\).\n*\n*     <!-- </note> -->\n*\n*     <!-- <note> -->\n*\n*     The Boost library can accommodate \\\\(80\\\\) and \\\\(128\\\\) bit long doubles. JavaScript only supports a \\\\(64\\\\) bit double (IEEE 754). Accordingly, the smallest \\\\(p\\\\) (in JavaScript at the time of this writing) is \\\\(\\sqrt{-\\ln(\\sim5\\mbox{e-}324)} = 27.284429111150214\\\\).\n*\n*     <!-- </note> -->\n*\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var y = erfcinv( 0.5 );\n* // returns ~0.4769\n*\n* @example\n* var y = erfcinv( 0.8 );\n* // returns ~0.1791\n*\n* @example\n* var y = erfcinv( 0.0 );\n* // returns Infinity\n*\n* @example\n* var y = erfcinv( 2.0 );\n* // returns -Infinity\n*\n* @example\n* var y = erfcinv( NaN );\n* // returns NaN\n*/\nfunction erfcinv( x ) {\n\tvar sign;\n\tvar qs;\n\tvar q;\n\tvar g;\n\tvar r;\n\n\t// Special case: NaN\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\t// Special case: 0\n\tif ( x === 0.0 ) {\n\t\treturn PINF;\n\t}\n\t// Special case: 2\n\tif ( x === 2.0 ) {\n\t\treturn NINF;\n\t}\n\t// Special case: 1\n\tif ( x === 1.0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( x > 2.0 || x < 0.0 ) {\n\t\treturn NaN;\n\t}\n\t// Argument reduction (reduce to interval [0,1]). If `x` is outside [0,1], we can take advantage of the complementary error function reflection formula: `erfc(-z) = 2 - erfc(z)`, by negating the result once finished.\n\tif ( x > 1.0 ) {\n\t\tsign = -1.0;\n\t\tq = 2.0 - x;\n\t} else {\n\t\tsign = 1.0;\n\t\tq = x;\n\t}\n\tx = 1.0 - q;\n\n\t// x = 1-q <= 0.5\n\tif ( x <= 0.5 ) {\n\t\tg = x * ( x + 10.0 );\n\t\tr = rationalFcnR1( x );\n\t\treturn sign * ( (g*Y1) + (g*r) );\n\t}\n\t// q >= 0.25\n\tif ( q >= 0.25 ) {\n\t\tg = sqrt( -2.0 * ln(q) );\n\t\tq -= 0.25;\n\t\tr = rationalFcnR2( q );\n\t\treturn sign * ( g / (Y2+r) );\n\t}\n\tq = sqrt( -ln( q ) );\n\n\t// q < 3\n\tif ( q < 3.0 ) {\n\t\tqs = q - 1.125;\n\t\tr = rationalFcnR3( qs );\n\t\treturn sign * ( (Y3*q) + (r*q) );\n\t}\n\t// q < 6\n\tif ( q < 6.0 ) {\n\t\tqs = q - 3.0;\n\t\tr = rationalFcnR4( qs );\n\t\treturn sign * ( (Y4*q) + (r*q) );\n\t}\n\t// q < 18\n\tqs = q - 6.0;\n\tr = rationalFcnR5( qs );\n\treturn sign * ( (Y5*q) + (r*q) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = erfcinv;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.0005087819496582806;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.0005087819496582806 + (x * (-0.008368748197417368 + (x * (0.03348066254097446 + (x * (-0.012692614766297404 + (x * (-0.03656379714117627 + (x * (0.02198786811111689 + (x * (0.008226878746769157 + (x * (-0.005387729650712429 + (x * (0.0 + (x * 0.0))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (-0.9700050433032906 + (x * (-1.5657455823417585 + (x * (1.5622155839842302 + (x * (0.662328840472003 + (x * (-0.7122890234154284 + (x * (-0.05273963823400997 + (x * (0.07952836873415717 + (x * (-0.0023339375937419 + (x * 0.0008862163904564247))))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.0 + (x * (0.0 + (x * (-0.005387729650712429 + (x * (0.008226878746769157 + (x * (0.02198786811111689 + (x * (-0.03656379714117627 + (x * (-0.012692614766297404 + (x * (0.03348066254097446 + (x * (-0.008368748197417368 + (x * -0.0005087819496582806))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.0008862163904564247 + (x * (-0.0023339375937419 + (x * (0.07952836873415717 + (x * (-0.05273963823400997 + (x * (-0.7122890234154284 + (x * (0.662328840472003 + (x * (1.5622155839842302 + (x * (-1.5657455823417585 + (x * (-0.9700050433032906 + (x * 1.0))))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.20243350835593876;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.20243350835593876 + (x * (0.10526468069939171 + (x * (8.3705032834312 + (x * (17.644729840837403 + (x * (-18.851064805871424 + (x * (-44.6382324441787 + (x * (17.445385985570866 + (x * (21.12946554483405 + (x * -3.6719225470772936))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (6.242641248542475 + (x * (3.971343795334387 + (x * (-28.66081804998 + (x * (-20.14326346804852 + (x * (48.560921310873994 + (x * (10.826866735546016 + (x * (-22.643693341313973 + (x * 1.7211476576120028))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = -3.6719225470772936 + (x * (21.12946554483405 + (x * (17.445385985570866 + (x * (-44.6382324441787 + (x * (-18.851064805871424 + (x * (17.644729840837403 + (x * (8.3705032834312 + (x * (0.10526468069939171 + (x * -0.20243350835593876))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.7211476576120028 + (x * (-22.643693341313973 + (x * (10.826866735546016 + (x * (48.560921310873994 + (x * (-20.14326346804852 + (x * (-28.66081804998 + (x * (3.971343795334387 + (x * (6.242641248542475 + (x * 1.0))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.1311027816799519;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.1311027816799519 + (x * (-0.16379404719331705 + (x * (0.11703015634199525 + (x * (0.38707973897260434 + (x * (0.3377855389120359 + (x * (0.14286953440815717 + (x * (0.029015791000532906 + (x * (0.0021455899538880526 + (x * (-6.794655751811263e-7 + (x * (2.8522533178221704e-8 + (x * -6.81149956853777e-10))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (3.4662540724256723 + (x * (5.381683457070069 + (x * (4.778465929458438 + (x * (2.5930192162362027 + (x * (0.848854343457902 + (x * (0.15226433829533179 + (x * (0.011059242293464892 + (x * (0.0 + (x * (0.0 + (x * 0.0))))))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = -6.81149956853777e-10 + (x * (2.8522533178221704e-8 + (x * (-6.794655751811263e-7 + (x * (0.0021455899538880526 + (x * (0.029015791000532906 + (x * (0.14286953440815717 + (x * (0.3377855389120359 + (x * (0.38707973897260434 + (x * (0.11703015634199525 + (x * (-0.16379404719331705 + (x * -0.1311027816799519))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.0 + (x * (0.0 + (x * (0.0 + (x * (0.011059242293464892 + (x * (0.15226433829533179 + (x * (0.848854343457902 + (x * (2.5930192162362027 + (x * (4.778465929458438 + (x * (5.381683457070069 + (x * (3.4662540724256723 + (x * 1.0))))))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.0350353787183178;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.0350353787183178 + (x * (-0.0022242652921344794 + (x * (0.018557330651423107 + (x * (0.009508047013259196 + (x * (0.0018712349281955923 + (x * (0.00015754461742496055 + (x * (0.00000460469890584318 + (x * (-2.304047769118826e-10 + (x * 2.6633922742578204e-12))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (1.3653349817554064 + (x * (0.7620591645536234 + (x * (0.22009110576413124 + (x * (0.03415891436709477 + (x * (0.00263861676657016 + (x * (0.00007646752923027944 + (x * (0.0 + (x * 0.0))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 2.6633922742578204e-12 + (x * (-2.304047769118826e-10 + (x * (0.00000460469890584318 + (x * (0.00015754461742496055 + (x * (0.0018712349281955923 + (x * (0.009508047013259196 + (x * (0.018557330651423107 + (x * (-0.0022242652921344794 + (x * -0.0350353787183178))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.0 + (x * (0.0 + (x * (0.00007646752923027944 + (x * (0.00263861676657016 + (x * (0.03415891436709477 + (x * (0.22009110576413124 + (x * (0.7620591645536234 + (x * (1.3653349817554064 + (x * 1.0))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the inverse complementary error function.\n*\n* @module @stdlib/math/base/special/erfcinv\n*\n* @example\n* var erfcinv = require( '@stdlib/math/base/special/erfcinv' );\n*\n* var y = erfcinv( 0.5 );\n* // returns ~0.4769\n*\n* y = erfcinv( 0.8 );\n* // returns ~-0.1791\n*\n* y = erfcinv( 0.0 );\n* // returns Infinity\n*\n* y = erfcinv( 2.0 );\n* // returns -Infinity\n*\n* y = erfcinv( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar erfcinv = require( './erfcinv.js' );\n\n\n// EXPORTS //\n\nmodule.exports = erfcinv;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C code, long comment, copyright, license, and constants are from [Cephes]{@link http://www.netlib.org/cephes}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright 1984, 1995, 2000 by Stephen L. Moshier\n*\n* Some software in this archive may be from the book _Methods and Programs for Mathematical Functions_ (Prentice-Hall or Simon & Schuster International, 1989) or from the Cephes Mathematical Library, a commercial product. In either event, it is copyrighted by the author. What you see here may be used freely but it comes with no support or guarantee.\n*\n* Stephen L. Moshier\n* moshier@na-net.ornl.gov\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar asin = require( './../../../../base/special/asin' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar PIO4 = require( '@stdlib/constants/float64/fourth-pi' );\n\n\n// VARIABLES //\n\nvar MOREBITS = 6.123233995736765886130e-17; // pi/2 = PIO2 + MOREBITS.\n\n\n// MAIN //\n\n/**\n* Computes the arccosine of a number.\n*\n* ## Method\n*\n* -   Analytically,\n*\n*     ```tex\n*     \\operatorname{acos}(x) = \\frac{\\pi}{2} - \\operatorname{asin}(x)\n*     ```\n*\n*     However, if \\\\(\\|x\\|\\\\) is near \\\\(1\\\\), there is cancellation error in subtracting \\\\(\\opertorname{asin}(x)\\\\) from \\\\(\\pi/2\\\\). Hence, if \\\\(x < -0.5\\\\),\n*\n*     ```tex\n*     \\operatorname{acos}(x) = \\pi - 2.0 \\cdot \\operatorname{asin}(\\sqrt{(1+x)/2})\n*     ```\n*\n*     or, if \\\\(x > +0.5\\\\),\n*\n*     ```tex\n*     \\operatorname{acos}(x) = 2.0 \\cdot \\operatorname{asin}( \\sqrt{(1-x)/2} )}\n*     ```\n*\n* ## Notes\n*\n* -   Relative error:\n*\n*     | arithmetic | domain | # trials | peak    | rms     |\n*     |:-----------|:------:|:---------|:--------|:--------|\n*     | DEC        | -1, 1  | 50000    | 3.3e-17 | 8.2e-18 |\n*     | IEEE       | -1, 1  | 10^6     | 2.2e-16 | 6.5e-17 |\n*\n*\n* @param {number} x - input value\n* @returns {number} arccosine (in radians)\n*\n* @example\n* var v = acos( 1.0 );\n* // returns 0.0\n*\n* @example\n* var v = acos( 0.707 ); // ~pi/4\n* // returns ~0.7855\n*\n* @example\n* var v = acos( NaN );\n* // returns NaN\n*/\nfunction acos( x ) {\n\tvar z;\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( x < -1.0 || x > 1.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( x > 0.5 ) {\n\t\treturn 2.0 * asin( sqrt( 0.5 - (0.5*x) ) );\n\t}\n\tz = PIO4 - asin( x );\n\tz += MOREBITS;\n\tz += PIO4;\n\treturn z;\n}\n\n\n// EXPORTS //\n\nmodule.exports = acos;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the arccosine of a number.\n*\n* @module @stdlib/math/base/special/acos\n*\n* @example\n* var acos = require( '@stdlib/math/base/special/acos' );\n*\n* var v = acos( 1.0 );\n* // returns 0.0\n*\n* v = acos( 0.707 ); // ~pi/4\n* // returns ~0.7855\n*\n* v = acos( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar acos = require( './acos.js' );\n\n\n// EXPORTS //\n\nmodule.exports = acos;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Square root of `2`.\n*\n* @module @stdlib/constants/float64/sqrt-two\n* @type {number}\n*\n* @example\n* var SQRT2 = require( '@stdlib/constants/float64/sqrt-two' );\n* // returns 1.4142135623730951\n*/\n\n\n// MAIN //\n\n/**\n* Square root of `2`.\n*\n* ```tex\n* \\sqrt{2}\n* ```\n*\n* @constant\n* @type {number}\n* @default 1.4142135623730951\n*/\nvar SQRT2 = 1.41421356237309504880168872420969807856967187537694807317667973799073247846210703885038753432764157273501384623e+00; // eslint-disable-line max-len\n\n\n// EXPORTS //\n\nmodule.exports = SQRT2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.0005422926281312969;\n\t}\n\treturn 0.0005422926281312969 + (x * (-0.0003694266780000966 + (x * (-0.00010230378073700413 + (x * (0.00035764655430568635 + (x * (-0.00028690924218514614 + (x * (0.00012645437628698076 + (x * (-0.000033202652391372056 + (x * (0.000004890304529197534 + (x * (-3.123956959982987e-7 + (x * 8.22063524662433e-18))))))))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_62_0/boost/math/special_functions/detail/t_distribution_inv.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gammaDeltaRatio = require( './../../../../base/special/gamma-delta-ratio' );\nvar evalpoly = require( './../../../../base/tools/evalpoly' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar PI = require( '@stdlib/constants/float64/pi' );\nvar polyval1 = require( './polyval_co14.js' );\nvar polyval2 = require( './polyval_co15.js' );\nvar polyval3 = require( './polyval_co16.js' );\nvar polyval4 = require( './polyval_co17.js' );\nvar polyval5 = require( './polyval_co18.js' );\nvar polyval6 = require( './polyval_co19.js' );\nvar polyval7 = require( './polyval_co20.js' );\nvar polyval8 = require( './polyval_co21.js' );\nvar polyval9 = require( './polyval_co22.js' );\n\n\n// VARIABLES //\n\nvar c0 = 0.0;\n\n// Workspace for the polynomial coefficients:\nvar c = [ 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Evaluates Student's t quantiles via a body series expansion. Tail and body series are due to Shaw.\n*\n* ## References\n*\n* -   Shaw, William T. 2006. \"Sampling Student's T distribution – use of the inverse cumulative distribution function.\" _Journal of Computational Finance_ 9 (4): 37–73. [www.mth.kcl.ac.uk/~shaww/web\\_page/papers/Tdistribution06.pdf](www.mth.kcl.ac.uk/~shaww/web_page/papers/Tdistribution06.pdf).\n*\n* @private\n* @param {PositiveNumber} df - degrees of freedom\n* @param {Probability} u - input probability\n* @returns {number} function value\n*/\nfunction inverseStudentsTBodySeries( df, u ) {\n\tvar idf;\n\tvar v;\n\n\t// Body series for small N, start with Eq 56 of Shaw:\n\tv = gammaDeltaRatio( df/2, 0.5 ) * sqrt( df*PI ) * ( u-0.5 );\n\n\t// Figure out what the coefficients are. They depend only on the degrees of freedom (Eq 57 of Shaw):\n\tidf = 1.0 / df;\n\tc[ 1 ] = polyval1( idf );\n\tc[ 2 ] = polyval2( idf );\n\tc[ 3 ] = polyval3( idf );\n\tc[ 4 ] = polyval4( idf );\n\tc[ 5 ] = polyval5( idf );\n\tc[ 6 ] = polyval6( idf );\n\tc[ 7 ] = polyval7( idf );\n\tc[ 8 ] = polyval8( idf );\n\tc[ 9 ] = polyval9( idf );\n\n\t// Result is then an odd polynomial in v (see Eq 56 of Shaw)...\n\treturn c0 + ( v*evalpoly( c, v*v ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = inverseStudentsTBodySeries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.16666666666666666;\n\t}\n\treturn 0.16666666666666666 + (x * 0.16666666666666666);\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.058333333333333334;\n\t}\n\treturn 0.058333333333333334 + (x * (0.06666666666666667 + (x * 0.008333333333333333))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.0251984126984127;\n\t}\n\treturn 0.0251984126984127 + (x * (0.026785714285714284 + (x * (0.0017857142857142857 + (x * 0.0001984126984126984))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.012039792768959435;\n\t}\n\treturn 0.012039792768959435 + (x * (0.010559964726631394 + (x * (-0.0011078042328042327 + (x * (0.0003747795414462081 + (x * 0.0000027557319223985893))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.003837005972422639;\n\t}\n\treturn 0.003837005972422639 + (x * (0.00610392115600449 + (x * (-0.0016095979637646305 + (x * (0.0005945867404200738 + (x * (-0.00006270542728876062 + (x * 2.505210838544172e-8))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.0032177478835464946;\n\t}\n\treturn 0.0032177478835464946 + (x * (0.0010898206731540065 + (x * (-0.0012579159844784845 + (x * (0.0006908420797309686 + (x * (-0.00016376804137220805 + (x * (0.0000154012654012654 + (x * 1.6059043836821613e-10))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.001743826229834001;\n\t}\n\treturn 0.001743826229834001 + (x * (0.00003353097688001788 + (x * (-0.0007624513544032393 + (x * (0.0006451304695145635 + (x * (-0.000249472580470431 + (x * (0.000049255746366361444 + (x * (-0.0000039851014346715405 + (x * 7.647163731819816e-13))))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.0009647274732138864;\n\t}\n\treturn 0.0009647274732138864 + (x * (-0.0003110108632631878 + (x * (-0.00036307660358786886 + (x * (0.0005140660578834113 + (x * (-0.00029133414466938067 + (x * (0.00009086710793521991 + (x * (-0.000015303004486655377 + (x * (0.0000010914179173496788 + (x * 2.8114572543455206e-15))))))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_61_0/boost/math/special_functions/detail/t_distribution_inv.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gammaDeltaRatio = require( './../../../../base/special/gamma-delta-ratio' );\nvar evalpoly = require( './../../../../base/tools/evalpoly' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar pow = require( './../../../../base/special/pow' );\nvar PI = require( '@stdlib/constants/float64/pi' );\n\n\n// VARIABLES //\n\n// Array for the coefficients d(k), these depend only on the number of degrees of freedom df, so at least in theory we could tabulate these for fixed df, see p15 of Shaw:\nvar d = [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Evaluates Student's t quantiles via a tail series expansion. Tail and body series are due to Shaw.\n*\n* ## References\n*\n* -   Shaw, William T. 2006. \"Sampling Student's T distribution – use of the inverse cumulative distribution function.\" _Journal of Computational Finance_ 9 (4): 37–73. [www.mth.kcl.ac.uk/~shaww/web\\_page/papers/Tdistribution06.pdf](www.mth.kcl.ac.uk/~shaww/web_page/papers/Tdistribution06.pdf).\n*\n* @private\n* @param {number} df - degrees of freedom\n* @param {number} v - function value\n* @returns {number} tail value\n*/\nfunction inverseStudentsTTailSeries( df, v ) { // eslint-disable-line id-length\n\tvar result;\n\tvar power;\n\tvar div;\n\tvar np2;\n\tvar np4;\n\tvar np6;\n\tvar rn;\n\tvar w;\n\n\t// Tail series expansion, see section 6 of Shaw's paper. `w` is calculated using Eq 60:\n\tw = gammaDeltaRatio( df/2.0, 0.5 ) * sqrt( df*PI ) * v;\n\n\t// Define some variables:\n\tnp2 = df + 2.0;\n\tnp4 = df + 4.0;\n\tnp6 = df + 6.0;\n\n\td[ 0 ] = 1.0;\n\td[ 1 ] = -(df+1.0) / (2.0*np2);\n\tnp2 *= (df + 2.0);\n\td[ 2 ] = -df * (df+1.0) * (df+3.0) / (8.0*np2*np4);\n\tnp2 *= df + 2.0;\n\td[ 3 ] = -df * (df+1.0) * (df+5.0) * (((3.0*df) + 7.0) * df - 2.0) / (48.0*np2*np4*np6); // eslint-disable-line max-len, no-mixed-operators\n\tnp2 *= (df + 2.0);\n\tnp4 *= (df + 4.0);\n\td[ 4 ] = -df * (df+1.0) * (df+7.0) * ( (((((15.0*df) + 154.0) * df + 465.0) * df + 286.0) * df - 336.0) * df + 64.0) / (384.0*np2*np4*np6*(df+8.0)); // eslint-disable-line max-len, no-mixed-operators\n\tnp2 *= (df + 2.0);\n\td[ 5 ] = -df * (df+1.0) * (df+3.0) * (df+9.0) * (((((((35.0 * df + 452.0) * df+1573.0) * df + 600.0) * df - 2020.0) * df) + 928.0) * df - 128.0) / (1280.0*np2*np4*np6*(df+8.0) * (df+10.0)); // eslint-disable-line max-len, no-mixed-operators\n\tnp2 *= (df + 2.0);\n\tnp4 *= (df + 4.0);\n\tnp6 *= (df + 6.0);\n\td[ 6 ] = -df * (df+1.0) * (df+11.0) * ((((((((((((945.0*df) + 31506.0) * df + 425858.0) * df + 2980236.0) * df + 11266745.0) * df + 20675018.0) * df + 7747124.0) * df - 22574632.0) * df - 8565600.0) * df + 18108416.0) * df - 7099392.0) * df + 884736.0) / (46080.0*np2*np4*np6*(df+8.0) * (df+10.0) * (df+12.0)); // eslint-disable-line max-len, no-mixed-operators\n\n\t// Now bring everything together to provide the result this is Eq 62 of Shaw:\n\trn = sqrt( df );\n\tdiv = pow( rn*w, 1.0/df );\n\tpower = div * div;\n\tresult = evalpoly( d, power );\n\tresult *= rn;\n\tresult /= div;\n\treturn -result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = inverseStudentsTTailSeries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_61_0/boost/math/special_functions/detail/t_distribution_inv.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n/* eslint-disable no-mixed-operators */\n\n'use strict';\n\n// MODULES //\n\nvar erfcinv = require( './../../../../base/special/erfcinv' );\nvar expm1 = require( './../../../../base/special/expm1' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar pow = require( './../../../../base/special/pow' );\nvar HALF_PI = require( '@stdlib/constants/float64/half-pi' );\nvar SQRT2 = require( '@stdlib/constants/float64/sqrt-two' );\n\n\n// MAIN //\n\n/**\n* Evaluates Student's t quantiles via a method due to Hill.\n*\n* ## References\n*\n* -   Hill, G. W. 1970. \"Algorithm 396: Student's T-Quantiles.\" _Communications of the ACM_ 13 (10). New York, NY, USA: ACM: 619–20. doi:[10.1145/355598.355600](https://doi.org/10.1145/355598.355600).\n*\n* @private\n* @param {PositiveNumber} ndf - degrees of freedom\n* @param {Probability} u - input probability\n* @returns {number} function value\n*/\nfunction inverseStudentsTHill( ndf, u ) {\n\tvar a;\n\tvar b;\n\tvar c;\n\tvar d;\n\tvar q;\n\tvar x;\n\tvar y;\n\n\tif ( ndf > 1e20 ) {\n\t\treturn -erfcinv( 2 * u ) * SQRT2;\n\t}\n\ta = 1.0 / ( ndf - 0.5 );\n\tb = 48.0 / (a * a);\n\tc = ( ( ( ( (20700.0*a/b) - 98.0 ) * a ) - 16.0 ) * a ) + 96.36;\n\td = ( ( ( (94.5/(b+c)) - 3.0 ) / b ) + 1.0 ) * sqrt( a * HALF_PI ) * ndf;\n\ty = pow( d * 2.0 * u, 2.0 / ndf );\n\n\tif ( y > ( 0.05 + a ) ) {\n\t\t// Asymptotic inverse expansion about normal:\n\t\tx = -erfcinv( 2.0 * u ) * SQRT2;\n\t\ty = x * x;\n\n\t\tif ( ndf < 5.0 ) {\n\t\t\tc += 0.3 * ( ndf-4.5 ) * ( x + 0.6 );\n\t\t}\n\t\tc += ( ( ( ( ( ( (0.05*d*x)-5.0 ) * x ) - 7.0 ) * x )- 2.0 ) * x ) + b;\n\t\ty = ((((((0.4*y+6.3)*y)+36.0) * y + 94.5) / c - y - 3.0) / b + 1.0) * x;\n\t\ty = expm1( a * y * y );\n\t} else {\n\t\ty = ((1.0 / ( ( (ndf+6.0) / (ndf*y) - 0.089 * d - 0.822 ) *\n\t\t(ndf+2.0) * 3.0 ) + 0.5 / (ndf+4.0)) * y - 1.0) *\n\t\t(ndf+1.0) / (ndf+2.0) + 1.0 / y;\n\t}\n\tq = sqrt( ndf * y );\n\treturn -q;\n}\n\n\n// EXPORTS //\n\nmodule.exports = inverseStudentsTHill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_62_0/boost/math/special_functions/detail/t_distribution_inv.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar erfcinv = require( './../../../../base/special/erfcinv' );\nvar floor = require( './../../../../base/special/floor' );\nvar ldexp = require( './../../../../base/special/ldexp' );\nvar round = require( './../../../../base/special/round' );\nvar acos = require( './../../../../base/special/acos' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar abs = require( './../../../../base/special/abs' );\nvar cos = require( './../../../../base/special/cos' );\nvar pow = require( './../../../../base/special/pow' );\nvar sin = require( './../../../../base/special/sin' );\nvar SQRT2 = require( '@stdlib/constants/float64/sqrt-two' );\nvar PI = require( '@stdlib/constants/float64/pi' );\nvar inverseStudentsTBodySeries = require( './inverse_students_t_body_series.js' );\nvar inverseStudentsTTailSeries = require( './inverse_students_t_tail_series.js' );\nvar inverseStudentsTHill = require( './inverse_students_t_hill.js' );\n\n\n// VARIABLES //\n\nvar DF_THRESHOLD = 0x10000000; // 2^28\nvar ONE_THIRD = 1.0 / 3.0;\nvar EXP = ( 2.0 * 53.0 ) / 3.0;\nvar C = 0.85498797333834849467655443627193;\n\n\n// MAIN //\n\n/**\n* Evaluates Student's t quantiles.\n*\n* @private\n* @param {PositiveNumber} df - degrees of freedom\n* @param {Probability} u - input probability\n* @param {Probability} v - probability equal to `1-u`\n* @returns {number} function value\n*/\nfunction inverseStudentsT( df, u, v ) {\n\tvar crossover;\n\tvar tolerance;\n\tvar rootAlpha;\n\tvar invert;\n\tvar result;\n\tvar alpha;\n\tvar tmp;\n\tvar p0;\n\tvar p2;\n\tvar p4;\n\tvar p5;\n\tvar p;\n\tvar r;\n\tvar x;\n\tvar a;\n\tvar b;\n\n\tresult = 0;\n\tif ( u > v ) {\n\t\t// Function is symmetric, so invert it:\n\t\ttmp = v;\n\t\tv = u;\n\t\tu = tmp;\n\t\tinvert = true;\n\t} else {\n\t\tinvert = false;\n\t}\n\tif ( floor(df) === df && df < 20 ) {\n\t\t// We have integer degrees of freedom, try for the special cases first:\n\t\ttolerance = ldexp( 1.0, EXP );\n\n\t\tswitch ( floor( df ) ) {\n\t\tcase 1:\n\t\t\t// `df = 1` is the same as the Cauchy distribution, see Shaw Eq 35:\n\t\t\tif ( u === 0.5 ) {\n\t\t\t\tresult = 0.0;\n\t\t\t} else {\n\t\t\t\tresult = -cos( PI * u ) / sin( PI * u );\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t// `df = 2` has an exact result, see Shaw Eq 36:\n\t\t\tresult = ( (2.0*u) - 1.0 ) / sqrt( 2.0 * u * v );\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\t// `df = 4` has an exact result, see Shaw Eq 38 & 39:\n\t\t\talpha = 4.0 * u * v;\n\t\t\trootAlpha = sqrt( alpha );\n\t\t\tr = 4 * cos( acos( rootAlpha ) / 3.0 ) / rootAlpha;\n\t\t\tx = sqrt( r - 4.0 );\n\t\t\tresult = ( u - 0.5 < 0.0 ) ? -x : x;\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\t// We get numeric overflow in this area:\n\t\t\tif ( u < 1.0e-150 ) {\n\t\t\t\treturn ( ( invert ) ? -1 : 1 ) * inverseStudentsTHill( df, u );\n\t\t\t}\n\t\t\t// Newton-Raphson iteration of a polynomial case, choice of seed value is taken from Shaw's online supplement:\n\t\t\ta = 4.0 * ( u - (u*u) ); // 1 - 4 * (u - 0.5f) * (u - 0.5f);\n\t\t\tb = pow( a, ONE_THIRD );\n\t\t\tp = 6.0 * ( 1.0 + ( C * ( (1.0/b) - 1.0 ) ) );\n\t\t\tdo {\n\t\t\t\tp2 = p * p;\n\t\t\t\tp4 = p2 * p2;\n\t\t\t\tp5 = p * p4;\n\t\t\t\tp0 = p;\n\n\t\t\t\t// Next term is given by Eq 41:\n\t\t\t\tp = 2.0 * ( (8.0*a*p5) - (270.0*p2) + 2187 ) /\n\t\t\t\t\t( 5.0 * ( (4.0*a*p4) - (216.0*p) - 243.0 ) );\n\t\t\t} while ( abs( (p - p0) / p ) > tolerance );\n\n\t\t\t// Use Eq 45 to extract the result:\n\t\t\tp = sqrt( p - df );\n\t\t\tresult = ( u - 0.5 < 0.0 ) ? -p : p;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif ( df > DF_THRESHOLD ) { // 2^28\n\t\t\t\tresult = erfcinv( 2.0 * u ) * SQRT2;\n\t\t\t} else if ( df < 3 ) {\n\t\t\t\t// Use a roughly linear scheme to choose between Shaw's tail series and body series:\n\t\t\t\tcrossover = 0.2742 - ( df * 0.0242143 );\n\t\t\t\tif ( u > crossover ) {\n\t\t\t\t\tresult = inverseStudentsTBodySeries( df, u );\n\t\t\t\t} else {\n\t\t\t\t\tresult = inverseStudentsTTailSeries( df, u );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Use Hill's method except in the extreme tails where we use Shaw's tail series. The crossover point is roughly exponential in -df:\n\t\t\t\tcrossover = ldexp( 1.0, round( df / -0.654 ) );\n\t\t\t\tif ( u > crossover ) {\n\t\t\t\t\tresult = inverseStudentsTHill( df, u );\n\t\t\t\t} else {\n\t\t\t\t\tresult = inverseStudentsTTailSeries( df, u );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if ( df > DF_THRESHOLD ) {\n\t\tresult = -erfcinv( 2.0 * u ) * SQRT2;\n\t} else if ( df < 3 ) {\n\t\t// Use a roughly linear scheme to choose between Shaw's tail series and body series:\n\t\tcrossover = 0.2742 - ( df * 0.0242143 );\n\t\tif ( u > crossover ) {\n\t\t\tresult = inverseStudentsTBodySeries( df, u );\n\t\t} else {\n\t\t\tresult = inverseStudentsTTailSeries( df, u );\n\t\t}\n\t} else {\n\t\t// Use Hill's method except in the extreme tails where we use Shaw's tail series. The crossover point is roughly exponential in -df:\n\t\tcrossover = ldexp( 1.0, round( df / -0.654 ) );\n\t\tif ( u > crossover ) {\n\t\t\tresult = inverseStudentsTHill( df, u );\n\t\t} else {\n\t\t\tresult = inverseStudentsTTailSeries( df, u );\n\t\t}\n\t}\n\treturn ( invert ) ? -result : result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = inverseStudentsT;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_62_0/boost/math/special_functions/detail/t_distribution_inv.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar inverseStudentsT = require( './inverse_students_t.js' );\n\n\n// MAIN //\n\n/**\n* Returns the inverse of the incomplete beta function via the Student t distribution.\n*\n* @private\n* @param {PositiveNumber} a - function parameter\n* @param {Probability} p - probability value\n* @param {Object} py - placeholder object holding one minus the returned value\n* @returns {number} function value\n*/\nfunction findIBetaInvFromTDist( a, p, py ) {\n\tvar df;\n\tvar u;\n\tvar v;\n\tvar t;\n\n\tu = p / 2.0;\n\tv = 1.0 - u;\n\tdf = a * 2.0;\n\tt = inverseStudentsT( df, u, v );\n\tif ( py ) {\n\t\tpy.value = t * t / ( df + ( t*t ) );\n\t}\n\treturn df / ( df + ( t*t ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = findIBetaInvFromTDist;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/detail/ibeta_inverse.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar evalpoly = require( './../../../../base/tools/evalpoly' );\nvar erfcinv = require( './../../../../base/special/erfcinv' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar exp = require( './../../../../base/special/exp' );\nvar SQRT2 = require( '@stdlib/constants/float64/sqrt-two' );\n\n\n// VARIABLES //\n\n// Workspaces for the polynomial coefficients:\nvar workspace = [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ];\nvar terms = [ 0.0, 0.0, 0.0, 0.0 ];\n\n\n// MAIN //\n\n/**\n* Carries out the first method by Temme (described in section 2).\n*\n* ## References\n*\n* -   Temme, N. M. 1992. \"Incomplete Laplace Integrals: Uniform Asymptotic Expansion with Application to the Incomplete Beta Function.\" _Journal of Computational and Applied Mathematics_ 41 (1–2): 1638–63. doi:[10.1016/0377-0427(92)90244-R](https://doi.org/10.1016/0377-0427(92)90244-R).\n*\n* @private\n* @param {PositiveNumber} a - function parameter\n* @param {PositiveNumber} b - function parameter\n* @param {Probability} z - function parameter\n* @returns {number} function value\n*/\nfunction temme1( a, b, z ) {\n\tvar eta0;\n\tvar eta2;\n\tvar eta;\n\tvar B2;\n\tvar B3;\n\tvar B;\n\tvar c;\n\n\t// Get the first approximation for eta from the inverse error function (Eq: 2.9 and 2.10):\n\teta0 = erfcinv( 2.0 * z );\n\teta0 /= -sqrt( a / 2.0 );\n\n\tterms[ 0 ] = eta0;\n\n\t// Calculate powers:\n\tB = b - a;\n\tB2 = B * B;\n\tB3 = B2 * B;\n\n\t// Calculate correction terms:\n\n\t// See eq following 2.15:\n\tworkspace[ 0 ] = -B * SQRT2 / 2;\n\tworkspace[ 1 ] = ( 1 - (2.0*B) ) / 8.0;\n\tworkspace[ 2 ] = -(B * SQRT2 / 48.0);\n\tworkspace[ 3 ] = -1.0 / 192.0;\n\tworkspace[ 4 ] = -B * SQRT2 / 3840.0;\n\tworkspace[ 5 ] = 0.0;\n\tworkspace[ 6 ] = 0.0;\n\tterms[ 1 ] = evalpoly( workspace, eta0 );\n\n\t// Eq Following 2.17:\n\tworkspace[ 0 ] = B * SQRT2 * ( (3.0*B) - 2.0) / 12.0;\n\tworkspace[ 1 ] = ( (20.0*B2) - (12.0*B) + 1.0 ) / 128.0;\n\tworkspace[ 2 ] = B * SQRT2 * ( (20.0*B) - 1.0) / 960.0;\n\tworkspace[ 3 ] = ( (16.0*B2) + (30.0*B) - 15.0) / 4608.0;\n\tworkspace[ 4 ] = B * SQRT2 * ( (21.0*B) + 32) / 53760.0;\n\tworkspace[ 5 ] = (-(32.0*B2) + 63.0) / 368640.0;\n\tworkspace[ 6 ] = -B * SQRT2 * ( (120.0*B) + 17.0) / 25804480.0;\n\tterms[ 2 ] = evalpoly( workspace, eta0 );\n\n\t// Eq Following 2.17:\n\tworkspace[ 0 ] = B * SQRT2 * ( (-75*B2) + (80.0*B) - 16.0) / 480.0;\n\tworkspace[ 1 ] = ( (-1080.0*B3) + (868.0*B2) - (90.0*B) - 45.0) / 9216.0;\n\tworkspace[ 2 ] = B * SQRT2 * ( (-1190.0*B2) + (84.0*B) + 373.0) / 53760.0;\n\tworkspace[ 3 ] = ( (-2240.0*B3)-(2508.0*B2)+(2100.0*B)-165.0 ) / 368640.0;\n\tworkspace[ 4 ] = 0.0;\n\tworkspace[ 5 ] = 0.0;\n\tworkspace[ 6 ] = 0.0;\n\tterms[ 3 ] = evalpoly( workspace, eta0 );\n\n\t// Bring them together to get a final estimate for eta:\n\teta = evalpoly( terms, 1.0/a );\n\n\t// Now we need to convert eta to the return value `x`, by solving the appropriate quadratic equation:\n\teta2 = eta * eta;\n\tc = -exp( -eta2 / 2.0 );\n\tif ( eta2 === 0.0 ) {\n\t\treturn 0.5;\n\t}\n\treturn ( 1.0 + ( eta * sqrt( ( 1.0+c ) / eta2 ) ) ) / 2.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = temme1;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_62_0/boost/math/special_functions/detail/ibeta_inverse.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ln = require( './../../../../base/special/ln' );\nvar MAX_VALUE = require( '@stdlib/constants/float64/max' );\n\n\n// VARIABLES //\n\nvar BIG = MAX_VALUE / 4.0;\n\n\n// MAIN //\n\n/**\n* Helper function used by root finding code to convert `eta` to `x`.\n*\n* @private\n* @param {number} t - first parameter\n* @param {number} a - second parameter\n* @returns {Function} root function\n*/\nfunction temmeRootFinder( t, a ) {\n\treturn roots;\n\n\t/**\n\t* Calculates roots.\n\t*\n\t* @private\n\t* @param {number} x - function value\n\t* @returns {Array} function roots\n\t*/\n\tfunction roots( x ) {\n\t\tvar f1;\n\t\tvar f;\n\t\tvar y;\n\n\t\ty = 1.0 - x;\n\t\tif ( y === 0.0 ) {\n\t\t\treturn [ -BIG, -BIG ];\n\t\t}\n\t\tif ( x === 0.0 ) {\n\t\t\treturn [ -BIG, -BIG ];\n\t\t}\n\t\tf = ln( x ) + ( a * ln( y ) ) + t;\n\t\tf1 = ( 1.0 / x ) - ( a / y );\n\t\treturn [ f, f1 ];\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = temmeRootFinder;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Evaluates the signum function for a double-precision floating-point number.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var sign = signum( -5.0 );\n* // returns -1.0\n*\n* @example\n* var sign = signum( 5.0 );\n* // returns 1.0\n*\n* @example\n* var sign = signum( -0.0 );\n* // returns -0.0\n*\n* @example\n* var sign = signum( 0.0 );\n* // returns 0.0\n*\n* @example\n* var sign = signum( NaN );\n* // returns NaN\n*/\nfunction signum( x ) {\n\tif ( x === 0.0 || isnan( x ) ) {\n\t\treturn x; // addresses both +-0\n\t}\n\treturn ( x < 0.0 ) ? -1.0 : 1.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = signum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the signum function for a double-precision floating-point number.\n*\n* @module @stdlib/math/base/special/signum\n*\n* @example\n* var signum = require( '@stdlib/math/base/special/signum' );\n*\n* var sign = signum( -5.0 );\n* // returns -1.0\n*\n* sign = signum( 5.0 );\n* // returns 1.0\n*\n* sign = signum( -0.0 );\n* // returns -0.0\n*\n* sign = signum( 0.0 );\n* // returns 0.0\n*\n* sign = signum( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar signum = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = signum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_62_0/boost/math/tools/roots.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar sign = require( './../../../../base/special/signum' );\nvar abs = require( './../../../../base/special/abs' );\nvar ldexp = require( './../../../../base/special/ldexp' );\nvar MAX_VALUE = require( '@stdlib/constants/float64/max' );\n\n\n// MAIN //\n\n/**\n* Performs root finding via second order Newton-Raphson iteration.\n*\n* @private\n* @param {Array} fun - two-element array of the function and its first derivative\n* @param {number} guess - initial starting value.\n* @param {number} min - minimum possible value for the result,used as initial lower bracket.\n* @param {number} max - maximum possible value for the result, used as initial upper bracket.\n* @param {PositiveInteger} digits - desired number of binary digits\n* @param {PositiveInteger} maxIter - maximum number of iterations\n* @returns {number} function value\n*/\nfunction newtonRaphsonIterate( fun, guess, min, max, digits, maxIter ) {\n\tvar f0last;\n\tvar delta1;\n\tvar delta2;\n\tvar factor;\n\tvar result;\n\tvar count;\n\tvar delta;\n\tvar res;\n\tvar f0;\n\tvar f1;\n\n\tf0 = 0.0;\n\tf0last = 0.0;\n\tresult = guess;\n\n\tfactor = ldexp( 1.0, 1.0 - digits );\n\tdelta = MAX_VALUE;\n\tdelta1 = MAX_VALUE;\n\tdelta2 = MAX_VALUE;\n\n\tcount = maxIter;\n\tdo {\n\t\tf0last = f0;\n\t\tdelta2 = delta1;\n\t\tdelta1 = delta;\n\t\tres = fun(result);\n\t\tf0 = res[ 0 ];\n\t\tf1 = res[ 1 ];\n\t\tcount -= 1;\n\t\tif ( f0 === 0.0 ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( f1 === 0.0 ) {\n\t\t\t// Oops zero derivative!!!\n\t\t\tif ( f0last === 0.0 ) {\n\t\t\t\t// Must be the first iteration, pretend that we had a previous one at either min or max:\n\t\t\t\tif ( result === min ) {\n\t\t\t\t\tguess = max;\n\t\t\t\t} else {\n\t\t\t\t\tguess = min;\n\t\t\t\t}\n\t\t\t\tf0last = fun( guess );\n\t\t\t\tdelta = guess - result;\n\t\t\t}\n\t\t\tif ( sign(f0last) * sign(f0) < 0 ) {\n\t\t\t\t// We've crossed over so move in opposite direction to last step:\n\t\t\t\tif ( delta < 0 ) {\n\t\t\t\t\tdelta = (result - min) / 2.0;\n\t\t\t\t} else {\n\t\t\t\t\tdelta = (result - max) / 2.0;\n\t\t\t\t}\n\t\t\t} else if ( delta < 0 ) {\n\t\t\t\tdelta = (result - max) / 2.0;\n\t\t\t} else {\n\t\t\t\tdelta = (result - min) / 2.0;\n\t\t\t}\n\t\t} else {\n\t\t\tdelta = f0 / f1;\n\t\t}\n\t\tif ( abs(delta * 2.0) > abs(delta2) ) {\n\t\t\t// Last two steps haven't converged, try bisection:\n\t\t\tdelta = ( delta > 0.0 ) ? (result-min) / 2.0 : (result-max) / 2.0;\n\t\t}\n\t\tguess = result;\n\t\tresult -= delta;\n\t\tif ( result <= min ) {\n\t\t\tdelta = 0.5 * (guess - min);\n\t\t\tresult = guess - delta;\n\t\t\tif ( result === min || result === max ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if ( result >= max ) {\n\t\t\tdelta = 0.5 * (guess - max);\n\t\t\tresult = guess - delta;\n\t\t\tif ( result === min || result === max ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Update brackets:\n\t\tif ( delta > 0.0 ) {\n\t\t\tmax = guess;\n\t\t} else {\n\t\t\tmin = guess;\n\t\t}\n\t}\n\twhile ( count && ( abs(result * factor) < abs(delta) ) );\n\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = newtonRaphsonIterate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 1.0;\n\t}\n\treturn 1.0 + (x * (21.0 + (x * (-69.0 + (x * 46.0)))));\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/detail/ibeta_inverse.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar evalpoly = require( './../../../../base/tools/evalpoly' );\nvar erfcinv = require( './../../../../base/special/erfcinv' );\nvar abs = require( './../../../../base/special/abs' );\nvar exp = require( './../../../../base/special/exp' );\nvar ln = require( './../../../../base/special/ln' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar sin = require( './../../../../base/special/sin' );\nvar cos = require( './../../../../base/special/cos' );\nvar temmeRootFinder = require( './root_finder.js');\nvar newtonRaphsonIterate = require( './newton_raphson.js' );\nvar polyval1 = require( './polyval_co1.js' );\nvar polyval2 = require( './polyval_co2.js' );\nvar polyval3 = require( './polyval_co3.js' );\nvar polyval4 = require( './polyval_co4.js' );\nvar polyval5 = require( './polyval_co5.js' );\nvar polyval6 = require( './polyval_co6.js' );\nvar polyval7 = require( './polyval_co7.js' );\nvar polyval8 = require( './polyval_co8.js' );\nvar polyval9 = require( './polyval_co9.js' );\nvar polyval10 = require( './polyval_co10.js' );\nvar polyval11 = require( './polyval_co11.js' );\nvar polyval12 = require( './polyval_co12.js' );\nvar polyval13 = require( './polyval_co13.js' );\n\n\n// VARIABLES //\n\n// Workspaces for polynomial coefficients:\nvar workspace = [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ];\nvar terms = [ 0.0, 0.0, 0.0, 0.0 ];\n\n\n// MAIN //\n\n/**\n* Carries out the second method by Temme (described in section 3).\n*\n* ## References\n*\n* -   Temme, N. M. 1992. \"Incomplete Laplace Integrals: Uniform Asymptotic Expansion with Application to the Incomplete Beta Function.\" _Journal of Computational and Applied Mathematics_ 41 (1–2): 1638–63. doi:[10.1016/0377-0427(92)90244-R](https://doi.org/10.1016/0377-0427(92)90244-R).\n*\n* @private\n* @param {number} z - function parameter\n* @param {number} r - function parameter\n* @param {number} theta - function parameter\n* @returns {number} function value\n*/\nfunction temme2( z, r, theta ) {\n\tvar upper;\n\tvar lower;\n\tvar alpha;\n\tvar roots;\n\tvar eta0;\n\tvar eta;\n\tvar sc7;\n\tvar sc6;\n\tvar sc5;\n\tvar sc4;\n\tvar sc3;\n\tvar sc2;\n\tvar sc;\n\tvar lu;\n\tvar s2;\n\tvar c2;\n\tvar c;\n\tvar s;\n\tvar u;\n\tvar x;\n\n\t// Get first estimate for eta, see Eq 3.9 and 3.10, but note there is a typo in Eq 3.10:\n\teta0 = erfcinv( 2.0*z ) / (-sqrt( r/2.0 ));\n\n\ts = sin( theta );\n\tc = cos( theta );\n\n\t// Now we need to perturb eta0 to get eta, which we do by evaluating the polynomial in 1/r at the bottom of page 151, to do this we first need the error terms e1, e2 e3 which we'll fill into the array \"terms\".  Since these terms are themselves polynomials, we'll need another array \"workspace\" to calculate those...\n\tterms[ 0 ] = eta0;\n\n\t// Some powers of sin(theta) cos(theta) that we'll need later:\n\ts2 = s * s;\n\tc2 = c * c;\n\tsc = s * c;\n\tsc2 = sc * sc;\n\tsc3 = sc2 * sc;\n\tsc4 = sc2 * sc2;\n\tsc5 = sc2 * sc3;\n\tsc6 = sc3 * sc3;\n\tsc7 = sc4 * sc3;\n\n\t// Calculate e1 and put it in terms[1], see the middle of page 151:\n\tworkspace[ 0 ] = ((2.0*s2) - 1.0) / ( 3.0*sc );\n\tworkspace[ 1 ] = -polyval1( s2 ) / (36.0*sc2);\n\tworkspace[ 2 ] = polyval2( s2 ) / (1620.0*sc3);\n\tworkspace[ 3 ] = polyval3( s2 ) / (6480.0*sc4);\n\tworkspace[ 4 ] = polyval4( s2 ) / (90720.0*sc5);\n\tworkspace[ 5 ] = 0.0;\n\tterms[ 1 ] = evalpoly( workspace, eta0 );\n\n\t// Now evaluate e2 and put it in terms[2]:\n\tworkspace[ 0 ] = -polyval5( s2 ) / (405.0*sc3);\n\tworkspace[ 1 ] = polyval6( s2 ) / (2592.0*sc4);\n\tworkspace[ 2 ] = -polyval7( s2 ) / (204120.0*sc5);\n\tworkspace[ 3 ] = -polyval8( s2 ) / (2099520.0*sc6);\n\tworkspace[ 4 ] = 0.0;\n\tworkspace[ 5 ] = 0.0;\n\tterms[ 2 ] = evalpoly( workspace, eta0 );\n\n\t// And e3, and put it in terms[3]:\n\tworkspace[ 0 ] = polyval9( s2 ) / (102060.0*sc5);\n\tworkspace[ 1 ] = -polyval10( s2 ) / (20995200.0*sc6);\n\tworkspace[ 2 ] = polyval11( s2 ) / (36741600.0*sc7);\n\tworkspace[ 3 ] = 0.0;\n\tworkspace[ 4 ] = 0.0;\n\tworkspace[ 5 ] = 0.0;\n\tterms[ 3 ] = evalpoly( workspace, eta0 );\n\n\t// Bring the correction terms together to evaluate eta; this is the last equation on page 151:\n\teta = evalpoly( terms, 1.0/r );\n\n\t// Now that we have eta we need to back solve for x, we seek the value of x that gives eta in Eq 3.2. The two methods used are described in section 5. Begin by defining a few variables we'll need later:\n\talpha = c / s;\n\talpha *= alpha;\n\tlu = ( -( eta*eta )/( 2.0*s2 ) ) + ln(s2) + ( c2*ln(c2)/s2 );\n\n\t// Temme doesn't specify what value to switch on here, but this seems to work pretty well:\n\tif ( abs(eta) < 0.7 ) {\n\t\t// Small eta use the expansion Temme gives in the second equation of section 5, it's a polynomial in eta:\n\t\tworkspace[ 0 ] = s2;\n\t\tworkspace[ 1 ] = sc;\n\t\tworkspace[ 2 ] = (1.0-(2.0*s2)) / 3.0;\n\t\tworkspace[ 3 ] = polyval12( s2 ) / ( 36.0*sc );\n\t\tworkspace[ 4 ] = polyval13( s2 ) / ( 270.0*sc2 );\n\t\tworkspace[ 5 ] = 0.0;\n\t\tx = evalpoly( workspace, eta );\n\t} else {\n\t\t// If eta is large we need to solve Eq 3.2 more directly, begin by getting an initial approximation for x from the last equation on page 155, this is a polynomial in u:\n\t\tu = exp( lu );\n\t\tworkspace[ 0 ] = u;\n\t\tworkspace[ 1 ] = alpha;\n\t\tworkspace[ 2 ] = 0.0;\n\t\tworkspace[ 3 ] = 3.0 * alpha * ((3.0*alpha)+1.0) / 6.0;\n\t\tworkspace[ 4 ] = 4.0 * alpha * ((4.0*alpha)+1.0) * ((4.0*alpha)+2.0) / 24.0; // eslint-disable-line max-len\n\t\tworkspace[ 5 ] = 5.0 * alpha * ((5.0*alpha)+1.0) * ((5.0*alpha)+2.0) * ((5.0*alpha)+3.0) / 120.0; // eslint-disable-line max-len\n\t\tx = evalpoly( workspace, u );\n\n\t\t// At this point we may or may not have the right answer, Eq-3.2 has two solutions for x for any given eta, however the mapping in 3.2 is 1:1 with the sign of eta and x-sin^2(theta) being the same. So we can check if we have the right root of 3.2, and if not switch x for 1-x.  This transformation is motivated by the fact that the distribution is *almost* symmetric so 1-x will be in the right ball park for the solution:\n\t\tif ( (x-s2)*eta < 0.0 ) {\n\t\t\tx = 1.0 - x;\n\t\t}\n\t}\n\t// The final step is a few Newton-Raphson iterations to clean up our approximation for x, this is pretty cheap in general, and very cheap compared to an incomplete beta evaluation. The limits set on x come from the observation that the sign of eta and x-sin^2(theta) are the same.\n\tif ( eta < 0.0 ) {\n\t\tlower = 0.0;\n\t\tupper = s2;\n\t} else {\n\t\tlower = s2;\n\t\tupper = 1.0;\n\t}\n\t// If our initial approximation is out of bounds then bisect:\n\tif ( x < lower || x > upper ) {\n\t\tx = (lower+upper) / 2.0;\n\t}\n\troots = temmeRootFinder( -lu, alpha );\n\n\t// And iterate:\n\tx = newtonRaphsonIterate( roots, x, lower, upper, 32, 100 );\n\treturn x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = temme2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -1.0;\n\t}\n\treturn -1.0 + (x * (-5.0 + (x * 5.0)));\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 1.0;\n\t}\n\treturn 1.0 + (x * (21.0 + (x * (-69.0 + (x * 46.0)))));\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 7.0;\n\t}\n\treturn 7.0 + (x * (-2.0 + (x * (33.0 + (x * (-62.0 + (x * 31.0)))))));\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 25.0;\n\t}\n\treturn 25.0 + (x * (-52.0 + (x * (-17.0 + (x * (88.0 + (x * (-115.0 + (x * 46.0))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 7.0;\n\t}\n\treturn 7.0 + (x * (12.0 + (x * (-78.0 + (x * 52.0)))));\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -7.0;\n\t}\n\treturn -7.0 + (x * (2.0 + (x * (183.0 + (x * (-370.0 + (x * 185.0)))))));\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -533.0;\n\t}\n\treturn -533.0 + (x * (776.0 + (x * (-1835.0 + (x * (10240.0 + (x * (-13525.0 + (x * 5410.0))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -1579.0;\n\t}\n\treturn -1579.0 + (x * (3747.0 + (x * (-3372.0 + (x * (-15821.0 + (x * (45588.0 + (x * (-45213.0 + (x * 15071.0))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 449.0;\n\t}\n\treturn 449.0 + (x * (-1259.0 + (x * (-769.0 + (x * (6686.0 + (x * (-9260.0 + (x * 3704.0))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 63149.0;\n\t}\n\treturn 63149.0 + (x * (-151557.0 + (x * (140052.0 + (x * (-727469.0 + (x * (2239932.0 + (x * (-2251437.0 + (x * 750479.0))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 29233.0;\n\t}\n\treturn 29233.0 + (x * (-78755.0 + (x * (105222.0 + (x * (146879.0 + (x * (-1602610.0 + (x * (3195183.0 + (x * (-2554139.0 + (x * 729754.0))))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 1.0;\n\t}\n\treturn 1.0 + (x * (-13.0 + (x * 13.0)));\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nvar gammainc = require( './../../../../base/special/gammainc' );\nvar abs = require( './../../../../base/special/abs' );\nvar exp = require( './../../../../base/special/exp' );\nvar ln = require( './../../../../base/special/ln' );\nvar MAX_FLOAT32 = require( '@stdlib/constants/float32/max' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'gammaincinv:higher_newton' );\n\n\n// MAIN //\n\n/**\n* Implementation of the high order Newton-like method.\n*\n* @private\n* @param {number} x0 - initial value\n* @param {number} a - scale parameter\n* @param {number} m - indicator\n* @param {Probability} p - probability value\n* @param {Probability} q - probability value\n* @param {number} lgama - logarithm of scale parameter\n* @param {number} invfp - one over `fp`\n* @param {boolean} pcase - boolean indicating whether p < 0.5\n* @returns {number} function value of the inverse\n*/\nfunction higherNewton( x0, a, m, p, q, lgama, invfp, pcase ) {\n\tvar dlnr;\n\tvar xini;\n\tvar ck0;\n\tvar ck1;\n\tvar ck2;\n\tvar a2;\n\tvar x2;\n\tvar px;\n\tvar qx;\n\tvar xr;\n\tvar t;\n\tvar n;\n\tvar r;\n\tvar x;\n\n\tx = x0;\n\tt = 1;\n\tn = 1;\n\ta2 = a * a;\n\txini = x0;\n\tdo {\n\t\tx = x0;\n\t\tx2 = x * x;\n\t\tif ( m === 0 ) {\n\t\t\tdlnr = ( ( 1.0-a ) * ln( x ) ) + x + lgama;\n\t\t\tif ( dlnr > ln( MAX_FLOAT32 ) ) {\n\t\t\t\tdebug( 'Warning: overflow problems in one or more steps of the computation. The initial approximation to the root is returned.' );\n\t\t\t\treturn xini;\n\t\t\t}\n\t\t\tr = exp( dlnr );\n\t\t} else {\n\t\t\tr = -invfp * x;\n\t\t}\n\t\tif ( pcase ) {\n\t\t\t// Call: gammainc( x, s[, regularized = true ][, upper = false ] )\n\t\t\tpx = gammainc( x, a, true, false );\n\t\t\tck0 = -r * ( px - p );\n\t\t} else {\n\t\t\t// Call: gammainc( x, s[, regularized = true ][, upper = true ] )\n\t\t\tqx = gammainc( x, a, true, true );\n\t\t\tck0 = r * ( qx - q );\n\t\t}\n\t\tr = ck0;\n\t\tif ( ( p > 1e-120 ) || ( n > 1 ) ) {\n\t\t\tck1 = 0.5 * ( x - a + 1.0 ) / x;\n\t\t\tck2 = ( (2*x2) - (4*x*a) + (4*x) + (2*a2) - (3*a) + 1 ) / x2;\n\t\t\tck2 /= 6.0;\n\t\t\tx0 = x + ( r * ( 1.0 + ( r * ( ck1 + (r*ck2) ) ) ) );\n\t\t} else {\n\t\t\tx0 = x + r;\n\t\t}\n\t\tt = abs( ( x/x0 ) - 1.0 );\n\t\tn += 1;\n\t\tx = x0;\n\t\tif ( x < 0 ) {\n\t\t\tx = xini;\n\t\t\tn = 100;\n\t\t}\n\t} while ( ( ( t > 2e-14 ) && ( n < 35 ) ) );\n\tif ( ( t > 2e-14 ) || ( n > 99 ) ) {\n\t\tdebug( 'Warning: the number of iterations in the Newton method reached the upper limit N=35. The last value obtained for the root is given as output.' );\n\t}\n\txr = x || 0;\n\treturn xr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = higherNewton;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 1.0;\n\t}\n\treturn 1.0 + (x * (1.0 + (x * (0.3333333333333333 + (x * (0.027777777777777776 + (x * (-0.003703703703703704 + (x * (0.0002314814814814815 + (x * 0.00005878894767783657))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( './../../../../base/special/abs' );\nvar exp = require( './../../../../base/special/exp' );\nvar ln = require( './../../../../base/special/ln' );\nvar evalpoly = require( './../../../../base/tools/evalpoly' );\nvar polyvalAK1 = require( './polyval_ak1.js' );\nvar polyvalAK2 = require( './polyval_ak2.js' );\n\n\n// VARIABLES //\n\nvar THRESHOLD = 1.0e-8;\nvar ONEO12 = 0.0833333333333333333333333333333;\nvar ONEO120 = 0.00833333333333333333333333333333;\n\n// Polynomial coefficient workspace:\nvar AK = [ 1.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Returns the positive number satisfying \\\\( \\eta^2/2=\\lambda-1-\\ln(\\lambda) \\\\) with \\\\( \\operatorname{sign}(\\lambda-1)=\\operatorname{sign}(\\eta) \\\\).\n*\n* @private\n* @param {number} eta - eta value\n* @returns {number} value satisfying equation\n*/\nfunction lambdaeta( eta ) {\n\tvar L2;\n\tvar L3;\n\tvar L4;\n\tvar L5;\n\tvar la;\n\tvar L;\n\tvar q;\n\tvar r;\n\tvar s;\n\n\ts = eta * eta * 0.5;\n\tif ( eta === 0.0 ) {\n\t\tla = 0.0;\n\t}\n\telse if ( eta < -1.0 ) {\n\t\tr = exp( -1.0 - s );\n\t\tla = polyvalAK1( r );\n\t}\n\telse if ( eta < 1.0 ) {\n\t\tr = eta;\n\t\tla = polyvalAK2( r );\n\t}\n\telse {\n\t\tr = 11.0 + s;\n\t\tL = ln( r );\n\t\tla = r + L;\n\t\tr = 1.0 / r;\n\t\tL2 = L * L;\n\t\tL3 = L2 * L;\n\t\tL4 = L3 * L;\n\t\tL5 = L4 * L;\n\t\tAK[ 1 ] = ( 2.0-L ) * 0.5;\n\t\tAK[ 2 ] = ( ( -9.0*L ) + 6.0 + ( 2.0*L2 ) ) / 6.0;\n\t\tAK[ 3 ] = -( (3*L3)+ (36*L) - (22*L2) - 12 ) * ONEO12;\n\t\tAK[ 4 ] = ( 60.0 + (350.0*L2) - (300.0*L) - (125.0*L3) + (12.0*L4) ) / 60.0; // eslint-disable-line max-len\n\t\tAK[ 5 ] = -(-120 - (274*L4) + (900*L) - (1700*L2) + (1125*L3) + (20*L5)) * ONEO120; // eslint-disable-line max-len\n\t\tla += ( L * r * evalpoly( AK, r ) );\n\t}\n\tr = 1.0;\n\tif (\n\t\t( eta > -3.5 && eta < -0.03 ) ||\n\t\t( eta > 0.03 && eta < 40.0 )\n\t) {\n\t\tr = 1.0;\n\t\tq = la;\n\t\tdo {\n\t\t\tla = q * ( s+ln(q) ) / ( q-1.0 );\n\t\t\tr = abs( ( q/la ) - 1.0 );\n\t\t\tq = la;\n\t\t} while ( r > THRESHOLD );\n\t}\n\treturn la;\n}\n\n\n// EXPORTS //\n\nmodule.exports = lambdaeta;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.0;\n\t}\n\treturn 0.0 + (x * (1.0 + (x * (1.0 + (x * (1.5 + (x * (2.6666666666666665 + (x * (5.208333333333333 + (x * 10.8))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Natural logarithm of the square root of `2π`.\n*\n* @module @stdlib/constants/float64/ln-sqrt-two-pi\n* @type {number}\n*\n* @example\n* var LN_SQRT_TWO_PI = require( '@stdlib/constants/float64/ln-sqrt-two-pi' );\n* // returns 0.9189385332046728\n*/\n\n\n// MAIN //\n\n/**\n* Natural logarithm of the square root of `2π`.\n*\n* ```tex\n* \\ln \\sqrt{2\\pi}\n* ```\n*\n* @constant\n* @type {number}\n* @default 0.9189385332046728\n*/\nvar LN_SQRT_TWO_PI = 9.18938533204672741780329736405617639861397473637783412817151540482765695927260397694743298635954197622005646625e-01; // eslint-disable-line max-len\n\n\n// EXPORTS //\n\nmodule.exports = LN_SQRT_TWO_PI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\n// Chebyshev polynomial coefficients...\nvar A = [\n\t1.996379051590076518221,\n\t-0.17971032528832887213e-2,\n\t0.131292857963846713e-4,\n\t-0.2340875228178749e-6,\n\t0.72291210671127e-8,\n\t-0.3280997607821e-9,\n\t0.198750709010e-10,\n\t-0.15092141830e-11,\n\t0.1375340084e-12,\n\t-0.145728923e-13,\n\t0.17532367e-14,\n\t-0.2351465e-15,\n\t0.346551e-16,\n\t-0.55471e-17,\n\t0.9548e-18,\n\t-0.1748e-18,\n\t0.332e-19,\n\t-0.58e-20\n];\n\n\n// MAIN //\n\n/**\n* Computes the sum of a Chebyshev polynomial.\n*\n* @private\n* @param {PositiveInteger} n - degree of polynomial\n* @param {number} t - input value\n* @returns {number} Chebyshev sum\n*/\nfunction chepolsum( n, t ) {\n\tvar tt;\n\tvar u0;\n\tvar u1;\n\tvar u2;\n\tvar k;\n\n\tu0 = 0.0;\n\tu1 = 0.0;\n\ttt = t + t;\n\tk = n;\n\tdo {\n\t\tu2 = u1;\n\t\tu1 = u0;\n\t\tu0 = ( tt*u1 ) - u2 + A[ k ];\n\t\tk -= 1;\n\t} while ( k >= 0 );\n\treturn ( u0-u2 ) / 2.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = chepolsum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.08333333333333333;\n\t}\n\treturn 0.08333333333333333 + (x * (-0.002777777777777778 + (x * (0.0007936507936507937 + (x * -0.0005952380952380953))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gammaln = require( './../../../../base/special/gammaln' );\nvar ln = require( './../../../../base/special/ln' );\nvar LN_SQRT_TWO_PI = require( '@stdlib/constants/float64/ln-sqrt-two-pi' );\nvar SMALLEST_FLOAT32 = require( '@stdlib/constants/float32/smallest-normal' );\nvar MAX_FLOAT32 = require( '@stdlib/constants/float32/max' );\nvar chepolsum = require( './chepolsum.js' );\nvar polyvalC = require( './polyval_c.js' );\nvar polyvalD = require( './polyval_d.js' );\n\n\n// VARIABLES //\n\nvar C6 = 0.30865217988013567769;\n\n\n// MAIN //\n\n/**\n* Computes the Stirling series corresponding to asymptotic series for the logarithm of the gamma function.\n*\n* ```tex\n* \\frac{1}{12x}-\\frac{1}{360x^3}\\ldots; x \\ge 3\n* ```\n*\n* @private\n* @param {number} x - input value\n* @returns {number} function value\n*/\nfunction stirling( x ) {\n\tvar z;\n\tif ( x < SMALLEST_FLOAT32 ) {\n\t\treturn MAX_FLOAT32;\n\t}\n\tif ( x < 1.0 ) {\n\t\treturn gammaln( x+1.0 ) - ( (x+0.5) * ln(x) ) + x - LN_SQRT_TWO_PI;\n\t}\n\tif ( x < 2.0 ) {\n\t\treturn gammaln( x ) - ( (x-0.5) * ln(x) ) + x - LN_SQRT_TWO_PI;\n\t}\n\tif ( x < 3.0 ) {\n\t\treturn gammaln( x-1.0 ) - ( (x-0.5) * ln(x) ) + x - LN_SQRT_TWO_PI + ln( x-1.0 ); // eslint-disable-line max-len\n\t}\n\tif ( x < 12.0 ) {\n\t\tz = ( 18.0/( x*x ) ) - 1.0;\n\t\treturn chepolsum( 17, z ) / ( 12.0*x );\n\t}\n\tz = 1.0 / ( x * x );\n\tif ( x < 1000.0 ) {\n\t\treturn polyvalC( z ) / ( C6+z ) / x;\n\t}\n\treturn polyvalD( z ) / x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = stirling;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.025721014990011306;\n\t}\n\treturn 0.025721014990011306 + (x * (0.08247596616699963 + (x * (-0.0025328157302663564 + (x * (0.0006099292666946337 + (x * (-0.00033543297638406 + (x * 0.000250505279903))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar exp = require( './../../../../base/special/exp' );\nvar gamma = require( './../../../../base/special/gamma' );\nvar ln = require( './../../../../base/special/ln' );\nvar FLOAT32_MAX = require( '@stdlib/constants/float32/max' );\nvar SQRT_TWO_PI = require( '@stdlib/constants/float64/sqrt-two-pi' );\nvar stirling = require( './stirling.js' );\n\n\n// MAIN //\n\n/**\n* Computes the regulated gamma function.\n*\n* @private\n* @param {number} x - input value\n* @returns {number} function value\n*/\nfunction gamstar( x ) {\n\tif ( x >= 3.0 ) {\n\t\treturn exp( stirling(x) );\n\t}\n\tif ( x > 0.0 ) {\n\t\treturn gamma(x) / ( exp( -x + ( ( x-0.5 ) * ln(x) ) ) * SQRT_TWO_PI );\n\t}\n\t// Case: x <= 0.0\n\treturn FLOAT32_MAX;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gamstar;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.3333333333438;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.3333333333438 + (x * (-0.2070740359969 + (x * (-0.05041806657154 + (x * (-0.004923635739372 + (x * -0.00004293658292782))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (0.7045554412463 + (x * (0.2118190062224 + (x * (0.03048648397436 + (x * 0.001605037988091))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = -0.00004293658292782 + (x * (-0.004923635739372 + (x * (-0.05041806657154 + (x * (-0.2070740359969 + (x * -0.3333333333438))))))); // eslint-disable-line max-len\n\t\ts2 = 0.001605037988091 + (x * (0.03048648397436 + (x * (0.2118190062224 + (x * (0.7045554412463 + (x * 1.0))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( './../../../../base/special/abs' );\nvar ln = require( './../../../../base/special/ln' );\nvar lambdaeta = require( './lambdaeta.js' );\nvar rateval = require( './rational_ak0bk0.js' );\n\n\n// MAIN //\n\n/**\n* Evaluates the `eps1` function.\n*\n* @private\n* @param {number} eta - eta value\n* @returns {number} function value\n*/\nfunction eps1( eta ) {\n\tvar la;\n\tif ( abs( eta ) < 1.0 ) {\n\t\treturn rateval( eta );\n\t}\n\tla = lambdaeta( eta );\n\treturn ln( eta / ( la - 1.0 ) ) / eta;\n}\n\n\n// EXPORTS //\n\nmodule.exports = eps1;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn 0.99994466948;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 0.99994466948 + (x * (104.649839762 + (x * (857.204033806 + (x * (731.901559577 + (x * 45.5174411671))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (104.526456943 + (x * (823.313447808 + (x * (3119.93802124 + (x * 3970.03311219))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 45.5174411671 + (x * (731.901559577 + (x * (857.204033806 + (x * (104.649839762 + (x * 0.99994466948))))))); // eslint-disable-line max-len\n\t\ts2 = 3970.03311219 + (x * (3119.93802124 + (x * (823.313447808 + (x * (104.526456943 + (x * 1.0))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ln = require( './../../../../base/special/ln' );\nvar rateval1 = require( './rational_ak1bk1.js' );\nvar rateval2 = require( './rational_ak2bk2.js' );\nvar rateval3 = require( './rational_ak3bk3.js' );\n\n\n// MAIN //\n\n/**\n* Evaluates the `eps2` function.\n*\n* @private\n* @param {number} eta - eta value\n* @returns {number} function value\n*/\nfunction eps2( eta ) {\n\tvar lnmeta;\n\tvar x;\n\tif ( eta < -5.0 ) {\n\t\tx = eta * eta;\n\t\tlnmeta = ln( -eta );\n\t\treturn ( 12.0 - x - ( 6.0*( lnmeta*lnmeta ) ) ) / ( 12.0*x*eta );\n\t}\n\tif ( eta < -2.0 ) {\n\t\treturn rateval1( eta );\n\t}\n\tif ( eta < 2.0 ) {\n\t\treturn rateval2( eta );\n\t}\n\tif ( eta < 1000.0 ) {\n\t\tx = 1.0 / eta;\n\t\treturn rateval3( eta ) / ( -12.0*eta );\n\t}\n\treturn -1.0 / ( 12.0 * eta );\n}\n\n\n// EXPORTS //\n\nmodule.exports = eps2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.0172847633523;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.0172847633523 + (x * (-0.0159372646475 + (x * (-0.00464910887221 + (x * (-0.00060683488776 + (x * -0.00000614830384279))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (0.764050615669 + (x * (0.297143406325 + (x * (0.0579490176079 + (x * 0.00574558524851))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = -0.00000614830384279 + (x * (-0.00060683488776 + (x * (-0.00464910887221 + (x * (-0.0159372646475 + (x * -0.0172847633523))))))); // eslint-disable-line max-len\n\t\ts2 = 0.00574558524851 + (x * (0.0579490176079 + (x * (0.297143406325 + (x * (0.764050615669 + (x * 1.0))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.0172839517431;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.0172839517431 + (x * (-0.0146362417966 + (x * (-0.00357406772616 + (x * (-0.000391032032692 + (x * 0.00000249634036069))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (0.690560400696 + (x * (0.249962384741 + (x * (0.0443843438769 + (x * 0.00424073217211))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.00000249634036069 + (x * (-0.000391032032692 + (x * (-0.00357406772616 + (x * (-0.0146362417966 + (x * -0.0172839517431))))))); // eslint-disable-line max-len\n\t\ts2 = 0.00424073217211 + (x * (0.0443843438769 + (x * (0.249962384741 + (x * (0.690560400696 + (x * 1.0))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.000145727889667;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.000145727889667 + (x * (-0.290806748131 + (x * (-13.308504545 + (x * (199.722374056 + (x * -11.4311378756))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (139.612587808 + (x * (2189.01116348 + (x * (7115.24019009 + (x * 45574.6081453))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = -11.4311378756 + (x * (199.722374056 + (x * (-13.308504545 + (x * (-0.290806748131 + (x * -0.000145727889667))))))); // eslint-disable-line max-len\n\t\ts2 = 45574.6081453 + (x * (7115.24019009 + (x * (2189.01116348 + (x * (139.612587808 + (x * 1.0))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ln = require( './../../../../base/special/ln' );\nvar rational1 = require( './rational_ak4bk4.js' );\nvar rational2 = require( './rational_ak5bk5.js' );\nvar rational3 = require( './rational_ak6bk6.js' );\nvar rational4 = require( './rational_ak7bk7.js' );\nvar rational5 = require( './rational_ak8bk8.js' );\n\n\n// MAIN //\n\n/**\n* Evaluates the `eps3` function.\n*\n* @private\n* @param {number} eta - eta value\n* @returns {number} function value\n*/\nfunction eps3( eta ) {\n\tvar x;\n\tvar y;\n\n\tif ( eta < -8.0 ) {\n\t\tx = eta * eta;\n\t\ty = ln( -eta ) / eta;\n\t\treturn ( -30.0 + ( eta*y*( (6.0*x*y*y)-12.0+x ) ) ) / ( 12.0*eta*x*x );\n\t}\n\tif ( eta < -4.0 ) {\n\t\treturn rational1( eta ) / ( eta*eta );\n\t}\n\tif ( eta < -2.0 ) {\n\t\treturn rational2( eta );\n\t}\n\tif ( eta < 2.0 ) {\n\t\treturn rational3( eta );\n\t}\n\tif ( eta < 10.0 ) {\n\t\tx = 1.0 / eta;\n\t\treturn rational4( x ) / ( eta*eta );\n\t}\n\tif ( eta < 100.0 ) {\n\t\tx = 1.0 / eta;\n\t\treturn rational5( x ) / ( eta*eta );\n\t}\n\treturn -ln( eta ) / ( 12.0*eta*eta*eta );\n}\n\n\n// EXPORTS //\n\nmodule.exports = eps3;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn 0.0495346498136;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 0.0495346498136 + (x * (0.0299521337141 + (x * (0.00688296911516 + (x * (0.000512634846317 + (x * -0.0000201411722031))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (0.759803615283 + (x * (0.261547111595 + (x * (0.0464854522477 + (x * 0.00403751193496))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = -0.0000201411722031 + (x * (0.000512634846317 + (x * (0.00688296911516 + (x * (0.0299521337141 + (x * 0.0495346498136))))))); // eslint-disable-line max-len\n\t\ts2 = 0.00403751193496 + (x * (0.0464854522477 + (x * (0.261547111595 + (x * (0.759803615283 + (x * 1.0))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn 0.00452313583942;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 0.00452313583942 + (x * (0.00120744920113 + (x * (-0.0000789724156582 + (x * (-0.0000504476066942 + (x * -0.00000535770949796))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (0.912203410349 + (x * (0.405368773071 + (x * (0.0901638932349 + (x * 0.00948935714996))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = -0.00000535770949796 + (x * (-0.0000504476066942 + (x * (-0.0000789724156582 + (x * (0.00120744920113 + (x * 0.00452313583942))))))); // eslint-disable-line max-len\n\t\ts2 = 0.00948935714996 + (x * (0.0901638932349 + (x * (0.405368773071 + (x * (0.912203410349 + (x * 1.0))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn 0.00439937562904;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 0.00439937562904 + (x * (0.000487225670639 + (x * (-0.000128470657374 + (x * (0.00000529110969589 + (x * 1.5716677175e-7))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (0.794435257415 + (x * (0.333094721709 + (x * (0.0703527806143 + (x * 0.00806110846078))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 1.5716677175e-7 + (x * (0.00000529110969589 + (x * (-0.000128470657374 + (x * (0.000487225670639 + (x * 0.00439937562904))))))); // eslint-disable-line max-len\n\t\ts2 = 0.00806110846078 + (x * (0.0703527806143 + (x * (0.333094721709 + (x * (0.794435257415 + (x * 1.0))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.0011481191232;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.0011481191232 + (x * (-0.112850923276 + (x * (1.51623048511 + (x * (-0.218472031183 + (x * 0.0730002451555))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (14.2482206905 + (x * (69.7360396285 + (x * (218.938950816 + (x * 277.067027185))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.0730002451555 + (x * (-0.218472031183 + (x * (1.51623048511 + (x * (-0.112850923276 + (x * -0.0011481191232))))))); // eslint-disable-line max-len\n\t\ts2 = 277.067027185 + (x * (218.938950816 + (x * (69.7360396285 + (x * (14.2482206905 + (x * 1.0))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable max-statements */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nvar evalpoly = require( './../../../../base/tools/evalpoly' );\nvar gammaln = require( './../../../../base/special/gammaln' );\nvar erfcinv = require( './../../../../base/special/erfcinv' );\nvar gamma = require( './../../../../base/special/gamma' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar abs = require( './../../../../base/special/abs' );\nvar exp = require( './../../../../base/special/exp' );\nvar min = require( './../../../../base/special/min' );\nvar pow = require( './../../../../base/special/pow' );\nvar ln = require( './../../../../base/special/ln' );\nvar SQRT_TWO_PI = require( '@stdlib/constants/float64/sqrt-two-pi' );\nvar MAX_FLOAT32 = require( '@stdlib/constants/float32/max' );\nvar TWO_PI = require( '@stdlib/constants/float64/two-pi' );\nvar higherNewton = require( './higher_newton.js' );\nvar lambdaeta = require( './lambdaeta.js' );\nvar gamstar = require( './gamstar.js' );\nvar eps1 = require( './eps1.js' );\nvar eps2 = require( './eps2.js' );\nvar eps3 = require( './eps3.js' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'gammaincinv:compute' );\nvar HALF = 0.5;\nvar ONEO3 = 0.333333333333333333333333333333;\nvar ONEO4 = 0.25;\nvar ONEO5 = 0.2;\nvar ONEO6 = 0.166666666666666666666666666667;\nvar ONEO12 = 0.0833333333333333333333333333333;\nvar ONEO24 = 0.0416666666666666666666666666667;\n\n// Coefficient workspace:\nvar CK = [ 0.0, 0.0, 0.0, 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Computes `x` in the equations `P(a,xr) = p` and `Q(a,xr) = q`, where `a` is a positive parameter and `p` and `q` satisfy `p+q = 1`.\n*\n* ## Notes\n*\n* -   The equation is inverted with `min(p,q)`.\n*\n* @private\n* @param {number} a - scale value of incomplete gamma function\n* @param {Probability} p - probability value\n* @param {Probability} q - probability value\n* @returns {number} solution of the equations `P(a,xr) = p` and `Q(a,xr) = q` where `a` is a positive parameter\n*/\nfunction compute( a, p, q ) {\n\tvar ap1inv;\n\tvar invfp;\n\tvar lgama;\n\tvar pcase;\n\tvar porq;\n\tvar ainv;\n\tvar logr;\n\tvar ap22;\n\tvar ap14;\n\tvar ap13;\n\tvar ap12;\n\tvar vgam;\n\tvar vmin;\n\tvar xini;\n\tvar ap1;\n\tvar ap2;\n\tvar ap3;\n\tvar eta;\n\tvar p6;\n\tvar p5;\n\tvar x0;\n\tvar a2;\n\tvar L2;\n\tvar L3;\n\tvar L4;\n\tvar b2;\n\tvar b3;\n\tvar p3;\n\tvar a4;\n\tvar fp;\n\tvar p4;\n\tvar p2;\n\tvar a3;\n\tvar xr;\n\tvar ck;\n\tvar b;\n\tvar L;\n\tvar i;\n\tvar k;\n\tvar m;\n\tvar r;\n\tvar s;\n\tvar t;\n\tvar y;\n\n\tif ( p < HALF ) {\n\t\tpcase = true;\n\t\tporq = p;\n\t\ts = -1.0;\n\t} else {\n\t\tpcase = false;\n\t\tporq = q;\n\t\ts = 1.0;\n\t}\n\tk = 0;\n\tif ( abs( a-1.0 ) < 1.0e-4 ) {\n\t\tm = 0;\n\t\tif ( pcase ) {\n\t\t\tif ( p < 1.0e-3 ) {\n\t\t\t\tp2 = p * p;\n\t\t\t\tp3 = p2 * p;\n\t\t\t\tp4 = p3 * p;\n\t\t\t\tp5 = p4 * p;\n\t\t\t\tp6 = p5 * p;\n\t\t\t\tx0 = p + ( p2*HALF ) + ( p3*(ONEO3) ) + ( p4*ONEO4 ) + ( p5*ONEO5 ) + ( p6*(ONEO6) ); // eslint-disable-line max-len\n\t\t\t} else {\n\t\t\t\tx0 = -ln( 1.0-p );\n\t\t\t}\n\t\t} else {\n\t\t\tx0 = -ln( q );\n\t\t}\n\t\tif ( a === 1.0 ) {\n\t\t\tk = 2;\n\t\t\txr = x0;\n\t\t} else {\n\t\t\tlgama = gammaln( a );\n\t\t\tk = 1;\n\t\t}\n\t}\n\tif ( q < 1.0e-30 && a < HALF ) {\n\t\tm = 0;\n\t\tx0 = -ln( q*gamma(a) ) + ( ( a-1.0 ) * ln( -ln( q*gamma(a) ) ));\n\t\tk = 1;\n\t\tlgama = gammaln( a );\n\t}\n\tif ( a > 1.0 && a < 500.0 && p < 1.0e-80 ) {\n\t\tm = 0;\n\t\tainv = 1.0 / a;\n\t\tap1inv = 1.0 / ( a+1.0 );\n\t\tx0 = ( gammaln( a+1.0 ) + ln( p ) ) * ainv;\n\t\tx0 = exp( x0 );\n\t\txini = x0;\n\t\tfor ( i = 0; i < 10; i++ ) {\n\t\t\tx0 = xini * exp( x0*ainv ) * pow( 1.0-( x0*ap1inv ), ainv );\n\t\t}\n\t\tk = 1;\n\t\tlgama = gammaln( a );\n\t}\n\n\tlogr = (1.0/a) * ( ln(p) + gammaln( a+1.0 ) );\n\tif ( ( logr < ln( ONEO5 * ( 1.0+a ) ) ) && ( k === 0 ) ) {\n\t\tr = exp( logr );\n\t\tm = 0;\n\t\ta2 = a * a;\n\t\ta3 = a2 * a;\n\t\ta4 = a3 * a;\n\t\tap1 = a + 1.0;\n\t\tap12 = ap1 * ap1;\n\t\tap13 = ap1 * ap12;\n\t\tap14 = ap12 * ap12;\n\t\tap2 = a + 2.0;\n\t\tap22 = ap2 * ap2;\n\t\tap3 = a + 3.0;\n\t\tCK[ 0 ] = 1.0;\n\t\tCK[ 1 ] = 1.0 / ap1;\n\t\tCK[ 2 ] = HALF * ( ( 3.0*a ) + 5.0 ) / ( ap12*ap2 );\n\t\tCK[ 3 ] = ONEO3 * ( 31.0 + (8.0*a2) + (33.0*a) ) / ( ap13*ap2*ap3 );\n\t\tCK[ 4 ] = ONEO24 * ( 2888.0 + (1179.0*a3) + (125.0*a4) + (3971.0*a2) + (5661.0*a) ) / ( ap14*ap22*ap3*( a+4.0 ) ); // eslint-disable-line max-len\n\t\tx0 = r * evalpoly( CK, r );\n\t\tlgama = gammaln( a );\n\t\tk = 1;\n\t}\n\tif ( ( a < 10.0 ) && ( k === 0 ) ) {\n\t\tvgam = sqrt( a ) / ( gamstar(a)*SQRT_TWO_PI );\n\t\tvmin = min( 0.02, vgam );\n\t\tif ( q < vmin ) {\n\t\t\tm = 0;\n\t\t\tb = 1.0 - a;\n\t\t\tb2 = b * b;\n\t\t\tb3 = b2 * b;\n\t\t\teta = sqrt( -2.0/a * ln( q/vgam ) );\n\t\t\tx0 = a * lambdaeta( eta );\n\t\t\tL = ln( x0 );\n\t\t\tif ( x0 > 5.0 ) {\n\t\t\t\tL2 = L * L;\n\t\t\t\tL3 = L2 * L;\n\t\t\t\tL4 = L3 * L;\n\t\t\t\tr = 1.0 / x0;\n\t\t\t\tCK[ 0 ] = L - 1.0;\n\t\t\t\tCK[ 1 ] = ( (3.0*b) - (2.0*b*L) + L2 - ( 2.0*L ) + 2.0 ) * HALF;\n\t\t\t\tCK[ 2 ] =( (24.0*b*L) - (11.0*b2) - (24.0*b) - (6.0*L2) + (12.0*L) - 12.0 - (9.0*b*L2) + (6.0*b2*L) + (2.0*L3) ) * ONEO6; // eslint-disable-line max-len\n\t\t\t\tCK[ 3 ] = ( (-12.0*b3*L) + (8.04*b*L2) - (114.0*b2*L) + (72.0+(36.0*L2)) + (((3.0*L4)-(72.0*L)+162.0) * (b-(168.0*b*L))) - ((12.0*L3)+(25.0*b3)) - ( (22.0*b*L3)+(36.0*b2*L2)+(120.0*b2) ) ) * ONEO12; // eslint-disable-line max-len\n\t\t\t\tCK[ 4 ] = 0.0;\n\t\t\t\tx0 = x0 - L + ( b*r*evalpoly( CK, r ) );\n\t\t\t} else {\n\t\t\t\tr = 1.0 / x0;\n\t\t\t\tL2 = L * L;\n\t\t\t\tck = L - 1.0;\n\t\t\t\tt = L - (b*r*ck);\n\t\t\t\tif ( t < x0 ) {\n\t\t\t\t\tx0 -= t;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlgama = gammaln( a );\n\t\t\tk = 1;\n\t\t}\n\t}\n\tif ( ( abs( porq-HALF ) < 1.0e-5 ) && ( k === 0 ) ) {\n\t\tm = 0;\n\t\tainv = 1.0 / a;\n\t\tx0 = a - ONEO3 + ( ( 0.0197530864197530864197530864198 +\n\t\t\t( 0.00721144424848128551832255535959*ainv ) ) * ainv );\n\t\tlgama = gammaln( a );\n\t\tk = 1;\n\t}\n\tif ( ( a < 1.0 ) && ( k === 0 ) ) {\n\t\tm = 0;\n\t\tif (pcase) {\n\t\t\tx0 = exp( (1.0/a) * ( ln(porq) + gammaln(a+1.0) ) );\n\t\t} else {\n\t\t\tx0 = exp( (1.0/a) * ( ln(1.0-porq) + gammaln(a+1.0) ) );\n\t\t}\n\t\tlgama = gammaln( a );\n\t\tk = 1;\n\t}\n\tif ( k === 0 ) {\n\t\tm = 1;\n\t\tainv = 1.0 / a;\n\t\tr = erfcinv( 2.0 * porq );\n\t\teta = s * r / sqrt( a*HALF );\n\t\tif ( r < MAX_FLOAT32 ) {\n\t\t\teta += ( eps1(eta) + ( (eps2(eta)+(eps3(eta)*ainv))*ainv ) ) * ainv;\n\t\t\tx0 = a * lambdaeta(eta);\n\t\t\ty = eta;\n\t\t\tfp = -sqrt( a/TWO_PI ) * exp( -HALF*a*y*y ) / ( gamstar(a) );\n\t\t\tinvfp = 1.0 / fp;\n\t\t} else {\n\t\t\tdebug( 'Warning: Overflow problems in one or more steps of the computation.' );\n\t\t\treturn NaN;\n\t\t}\n\t}\n\tif ( k < 2 ) {\n\t\txr = higherNewton( x0, a, m, p, q, lgama, invfp, pcase );\n\t}\n\treturn xr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = compute;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* Translated from the Fortran module by\n* ----------------------------------------------------------------------\n* Authors:\n*  Amparo Gil    (U. Cantabria, Santander, Spain)\n*                 e-mail: amparo.gil@unican.es\n*  Javier Segura (U. Cantabria, Santander, Spain)\n*                 e-mail: javier.segura@unican.es\n*  Nico M. Temme (CWI, Amsterdam, The Netherlands)\n*                 e-mail: nico.temme@cwi.nl\n* ---------------------------------------------------------------------\n*/\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar FLOAT32_SMALLEST = require( '@stdlib/constants/float32/smallest-normal' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar compute = require( './compute.js' );\n\n\n// MAIN //\n\n/**\n* Inverts the lower gamma function; i.e., computes `xr` such that `P(a,xr) = p`.\n*\n* ## Method\n*\n* The present code uses different methods of computation depending on the values of the input values: Taylor, asymptotic expansions and high-order Newton methods.\n*\n* ## Notes\n*\n* -   The claimed accuracy obtained using this inversion routine is near `1e-12`.\n*\n* ## References\n*\n* -   A. Gil, J. Segura and N.M. Temme, GammaCHI: a package for the inversion and computation of the gamma and chi-square distribution functions (central and noncentral). Computer Physics Commun\n* -   A. Gil, J. Segura and N.M. Temme. Efficient and accurate algorithms for the computation and inversion of the incomplete gamma function ratios. SIAM J Sci Comput. (2012) 34(6), A2965-A2981\n*\n*\n* @param {Probability} p - probability value\n* @param {number} a - scale parameter\n* @param {boolean} [upper=false] - boolean indicating if the function should invert the upper tail of the incomplete gamma function instead; i.e., compute `xr` such that `Q(a,xr) = p`.\n* @returns {number} function value of the inverse\n*/\nfunction gammaincinv( p, a, upper ) {\n\tif ( isnan( p ) || isnan( a ) ) {\n\t\treturn NaN;\n\t}\n\tif ( a < FLOAT32_SMALLEST ) {\n\t\treturn NaN;\n\t}\n\tif ( p > 1.0 || p < 0.0 ) {\n\t\treturn NaN;\n\t}\n\t// Case: invert upper gamma function\n\tif ( upper === true ) {\n\t\tif ( p === 0.0 ) {\n\t\t\treturn PINF;\n\t\t}\n\t\tif ( p === 1.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn compute( a, 1.0-p, p );\n\t}\n\t// Default: invert lower gamma function\n\tif ( p === 0.0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( p === 1.0 ) {\n\t\treturn PINF;\n\t}\n\treturn compute( a, p, 1.0-p );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gammaincinv;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/detail/ibeta_inverse.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n/* eslint-disable no-mixed-operators, max-len */\n\n'use strict';\n\n// MODULES //\n\nvar gammaincinv = require( './../../../../base/special/gammaincinv' );\nvar ln = require( './../../../../base/special/ln' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar SMALLEST_SUBNORMAL = require( '@stdlib/constants/float64/smallest-subnormal' );\nvar temmeRootFinder = require( './root_finder.js' );\nvar newtonRaphsonIterate = require( './newton_raphson.js' );\n\n\n// MAIN //\n\n/**\n* Carries out the third method by Temme (described in section 4).\n*\n* ## References\n*\n* -   Temme, N. M. 1992. \"Incomplete Laplace Integrals: Uniform Asymptotic Expansion with Application to the Incomplete Beta Function.\" _Journal of Computational and Applied Mathematics_ 41 (1–2): 1638–63. doi:[10.1016/0377-0427(92)90244-R](https://doi.org/10.1016/0377-0427(92)90244-R).\n*\n* @private\n* @param {PositiveNumber} a - function parameter\n* @param {PositiveNumber} b - function parameter\n* @param {Probability} p - function parameter\n* @param {Probability} q - probability equal to `1-p`\n* @returns {number} function value\n*/\nfunction temme3( a, b, p, q ) {\n\tvar cross;\n\tvar roots;\n\tvar lower;\n\tvar upper;\n\tvar eta0;\n\tvar eta;\n\tvar w10;\n\tvar w12;\n\tvar w13;\n\tvar w14;\n\tvar e1;\n\tvar e2;\n\tvar e3;\n\tvar mu;\n\tvar d2;\n\tvar d3;\n\tvar d4;\n\tvar w2;\n\tvar w3;\n\tvar w4;\n\tvar w5;\n\tvar w6;\n\tvar w7;\n\tvar w8;\n\tvar w9;\n\tvar w1;\n\tvar d;\n\tvar w;\n\tvar u;\n\tvar x;\n\n\t// Begin by getting an initial approximation for the quantity eta from the dominant part of the incomplete beta:\n\tif ( p < q ) {\n\t\teta0 = gammaincinv( p, b, true );\n\t} else {\n\t\teta0 = gammaincinv( q, b, false );\n\t}\n\teta0 /= a;\n\n\t// Define the variables and powers we'll need later on:\n\tmu = b / a;\n\tw = sqrt( 1.0+mu );\n\tw2 = w * w;\n\tw3 = w2 * w;\n\tw4 = w2 * w2;\n\tw5 = w3 * w2;\n\tw6 = w3 * w3;\n\tw7 = w4 * w3;\n\tw8 = w4 * w4;\n\tw9 = w5 * w4;\n\tw10 = w5 * w5;\n\td = eta0 - mu;\n\td2 = d * d;\n\td3 = d2 * d;\n\td4 = d2 * d2;\n\tw1 = w + 1.0;\n\tw12 = w1 * w1;\n\tw13 = w1 * w12;\n\tw14 = w12 * w12;\n\n\t// Now we need to compute the perturbation error terms that convert eta0 to eta, these are all polynomials of polynomials. Probably these should be re-written to use tabulated data (see examples above), but it's less of a win in this case as we need to calculate the individual powers for the denominator terms anyway, so we might as well use them for the numerator-polynomials as well. Refer to p154-p155 for the details of these expansions:\n\te1 = (w+2.0) * (w-1.0) / (3.0*w);\n\te1 += (w3 + 9.0*w2 + 21.0*w + 5.0) * d / (36.0*w2*w1);\n\te1 -= (w4 - 13.0*w3 + 69.0*w2 + 167.0*w + 46.0) * d2 / (1620.0*w12*w3);\n\te1 -= (7.0*w5 + 21.0*w4 + 70.0*w3 + 26.0*w2 - 93.0*w - 31.0) * d3 / (6480.0*w13*w4);\n\te1 -= (75.0*w6 + 202.0*w5 + 188.0*w4 - 888.0*w3 - 1345.0*w2 + 118.0*w + 138.0) * d4 / (272160.0*w14*w5);\n\n\te2 = (28.0*w4 + 131.0*w3 + 402.0*w2 + 581.0*w + 208.0) * (w-1.0) / (1620.0*w1*w3);\n\te2 -= (35.0*w6 - 154.0*w5 - 623.0*w4 - 1636.0*w3 - 3983.0*w2 - 3514.0*w - 925.0) * d / (12960.0*w12*w4);\n\te2 -= (2132.0*w7 + 7915.0*w6 + 16821.0*w5 + 35066.0*w4 + 87490.0*w3 + 141183.0*w2 + 95993.0*w + 21640.0) * d2 / (816480.0*w5*w13);\n\te2 -= (11053.0*w8 + 53308.0*w7 + 117010.0*w6 + 163924.0*w5 + 116188.0*w4 - 258428.0*w3 - 677042.0*w2 - 481940.0*w - 105497.0) * d3 / (14696640.0*w14*w6);\n\n\te3 = -((3592.0*w7 + 8375.0*w6 - 1323.0*w5 - 29198.0*w4 - 89578.0*w3 - 154413.0*w2 - 116063.0*w - 29632.0) * (w-1.0)) / (816480.0*w5*w12);\n\te3 -= (442043.0*w9 + 2054169.0*w8 + 3803094.0*w7 + 3470754.0*w6 + 2141568.0*w5 - 2393568.0*w4 - 19904934.0*w3 - 34714674.0*w2 - 23128299.0*w - 5253353.0) * d / (146966400.0*w6*w13);\n\te3 -= (116932.0*w10 + 819281.0*w9 + 2378172.0*w8 + 4341330.0*w7 + 6806004.0*w6 + 10622748.0*w5 + 18739500.0*w4 + 30651894.0*w3 + 30869976.0*w2 + 15431867.0*w + 2919016.0) * d2 / (146966400.0*w14*w7);\n\n\t// Combine eta0 and the error terms to compute eta (Second equation p155):\n\teta = eta0 + (e1/a) + (e2/(a*a)) + (e3/(a*a*a));\n\n\t/*\n\t\tNow we need to solve Eq 4.2 to obtain x.  For any given value of\n\t\teta there are two solutions to this equation, and since the distribution\n\t\tmay be very skewed, these are not related by x ~ 1-x we used when\n\t\timplementing section 3 above.  However we know that:\n\n\t\t\tcross < x <= 1       ; iff eta < mu\n\t\t\t\tx == cross   ; iff eta == mu\n\t\t\t\t0 <= x < cross    ; iff eta > mu\n\n\t\tWhere cross == 1 / (1 + mu)\n\t\tMany thanks to Prof Temme for clarifying this point. Therefore we'll just jump straight into Newton iterations to solve Eq 4.2 using these bounds, and simple bisection as the first guess, in practice this converges pretty quickly and we only need a few digits correct anyway:\n\t*/\n\tif ( eta <= 0 ) {\n\t\teta = SMALLEST_SUBNORMAL;\n\t}\n\tu = eta - ( mu*ln(eta) ) + ( ( 1.0+mu ) * ln( 1.0+mu ) ) - mu;\n\tcross = 1.0 / ( 1.0+mu );\n\tlower = (eta < mu) ? cross : 0.0;\n\tupper = (eta < mu) ? 1.0 : cross;\n\tx = (lower+upper) / 2.0;\n\troots = temmeRootFinder( u, mu );\n\treturn newtonRaphsonIterate( roots, x, lower, upper, 32, 100 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = temme3;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the inverse of the lower incomplete gamma function.\n*\n* @module @stdlib/math/base/special/gammaincinv\n*\n* @example\n* var gammaincinv = require( '@stdlib/math/base/special/gammaincinv' );\n*\n* var val = gammaincinv( 0.5, 2.0 );\n* // returns ~1.678\n*\n* val = gammaincinv( 0.1, 10.0 );\n* // returns ~6.221\n*\n* val = gammaincinv( 0.75, 3.0 );\n* // returns ~3.92\n*\n* val = gammaincinv( 0.75, 3.0, true );\n* // returns ~1.727\n*\n* val = gammaincinv( 0.75, NaN );\n* // returns NaN\n*\n* val = gammaincinv( NaN, 3.0 );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar gammaincinv = require( './gammaincinv.js' );\n\n\n// EXPORTS //\n\nmodule.exports = gammaincinv;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Smallest positive double-precision floating-point subnormal number.\n*\n* @module @stdlib/constants/float64/smallest-subnormal\n* @type {number}\n*\n* @example\n* var FLOAT64_SMALLEST_SUBNORMAL = require( '@stdlib/constants/float64/smallest-subnormal' );\n* // returns 4.940656458412465e-324\n*/\n\n\n// MAIN //\n\n/**\n* The smallest positive double-precision floating-point subnormal number.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* \\frac{1}{2^{1023-1} 2^{52}}\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 00000000000 00000000000000000000 00000000000000000000000000000001\n* ```\n*\n* @constant\n* @type {number}\n* @default 4.940656458412465e-324\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_SMALLEST_SUBNORMAL = 4.940656458412465e-324;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_SMALLEST_SUBNORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_62_0/boost/math/tools/roots.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( './../../../../base/special/abs' );\nvar ldexp = require( './../../../../base/special/ldexp' );\nvar sign = require( './../../../../base/special/signum' );\nvar max = require( './../../../../base/special/max' );\nvar MAX_VALUE = require( '@stdlib/constants/float64/max' );\n\n\n// MAIN //\n\n/**\n* Performs root finding via third order Halley iteration.\n*\n* @private\n* @param {Array} fun - array of function and its first two derivatives\n* @param {number} guess - initial starting value\n* @param {number} minimum - minimum possible value for the result, used as initial lower bracket\n* @param {number} maximum - maximum possible value for the result, used as initial upper bracket\n* @param {PositiveInteger} digits - desired number of binary digits\n* @param {PositiveInteger} maxIter - maximum number of iterations\n* @returns {number} function value\n*/\nfunction halleyIterate( fun, guess, minimum, maximum, digits, maxIter ) {\n\tvar convergence;\n\tvar outOfBounds;\n\tvar delta1;\n\tvar delta2;\n\tvar factor;\n\tvar result;\n\tvar f0Last;\n\tvar count;\n\tvar delta;\n\tvar denom;\n\tvar diff;\n\tvar num;\n\tvar res;\n\tvar f0;\n\tvar f1;\n\tvar f2;\n\n\tf0 = 0.0;\n\toutOfBounds = false;\n\tresult = guess;\n\tfactor = ldexp( 1.0, 1.0-digits );\n\tdelta = max( 10000000*guess, 10000000 );  // Arbitrarily large delta...\n\tf0Last = 0;\n\tdelta1 = delta;\n\tdelta2 = delta;\n\n\tcount = maxIter;\n\tdo {\n\t\tf0Last = f0;\n\t\tdelta2 = delta1;\n\t\tdelta1 = delta;\n\t\tres = fun( result);\n\t\tf0 = res[ 0 ];\n\t\tf1 = res[ 1 ];\n\t\tf2 = res[ 2 ];\n\t\tcount -= 1;\n\n\t\tif ( f0 === 0.0 ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( f1 === 0.0 ) {\n\t\t\t// Oops zero derivative!!!\n\t\t\tif ( f0Last === 0.0 ) {\n\t\t\t\t// Must be the first iteration, pretend that we had a previous one at either min or max:\n\t\t\t\tif ( result === minimum ) {\n\t\t\t\t\tguess = maximum;\n\t\t\t\t} else {\n\t\t\t\t\tguess = minimum;\n\t\t\t\t}\n\t\t\t\tf0Last = fun( guess );\n\t\t\t\tdelta = guess - result;\n\t\t\t}\n\t\t\tif ( sign( f0Last ) * sign( f0 ) < 0 ) {\n\t\t\t\t// We've crossed over so move in opposite direction to last step:\n\t\t\t\tif ( delta < 0 ) {\n\t\t\t\t\tdelta = ( result-minimum ) / 2.0;\n\t\t\t\t} else {\n\t\t\t\t\tdelta = ( result-maximum ) / 2.0;\n\t\t\t\t}\n\t\t\t// Move in same direction as last step:\n\t\t\t} else if ( delta < 0 ) {\n\t\t\t\tdelta = (result-maximum) / 2.0;\n\t\t\t} else {\n\t\t\t\tdelta = (result-minimum) / 2.0;\n\t\t\t}\n\t\t} else if ( f2 === 0.0 ) {\n\t\t\tdelta = f0 / f1;\n\t\t} else {\n\t\t\tdenom = 2.0 * f0;\n\t\t\tnum = ( 2.0 * f1 ) - ( f0 * ( f2 / f1 ) );\n\t\t\tif ( abs(num) < 1.0 && ( abs(denom) >= abs(num) * MAX_VALUE ) ) {\n\t\t\t\t// Possible overflow, use Newton step:\n\t\t\t\tdelta = f0 / f1;\n\t\t\t} else {\n\t\t\t\tdelta = denom / num;\n\t\t\t}\n\t\t\tif ( delta * f1 / f0 < 0.0 ) {\n\t\t\t\t// Probably cancellation error, try a Newton step instead:\n\t\t\t\tdelta = f0 / f1;\n\t\t\t\tif ( abs(delta) > 2.0 * abs(guess) ) {\n\t\t\t\t\tdelta = ( (delta < 0.0) ? -1.0 : 1.0 ) * 2.0 * abs( guess );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconvergence = abs( delta / delta2 );\n\t\tif ( convergence > 0.8 && convergence < 2.0 ) {\n\t\t\t// Last two steps haven't converged, try bisection:\n\t\t\tdelta = ( delta > 0.0 ) ? ( result-minimum )/2.0 : ( result-maximum )/2.0; // eslint-disable-line max-len\n\t\t\tif ( abs(delta) > result ) {\n\t\t\t\tdelta = sign( delta ) * result; // Protect against huge jumps!\n\t\t\t}\n\t\t\t// Reset delta2 so that this branch will *not* be taken on the next iteration:\n\t\t\tdelta2 = delta * 3.0;\n\t\t}\n\t\tguess = result;\n\t\tresult -= delta;\n\n\t\t// Check for out of bounds step:\n\t\tif ( result < minimum ) {\n\t\t\tif (\n\t\t\t\tabs(minimum) < 1 &&\n\t\t\t\tabs(result) > 1 &&\n\t\t\t\t( MAX_VALUE / abs(result) < abs(minimum) )\n\t\t\t) {\n\t\t\t\tdiff = 1000.0;\n\t\t\t} else {\n\t\t\t\tdiff = result / minimum;\n\t\t\t}\n\t\t\tif ( abs(diff) < 1.0 ) {\n\t\t\t\tdiff = 1.0 / diff;\n\t\t\t}\n\t\t\tif ( !outOfBounds && diff > 0.0 && diff < 3.0 ) {\n\t\t\t\t// Only a small out of bounds step, let's assume that the result is probably approximately at minimum:\n\t\t\t\tdelta = 0.99 * (guess - minimum);\n\t\t\t\tresult = guess - delta;\n\t\t\t\toutOfBounds = true; // Only take this branch once!\n\t\t\t} else {\n\t\t\t\tdelta = (guess - minimum) / 2.0;\n\t\t\t\tresult = guess - delta;\n\t\t\t\tif ( result === minimum || result === maximum ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( result > maximum ) {\n\t\t\tif (\n\t\t\t\tabs(maximum) < 1.0 &&\n\t\t\t\tabs(result) > 1.0 &&\n\t\t\t\tMAX_VALUE / abs(result) < abs(maximum)\n\t\t\t) {\n\t\t\t\tdiff = 1000.0;\n\t\t\t} else {\n\t\t\t\tdiff = result / maximum;\n\t\t\t}\n\t\t\tif ( abs(diff) < 1.0 ) {\n\t\t\t\tdiff = 1.0 / diff;\n\t\t\t}\n\t\t\tif ( !outOfBounds && diff > 0.0 && diff < 3.0 ) {\n\t\t\t\t// Only a small out of bounds step, let's assume that the result is probably approximately at minimum:\n\t\t\t\tdelta = 0.99 * (guess - maximum);\n\t\t\t\tresult = guess - delta;\n\t\t\t\toutOfBounds = true; // Only take this branch once!\n\t\t\t} else {\n\t\t\t\tdelta = ( guess - maximum ) / 2.0;\n\t\t\t\tresult = guess - delta;\n\t\t\t\tif ( result === minimum || result === maximum ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Update brackets:\n\t\tif ( delta > 0.0 ) {\n\t\t\tmaximum = guess;\n\t\t} else {\n\t\t\tminimum = guess;\n\t\t}\n\t} while ( count && ( abs(result * factor) < abs(delta) ) );\n\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = halleyIterate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/detail/ibeta_inverse.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar kernelBetainc = require( './../../../../base/special/kernel-betainc' ).assign;\nvar abs = require( './../../../../base/special/abs' );\nvar FLOAT64_MAX = require( '@stdlib/constants/float64/max' );\nvar FLOAT64_MIN_NORM = require( '@stdlib/constants/float64/smallest-normal' );\n\n\n// MAIN //\n\n/**\n* Returns a root finding function.\n*\n* @private\n* @param {PositiveNumber} a - function parameter\n* @param {PositiveNumber} b - function parameter\n* @param {Probability} target - probability value\n* @param {boolean} invert - boolean indicating whether to find the roots of the upper or lower incomplete beta function\n* @returns {Function} root finding function\n*/\nfunction ibetaRoots( a, b, target, invert ) {\n\treturn roots;\n\n\t/**\n\t* Calculates roots.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Array} roots\n\t*/\n\tfunction roots( x ) {\n\t\tvar buf;\n\t\tvar f1;\n\t\tvar f2;\n\t\tvar f;\n\t\tvar y;\n\n\t\ty = 1.0 - x;\n\n\t\tbuf = [ 0.0, 0.0 ];\n\t\tkernelBetainc( x, a, b, true, invert, buf, 1, 0 );\n\t\tf = buf[ 0 ] - target;\n\t\tf1 = buf[ 1 ];\n\t\tif ( invert ) {\n\t\t\tf1 = -f1;\n\t\t}\n\t\tif ( y === 0.0 ) {\n\t\t\ty = FLOAT64_MIN_NORM * 64.0;\n\t\t}\n\t\tif ( x === 0.0 ) {\n\t\t\tx = FLOAT64_MIN_NORM * 64.0;\n\t\t}\n\t\tf2 = f1 * ( -(y*a) + ( ( b-2.0 ) * x ) + 1.0 );\n\t\tif ( abs( f2 ) < y * x * FLOAT64_MAX ) {\n\t\t\tf2 /= (y * x);\n\t\t}\n\t\tif ( invert ) {\n\t\t\tf2 = -f2;\n\t\t}\n\t\t// Make sure we don't have a zero derivative:\n\t\tif ( f1 === 0.0 ) {\n\t\t\tf1 = ( ( invert ) ? -1.0 : 1.0 ) * FLOAT64_MIN_NORM * 64.0;\n\t\t}\n\t\treturn [ f, f1, f2 ];\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = ibetaRoots;\n","/* eslint-disable max-statements, max-lines */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_62_0/boost/math/special_functions/detail/ibeta_inverse.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar evalpoly = require( './../../../../base/tools/evalpoly' );\nvar betainc = require( './../../../../base/special/betainc' );\nvar expm1 = require( './../../../../base/special/expm1' );\nvar log1p = require( './../../../../base/special/log1p' );\nvar asin = require( './../../../../base/special/asin' );\nvar beta = require( './../../../../base/special/beta' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar abs = require( './../../../../base/special/abs' );\nvar exp = require( './../../../../base/special/exp' );\nvar pow = require( './../../../../base/special/pow' );\nvar sin = require( './../../../../base/special/sin' );\nvar max = require( './../../../../base/special/max' );\nvar min = require( './../../../../base/special/min' );\nvar ln = require( './../../../../base/special/ln' );\nvar FLOAT64_MIN_NORM = require( '@stdlib/constants/float64/smallest-normal' );\nvar HALF_PI = require( '@stdlib/constants/float64/half-pi' );\nvar EPSILON = require( '@stdlib/constants/float64/eps' );\nvar findIBetaInvFromTDist = require( './find_ibeta_inv_from_t_dist.js' );\nvar temme1 = require( './temme1.js' );\nvar temme2 = require( './temme2.js' );\nvar temme3 = require( './temme3.js' );\nvar halleyIterate = require( './halley_iterate.js' );\nvar ibetaRoots = require( './ibeta_roots.js' );\n\n\n// VARIABLES //\n\nvar DIGITS = 32;\nvar MAX_ITERATIONS = 1000;\n\n// Workspace for the polynomial coefficients:\nvar terms = [ 0.0, 0.0, 0.0, 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Calculates the inverse of the incomplete beta function.\n*\n* @private\n* @param {PositiveNumber} a - function parameter\n* @param {PositiveNumber} b - function parameter\n* @param {Probability} p - function parameter\n* @param {Probability} q - probability equal to `1 - p`\n* @returns {Array} two-element array holding function value `y` and `1-y`\n*/\nfunction ibetaInvImp( a, b, p, q ) {\n\tvar digits;\n\tvar invert;\n\tvar lambda;\n\tvar lower;\n\tvar theta;\n\tvar upper;\n\tvar roots;\n\tvar maxv;\n\tvar minv;\n\tvar bet;\n\tvar ppa;\n\tvar tmp;\n\tvar xs2;\n\tvar ap1;\n\tvar bm1;\n\tvar fs;\n\tvar lx;\n\tvar ps;\n\tvar xg;\n\tvar xs;\n\tvar yp;\n\tvar a2;\n\tvar a3;\n\tvar b2;\n\tvar r;\n\tvar l;\n\tvar u;\n\tvar x;\n\tvar y;\n\n\t// The flag invert is set to true if we swap a for b and p for q, in which case the result has to be subtracted from 1:\n\tinvert = false;\n\n\t// Handle trivial cases first...\n\tif ( q === 0.0 ) {\n\t\treturn [ 1.0, 0.0 ];\n\t}\n\tif ( p === 0.0 ) {\n\t\treturn [ 0.0, 1.0 ];\n\t}\n\tif ( a === 1.0 ) {\n\t\tif ( b === 1.0 ) {\n\t\t\treturn [ p, 1.0-p ];\n\t\t}\n\t\t// Change things around so we can handle as b == 1 special case below:\n\t\ttmp = b;\n\t\tb = a;\n\t\ta = tmp;\n\n\t\ttmp = q;\n\t\tq = p;\n\t\tp = tmp;\n\n\t\tinvert = true;\n\t}\n\t// Depending upon which approximation method we use, we may end up calculating either x or y initially (where y = 1-x):\n\tx = 0.0; // Set to a safe zero to avoid a\n\n\t// For some of the methods we can put tighter bounds on the result than simply [0,1]:\n\tlower = 0.0;\n\tupper = 1.0;\n\n\t// Student's T with b = 0.5 gets handled as a special case, swap around if the arguments are in the \"wrong\" order:\n\tif ( a === 0.5 ) {\n\t\tif ( b === 0.5 ) {\n\t\t\tx = sin( p*HALF_PI );\n\t\t\tx *= x;\n\t\t\ty = sin( q*HALF_PI );\n\t\t\ty *= y;\n\t\t\treturn [ x, y ];\n\t\t}\n\t\tif ( b > 0.5 ) {\n\t\t\ttmp = b;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\n\t\t\ttmp = q;\n\t\t\tq = p;\n\t\t\tp = tmp;\n\n\t\t\tinvert = !invert;\n\t\t}\n\t}\n\t// Select calculation method for the initial estimate:\n\tif ( b === 0.5 && a >= 0.5 && p !== 1.0 ) {\n\t\t// We have a Student's T distribution:\n\t\typ = {};\n\t\tx = findIBetaInvFromTDist( a, p, yp );\n\t\ty = yp.value;\n\t}\n\telse if ( b === 1.0 ) {\n\t\tif ( p < q ) {\n\t\t\tif ( a > 1.0 ) {\n\t\t\t\tx = pow( p, 1.0/a );\n\t\t\t\ty = -expm1( ln(p) / a );\n\t\t\t} else {\n\t\t\t\tx = pow( p, 1.0/a );\n\t\t\t\ty = 1.0 - x;\n\t\t\t}\n\t\t} else {\n\t\t\tx = exp( log1p(-q) / a );\n\t\t\ty = -expm1( log1p(-q) / a );\n\t\t}\n\t\tif ( invert ) {\n\t\t\ttmp = y;\n\t\t\ty = x;\n\t\t\tx = tmp;\n\t\t}\n\t\treturn [ x, y ];\n\t}\n\telse if ( a+b > 5.0 ) {\n\t\t// When a+b is large then we can use one of Prof Temme's asymptotic expansions, begin by swapping things around so that p < 0.5, we do this to avoid cancellations errors when p is large.\n\t\tif ( p > 0.5 ) {\n\t\t\ttmp = b;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\n\t\t\ttmp = q;\n\t\t\tq = p;\n\t\t\tp = tmp;\n\n\t\t\tinvert = !invert;\n\t\t}\n\t\tminv = min( a, b );\n\t\tmaxv = max( a, b );\n\t\tif ( ( sqrt(minv) > (maxv-minv) ) && minv > 5.0 ) {\n\t\t\t// When a and b differ by a small amount the curve is quite symmetrical and we can use an error function to approximate the inverse. This is the cheapest of the three Temme expansions, and the calculated value for x will never be much larger than p, so we don't have to worry about cancellation as long as p is small.\n\t\t\tx = temme1( a, b, p );\n\t\t\ty = 1.0 - x;\n\t\t} else {\n\t\t\tr = a + b;\n\t\t\ttheta = asin( sqrt( a/r ) );\n\t\t\tlambda = minv / r;\n\t\t\tif (\n\t\t\t\tlambda >= 0.2 &&\n\t\t\t\tlambda <= 0.8 &&\n\t\t\t\tr >= 10\n\t\t\t) {\n\t\t\t\t// The second error function case is the next cheapest to use, it breaks down when the result is likely to be very small, if `a+b` is also small, but we can use a cheaper expansion there in any case. As before `x` won't be much larger than `p`, so as long as `p` is small we should be free of cancellation error.\n\t\t\t\tppa = pow( p, 1.0/a );\n\t\t\t\tif ( ppa < 0.0025 && ( a+b ) < 200.0 ) {\n\t\t\t\t\tx = ppa * pow( a*beta( a, b ), 1.0/a );\n\t\t\t\t} else {\n\t\t\t\t\tx = temme2( p, r, theta );\n\t\t\t\t}\n\t\t\t\ty = 1.0 - x;\n\t\t\t} else {\n\t\t\t\t// If we get here then a and b are very different in magnitude and we need to use the third of Temme's methods which involves inverting the incomplete gamma.  This is much more expensive than the other methods.  We also can only use this method when a > b, which can lead to cancellation errors if we really want y (as we will when x is close to 1), so a different expansion is used in that case.\n\t\t\t\tif ( a < b ) {\n\t\t\t\t\ttmp = b;\n\t\t\t\t\tb = a;\n\t\t\t\t\ta = tmp;\n\n\t\t\t\t\ttmp = q;\n\t\t\t\t\tq = p;\n\t\t\t\t\tp = tmp;\n\t\t\t\t\tinvert = !invert;\n\t\t\t\t}\n\t\t\t\t// Try and compute the easy way first:\n\t\t\t\tbet = 0.0;\n\t\t\t\tif ( b < 2.0 ) {\n\t\t\t\t\tbet = beta( a, b );\n\t\t\t\t}\n\t\t\t\tif ( bet === 0.0 ) {\n\t\t\t\t\ty = 1.0;\n\t\t\t\t} else {\n\t\t\t\t\ty = pow( b*q*bet, 1.0/b );\n\t\t\t\t\tx = 1.0 - y;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( y > 1.0e-5 ) {\n\t\t\t\tx = temme3( a, b, p, q );\n\t\t\t\ty = 1.0 - x;\n\t\t\t}\n\t\t}\n\t}\n\telse if ( a < 1.0 && b < 1.0 ) {\n\t\t// Both a and b less than 1, there is a point of inflection at xs:\n\t\txs = ( 1.0-a ) / ( 2.0-a-b );\n\n\t\t// Now we need to ensure that we start our iteration from the right side of the inflection point:\n\t\tfs = betainc( xs, a, b ) - p;\n\t\tif ( abs(fs)/p < EPSILON*3.0 ) {\n\t\t\t// The result is at the point of inflection, best just return it:\n\t\t\tif ( invert ) {\n\t\t\t\treturn [ 1.0-xs, xs ];\n\t\t\t}\n\t\t\treturn [ xs, 1.0-xs ];\n\t\t}\n\t\tif ( fs < 0.0 ) {\n\t\t\ttmp = b;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\n\t\t\ttmp = q;\n\t\t\tq = p;\n\t\t\tp = tmp;\n\n\t\t\tinvert = !invert;\n\t\t\txs = 1.0 - xs;\n\t\t}\n\t\txg = pow( a*p*beta( a, b ), 1.0/a );\n\t\tx = xg / ( 1.0+xg );\n\t\ty = 1.0 / ( 1.0+xg );\n\n\t\t// And finally we know that our result is below the inflection point, so set an upper limit on our search:\n\t\tif ( x > xs ) {\n\t\t\tx = xs;\n\t\t}\n\t\tupper = xs;\n\t}\n\telse if ( a > 1.0 && b > 1.0 ) {\n\t\t// Small a and b, both greater than 1, there is a point of inflection at xs, and it's complement is xs2, we must always start our iteration from the right side of the point of inflection.\n\t\txs = ( a-1.0 ) / ( a+b-2.0 );\n\t\txs2 = ( b-1.0 ) / ( a+b-2.0 );\n\t\tps = betainc( xs, a, b ) - p;\n\n\t\tif ( ps < 0.0 ) {\n\t\t\ttmp = b;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\n\t\t\ttmp = q;\n\t\t\tq = p;\n\t\t\tp = tmp;\n\n\t\t\ttmp = xs2;\n\t\t\txs2 = xs;\n\t\t\txs = tmp;\n\n\t\t\tinvert = !invert;\n\t\t}\n\t\t// Estimate x and y, using expm1 to get a good estimate for y when it's very small:\n\t\tlx = ln( p*a*beta( a, b ) ) / a;\n\t\tx = exp( lx );\n\t\ty = ( x < 0.9 ) ? 1.0-x : -expm1(lx);\n\n\t\tif ( b < a && x < 0.2 ) {\n\t\t\t// Under a limited range of circumstances we can improve our estimate for x...\n\t\t\tap1 = a - 1.0;\n\t\t\tbm1 = b - 1.0;\n\t\t\ta2 = a * a;\n\t\t\ta3 = a * a2;\n\t\t\tb2 = b * b;\n\t\t\tterms[ 0 ] = 0.0;\n\t\t\tterms[ 1 ] = 1.0;\n\t\t\tterms[ 2 ] = bm1 / ap1;\n\t\t\tap1 *= ap1;\n\t\t\tterms[ 3 ] = bm1 * (3.0*a*b + 5.0*b + a2 - a - 4.0) / (2.0 * (a+2.0) * ap1); // eslint-disable-line max-len, no-mixed-operators\n\t\t\tap1 *= (a + 1.0);\n\t\t\tterms[ 4 ] = bm1 * (33.0*a*b2 + 31.0*b2 + 8.0*a2*b2 - 30.0*a*b - 47.0*b + 11.0*a2*b + 6.0*a3*b + 18.0 + 4.0*a - a3 + a2*a2 - 10.0*a2); // eslint-disable-line max-len, no-mixed-operators\n\t\t\tterms[ 4 ] /= (3.0 * (a+3.0) * (a+2.0) * ap1);\n\t\t\tx = evalpoly( terms, x );\n\t\t}\n\t\t// Know that result is below the inflection point, so set an upper limit on search...\n\t\tif ( x > xs ) {\n\t\t\tx = xs;\n\t\t}\n\t\tupper = xs;\n\t} else {\n\t\t// Case: ( a <= 1 ) != ( b <= 1 ). If all else fails we get here, only one of a and b is above 1, and a+b is small.  Start by swapping things around so that we have a concave curve with b > a and no points of inflection in [0,1].  As long as we expect x to be small then we can use the simple (and cheap) power term to estimate x, but when we expect x to be large then this greatly underestimates x and leaves us trying to iterate \"round the corner\" which may take almost forever. We could use Temme's inverse gamma function case in that case, this works really rather well (albeit expensively) even though strictly speaking we're outside it's defined range. However it's expensive to compute, and an alternative approach which models the curve as a distorted quarter circle is much cheaper to compute, and still keeps the number of iterations required down to a reasonable level. With thanks to Prof. Temme for this suggestion.\n\t\tif ( b < a ) {\n\t\t\ttmp = b;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\n\t\t\ttmp = q;\n\t\t\tq = p;\n\t\t\tp = tmp;\n\t\t\tinvert = !invert;\n\t\t}\n\t\tif ( pow( p, 1.0/a ) < 0.5 ) {\n\t\t\tx = pow( p*a*beta( a, b ), 1.0/a );\n\t\t\tif ( x === 0.0 ) {\n\t\t\t\tx = FLOAT64_MIN_NORM;\n\t\t\t}\n\t\t\ty = 1.0 - x;\n\t\t}\n\t\t// Case: pow(q, 1/b) < 0.1\n\t\telse {\n\t\t\t// Model a distorted quarter circle:\n\t\t\ty = pow( 1.0-pow( p, b*beta( a, b ) ), 1.0/b );\n\t\t\tif ( y === 0 ) {\n\t\t\t\ty = FLOAT64_MIN_NORM;\n\t\t\t}\n\t\t\tx = 1.0 - y;\n\t\t}\n\t}\n\t// Now we have a guess for x (and for y) we can set things up for iteration.  If x > 0.5 it pays to swap things round:\n\tif ( x > 0.5 ) {\n\t\ttmp = b;\n\t\tb = a;\n\t\ta = tmp;\n\n\t\ttmp = q;\n\t\tq = p;\n\t\tp = tmp;\n\n\t\ttmp = y;\n\t\ty = x;\n\t\tx = tmp;\n\n\t\tinvert = !invert;\n\t\tl = 1.0 - upper;\n\t\tu = 1.0 - lower;\n\t\tlower = l;\n\t\tupper = u;\n\t}\n\t// Lower bound for our search:  We're not interested in denormalized answers as these tend to take up lots of iterations, given that we can't get accurate derivatives in this area (they tend to be infinite).\n\tif ( lower === 0 ) {\n\t\tif ( invert ) {\n\t\t\t// We're not interested in answers smaller than machine epsilon:\n\t\t\tlower = EPSILON;\n\t\t\tif ( x < lower ) {\n\t\t\t\tx = lower;\n\t\t\t}\n\t\t} else {\n\t\t\tlower = FLOAT64_MIN_NORM;\n\t\t}\n\t\tif ( x < lower ) {\n\t\t\tx = lower;\n\t\t}\n\t}\n\t// Figure out how many digits to iterate towards:\n\tdigits = DIGITS;\n\tif ( x < 1.0e-50 && ( a < 1.0 || b < 1.0 ) ) {\n\t\t// If we're in a region where the first derivative is very large, then we have to take care that the root-finder doesn't terminate prematurely.  We'll bump the precision up to avoid this, but we have to take care not to set the precision too high or the last few iterations will just thrash around and convergence may be slow in this case. Try 3/4 of machine epsilon:\n\t\tdigits *= 3;\n\t\tdigits /= 2;\n\t}\n\t// Now iterate, we can use either p or q as the target here depending on which is smaller:\n\troots = ibetaRoots( a, b, ( (p < q) ? p : q ), p >= q );\n\tx = halleyIterate( roots, x, lower, upper, digits, MAX_ITERATIONS );\n\n\t// Tidy up, if we \"lower\" was too high then zero is the best answer we have:\n\tif ( x === lower ) {\n\t\tx = 0.0;\n\t}\n\tif ( invert ) {\n\t\treturn [ 1.0-x, x ];\n\t}\n\treturn [ x, 1.0-x ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = ibetaInvImp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the inverse of the incomplete beta function.\n*\n* @module @stdlib/math/base/special/kernel-betaincinv\n*\n* @example\n* var kernelBetaincinv = require( '@stdlib/math/base/special/kernel-betaincinv' );\n*\n* var y = kernelBetaincinv( 3.0, 3.0, 0.2, 0.8 );\n* // returns [ ~0.327, ~0.673 ]\n*\n* y = kernelBetaincinv( 3.0, 3.0, 0.4, 0.6 );\n* // returns [ ~0.446, ~0.554 ]\n*\n* y = kernelBetaincinv( 1.0, 6.0, 0.4, 0.6 );\n* // returns [ ~0.082, ~0.918 ]\n*\n* y = kernelBetaincinv( 1.0, 6.0, 0.8, 0.2 );\n* // returns [ ~0.235, ~0.765 ]\n*/\n\n// MODULES //\n\nvar kernelBetaincinv = require( './kernel_betaincinv.js' );\n\n\n// EXPORTS //\n\nmodule.exports = kernelBetaincinv;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar kernelBetaincinv = require( './../../../../base/special/kernel-betaincinv' );\n\n\n// MAIN //\n\n/**\n* Returns a value `p` such that `p = betainc(a, b, x)`.\n*\n* @param {Probability} p - function parameter\n* @param {PositiveNumber} a - function parameter\n* @param {PositiveNumber} b - function parameter\n* @param {boolean} [upper=false] - boolean indicating if the function should return the inverse of the upper tail of the incomplete beta function\n* @returns {number} function value\n*\n* @example\n* var y = betaincinv( 0.2, 3.0, 3.0 );\n* // returns ~0.327\n*\n* @example\n* var y = betaincinv( 0.4, 3.0, 3.0 );\n* // returns ~0.446\n*\n* @example\n* var y = betaincinv( 0.4, 3.0, 3.0, true );\n* // returns ~0.554\n*\n* @example\n* var y = betaincinv( 0.4, 1.0, 6.0 );\n* // returns ~0.082\n*\n* @example\n* var y = betaincinv( 0.8, 1.0, 6.0 );\n* // returns ~0.235\n*/\nfunction betaincinv( p, a, b, upper ) {\n\tif (\n\t\tisnan( p ) ||\n\t\tisnan( a ) ||\n\t\tisnan( b )\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( a <= 0.0 || b <= 0.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( p < 0.0 || p > 1.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( upper ) {\n\t\treturn kernelBetaincinv( a, b, 1.0 - p, p )[ 0 ];\n\t}\n\treturn kernelBetaincinv( a, b, p, 1.0 - p )[ 0 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = betaincinv;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar betaincinv = require( '@stdlib/math/base/special/betaincinv' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Evaluates the quantile function for a beta distribution with first shape parameter `alpha` and second shape parameter `beta` at a probability `p`.\n*\n* @param {Probability} p - input value\n* @param {PositiveNumber} alpha - first shape parameter\n* @param {PositiveNumber} beta - second shape parameter\n* @returns {number} evaluated quantile function\n*\n* @example\n* var y = quantile( 0.8, 2.0, 1.0 );\n* // returns ~0.894\n*\n* @example\n* var y = quantile( 0.5, 4.0, 2.0 );\n* // returns ~0.686\n*\n* @example\n* var y = quantile( 1.1, 1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( -0.2, 1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( NaN, 1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.5, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.5, 1.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.5, -1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.5, 1.0, -1.0 );\n* // returns NaN\n*/\nfunction quantile( p, alpha, beta ) {\n\tif (\n\t\tisnan( p ) ||\n\t\tisnan( alpha ) ||\n\t\tisnan( beta ) ||\n\t\talpha <= 0.0 ||\n\t\tbeta <= 0.0 ||\n\t\tp < 0.0 ||\n\t\tp > 1.0\n\t) {\n\t\treturn NaN;\n\t}\n\treturn betaincinv( p, alpha, beta );\n}\n\n\n// EXPORTS //\n\nmodule.exports = quantile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the inverse of the incomplete beta function.\n*\n* @module @stdlib/math/base/special/betaincinv\n*\n* @example\n* var betaincinv = require( '@stdlib/math/base/special/betaincinv' );\n*\n* var y = betaincinv( 0.2, 3.0, 3.0 );\n* // returns ~0.327\n*\n* y = betaincinv( 0.4, 3.0, 3.0 );\n* // returns ~0.446\n*\n* y = betaincinv( 0.4, 3.0, 3.0, true );\n* // returns ~0.554\n*\n* y = betaincinv( 0.4, 1.0, 6.0 );\n* // returns ~0.082\n*\n* y = betaincinv( 0.8, 1.0, 6.0 );\n* // returns ~0.235\n*/\n\n// MODULES //\n\nvar betaincinv = require( './betaincinv.js' );\n\n\n// EXPORTS //\n\nmodule.exports = betaincinv;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar betaincinv = require( '@stdlib/math/base/special/betaincinv' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the quantile function for a beta distribution with first shape parameter `alpha` and second shape parameter `beta`.\n*\n* @param {PositiveNumber} alpha - first shape parameter\n* @param {PositiveNumber} beta - second shape parameter\n* @returns {Function} quantile function\n*\n* @example\n* var quantile = factory( 2.5, 0.5 );\n* var y = quantile( 0.5 );\n* // returns ~0.904\n*\n* y = quantile( 0.8 );\n* // returns ~0.986\n*/\nfunction factory( alpha, beta ) {\n\tif (\n\t\tisnan( alpha ) ||\n\t\tisnan( beta ) ||\n\t\talpha <= 0.0 ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn quantile;\n\n\t/**\n\t* Evaluates the quantile function for a beta distribution.\n\t*\n\t* @private\n\t* @param {Probability} p - input value\n\t* @returns {number} evaluated quantile function\n\t*\n\t* @example\n\t* var y = quantile( 0.3 );\n\t* // returns <number>\n\t*/\n\tfunction quantile( p ) {\n\t\tif (\n\t\t\tisnan( p ) ||\n\t\t\tp < 0.0 ||\n\t\t\tp > 1.0\n\t\t) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn betaincinv( p, alpha, beta );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the quantile function for a beta distribution.\n*\n* @module @stdlib/stats/base/dists/beta/quantile\n*\n* @example\n* var quantile = require( '@stdlib/stats/base/dists/beta/quantile' );\n*\n* var y = quantile( 0.8, 2.0, 1.0 );\n* // returns ~0.894\n*\n* y = quantile( 0.5, 4.0, 2.0 );\n* // returns ~0.686\n*\n* @example\n* var factory = require( '@stdlib/stats/base/dists/beta/quantile' ).factory;\n*\n* var quantile = factory( 2.0, 2.0 );\n*\n* var y = quantile( 0.8 );\n* // returns ~0.713\n*\n* y = quantile( 0.4 );\n* // returns ~0.5\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar quantile = require( './quantile.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( quantile, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = quantile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( './../../../../base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is a nonnegative integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is a nonnegative integer\n*\n* @example\n* var bool = isNonNegativeInteger( 1.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( 0.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( -10.0 );\n* // returns false\n*/\nfunction isNonNegativeInteger( x ) {\n\treturn (floor(x) === x && x >= 0);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a finite double-precision floating-point number is a nonnegative integer.\n*\n* @module @stdlib/math/base/assert/is-nonnegative-integer\n*\n* @example\n* var isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );\n*\n* var bool = isNonNegativeInteger( 1.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( 0.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( -10.0 );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNonNegativeInteger = require( './is_nonnegative_integer.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );\nvar betainc = require( '@stdlib/math/base/special/betainc' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a binomial distribution with number of trials `n` and success probability `p` at a value `x`.\n*\n* @param {number} x - input value\n* @param {NonNegativeInteger} n - number of trials\n* @param {Probability} p - success probability\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 3.0, 20, 0.2 );\n* // returns ~0.411\n*\n* @example\n* var y = cdf( 21.0, 20, 0.2 );\n* // returns 1.0\n*\n* @example\n* var y = cdf( 5.0, 10, 0.4 );\n* // returns ~0.834\n*\n* @example\n* var y = cdf( 0.0, 10, 0.4 );\n* // returns ~0.006\n*\n* @example\n* var y = cdf( NaN, 20, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 20, NaN );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 1.5, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, -2.0, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 20, -1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 20, 1.5 );\n* // returns NaN\n*/\nfunction cdf( x, n, p ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( n ) ||\n\t\tisnan( p ) ||\n\t\tp < 0.0 ||\n\t\tp > 1.0 ||\n\t\t!isNonNegativeInteger( n ) ||\n\t\tn === PINF\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x < 0.0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( x >= n ) {\n\t\treturn 1.0;\n\t}\n\tx = floor( x + 1.0e-7 );\n\treturn betainc( p, x + 1.0, n - x, true, true );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar betainc = require( '@stdlib/math/base/special/betainc' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a binomial distribution with number of trials `n` and success probability `p`.\n*\n* @param {NonNegativeInteger} n - number of trials\n* @param {Probability} p - success probability\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 10, 0.5 );\n* var y = cdf( 3.0 );\n* // returns ~0.172\n*\n* y = cdf( 1.0 );\n* // returns ~0.011\n*/\nfunction factory( n, p ) {\n\tif (\n\t\tisnan( n ) ||\n\t\tisnan( p ) ||\n\t\tp < 0.0 ||\n\t\tp > 1.0 ||\n\t\t!isNonNegativeInteger( n ) ||\n\t\tn === PINF\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a binomial distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < 0.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tif ( x >= n ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\t// Ensure left-continuity:\n\t\tx = floor( x + 1.0e-7 );\n\t\treturn betainc( p, x + 1.0, n - x, true, true );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Binomial distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/binomial/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/binomial/cdf' );\n*\n* var y = cdf( 3.0, 20, 0.2 );\n* // returns ~0.411\n*\n* y = cdf( 21.0, 20, 0.2 );\n* // returns 1.0\n*\n* y = cdf( 5.0, 10, 0.4 );\n* // returns ~0.834\n*\n* y = cdf( 0.0, 10, 0.4 );\n* // returns ~0.06\n*\n* @example\n* var factory = require( '@stdlib/stats/base/dists/binomial/cdf' ).factory;\n*\n* var cdf = factory( 10, 0.5 );\n*\n* var y = cdf( 3.0 );\n* // returns ~0.172\n*\n* y = cdf( 1.0 );\n* // returns ~0.011\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The code is adapted from the Fortran routine from the FNLIB library of the [SLATEC Common Mathematical Library]{@link http://www.netlib.no/netlib/slatec/fnlib/}.\n*\n* The original code was developed by W. Fullerton of Los Alamos Scientific Laboratory, a governmental institution, and is therefore public domain.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar ALGMCS = [\n\t+0.1276642195630062933333333333333e-30,\n\t-0.3401102254316748799999999999999e-29,\n\t+0.1025680058010470912000000000000e-27,\n\t-0.3547598158101070547199999999999e-26,\n\t+0.1429227355942498147573333333333e-24,\n\t-0.6831888753985766870111999999999e-23,\n\t+0.3962837061046434803679306666666e-21,\n\t-0.2868042435334643284144622399999e-19,\n\t+0.2683181998482698748957538846666e-17,\n\t-0.3399615005417721944303330599666e-15,\n\t+0.6221098041892605227126015543416e-13,\n\t-0.1809129475572494194263306266719e-10,\n\t+0.9810825646924729426157171547487e-8,\n\t-0.1384948176067563840732986059135e-4,\n\t+0.1666389480451863247205729650822e+0\n];\nvar LEN = ALGMCS.length;\n\n\n// MAIN //\n\n/**\n* Evaluate the n-term Chebyshev series at `x`.\n*\n* ## References\n*\n* -   Broucke, Roger. 1973. \"Algorithm: Ten Subroutines for the Manipulation of Chebyshev Series.\" _Communications of the ACM_ 16 (4). New York, NY, USA: ACM: 254–56. doi:[10.1145/362003.362037](https://doi.org/10.1145/362003.362037).\n* -   Fox, Leslie, and Ian Bax Parker. 1968. _Chebyshev polynomials in numerical analysis_. Oxford Mathematical Handbooks. London, United Kingdom: Oxford University Press. <https://books.google.com/books?id=F8NzsEtJCD0C>.\n*\n* @private\n* @param {number} x - value at which the series is to be evaluated\n* @returns {number} series value\n*/\nfunction dcseval( x ) {\n\tvar twox;\n\tvar b2;\n\tvar b1;\n\tvar b0;\n\tvar i;\n\n\tif ( x < -1.1 || x > 1.1 ) {\n\t\treturn NaN;\n\t}\n\tb1 = 0.0;\n\tb0 = 0.0;\n\ttwox = 2.0 * x;\n\tfor ( i = 0; i < LEN; i++ ) {\n\t\tb2 = b1;\n\t\tb1 = b0;\n\t\tb0 = (twox*b1) - b2 + ALGMCS[ i ];\n\t}\n\treturn ( b0-b2 ) * 0.5;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dcseval;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The code is adapted from the Fortran routine from the FNLIB library of the [SLATEC Common Mathematical Library]{@link http://www.netlib.no/netlib/fn/d9lgmc.f}.\n*\n* The original code was developed by W. Fullerton of Los Alamos Scientific Laboratory, a governmental institution, and is therefore public domain.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar pow = require( './../../../../base/special/pow' );\nvar dceval = require( './dceval.js' );\n\n\n// VARIABLES //\n\nvar XBIG = 94906265.62425156;\nvar XMAX = 3.745194030963158e306;\n\n\n// MAIN //\n\n/**\n* Compute the log gamma correction factor for `x >= 10`.\n*\n* ```tex\n* \\log(\\gamma(x)) = \\log(\\sqrt{2*\\Pi}) + (x-0.5) \\cdot \\log(x) - x \\operatorname{R9LGMC}(x).\n* ```\n*\n* @private\n* @param {number} x - input value\n* @returns {number} correction value\n*/\nfunction gammaCorrection( x ) {\n\tif ( x < 10.0 ) {\n\t\treturn NaN;\n\t}\n\t// Check for underflow...\n\tif ( x >= XMAX ) {\n\t\treturn 0.0;\n\t}\n\tif ( x < XBIG ) {\n\t\treturn dceval( (2.0*pow( 10.0/x, 2.0 )) - 1.0 ) / x;\n\t}\n\treturn 1.0 / (x * 12.0);\n}\n\n\n// EXPORTS //\n\nmodule.exports = gammaCorrection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The code is adapted from the Fortran routine from the FNLIB library of the [SLATEC Common Mathematical Library]{@link http://www.netlib.no/netlib/slatec/fnlib/albeta.f}.\n*\n* The original code was developed by W. Fullerton of Los Alamos Scientific Laboratory, a governmental institution, and is therefore public domain.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gammaln = require( './../../../../base/special/gammaln' );\nvar log1p = require( './../../../../base/special/log1p' );\nvar gamma = require( './../../../../base/special/gamma' );\nvar max = require( './../../../../base/special/max' );\nvar min = require( './../../../../base/special/min' );\nvar ln = require( './../../../../base/special/ln' );\nvar LN_SQRT_TWO_PI = require( '@stdlib/constants/float64/ln-sqrt-two-pi' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar correction = require( './gamma_correction.js' );\n\n\n// MAIN //\n\n/**\n* Evaluate the natural logarithm of the beta function.\n*\n* @param {NonNegativeNumber} a - first input value\n* @param {NonNegativeNumber} b - second input value\n* @returns {number} natural logarithm of beta function\n*\n* @example\n* var v = betaln( 0.0, 0.0 );\n* // returns Infinity\n*\n* @example\n* var v = betaln( 1.0, 1.0 );\n* // returns 0.0\n*\n* @example\n* var v = betaln( -1.0, 2.0 );\n* // returns NaN\n*\n* @example\n* var v = betaln( 5.0, 0.2 );\n* // returns ~1.218\n*\n* @example\n* var v = betaln( 4.0, 1.0 );\n* // returns ~-1.386\n*\n* @example\n* var v = betaln( NaN, 2.0 );\n* // returns NaN\n*/\nfunction betaln( a, b ) {\n\tvar corr;\n\tvar p;\n\tvar q;\n\n\tp = min( a, b );\n\tq = max( a, b );\n\n\tif ( p < 0.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( p === 0.0 ) {\n\t\treturn PINF;\n\t}\n\tif ( q === PINF ) {\n\t\treturn NINF;\n\t}\n\t// Case: p and q are big\n\tif ( p >= 10.0 ) {\n\t\tcorr = correction( p ) + correction( q ) - correction( p+q );\n\t\treturn ( -0.5*ln( q ) ) + LN_SQRT_TWO_PI + corr + ( (p-0.5) * ln( p/(p+q) ) ) + ( q*log1p( -p/(p+q) ) ); // eslint-disable-line max-len\n\t}\n\t// Case: p is small, but q is big\n\tif ( q >= 10.0 ) {\n\t\tcorr = correction( q ) - correction( p+q );\n\t\treturn gammaln( p ) + corr + p - (p*ln( p+q )) + ( (q-0.5)*log1p( -p/(p+q) ) ); // eslint-disable-line max-len\n\t}\n\t// Case: p and q are small\n\treturn ln( gamma( p ) * ( gamma( q ) / gamma( p+q ) ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = betaln;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../../../base/assert/is-integer' );\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar betaln = require( './../../../../base/special/betaln' );\nvar abs = require( './../../../../base/special/abs' );\nvar ln = require( './../../../../base/special/ln' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\n\n\n// MAIN //\n\n/**\n* Computes the natural logarithm of the binomial coefficient of two integers.\n*\n* @param {integer} n - input value\n* @param {integer} k - second input value\n* @returns {number} function value\n*\n* @example\n* var v = binomcoefln( 8, 2 );\n* // returns ~3.332\n*\n* @example\n* var v = binomcoefln( 0, 0 );\n* // returns 0.0\n*\n* @example\n* var v = binomcoefln( -4, 2 );\n* // returns ~2.303\n*\n* @example\n* var v = binomcoefln( 88, 3 );\n* // returns ~11.606\n*\n* @example\n* var v = binomcoefln( NaN, 3 );\n* // returns NaN\n*\n* @example\n* var v = binomcoefln( 5, NaN );\n* // returns NaN\n*\n* @example\n* var v = binomcoefln( NaN, NaN );\n* // returns NaN\n*/\nfunction binomcoefln( n, k ) {\n\tif ( isnan( n ) || isnan( k ) ) {\n\t\treturn NaN;\n\t}\n\tif ( !isInteger( n ) || !isInteger( k ) ) {\n\t\treturn NaN;\n\t}\n\tif ( n < 0.0 ) {\n\t\treturn binomcoefln( -n + k - 1.0, k );\n\t}\n\tif ( k < 0 ) {\n\t\treturn NINF;\n\t}\n\tif ( k === 0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( k === 1 ) {\n\t\treturn ln( abs( n ) );\n\t}\n\tif ( n < k ) {\n\t\treturn NINF;\n\t}\n\tif ( n - k < 2 ) {\n\t\treturn binomcoefln( n, n - k );\n\t}\n\t// Case: n - k >= 2\n\treturn -ln( n + 1 ) - betaln( n - k + 1, k + 1 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = binomcoefln;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the natural logarithm of the beta function.\n*\n* @module @stdlib/math/base/special/betaln\n*\n* @example\n* var betaln = require( '@stdlib/math/base/special/betaln' );\n*\n* var v = betaln( 0.0, 0.0 );\n* // returns Infinity\n*\n* v = betaln( 1.0, 1.0 );\n* // returns 0.0\n*\n* v = betaln( -1.0, 2.0 );\n* // returns NaN\n*\n* v = betaln( 5.0, 0.2 );\n* // returns ~1.218\n*\n* v = betaln( 4.0, 1.0 );\n* // returns ~-1.386\n*\n* v = betaln( NaN, 2.0 );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar betaln = require( './betaln.js' );\n\n\n// EXPORTS //\n\nmodule.exports = betaln;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the natural logarithm of the binomial coefficient.\n*\n* @module @stdlib/math/base/special/binomcoefln\n*\n* @example\n* var binomcoefln = require( '@stdlib/math/base/special/binomcoefln' );\n*\n* var v = binomcoefln( 8, 2 );\n* // returns ~3.332\n*\n* v = binomcoefln( 0, 0 );\n* // returns 0.0\n*\n* v = binomcoefln( -4, 2 );\n* // returns ~2.302\n*\n* v = binomcoefln( 88, 3 );\n* // returns ~11.606\n*\n* v = binomcoefln( NaN, 3 );\n* // returns NaN\n*\n* v = binomcoefln( 5, NaN );\n* // returns NaN\n*\n* v = binomcoefln( NaN, NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar binomcoefln = require( './binomcoefln.js' );\n\n\n// EXPORTS //\n\nmodule.exports = binomcoefln;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );\nvar binomcoefln = require( '@stdlib/math/base/special/binomcoefln' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar log1p = require( '@stdlib/math/base/special/log1p' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Evaluates the probability mass function (PMF) for a binomial distribution with number of trials `n` and success probability `p` at a value `x`.\n*\n* @param {number} x - input value\n* @param {NonNegativeInteger} n - number of trials\n* @param {Probability} p - success probability\n* @returns {Probability} evaluated PMF\n*\n* @example\n* var y = pmf( 3.0, 20, 0.2 );\n* // returns ~0.205\n*\n* @example\n* var y = pmf( 21.0, 20, 0.2 );\n* // returns 0.0\n*\n* @example\n* var y = pmf( 5.0, 10, 0.4 );\n* // returns ~0.201\n*\n* @example\n* var y = pmf( 0.0, 10, 0.4 );\n* // returns ~0.006\n*\n* @example\n* var y = pmf( NaN, 20, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 0.0, NaN, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 0.0, 20, NaN );\n* // returns NaN\n*\n* @example\n* var y = pmf( 2.0, 1.5, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 2.0, -2.0, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 2.0, 20, -1.0 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 2.0, 20, 1.5 );\n* // returns NaN\n*/\nfunction pmf( x, n, p ) {\n\tvar lnl;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( n ) ||\n\t\tisnan( p ) ||\n\t\tp < 0.0 ||\n\t\tp > 1.0 ||\n\t\t!isNonNegativeInteger( n ) ||\n\t\tn === PINF\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( isNonNegativeInteger( x ) ) {\n\t\tif ( x > n ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tif ( p === 0.0 ) {\n\t\t\treturn ( x === 0 ) ? 1.0 : 0.0;\n\t\t}\n\t\tif ( p === 1.0 ) {\n\t\t\treturn ( x === n ) ? 1.0 : 0.0;\n\t\t}\n\t\tlnl = binomcoefln( n, x );\n\t\tlnl += (x * ln( p )) + (( n - x ) * log1p( -p ));\n\t\treturn exp( lnl );\n\t}\n\treturn 0.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pmf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Evaluates the probability mass function (PMF) for a degenerate distribution centered at `mu`.\n*\n* @param {number} x - input value\n* @param {number} mu - constant value of the distribution\n* @returns {number} evaluated probability mass function\n*\n* @example\n* var y = pmf( 2.0, 3.0 );\n* // returns 0.0\n*\n* @example\n* var y = pmf( 3.0, 3.0 );\n* // returns 1.0\n*\n* @example\n* var y = pmf( NaN, 0.0 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 0.0, NaN );\n* // returns NaN\n*/\nfunction pmf( x, mu ) {\n\tif ( isnan( x ) || isnan( mu ) ) {\n\t\treturn NaN;\n\t}\n\treturn ( x === mu ) ? 1.0 : 0.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pmf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the probability mass function (PMF) of a degenerate distribution centered at a provided mean value.\n*\n* @param {number} mu - value at which to center the distribution\n* @returns {Function} function to evaluate the probability mass function\n*\n* @example\n* var pmf = factory( 5.0 );\n*\n* var y = pmf( 0.0 );\n* // returns 0.0\n*\n* y = pmf( 5.0 );\n* // returns 1.0\n*/\nfunction factory( mu ) {\n\tif ( isnan( mu ) ) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn pmf;\n\n\t/**\n\t* Evaluates the probability mass function (PMF) of a degenerate distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated PMF\n\t*\n\t* @example\n\t* var y = pmf( 10.0 );\n\t* // returns <number>\n\t*/\n\tfunction pmf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn ( x === mu ) ? 1.0 : 0.0;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Degenerate distribution probability mass function (PDF).\n*\n* @module @stdlib/stats/base/dists/degenerate/pmf\n*\n* @example\n* var pmf = require( '@stdlib/stats/base/dists/degenerate/pmf' );\n*\n* var y = pmf( 2.0, 0.0 );\n* // returns 0.0\n*\n* @example\n* var factory = require( '@stdlib/stats/base/dists/degenerate/pmf' ).factory;\n*\n* var pmf = factory( 10.0 );\n*\n* var y = pmf( 10.0 );\n* // returns 1.0\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar pmf = require( './pmf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( pmf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = pmf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar binomcoefln = require( '@stdlib/math/base/special/binomcoefln' );\nvar degenerate = require( './../../../../../base/dists/degenerate/pmf' ).factory;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar log1p = require( '@stdlib/math/base/special/log1p' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the probability mass function (PMF) for a binomial distribution with number of trials `n` and success probability `p`.\n*\n* @param {NonNegativeInteger} n - number of trials\n* @param {Probability} p - success probability\n* @returns {Function} PMF\n*\n* @example\n* var pmf = factory( 10, 0.5 );\n* var y = pmf( 3.0 );\n* // returns ~0.117\n*\n* y = pmf( 5.0 );\n* // returns ~0.246\n*/\nfunction factory( n, p ) {\n\tif (\n\t\tisnan( n ) ||\n\t\tisnan( p ) ||\n\t\t!isNonNegativeInteger( n ) ||\n\t\tn === PINF ||\n\t\tp < 0.0 ||\n\t\tp > 1.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( p === 0.0 || n === 0 ) {\n\t\treturn degenerate( 0.0 );\n\t}\n\tif ( p === 1.0 ) {\n\t\treturn degenerate( n );\n\t}\n\treturn pmf;\n\n\t/**\n\t* Evaluates the probability mass function (PMF) for a binomial distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated PMF\n\t*\n\t* @example\n\t* var y = pmf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction pmf( x ) {\n\t\tvar lnl;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( isNonNegativeInteger( x ) ) {\n\t\t\tif ( x > n ) {\n\t\t\t\treturn 0.0;\n\t\t\t}\n\t\t\tlnl = binomcoefln( n, x );\n\t\t\tlnl += (x * ln( p )) + ((n - x) * log1p( -p ));\n\t\t\treturn exp( lnl );\n\t\t}\n\t\treturn 0.0;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Binomial distribution probability mass function (PMF).\n*\n* @module @stdlib/stats/base/dists/binomial/pmf\n*\n* @example\n* var pmf = require( '@stdlib/stats/base/dists/binomial/pmf' );\n*\n* var y = pmf( 3.0, 20, 0.2 );\n* // returns ~0.205\n*\n* y = pmf( 21.0, 20, 0.2 );\n* // returns 0.0\n*\n* y = pmf( 5.0, 10, 0.4 );\n* // returns ~0.201\n*\n* y = pmf( 0.0, 10, 0.4 );\n* // returns ~0.06\n*\n* @example\n* var factory = require( '@stdlib/stats/base/dists/binomial/pmf' ).factory;\n*\n* var pmf = factory( 10, 0.5 );\n*\n* var y = pmf( 3.0 );\n* // returns ~0.117\n*\n* y = pmf( 5.0 );\n* // returns ~0.246\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar pmf = require( './pmf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( pmf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = pmf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {string} [options.alternative] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {number} [options.p] - probability under H0\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'alternative' ) ) {\n\t\topts.alternative = options.alternative;\n\t\tif ( !isString( opts.alternative ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'alternative', opts.alternative ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'p' ) ) {\n\t\topts.p = options.p;\n\t\tif ( !isNumber( opts.p ) || isnan( opts.p ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'p', opts.p ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar roundn = require( '@stdlib/math/base/special/roundn' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Alternative hypothesis: ';\n\tstr += 'True correlation coefficient is ';\n\tswitch ( this.alternative ) {\n\tcase 'less':\n\t\tstr += 'less than ';\n\t\tbreak;\n\tcase 'greater':\n\t\tstr += 'greater than ';\n\t\tbreak;\n\tcase 'two-sided':\n\tdefault:\n\t\tstr += 'not equal to ';\n\t\tbreak;\n\t}\n\tstr += this.nullValue;\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts ) + '\\n';\n\tstr += '    ' + ((1.0-this.alpha)*100) + '% confidence interval: [' +\n\t\troundn( this.ci[0], -dgts ) +\n\t\t',' +\n\t\troundn( this.ci[1], -dgts ) +\n\t']';\n\tstr += '\\n\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar isNumberArray = require( '@stdlib/assert/is-number-array' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' );\nvar betaQuantile = require( './../../base/dists/beta/quantile' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar ceil = require( '@stdlib/math/base/special/ceil' );\nvar binomialCDF = require( './../../base/dists/binomial/cdf' );\nvar binomialPMF = require( './../../base/dists/binomial/pmf' );\nvar format = require( '@stdlib/string/format' );\nvar validate = require( './validate.js' );\nvar print = require( './print.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// VARIABLES //\n\nvar RELATIVE_ERROR = 1+1e-07;\n\n\n// FUNCTIONS //\n\n/**\n* Calculates the lower endpoint of a confidence interval.\n*\n* @private\n* @param {NonNegativeInteger} x - number of successes\n* @param {NonNegativeInteger} n - total number of observations\n* @param {number} alpha - significance level\n* @returns {number} lower endpoint\n*/\nfunction lower( x, n, alpha ) {\n\treturn ( x === 0 ) ? 0 : betaQuantile( alpha, x, n - x + 1 );\n}\n\n/**\n* Calculates the upper endpoint of a confidence interval.\n*\n* @private\n* @param {NonNegativeInteger} x - number of successes\n* @param {NonNegativeInteger} n - total number of observations\n* @param {number} alpha - significance level\n* @returns {number} upper endpoint\n*/\nfunction upper( x, n, alpha ) {\n\treturn ( x === n ) ? 1 : betaQuantile( 1 - alpha, x + 1, n - x );\n}\n\n\n// MAIN //\n\n/**\n* Computes an exact test for the success probability in a Bernoulli experiment.\n*\n* @param {(NonNegativeInteger|Array)} x - number of successes or two-element array with successes and failures\n* @param {NonNegativeInteger} [n] - total number of observations\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {string} [options.alternative='two-sided'] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {Probability} [options.p=0.5] - success probability under H0\n* @throws {TypeError} options must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} alpha option has to be a number in the interval `[0,1]`\n* @throws {TypeError} alternative option has to be a string\n* @throws {Error} alternative option must be `two-sided`, `less` or `greater`\n* @returns {Object} test results\n*/\nfunction binomialTest() {\n\tvar alpha;\n\tvar opts;\n\tvar cint;\n\tvar pval;\n\tvar stat;\n\tvar alt;\n\tvar err;\n\tvar out;\n\tvar d;\n\tvar m;\n\tvar n;\n\tvar p;\n\tvar x;\n\tvar y;\n\tvar i;\n\n\topts = {};\n\tif ( isNumberArray( arguments[ 0 ] ) ) {\n\t\tx = arguments[ 0 ];\n\t\tif ( x.length !== 2 ) {\n\t\t\tthrow new Error( format( 'invalid argument. An array argument must contain two elements. Value: `%s`.', x ) );\n\t\t}\n\t\tn = x[ 1 ] + x[ 0 ];\n\t\tx = x[ 0 ];\n\t\tif ( arguments[ 1 ] ) {\n\t\t\terr = validate( opts, arguments[ 1 ] );\n\t\t}\n\t} else {\n\t\tx = arguments[ 0 ];\n\t\tn = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( x ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer or a two-element array. Value: `%s`.', x ) );\n\t\t}\n\t\tif ( !isNonNegativeInteger( n ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', n ) );\n\t\t}\n\t\tif ( x > n ) {\n\t\t\tthrow new TypeError( format( 'invalid arguments. Number of successes cannot be larger than the total number of observations. x: `%u`. n: `%u`.' ) );\n\t\t}\n\t\tif ( arguments[ 2 ] ) {\n\t\t\terr = validate( opts, arguments[ 2 ] );\n\t\t}\n\t}\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\n\tif ( opts.alpha === void 0 ) {\n\t\talpha = 0.05;\n\t} else {\n\t\talpha = opts.alpha;\n\t}\n\tif ( alpha < 0.0 || alpha > 1.0 ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.', 'alpha', alpha ) );\n\t}\n\tif ( opts.p === void 0 ) {\n\t\tp = 0.5;\n\t} else {\n\t\tp = opts.p;\n\t}\n\tif ( p < 0.0 || p > 1.0 ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be a probability. Option: `%f`.', 'p', p ) );\n\t}\n\n\talt = opts.alternative || 'two-sided';\n\tstat = x / n;\n\tswitch ( alt ) {\n\tcase 'less':\n\t\tpval = binomialCDF( x, n, p );\n\t\tcint = [ 0.0, upper( x, n, alpha ) ];\n\t\tbreak;\n\tcase 'greater':\n\t\tpval = 1.0 - binomialCDF( x - 1, n, p );\n\t\tcint = [ lower( x, n, alpha ), 1.0 ];\n\t\tbreak;\n\tcase 'two-sided':\n\t\td = binomialPMF( x, n, p );\n\t\tm = n * p;\n\t\tif ( x === m ) {\n\t\t\tpval = 1;\n\t\t} else if ( x < m ) {\n\t\t\ty = 0;\n\t\t\tfor ( i = ceil( m ); i <= n; i++ ) {\n\t\t\t\tif ( binomialPMF( i, n, p ) <= d * RELATIVE_ERROR ) {\n\t\t\t\t\ty += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpval = binomialCDF(x, n, p) + ( 1 - binomialCDF(n - y, n, p ) );\n\t\t} else {\n\t\t\ty = 0;\n\t\t\tfor ( i = 0; i <= floor( m ); i++ ) {\n\t\t\t\tif ( binomialPMF( i, n, p ) <= d * RELATIVE_ERROR ) {\n\t\t\t\t\ty += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpval = binomialCDF( y-1, n, p ) + ( 1 - binomialCDF( x-1, n, p ) );\n\t\t}\n\t\tcint = [ lower( x, n, alpha/2.0 ), upper( x, n, alpha/2.0 ) ];\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'alternative', [ 'two-sided', 'less', 'greater' ].join( '\", \"' ), alt ) );\n\t}\n\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= alpha );\n\tsetReadOnly( out, 'alpha', alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'ci', cint );\n\tsetReadOnly( out, 'nullValue', p );\n\tsetReadOnly( out, 'alternative', alt );\n\tsetReadOnly( out, 'method', 'Exact binomial test' );\n\tsetReadOnly( out, 'print', print );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = binomialTest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an exact test for the success probability in a Bernoulli experiment.\n*\n* @module @stdlib/stats/binomial-test\n*\n* @example\n* var binomialTest = require( '@stdlib/stats/binomial-test' );\n*\n* var out = binomialTest( 682, 925 );\n* // returns {...}\n*\n* out = binomialTest( 682, 925, {\n*     'p': 0.75,\n*     'alpha': 0.05\n* });\n* // returns {...}\n*/\n\n// MODULES //\n\nvar binomialTest = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = binomialTest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `BigInt` support.\n*\n* @module @stdlib/assert/has-bigint-support\n*\n* @example\n* var hasBigIntSupport = require( '@stdlib/assert/has-bigint-support' );\n*\n* var bool = hasBigIntSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasBigIntSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasBigIntSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getGlobal = require( '@stdlib/utils/global' );\n\n\n// VARIABLES //\n\nvar Global = getGlobal();\n\n\n// MAIN //\n\n/**\n* Tests for native `BigInt` support.\n*\n* @returns {boolean} boolean indicating if an environment has `BigInt` support\n*\n* @example\n* var bool = hasBigIntSupport();\n* // returns <boolean>\n*/\nfunction hasBigIntSupport() {\n\treturn (\n\t\ttypeof Global.BigInt === 'function' &&\n\t\ttypeof BigInt === 'function' && // eslint-disable-line stdlib/require-globals\n\t\ttypeof Global.BigInt( '1' ) === 'bigint' &&\n\t\ttypeof BigInt( '1' ) === 'bigint' // eslint-disable-line stdlib/require-globals, no-undef\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasBigIntSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './../../define-property' );\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - accessor\n*\n* @example\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnlyAccessor( obj, prop, getter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'get': getter\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define a non-enumerable read-only accessor.\n*\n* @module @stdlib/utils/define-nonenumerable-read-only-accessor\n*\n* @example\n* var setNonEnumerableReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\n*\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\n\n// MODULES //\n\nvar setNonEnumerableReadOnlyAccessor = require( './main.js' ); // eslint-disable-line id-length\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the number of bytes per element provided an underlying array data type.\n*\n* @module @stdlib/ndarray/base/bytes-per-element\n*\n* @example\n* var bytesPerElement = require( '@stdlib/ndarray/base/bytes-per-element' );\n*\n* var nbytes = bytesPerElement( 'float64' );\n* // returns 8\n*\n* nbytes = bytesPerElement( 'generic' );\n* // returns null\n*/\n\n// MODULES //\n\nvar bytesPerElement = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = bytesPerElement;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar BYTES_PER_ELEMENT = require( './bytes_per_element.json' );\n\n\n// MAIN //\n\n/**\n* Returns the number of bytes per element provided an underlying array data type.\n*\n* @param {string} dtype - data type\n* @returns {(NonNegativeInteger|null)} number of bytes per element\n*\n* @example\n* var nbytes = bytesPerElement( 'float64' );\n* // returns 8\n*\n* nbytes = bytesPerElement( 'generic' );\n* // returns null\n*/\nfunction bytesPerElement( dtype ) {\n\treturn BYTES_PER_ELEMENT[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = bytesPerElement;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Given a stride array, determine array iteration order.\n*\n* @module @stdlib/ndarray/base/iteration-order\n*\n* @example\n* var iterationOrder = require( '@stdlib/ndarray/base/iteration-order' );\n*\n* var o = iterationOrder( [ 2, 1 ] );\n* // returns 1\n*\n* o = iterationOrder( [ -2, 1 ] );\n* // returns 0\n*\n* o = iterationOrder( [ -2, -1 ] );\n* // returns -1\n*/\n\n// MODULES //\n\nvar iterationOrder = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterationOrder;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns array iteration order.\n*\n* ## Notes\n*\n* -   Return value key:\n*\n*     -   `0`: unordered (i.e., strides of mixed sign; e.g., `[ 9, -3, 1 ]`)\n*     -   `1`: ordered left-to-right (i.e., all nonnegative strides)\n*     -   `-1`: ordered right-to-left (i.e., all negative strides)\n*\n* @param {IntegerArray} strides - stride array\n* @returns {integer} iteration order\n*\n* @example\n* var o = iterationOrder( [ 2, 1 ] );\n* // returns 1\n*\n* o = iterationOrder( [ -2, 1 ] );\n* // returns 0\n*\n* o = iterationOrder( [ -2, -1 ] );\n* // returns -1\n*/\nfunction iterationOrder( strides ) {\n\tvar cnt;\n\tvar i;\n\n\tcnt = 0;\n\tfor ( i = 0; i < strides.length; i++ ) {\n\t\tif ( strides[ i ] < 0 ) {\n\t\t\tcnt += 1;\n\t\t}\n\t}\n\tif ( cnt === 0 ) {\n\t\t// All nonnegative strides:\n\t\treturn 1|0; // asm-type annotation\n\t}\n\tif ( cnt === strides.length ) {\n\t\t// All negative strides:\n\t\treturn -1|0; // asm-type annotation\n\t}\n\t// Strides of mixed signs:\n\treturn 0|0; // asm-type annotation\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterationOrder;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\n\n\n// MAIN //\n\n/**\n* Determines the order of a multidimensional array based on a provided stride array.\n*\n* @param {IntegerArray} strides - stride array\n* @returns {integer} order\n*\n* @example\n* var strides2order = require( '@stdlib/ndarray/base/strides2order' );\n*\n* var order = strides2order( [ 2, 1 ] );\n* // returns 1\n*\n* order = strides2order( [ 1, 2 ] );\n* // returns 2\n*\n* order = strides2order( [ 1, 1, 1 ] );\n* // returns 3\n*\n* order = strides2order( [ 2, 3, 1 ] );\n* // returns 0\n*/\nfunction strides2order( strides ) {\n\tvar column;\n\tvar ndims;\n\tvar row;\n\tvar s1;\n\tvar s2;\n\tvar i;\n\n\tndims = strides.length;\n\tif ( ndims === 0 ) {\n\t\treturn 0|0; // 'none'\n\t}\n\tcolumn = true;\n\trow = true;\n\n\ts1 = abs( strides[ 0 ] );\n\tfor ( i = 1; i < ndims; i++ ) {\n\t\ts2 = abs( strides[ i ] );\n\t\tif ( column && s2 < s1 ) {\n\t\t\tcolumn = false;\n\t\t} else if ( row && s2 > s1 ) {\n\t\t\trow = false;\n\t\t}\n\t\tif ( row || column ) {\n\t\t\ts1 = s2;\n\t\t} else {\n\t\t\treturn 0|0; // 'none'\n\t\t}\n\t}\n\tif ( row && column ) {\n\t\treturn 3|0; // 'both'\n\t}\n\tif ( row ) {\n\t\treturn 1|0; // 'row-major'\n\t}\n\treturn 2|0; // 'column-major'\n}\n\n\n// EXPORTS //\n\nmodule.exports = strides2order;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine the order of a multidimensional array based on a provided stride array.\n*\n* @module @stdlib/ndarray/base/strides2order\n*\n* @example\n* var strides2order = require( '@stdlib/ndarray/base/strides2order' );\n*\n* var order = strides2order( [ 2, 1 ] );\n* // returns 1\n*\n* order = strides2order( [ 1, 2 ] );\n* // returns 2\n*\n* order = strides2order( [ 1, 1, 1 ] );\n* // returns 3\n*\n* order = strides2order( [ 2, 3, 1 ] );\n* // returns 0\n*/\n\n// MODULES //\n\nvar strides2order = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = strides2order;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the minimum and maximum linear indices in an underlying data buffer which are accessible to an array view.\n*\n* @module @stdlib/ndarray/base/minmax-view-buffer-index\n*\n* @example\n* var minmaxViewBufferIndex = require( '@stdlib/ndarray/base/minmax-view-buffer-index' );\n*\n* var shape = [ 10, 10 ];\n* var strides = [ 10, 1 ];\n* var offset = 10;\n*\n* var idx = minmaxViewBufferIndex( shape, strides, offset );\n* // returns [ 10, 109 ]\n*\n* @example\n* var minmaxViewBufferIndex = require( '@stdlib/ndarray/base/minmax-view-buffer-index' );\n*\n* var shape = [ 10, 10 ];\n* var strides = [ -10, -1 ];\n* var offset = 99;\n*\n* var idx = minmaxViewBufferIndex( shape, strides, offset );\n* // returns [ 0, 99 ]\n*\n* @example\n* var minmaxViewBufferIndex = require( '@stdlib/ndarray/base/minmax-view-buffer-index' );\n*\n* var shape = [ 10, 10 ];\n* var strides = [ 1, 10 ];\n* var offset = 10;\n*\n* var idx = minmaxViewBufferIndex( shape, strides, offset );\n* // returns [ 10, 109 ]\n*\n* @example\n* var minmaxViewBufferIndex = require( '@stdlib/ndarray/base/minmax-view-buffer-index' );\n*\n* var shape = [ 10, 10 ];\n* var strides = [ -1, -10 ];\n* var offset = 99;\n*\n* var idx = minmaxViewBufferIndex( shape, strides, offset );\n* // returns [ 0, 99 ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar assign = require( './assign.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the minimum and maximum linear indices in an underlying data buffer which are accessible to an array view.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - stride array\n* @param {NonNegativeInteger} offset - index offset\n* @returns {Array} linear indices\n*\n* @example\n* var shape = [ 10, 10 ];\n* var strides = [ 10, 1 ];\n* var offset = 10;\n*\n* var idx = minmaxViewBufferIndex( shape, strides, offset );\n* // returns [ 10, 109 ]\n*\n* @example\n* var shape = [ 10, 10 ];\n* var strides = [ -10, -1 ];\n* var offset = 99;\n*\n* var idx = minmaxViewBufferIndex( shape, strides, offset );\n* // returns [ 0, 99 ]\n*\n* @example\n* var shape = [ 10, 10 ];\n* var strides = [ 1, 10 ];\n* var offset = 10;\n*\n* var idx = minmaxViewBufferIndex( shape, strides, offset );\n* // returns [ 10, 109 ]\n*\n* @example\n* var shape = [ 10, 10 ];\n* var strides = [ -1, -10 ];\n* var offset = 99;\n*\n* var idx = minmaxViewBufferIndex( shape, strides, offset );\n* // returns [ 0, 99 ]\n*/\nfunction minmaxViewBufferIndex( shape, strides, offset ) {\n\tvar ndims;\n\tvar min;\n\tvar max;\n\tvar s;\n\tvar i;\n\n\tndims = shape.length;\n\tmin = offset;\n\tmax = offset;\n\tfor ( i = 0; i < ndims; i++ ) {\n\t\tif ( shape[ i ] === 0 ) {\n\t\t\treturn [ offset, offset ];\n\t\t}\n\t\ts = strides[ i ];\n\t\tif ( s > 0 ) {\n\t\t\tmax += s * ( shape[i]-1 );\n\t\t} else if ( s < 0 ) {\n\t\t\tmin += s * ( shape[i]-1 ); // decrements min\n\t\t}\n\t}\n\treturn [ min, max ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = minmaxViewBufferIndex;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the minimum and maximum linear indices in an underlying data buffer which are accessible to an array view and assigns results to a provided output array.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - stride array\n* @param {NonNegativeInteger} offset - index offset\n* @param {(Array|TypedArray|Object)} out - output object\n* @returns {(Array|TypedArray|Object)} linear indices\n*\n* @example\n* var shape = [ 10, 10 ];\n* var strides = [ 10, 1 ];\n* var offset = 10;\n*\n* var out = [ 0, 0 ];\n* var idx = minmaxViewBufferIndex( shape, strides, offset, out );\n* // returns [ 10, 109 ]\n*\n* var bool = ( idx === out );\n* // returns true\n*\n* @example\n* var shape = [ 10, 10 ];\n* var strides = [ -10, -1 ];\n* var offset = 99;\n*\n* var out = [ 0, 0 ];\n* var idx = minmaxViewBufferIndex( shape, strides, offset, out );\n* // returns [ 0, 99 ]\n*\n* var bool = ( idx === out );\n* // returns true\n*\n* @example\n* var shape = [ 10, 10 ];\n* var strides = [ 1, 10 ];\n* var offset = 10;\n*\n* var out = [ 0, 0 ];\n* var idx = minmaxViewBufferIndex( shape, strides, offset, out );\n* // returns [ 10, 109 ]\n*\n* var bool = ( idx === out );\n* // returns true\n*\n* @example\n* var shape = [ 10, 10 ];\n* var strides = [ -1, -10 ];\n* var offset = 99;\n*\n* var out = [ 0, 0 ];\n* var idx = minmaxViewBufferIndex( shape, strides, offset, out );\n* // returns [ 0, 99 ]\n*\n* var bool = ( idx === out );\n* // returns true\n*/\nfunction minmaxViewBufferIndex( shape, strides, offset, out ) {\n\tvar ndims;\n\tvar min;\n\tvar max;\n\tvar s;\n\tvar i;\n\n\tndims = shape.length;\n\tmin = offset;\n\tmax = offset;\n\tfor ( i = 0; i < ndims; i++ ) {\n\t\tif ( shape[ i ] === 0 ) {\n\t\t\tout[ 0 ] = offset;\n\t\t\tout[ 1 ] = offset;\n\t\t\treturn out;\n\t\t}\n\t\ts = strides[ i ];\n\t\tif ( s > 0 ) {\n\t\t\tmax += s * ( shape[i]-1 );\n\t\t} else if ( s < 0 ) {\n\t\t\tmin += s * ( shape[i]-1 ); // decrements min\n\t\t}\n\t}\n\tout[ 0 ] = min;\n\tout[ 1 ] = max;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = minmaxViewBufferIndex;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the real component of a double-precision complex floating-point number.\n*\n* @module @stdlib/complex/real\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n* var real = require( '@stdlib/complex/real' );\n*\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var re = real( z );\n* // returns 5.0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the real component of a double-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} real component\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n*\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var re = real( z );\n* // returns 5.0\n*/\nfunction real( z ) {\n\treturn z.re;\n}\n\n\n// EXPORTS //\n\nmodule.exports = real;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the imaginary component of a double-precision complex floating-point number.\n*\n* @module @stdlib/complex/imag\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n* var imag = require( '@stdlib/complex/imag' );\n*\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var im = imag( z );\n* // returns 3.0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the imaginary component of a double-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} imaginary component\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n*\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var im = imag( z );\n* // returns 3.0\n*/\nfunction imag( z ) {\n\treturn z.im;\n}\n\n\n// EXPORTS //\n\nmodule.exports = imag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Escape a regular expression string or pattern.\n*\n* @module @stdlib/utils/escape-regexp-string\n*\n* @example\n* var rescape = require( '@stdlib/utils/escape-regexp-string' );\n*\n* var str = rescape( '[A-Z]*' );\n* // returns '\\\\[A\\\\-Z\\\\]\\\\*'\n*/\n\n// MODULES //\n\nvar rescape = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = rescape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar RE_CHARS = /[-\\/\\\\^$*+?.()|[\\]{}]/g; // eslint-disable-line no-useless-escape\n\n\n// MAIN //\n\n/**\n* Escapes a regular expression string.\n*\n* @param {string} str - regular expression string\n* @throws {TypeError} first argument must be a string\n* @returns {string} escaped string\n*\n* @example\n* var str = rescape( '[A-Z]*' );\n* // returns '\\\\[A\\\\-Z\\\\]\\\\*'\n*/\nfunction rescape( str ) {\n\tvar len;\n\tvar s;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a regular expression string. Value: `%s`.', str ) );\n\t}\n\t// Check if the string starts with a forward slash...\n\tif ( str[ 0 ] === '/' ) {\n\t\t// Find the last forward slash...\n\t\tlen = str.length;\n\t\tfor ( i = len-1; i >= 0; i-- ) {\n\t\t\tif ( str[ i ] === '/' ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t// If we searched the string to no avail or if the first letter is not `/`, assume that the string is not of the form `/[...]/[guimy]`:\n\tif ( i === void 0 || i <= 0 ) {\n\t\treturn str.replace( RE_CHARS, '\\\\$&' );\n\t}\n\t// We need to de-construct the string...\n\ts = str.substring( 1, i );\n\n\t// Only escape the characters between the `/`:\n\ts = s.replace( RE_CHARS, '\\\\$&' );\n\n\t// Reassemble:\n\tstr = str[ 0 ] + s + str.substring( i );\n\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = rescape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar exec = require( './exec.js' );\n\n\n// MAIN //\n\n/**\n* Attempts to call a `RegExp` method.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if able to call a `RegExp` method\n*/\nfunction test( value ) {\n\ttry {\n\t\texec.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar exec = RegExp.prototype.exec; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = exec;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a regular expression.\n*\n* @module @stdlib/assert/is-regexp\n*\n* @example\n* var isRegExp = require( '@stdlib/assert/is-regexp' );\n*\n* var bool = isRegExp( /\\.+/ );\n* // returns true\n*\n* bool = isRegExp( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isRegExp = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isRegExp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar test = require( './try2exec.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a regular expression.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a regular expression\n*\n* @example\n* var bool = isRegExp( /\\.+/ );\n* // returns true\n*\n* @example\n* var bool = isRegExp( {} );\n* // returns false\n*/\nfunction isRegExp( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof RegExp ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object RegExp]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isRegExp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Replace search occurrences with a replacement string.\n*\n* @module @stdlib/string/replace\n*\n* @example\n* var replace = require( '@stdlib/string/replace' );\n*\n* var str = 'beep';\n* var out = replace( str, 'e', 'o' );\n* // returns 'boop'\n*\n* str = 'Hello World';\n* out = replace( str, /world/i, 'Mr. President' );\n* // returns 'Hello Mr. President'\n*/\n\n// MODULES //\n\nvar replace = require( './replace.js' );\n\n\n// EXPORTS //\n\nmodule.exports = replace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar rescape = require( '@stdlib/utils/escape-regexp-string' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isRegExp = require( '@stdlib/assert/is-regexp' );\nvar format = require( './../../format' );\n\n\n// MAIN //\n\n/**\n* Replace search occurrences with a replacement string.\n*\n* @param {string} str - input string\n* @param {(string|RegExp)} search - search expression\n* @param {(string|Function)} newval - replacement value or function\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument argument must be a string or regular expression\n* @throws {TypeError} third argument must be a string or function\n* @returns {string} new string containing replacement(s)\n*\n* @example\n* var str = 'beep';\n* var out = replace( str, 'e', 'o' );\n* // returns 'boop'\n*\n* @example\n* var str = 'Hello World';\n* var out = replace( str, /world/i, 'Mr. President' );\n* // returns 'Hello Mr. President'\n*\n* @example\n* var capitalize = require( '@stdlib/string/capitalize' );\n*\n* var str = 'Oranges and lemons say the bells of St. Clement\\'s';\n*\n* function replacer( match, p1 ) {\n*     return capitalize( p1 );\n* }\n*\n* var out = replace( str, /([^\\s]*)/gi, replacer);\n* // returns 'Oranges And Lemons Say The Bells Of St. Clement\\'s'\n*/\nfunction replace( str, search, newval ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( isString( search ) ) {\n\t\tsearch = rescape( search );\n\t\tsearch = new RegExp( search, 'g' );\n\t}\n\telse if ( !isRegExp( search ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string or regular expression. Value: `%s`.', search ) );\n\t}\n\tif ( !isString( newval ) && !isFunction( newval ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a string or replacement function. Value: `%s`.', newval ) );\n\t}\n\treturn str.replace( search, newval );\n}\n\n\n// EXPORTS //\n\nmodule.exports = replace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasArrayBuffer = ( typeof ArrayBuffer === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an ArrayBuffer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an ArrayBuffer\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var bool = isArrayBuffer( new ArrayBuffer( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isArrayBuffer( [] );\n* // returns false\n*/\nfunction isArrayBuffer( value ) {\n\treturn (\n\t\t( hasArrayBuffer && value instanceof ArrayBuffer ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object ArrayBuffer]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArrayBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an ArrayBuffer.\n*\n* @module @stdlib/assert/is-arraybuffer\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var isArrayBuffer = require( '@stdlib/assert/is-arraybuffer' );\n*\n* var bool = isArrayBuffer( new ArrayBuffer( 10 ) );\n* // returns true\n*\n* bool = isArrayBuffer( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isArrayBuffer = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isArrayBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayBuffer = require( './../../is-arraybuffer' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar GlobalArrayBuffer = require( './arraybuffer.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `ArrayBuffer` support.\n*\n* @returns {boolean} boolean indicating if an environment has `ArrayBuffer` support\n*\n* @example\n* var bool = hasArrayBufferSupport();\n* // returns <boolean>\n*/\nfunction hasArrayBufferSupport() {\n\tvar bool;\n\tvar view;\n\tvar buf;\n\n\tif ( typeof GlobalArrayBuffer !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tbuf = new GlobalArrayBuffer( 16 );\n\t\tbool = ( isArrayBuffer( buf ) && typeof GlobalArrayBuffer.isView === 'function' );\n\t\tif ( bool ) {\n\t\t\tview = new Float64Array( buf );\n\t\t\tview[ 0 ] = -3.14;\n\t\t\tview[ 1 ] = NaN;\n\t\t\tbool = (\n\t\t\t\tbool &&\n\t\t\t\tGlobalArrayBuffer.isView( view ) &&\n\t\t\t\tbuf.byteLength === 16 &&\n\t\t\t\tview[ 0 ] === -3.14 &&\n\t\t\t\tview[ 1 ] !== view[ 1 ]\n\t\t\t);\n\t\t}\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasArrayBufferSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof ArrayBuffer === 'function' ) ? ArrayBuffer : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Constructor which returns an object used to represent a generic, fixed-length raw binary data buffer.\n*\n* @module @stdlib/array/buffer\n*\n* @example\n* var ctor = require( '@stdlib/array/buffer' );\n*\n* var buf = new ctor( 10 );\n* // returns <ArrayBuffer>\n*/\n\n// MODULES //\n\nvar hasArrayBufferSupport = require( '@stdlib/assert/has-arraybuffer-support' );\nvar builtin = require( './arraybuffer.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasArrayBufferSupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `ArrayBuffer` support.\n*\n* @module @stdlib/assert/has-arraybuffer-support\n*\n* @example\n* var hasArrayBufferSupport = require( '@stdlib/assert/has-arraybuffer-support' );\n*\n* var bool = hasArrayBufferSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasArrayBufferSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasArrayBufferSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof ArrayBuffer === 'function' ) ? ArrayBuffer : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Constructor which returns an object used to represent a generic, fixed-length raw binary data buffer.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a `DataView`.\n*\n* @module @stdlib/assert/is-dataview\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var DataView = require( '@stdlib/array/dataview' );\n* var isDataView = require( '@stdlib/assert/is-dataview' );\n*\n* var bool = isDataView( new DataView( new ArrayBuffer( 10 ) ) );\n* // returns true\n*\n* bool = isDataView( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isDataView = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isDataView;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasDataView = ( typeof DataView === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `DataView`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a DataView\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var DataView = require( '@stdlib/array/dataview' );\n*\n* var bool = isDataView( new DataView( new ArrayBuffer( 10 ) ) );\n* // returns true\n*\n* @example\n* var bool = isDataView( [] );\n* // returns false\n*/\nfunction isDataView( value ) {\n\treturn (\n\t\t( hasDataView && value instanceof DataView ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object DataView]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isDataView;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isDataView = require( './../../is-dataview' );\nvar ArrayBuffer = require( '@stdlib/array/buffer' );\nvar GlobalDataView = require( './dataview.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `DataView` support.\n*\n* @returns {boolean} boolean indicating if an environment has `DataView` support\n*\n* @example\n* var bool = hasDataViewSupport();\n* // returns <boolean>\n*/\nfunction hasDataViewSupport() {\n\tvar bool;\n\tvar view;\n\tvar buf;\n\n\tif ( typeof GlobalDataView !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tbuf = new ArrayBuffer( 24 );\n\t\tview = new GlobalDataView( buf, 8 );\n\t\tbool = ( isDataView( view ) && typeof view.getFloat64 === 'function' && typeof view.setFloat64 === 'function' );\n\t\tif ( bool ) {\n\t\t\tview.setFloat64( 0, -3.14 );\n\t\t\tview.setFloat64( 8, NaN );\n\t\t\tbool = (\n\t\t\t\tbool &&\n\t\t\t\tview.buffer === buf &&\n\t\t\t\tview.byteLength === 16 &&\n\t\t\t\tview.byteOffset === 8 &&\n\t\t\t\tview.getFloat64( 0 ) === -3.14 &&\n\t\t\t\tview.getFloat64( 8 ) !== view.getFloat64( 8 )\n\t\t\t);\n\t\t}\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasDataViewSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof DataView === 'function' ) ? DataView : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Constructor which returns a data view representing a provided array buffer.\n*\n* @module @stdlib/array/dataview\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var DataView = require( '@stdlib/array/dataview' );\n*\n* var buf = new ArrayBuffer( 10 );\n* // returns <ArrayBuffer>\n*\n* var dv = new DataView( buf );\n* // returns <DataView>\n*/\n\n// MODULES //\n\nvar hasDataViewSupport = require( '@stdlib/assert/has-dataview-support' );\nvar builtin = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasDataViewSupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `DataView` support.\n*\n* @module @stdlib/assert/has-dataview-support\n*\n* @example\n* var hasDataViewSupport = require( '@stdlib/assert/has-dataview-support' );\n*\n* var bool = hasDataViewSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasDataViewSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasDataViewSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof DataView === 'function' ) ? DataView : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Constructor which returns a data view representing a provided array buffer.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* global BigInt */\n\n'use strict';\n\n// MAIN //\n\nvar BigInteger = ( typeof BigInt === 'function' ) ? BigInt : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = BigInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar DTYPES = require( './dtypes.json' );\n\n\n// MAIN //\n\n/**\n* Returns a list of ndarray data types.\n*\n* @returns {StringArray} list of ndarray data types\n*\n* @example\n* var list = dtypes();\n* // returns [...]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nmodule.exports = dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable stdlib/empty-line-before-comment */\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an object mapping supported data type strings to enumeration constants.\n*\n* ## Notes\n*\n* -   Downstream consumers of this mapping should **not** rely on specific integer values (e.g., `INT8 == 0`). Instead, the object should be used in an opaque manner.\n* -   The main purpose of this function is JavaScript and C inter-operation of ndarray objects. While certain dtypes, such as \"generic\" and \"binary\", have special behavior in JavaScript, they do not have a direct complement in C.\n*\n* @private\n* @returns {Object} object mapping supported dtypes to enumeration constants\n*\n* @example\n* var table = enumeration();\n* // returns <Object>\n*/\nfunction enumeration() {\n\t// NOTE: the following should match the C `dtypes.h` enumeration!!!!\n\treturn {\n\t\t// Boolean data types:\n\t\t'bool': 0,\n\n\t\t// Integer data types:\n\t\t'int8': 1,\n\t\t'uint8': 2,\n\t\t'uint8c': 3,\n\t\t'int16': 4,\n\t\t'uint16': 5,\n\t\t'int32': 6,\n\t\t'uint32': 7,\n\t\t'int64': 8,\n\t\t'uint64': 9,\n\t\t// 'int128': 10, // uncomment once supported\n\t\t// 'uint128': 11,\n\t\t// 'int256': 12,\n\t\t// 'uint256': 13,\n\n\t\t// Floating-point data types:\n\t\t// 'float16': 14,\n\t\t// 'bfloat16': 15,\n\t\t'float32': 10,\n\t\t'float64': 11,\n\t\t// 'float128': 18, // uncomment once supported\n\n\t\t// Complex floating-point number data types:\n\t\t'complex64': 12,\n\t\t'complex128': 13,\n\n\t\t// Data type for \"binary\" data (i.e., data stored in a Node.js `Buffer` object):\n\t\t'binary': 14,\n\n\t\t// Data type for \"generic\" JavaScript values (objects):\n\t\t'generic': 15,\n\n\t\t// Define a signaling value which is guaranteed not to be a valid type enumeration value:\n\t\t'notype': 17,\n\n\t\t// Indicate the start of user defined type numbers (leaving room for type growth above):\n\t\t'userdefined_type': 256\n\t};\n}\n\n\n// EXPORTS //\n\nmodule.exports = enumeration;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar objectKeys = require( '@stdlib/utils/keys' );\n\n\n// MAIN //\n\n/**\n* Copies all enumerable own properties from a source object to a target object as enumerable read-only properties.\n*\n* @private\n* @param {Object} target - target object\n* @param {Object} source - source object\n* @returns {Object} modified target object\n*\n* @example\n* var source = {\n*     'beep': 'boop'\n* };\n* var target = {};\n*\n* var out = assign( target, source );\n* // returns <Object>\n*\n* var bool = ( out === target );\n* // returns true\n*\n* var v = target.beep;\n* // returns 'boop'\n*/\nfunction assign( target, source ) {\n\tvar keys;\n\tvar k;\n\tvar i;\n\n\tkeys = objectKeys( source );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tk = keys[ i ];\n\t\tsetReadOnly( target, k, source[ k ] );\n\t}\n\treturn target;\n}\n\n\n// EXPORTS //\n\nmodule.exports = assign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of ndarray data types.\n*\n* @module @stdlib/ndarray/dtypes\n*\n* @example\n* var dtypes = require( '@stdlib/ndarray/dtypes' );\n*\n* var list = dtypes();\n* // returns [...]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar dtypes = require( './main.js' );\nvar enumeration = require( './enum.js' );\nvar assign = require( './assign.js' );\n\n\n// MAIN //\n\nsetReadOnly( dtypes, 'enum', enumeration );\nassign( dtypes, enumeration() );\n\n\n// EXPORTS //\n\nmodule.exports = dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ORDERS = require( './orders.json' );\n\n\n// MAIN //\n\n/**\n* Returns a list of ndarray orders.\n*\n* @returns {StringArray} list of ndarray orders\n*\n* @example\n* var list = orders();\n* // returns [ 'row-major', 'column-major' ]\n*/\nfunction orders() {\n\treturn ORDERS.slice();\n}\n\n\n// EXPORTS //\n\nmodule.exports = orders;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an object mapping supported orders to integer values for purposes of C inter-operation.\n*\n* ## Notes\n*\n* -   Downstream consumers of this mapping should **not** rely on specific integer values (e.g., `row-major == 1`). Instead, the object should be used in an opaque manner.\n* -   The main purpose of this function is JavaScript and C inter-operation of ndarray objects.\n*\n* @returns {Object} object mapping supported orders to integer values\n*\n* @example\n* var table = enumerated();\n* // returns <Object>\n*/\nfunction enumerated() {\n\t// NOTE: the following should match the C `orders.h` enumeration!!!!\n\treturn {\n\t\t// Row-major (C-style):\n\t\t'row-major': 1,\n\n\t\t// Column-major (Fortran-style):\n\t\t'column-major': 2\n\t};\n}\n\n\n// EXPORTS //\n\nmodule.exports = enumerated;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of ndarray orders.\n*\n* @module @stdlib/ndarray/orders\n*\n* @example\n* var orders = require( '@stdlib/ndarray/orders' );\n*\n* var list = orders();\n* // returns [ 'row-major', 'column-major' ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar orders = require( './main.js' );\nvar enumeration = require( './enum.js' );\n\n\n// MAIN //\n\nsetReadOnly( orders, 'enum', enumeration );\n\n\n// EXPORTS //\n\nmodule.exports = orders;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of ndarray index modes.\n*\n* @module @stdlib/ndarray/index-modes\n*\n* @example\n* var modes = require( '@stdlib/ndarray/index-modes' );\n*\n* var list = modes();\n* // returns [ 'throw', 'clamp', 'wrap' ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar modes = require( './main.js' );\nvar enumeration = require( './enum.js' );\n\n\n// MAIN //\n\nsetReadOnly( modes, 'enum', enumeration );\n\n\n// EXPORTS //\n\nmodule.exports = modes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar MODES = require( './modes.json' );\n\n\n// MAIN //\n\n/**\n* Returns a list of ndarray index modes.\n*\n* @returns {StringArray} list of ndarray index modes\n*\n* @example\n* var list = modes();\n* // returns [ 'throw', 'clamp', 'wrap' ]\n*/\nfunction modes() {\n\treturn MODES.slice();\n}\n\n\n// EXPORTS //\n\nmodule.exports = modes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an object mapping supported index modes to integer values for purposes of C inter-operation.\n*\n* ## Notes\n*\n* -   Downstream consumers of this mapping should **not** rely on specific integer values (e.g., `throw == 1`). Instead, the object should be used in an opaque manner.\n* -   The main purpose of this function is JavaScript and C inter-operation of ndarray objects.\n*\n* @returns {Object} object mapping supported index modes to integer values\n*\n* @example\n* var table = enumerated();\n* // returns <Object>\n*/\nfunction enumerated() {\n\t// NOTE: the following should match the C `index_modes.h` enumeration!!!!\n\treturn {\n\t\t'throw': 1,\n\t\t'clamp': 2,\n\t\t'wrap': 3\n\t};\n}\n\n\n// EXPORTS //\n\nmodule.exports = enumerated;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar IS_LITTLE_ENDIAN = require( '@stdlib/assert/is-little-endian' );\nvar ArrayBuffer = require( '@stdlib/array/buffer' );\nvar DataView = require( '@stdlib/array/dataview' );\nvar BigInt = require( '@stdlib/bigint/ctor' );\nvar dtypes = require( './../../../dtypes' ).enum;\nvar orders = require( './../../../orders' ).enum;\nvar modes = require( './../../../index-modes' ).enum;\n\n\n// VARIABLES //\n\nvar DTYPES = dtypes();\nvar ORDERS = orders();\nvar MODES = modes();\n\n\n// FUNCTIONS //\n\n/**\n* Serializes ndarray meta data to a `DataView`.\n*\n* ## Notes\n*\n* -   This function takes into account ndarray-like objects which may support index modes.\n*\n* -   This function defaults to returning cached serialized meta data. To force serialization, set the private `__meta_dataview__` property to `null`.\n*\n* -   Serialization is performed according to host byte order (endianness).\n*\n* -   Meta data format:\n*\n*     ```text\n*     | endianness (1 byte) | <dtype> (2 bytes) | <ndims> (8 bytes) | <shape> (ndims*8 bytes) | <strides> (ndims*8 bytes) | <offset> (8 bytes) | <order> (1 byte) | <mode> (1 byte) | <nsubmodes> (8 bytes) | <submodes> (nsubmodes*1 bytes) | <flags> (4 bytes) |\n*     ```\n*\n*     which translates to the following `ArrayBuffer` layout:\n*\n*     ```text\n*     ArrayBuffer[\n*         <endianness>[int8],\n*         <dtype>[int16],\n*         <ndims>[int64],\n*         <shape>[ndims*int64],\n*         <strides>[ndims*int64],\n*         <offset>[int64],\n*         <order>[int8],\n*         <mode>[int8],\n*         <nsubmodes>[int64],\n*         <submodes>[nsubmodes*int8],\n*         <flags>[int32]\n*     ]\n*     ```\n*\n*     where `strides` and `offset` are in units of bytes.\n*\n* -   If the endianness is `1`, the byte order is little endian. If the endianness is `0`, the byte order is big endian.\n*\n* -   Buffer length:\n*\n*     ```text\n*     1 + 2 + 8 + (ndims*8) + (ndims*8) + 8 + 1 + 1 + 8 + (nsubmodes*1) + 4 = 33 + (ndims*16) + nsubmodes\n*     ```\n*\n*     For example, consider a three-dimensional ndarray with one subscript index mode (submode):\n*\n*     ```text\n*     33 + (3*16) + 1 = 82 bytes\n*     ```\n*\n* -   Views:\n*\n*     -   endianness: `Int8Array( buf, 0, 1 )`\n*     -   dtype: `Int16Array( buf, 1, 1 )`\n*     -   ndims: `Int64Array( buf, 3, 1 )`\n*     -   shape: `Int64Array( buf, 11, ndims )`\n*     -   strides: `Int64Array( buf, 11+(ndims*8), ndims )`\n*     -   offset: `Int64Array( buf, 11+(ndims*16), 1 )`\n*     -   order: `Int8Array( buf, 19+(ndims*16), 1 )`\n*     -   mode: `Int8Array( buf, 20+(ndims*16), 1 )`\n*     -   nsubmodes: `Int64Array( buf, 21+(ndims*16), 1 )`\n*     -   submodes: `Int8Array( buf, 29+(ndims*16), nsubmodes )`\n*     -   flags: `Int32Array( buf, 29+(ndims*16)+nsubmodes, 1 )`\n*\n* @private\n* @returns {DataView} serialized meta data\n*/\nfunction meta2dataview() {\n\t/* eslint-disable no-invalid-this */\n\tvar nbytes;\n\tvar flgs;\n\tvar len;\n\tvar dt;\n\tvar sh;\n\tvar st;\n\tvar sm;\n\tvar v;\n\tvar m;\n\tvar o;\n\tvar s;\n\tvar N;\n\tvar M;\n\tvar i;\n\n\tm = this._mode || 'throw';\n\tsm = this._submode || [ m ];\n\tN = this._ndims;\n\tM = sm.length;\n\n\t// Compute the amount of memory we need to allocate for storing meta data:\n\tlen = 33 + (N*16) + M;\n\n\t// Check if we've already serialized ndarray meta data and can reuse an already allocated array buffer...\n\tv = this.__meta_dataview__;\n\tif ( v && v.byteLength === len ) { // Note: the byte length check is only a bare minimum sanity check, as cached contents may still be \"stale\" (e.g., shape and/or strides may have changed)\n\t\treturn v;\n\t}\n\t// Allocate raw memory and create a view for interfacing with the allocated memory:\n\tv = new DataView( new ArrayBuffer( len ) );\n\n\t// Retrieve ndarray meta data:\n\tsh = this._shape;\n\tst = this._strides;\n\tdt = this._dtype;\n\tnbytes = this._bytesPerElement;\n\n\t// Endianness: (byteoffset: 0; bytelength: 1)\n\to = 0;\n\tv.setInt8( o, ( IS_LITTLE_ENDIAN ) ? 1 : 0 );\n\n\t// Data type: (byteoffset: 1; bytelength: 2)\n\to += 1;\n\tv.setInt16( o, DTYPES[ dt ], IS_LITTLE_ENDIAN );\n\n\t// Number of dimensions: (byteoffset: 3; bytelength: 8)\n\to += 2;\n\tv.setBigInt64( o, BigInt( N ), IS_LITTLE_ENDIAN );\n\n\t// Shape and strides: (byteoffset: 11 and 11+(ndims*8), respectively; bytelength: ndims*8 for both shape and strides, and, thus, ndims*16 total)\n\ts = N * 8; // stride length between a dimension (shape[i]) and its associated stride\n\to += 8;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv.setBigInt64( o, BigInt( sh[i] ), IS_LITTLE_ENDIAN );\n\t\tv.setBigInt64( o+s, BigInt( st[i]*nbytes ), IS_LITTLE_ENDIAN );\n\t\to += 8;\n\t}\n\t// Offset: (byteoffset: 11+(ndims*16); bytelength: 8)\n\to += s;\n\tv.setBigInt64( o, BigInt( this._offset*nbytes ), IS_LITTLE_ENDIAN );\n\n\t// Order: (byteoffset: 19+(ndims*16); bytelength: 1)\n\to += 8;\n\tv.setInt8( o, ORDERS[ this._order ] );\n\n\t// Mode: (byteoffset: 20+(ndims*16); bytelength: 1)\n\to += 1;\n\tv.setInt8( o, MODES[ m ] );\n\n\t// Number of submodes: (byteoffset: 21+(ndims*16); bytelength: 8)\n\to += 1;\n\tv.setBigInt64( o, BigInt( M ), IS_LITTLE_ENDIAN );\n\n\t// Submodes: (byteoffset: 29+(ndims*16); bytelength: nsubmodes*1)\n\to += 8;\n\tfor ( i = 0; i < M; i++ ) {\n\t\tv.setInt8( o, MODES[ sm[i] ] );\n\t\to += 1;\n\t}\n\t// Flags: (byteoffset: 29+(ndims*16)+nsubmodes; bytelength: 4)\n\tflgs = 0|0;\n\tflgs |= ( this._flags.READONLY ) ? 4 : 0; // 00000000 00000000 00000000 00000100\n\tv.setInt32( o, flgs, IS_LITTLE_ENDIAN );\n\n\t// Cache the serialized meta data:\n\tthis.__meta_dataview__ = v;\n\n\treturn v;\n\n\t/* eslint-enable no-invalid-this */\n}\n\n\n// EXPORTS //\n\nmodule.exports = meta2dataview;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* BigInt factory.\n*\n* @module @stdlib/bigint/ctor\n*\n* @example\n* var BigInt = require( '@stdlib/bigint/ctor' );\n*\n* var v = BigInt( '1' );\n* // returns <bigint>\n*/\n\n// MODULES //\n\nvar BigInt = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = BigInt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert an integer-valued double-precision floating-point number to a signed 64-bit integer byte array according to host byte order (endianness).\n*\n* @module @stdlib/number/float64/base/to-int64-bytes\n*\n* @example\n* var float64ToInt64Bytes = require( '@stdlib/number/float64/base/to-int64-bytes' );\n*\n* var bytes = float64ToInt64Bytes( 1.0 );\n* // returns <Uint8Array>\n*\n* @example\n* var Uint8Array = require( '@stdlib/array/uint8' );\n* var float64ToInt64Bytes = require( '@stdlib/number/float64/base/to-int64-bytes' );\n*\n* var out = new Uint8Array( 8 );\n* var bytes = float64ToInt64Bytes( 1.0, out, 1, 0 );\n* // returns <Uint8Array>\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar assign = require( './assign.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar IS_LITTLE_ENDIAN = require( '@stdlib/assert/is-little-endian' );\nvar Uint8Array = require( '@stdlib/array/uint8' );\nvar DataView = require( '@stdlib/array/dataview' );\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// VARIABLES //\n\n// 0xFFFFFFFF = 2**32 - 1 => 11111111 11111111 11111111 11111111\nvar LOW_MASK = 0xFFFFFFFF >>> 0;\n\n// 2**32\nvar TWO_32 = 4294967296;\n\n\n// MAIN //\n\n/**\n* Converts an integer-valued double-precision floating-point number to a signed 64-bit integer byte array according to host byte order (endianness).\n*\n* ## Notes\n*\n* -   This function assumes that the input value is less than the maximum safe double-precision floating-point integer plus one (i.e., `2**53`).\n*\n* @param {number} x - input value\n* @returns {Uint8Array} byte array\n*\n* @example\n* var bytes = float64ToInt64Bytes( 1.0 );\n* // returns <Uint8Array>\n*/\nfunction float64ToInt64Bytes( x ) {\n\tvar bytes;\n\tvar view;\n\tvar hi;\n\tvar lo;\n\n\tbytes = new Uint8Array( 8 );\n\tif ( x === 0 ) {\n\t\treturn bytes;\n\t}\n\t// Get the low 32-bit word:\n\tlo = (x&LOW_MASK)>>>0;\n\n\t// Get the high 32-bit word:\n\thi = floor( x/TWO_32 );\n\n\t// Insert the high and low words according to host byte order (endianness):\n\tview = new DataView( bytes.buffer );\n\tif ( IS_LITTLE_ENDIAN ) {\n\t\tview.setUint32( 0, lo, IS_LITTLE_ENDIAN );\n\t\tview.setUint32( 4, hi, IS_LITTLE_ENDIAN );\n\t} else {\n\t\tview.setUint32( 0, hi, IS_LITTLE_ENDIAN );\n\t\tview.setUint32( 4, lo, IS_LITTLE_ENDIAN );\n\t}\n\treturn bytes;\n}\n\n\n// EXPORTS //\n\nmodule.exports = float64ToInt64Bytes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar IS_LITTLE_ENDIAN = require( '@stdlib/assert/is-little-endian' );\nvar Uint8Array = require( '@stdlib/array/uint8' );\nvar DataView = require( '@stdlib/array/dataview' );\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// VARIABLES //\n\n// 0xFFFFFFFF = 2**32 - 1 => 11111111 11111111 11111111 11111111\nvar LOW_MASK = 0xFFFFFFFF >>> 0;\n\n// 2**32\nvar TWO_32 = 4294967296;\n\n// Byte array workspace:\nvar BYTES = new Uint8Array( 8 );\nvar VIEW = new DataView( BYTES.buffer );\n\n\n// MAIN //\n\n/**\n* Converts an integer-valued double-precision floating-point number to a signed 64-bit integer byte array according to host byte order (endianness).\n*\n* ## Notes\n*\n* -   This function assumes that the input value is less than the maximum safe double-precision floating-point integer plus one (i.e., `2**53`).\n*\n* @param {number} x - input value\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* var Uint8Array = require( '@stdlib/array/uint8' );\n*\n* var out = new Uint8Array( 8 );\n* var bytes = float64ToInt64Bytes( 1.0, out, 1, 0 );\n* // returns <Uint8Array>\n*/\nfunction float64ToInt64Bytes( x, out, stride, offset ) {\n\tvar hi;\n\tvar lo;\n\tvar i;\n\n\tif ( x === 0 ) {\n\t\tfor ( i = 0; i < BYTES.length; i++ ) {\n\t\t\tout[ offset ] = 0;\n\t\t\toffset += stride;\n\t\t}\n\t\treturn out;\n\t}\n\t// Get the low 32-bit word:\n\tlo = (x&LOW_MASK)>>>0;\n\n\t// Get the high 32-bit word:\n\thi = floor( x/TWO_32 );\n\n\t// Insert the high and low words according to host byte order (endianness):\n\tif ( IS_LITTLE_ENDIAN ) {\n\t\tVIEW.setUint32( 0, lo, IS_LITTLE_ENDIAN );\n\t\tVIEW.setUint32( 4, hi, IS_LITTLE_ENDIAN );\n\t} else {\n\t\tVIEW.setUint32( 0, hi, IS_LITTLE_ENDIAN );\n\t\tVIEW.setUint32( 4, lo, IS_LITTLE_ENDIAN );\n\t}\n\tfor ( i = 0; i < BYTES.length; i++ ) {\n\t\tout[ offset ] = BYTES[ i ];\n\t\toffset += stride;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = float64ToInt64Bytes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nvar hasBigIntSupport = require( '@stdlib/assert/has-bigint-support' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar bytesPerElement = require( './../../../base/bytes-per-element' );\nvar iterationOrder = require( './../../../base/iteration-order' );\nvar strides2order = require( './../../../base/strides2order' );\nvar isColumnMajorContiguous = require( './is_column_major_contiguous.js' );\nvar isRowMajorContiguous = require( './is_row_major_contiguous.js' );\nvar isContiguous = require( './is_contiguous.js' );\nvar copyFlags = require( './copy_flags.js' );\nvar igetValue = require( './iget.js' );\nvar isetValue = require( './iset.js' );\nvar setValue = require( './set.js' );\nvar getValue = require( './get.js' );\nvar toJSON = require( './tojson.js' );\nvar toString = require( './tostring.js' ); // eslint-disable-line stdlib/no-redeclare\nvar meta2dataview = require( './meta2dataview.js' );\nvar meta2dataviewPolyfill = require( './meta2dataview.polyfill.js' );\n\n\n// MAIN //\n\n/**\n* ndarray constructor.\n*\n* ## Notes\n*\n* -   To create a zero-dimensional array,\n*\n*     ```javascript\n*     var buffer = [ 1 ];\n*     var shape = [];\n*     var strides = [ 0 ];\n*     var offset = 0;\n*\n*     var out = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*     ```\n*\n* @constructor\n* @param {string} dtype - data type\n* @param {(ArrayLikeObject|TypedArray|Buffer)} buffer - data buffer\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - array strides\n* @param {NonNegativeInteger} offset - index offset\n* @param {string} order - specifies whether an array is row-major (C-style) or column-major (Fortran-style)\n* @returns {ndarray} ndarray instance\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var out = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*/\nfunction ndarray( dtype, buffer, shape, strides, offset, order ) {\n\tvar contiguous;\n\tvar nbytes;\n\tvar ord;\n\tvar len;\n\tvar i;\n\tif ( !(this instanceof ndarray) ) {\n\t\treturn new ndarray( dtype, buffer, shape, strides, offset, order );\n\t}\n\t// Compute the number of elements...\n\tlen = 1;\n\tfor ( i = 0; i < shape.length; i++ ) {\n\t\tlen *= shape[ i ];\n\t}\n\t// Compute the number of bytes...\n\tif ( buffer.BYTES_PER_ELEMENT ) {\n\t\tnbytes = buffer.BYTES_PER_ELEMENT * len;\n\t} else {\n\t\tnbytes = null;\n\t}\n\t// Set private properties...\n\tthis._byteLength = nbytes;\n\tthis._bytesPerElement = bytesPerElement( dtype );\n\tthis._buffer = buffer;\n\tthis._dtype = dtype;\n\tthis._length = len;\n\tthis._ndims = shape.length;\n\tthis._offset = offset;\n\tthis._order = order;\n\tthis._shape = shape;\n\tthis._strides = strides;\n\tthis._accessors = Boolean( buffer.get && buffer.set );\n\n\tthis._iterationOrder = iterationOrder( strides );\n\n\t// Determine if the array can be stored contiguously:\n\tcontiguous = isContiguous( len, shape, strides, offset, this._iterationOrder ); // eslint-disable-line max-len\n\n\t// Infer the array \"order\" from the stride array (this is supplementary to the `order` parameter):\n\tord = strides2order( strides );\n\n\tthis._flags = {\n\t\t'ROW_MAJOR_CONTIGUOUS': isRowMajorContiguous( ord, contiguous ),\n\t\t'COLUMN_MAJOR_CONTIGUOUS': isColumnMajorContiguous( ord, contiguous ),\n\t\t'READONLY': false\n\t};\n\n\t// Initialize a property for caching serialized meta data:\n\tthis.__meta_dataview__ = null;\n\n\treturn this;\n}\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof ndarray\n* @type {string}\n* @default 'ndarray'\n*\n* @example\n* var str = ndarray.name;\n* // returns 'ndarray'\n*/\nsetReadOnly( ndarray, 'name', 'ndarray' );\n\n/**\n* Size (in bytes) of the array (if known).\n*\n* @name byteLength\n* @memberof ndarray.prototype\n* @type {(NonNegativeInteger|null)}\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var buffer = new Float64Array( [ 1, 2, 3, 4, 5, 6 ] );\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'float64', buffer, shape, strides, offset, 'row-major' );\n*\n* var byteLength = x.byteLength;\n* // returns 48\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'byteLength', function get() {\n\treturn this._byteLength;\n});\n\n/**\n* Size (in bytes) of each array element (if known).\n*\n* @name BYTES_PER_ELEMENT\n* @memberof ndarray.prototype\n* @type {(PositiveInteger|null)}\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var buffer = new Float64Array( [ 1, 2, 3, 4, 5, 6 ] );\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'float64', buffer, shape, strides, offset, 'row-major' );\n*\n* var nbytes = x.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'BYTES_PER_ELEMENT', function get() {\n\treturn this._bytesPerElement;\n});\n\n/**\n* Pointer to the underlying data buffer.\n*\n* @name data\n* @memberof ndarray.prototype\n* @type {(Array|TypedArray|Buffer)}\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var data = x.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'data', function get() {\n\treturn this._buffer;\n});\n\n/**\n* Underlying data type.\n*\n* @name dtype\n* @memberof ndarray.prototype\n* @type {string}\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var dtype = x.dtype;\n* // returns 'generic'\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'dtype', function get() {\n\treturn this._dtype;\n});\n\n/**\n* Meta information, such as information concerning the memory layout of the array.\n*\n* @name flags\n* @memberof ndarray.prototype\n* @type {Object}\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var flgs = x.flags;\n* // returns <Object>\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'flags', function get() {\n\treturn copyFlags( this._flags );\n});\n\n/**\n* Length of the array.\n*\n* @name length\n* @memberof ndarray.prototype\n* @type {NonNegativeInteger}\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var len = x.length;\n* // returns 6\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Number of dimensions.\n*\n* @name ndims\n* @memberof ndarray.prototype\n* @type {PositiveInteger}\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var ndims = x.ndims;\n* // returns 2\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'ndims', function get() {\n\treturn this._ndims;\n});\n\n/**\n* Index offset which specifies the buffer index at which to start iterating over array elements.\n*\n* @name offset\n* @memberof ndarray.prototype\n* @type {NonNegativeInteger}\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var o = x.offset;\n* // returns 0\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'offset', function get() {\n\treturn this._offset;\n});\n\n/**\n* Array order.\n*\n* ## Notes\n*\n* -   The array order is either row-major (C-style) or column-major (Fortran-style).\n*\n*\n* @name order\n* @memberof ndarray.prototype\n* @type {string}\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var order = x.order;\n* // returns 'row-major'\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'order', function get() {\n\treturn this._order;\n});\n\n/**\n* Shape of the array.\n*\n* @name shape\n* @memberof ndarray.prototype\n* @type {NonNegativeIntegerArray}\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var s = x.shape;\n* // returns [ 3, 2 ]\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'shape', function get() {\n\treturn this._shape.slice();\n});\n\n/**\n* Index strides which specify how to access data along corresponding array dimensions.\n*\n* @name strides\n* @memberof ndarray.prototype\n* @type {IntegerArray}\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var s = x.strides;\n* // returns [ 2, 1 ]\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'strides', function get() {\n\treturn this._strides.slice();\n});\n\n/**\n* Returns an array element.\n*\n* ## Notes\n*\n* -   The number of indices should **equal** the number of dimensions. Accordingly, for zero-dimensional arrays, no indices should be provided.\n*\n* @name get\n* @memberof ndarray.prototype\n* @type {Function}\n* @param {...integer} [idx] - indices\n* @returns {*} array element\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var v = x.get( 1, 1 );\n* // returns 4\n*/\nsetReadOnly( ndarray.prototype, 'get', getValue );\n\n/**\n* Returns an array element located at a specified linear index.\n*\n* ## Notes\n*\n* -   For zero-dimensional arrays, the input argument is ignored and, for clarity, should not be provided.\n*\n* @name iget\n* @memberof ndarray.prototype\n* @type {Function}\n* @param {integer} [idx] - linear index\n* @returns {*} array element\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var v = x.iget( 3 );\n* // returns 4\n*/\nsetReadOnly( ndarray.prototype, 'iget', igetValue );\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   The number of indices should **equal** the number of dimensions. Accordingly, for zero-dimensional arrays, no indices should be provided.\n*\n* @name set\n* @memberof ndarray.prototype\n* @type {Function}\n* @param {...integer} [idx] - indices\n* @param {*} v - value to set\n* @returns {ndarray} ndarray instance\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var v = x.get( 1, 1 );\n* // returns 4\n*\n* x.set( 1, 1, 10 );\n*\n* var b = x.data;\n* // returns [ 1, 2, 3, 10, 5, 6 ]\n*\n* v = x.get( 1, 1 );\n* // returns 10\n*/\nsetReadOnly( ndarray.prototype, 'set', setValue );\n\n/**\n* Sets an array element located at a specified linear index.\n*\n* ## Notes\n*\n* -   For zero-dimensional arrays, the first, and only, argument should be the value to set.\n*\n* @name iset\n* @memberof ndarray.prototype\n* @type {Function}\n* @param {integer} [idx] - linear index\n* @param {*} v - value to set\n* @returns {ndarray} ndarray instance\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var v = x.iget( 3 );\n* // returns 4\n*\n* x.iset( 3, 10 );\n*\n* var b = x.data;\n* // returns [ 1, 2, 3, 10, 5, 6 ]\n*\n* v = x.iget( 3 );\n* // returns 10\n*/\nsetReadOnly( ndarray.prototype, 'iset', isetValue );\n\n/**\n* Serializes an ndarray as a string.\n*\n* ## Notes\n*\n* -   The method does **not** serialize data outside of the buffer region defined by the array configuration.\n*\n*\n* @name toString\n* @memberof ndarray.prototype\n* @type {Function}\n* @returns {string} serialized ndarray\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6, 7, 8 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 2;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var str = x.toString();\n* // returns \"ndarray( 'generic', [ 3, 4, 5, 6, 7, 8 ], [ 3, 2 ], [ 2, 1 ], 0, 'row-major' )\"\n*/\nsetReadOnly( ndarray.prototype, 'toString', toString );\n\n/**\n* Serializes an ndarray as a JSON object.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying an `ndarray` instance.\n* -   The method does **not** serialize data outside of the buffer region defined by the array configuration.\n*\n*\n* @name toJSON\n* @memberof ndarray.prototype\n* @type {Function}\n* @returns {Object} serialized ndarray\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6, 7, 8 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 2;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var o = x.toJSON();\n* // e.g., returns { 'type': 'ndarray', 'dtype': 'generic', 'flags': {...}, 'offset': 0, 'order': 'row-major', 'shape': [ 3, 2 ], 'strides': [ 2, 1 ], 'data': [ 3, 4, 5, 6, 7, 8 ] }\n*/\nsetReadOnly( ndarray.prototype, 'toJSON', toJSON );\n\n/**\n* Serializes ndarray meta data to a `DataView`.\n*\n* ## Notes\n*\n* -   Meta data format:\n*\n*     ```text\n*     | <endianness> (1 byte) | <dtype> (2 bytes) | <ndims> (8 bytes) | <shape> (ndims*8 bytes) | <strides> (ndims*8 bytes) | <offset> (8 bytes) | <order> (1 byte) | <mode> (1 byte) | <nsubmodes> (8 bytes) | <submodes> (nsubmodes*1 bytes) | <flags> (4 bytes) |\n*     ```\n*\n*     where `strides` and `offset` are in units of bytes.\n*\n* -   If the endianness is `1`, the byte order is little endian. If the endianness is `0`, the byte order is big endian.\n*\n* -   Serialization is performed according to host byte order (endianness).\n*\n* -   Consumers of this method should treat the returned `DataView` as **immutable**. Otherwise, mutation can invalidate meta data and potentially affect other consumers.\n*\n* @private\n* @name __array_meta_dataview__\n* @memberof ndarray.prototype\n* @type {Function}\n* @returns {DataView} serialized meta data\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6, 7, 8 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 2;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var dv = x.__array_meta_dataview__();\n* // returns <DataView>\n*/\nsetReadOnly( ndarray.prototype, '__array_meta_dataview__', ( hasBigIntSupport() ) ? meta2dataview : meta2dataviewPolyfill );\n\n\n// EXPORTS //\n\nmodule.exports = ndarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Determines if an array is column-major contiguous.\n*\n* @private\n* @param {integer} order - **inferred** array order\n* @param {boolean} contiguous - boolean indicating is an array is contiguous\n* @returns {boolean} boolean indicating if an array is column-major contiguous\n*/\nfunction isColumnMajorContiguous( order, contiguous ) {\n\treturn contiguous && ( order === 2 || order === 3 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isColumnMajorContiguous;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Determines if an array is row-major contiguous.\n*\n* @private\n* @param {integer} order - **inferred** array order\n* @param {boolean} contiguous - boolean indicating is an array is contiguous\n* @returns {boolean} boolean indicating if an array is row-major contiguous\n*/\nfunction isRowMajorContiguous( order, contiguous ) {\n\treturn contiguous && ( order === 1 || order === 3 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isRowMajorContiguous;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar minmaxViewBufferIndex = require( './../../../base/minmax-view-buffer-index' );\n\n\n// MAIN //\n\n/**\n* Determines if an array is contiguous.\n*\n* @private\n* @param {NonNegativeInteger} len - array length\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - stride array\n* @param {NonNegativeInteger} offset - index offset\n* @param {integer} iterationOrder - iteration order\n* @returns {boolean} boolean indicating if an array is contiguous\n*/\nfunction isContiguous( len, shape, strides, offset, iterationOrder ) {\n\tvar buf;\n\n\t// If an array does not contain any elements, then no data to store, and, if the array is unordered, adjacent array elements are not guaranteed to be stored next to each other.\n\tif ( len === 0 || iterationOrder === 0 ) {\n\t\treturn false;\n\t}\n\t// Ensure that the array is compatible with a single memory segment:\n\tbuf = minmaxViewBufferIndex( shape, strides, offset );\n\treturn ( len === ( buf[1]-buf[0]+1 ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isContiguous;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Copies ndarray flags.\n*\n* @private\n* @param {Object} flags - flags\n* @returns {Object} copy of input object\n*/\nfunction copyFlags( flags ) {\n\treturn {\n\t\t'ROW_MAJOR_CONTIGUOUS': flags.ROW_MAJOR_CONTIGUOUS,\n\t\t'COLUMN_MAJOR_CONTIGUOUS': flags.COLUMN_MAJOR_CONTIGUOUS,\n\t\t'READONLY': flags.READONLY\n\t};\n}\n\n\n// EXPORTS //\n\nmodule.exports = copyFlags;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array element located a specified linear view index.\n*\n* ## Notes\n*\n* -   For zero-dimensional arrays, the input argument is ignored and, for clarity, should not be provided.\n*\n* @private\n* @param {integer} [idx] - linear view index\n* @returns {*} array element\n*/\nfunction iget( idx ) {\n\t/* eslint-disable no-invalid-this */\n\tvar strides;\n\tvar shape;\n\tvar ndims;\n\tvar ind;\n\tvar s;\n\tvar i;\n\n\tndims = this._ndims;\n\tif ( ndims === 0 ) {\n\t\tif ( this._accessors ) {\n\t\t\treturn this._buffer.get( this._offset );\n\t\t}\n\t\treturn this._buffer[ this._offset ];\n\t}\n\tif ( this._flags.ROW_MAJOR_CONTIGUOUS || this._flags.COLUMN_MAJOR_CONTIGUOUS ) { // eslint-disable-line max-len\n\t\t// Trivial case where we have all positive strides...\n\t\tif ( this._iterationOrder === 1 ) {\n\t\t\tif ( this._accessors ) {\n\t\t\t\treturn this._buffer.get( this._offset+idx );\n\t\t\t}\n\t\t\treturn this._buffer[ this._offset+idx ];\n\t\t}\n\t\t// Trivial case where we have all negative strides...\n\t\tif ( this._iterationOrder === -1 ) {\n\t\t\tif ( this._accessors ) {\n\t\t\t\treturn this._buffer.get( this.offset-idx );\n\t\t\t}\n\t\t\treturn this._buffer[ this._offset-idx ];\n\t\t}\n\t}\n\t// The approach which follows is to resolve a view index to its subscripts and then plug the subscripts into the standard formula for computing the linear index in the underlying data buffer...\n\tshape = this._shape;\n\tstrides = this._strides;\n\tind = this._offset;\n\tif ( this._order === 'column-major' ) {\n\t\tfor ( i = 0; i < ndims; i++ ) {\n\t\t\ts = idx % shape[ i ];\n\t\t\tidx -= s;\n\t\t\tidx /= shape[ i ];\n\t\t\tind += s * strides[ i ];\n\t\t}\n\t\tif ( this._accessors ) {\n\t\t\treturn this._buffer.get( ind );\n\t\t}\n\t\treturn this._buffer[ ind ];\n\t}\n\t// Case: row-major\n\tfor ( i = ndims-1; i >= 0; i-- ) {\n\t\ts = idx % shape[ i ];\n\t\tidx -= s;\n\t\tidx /= shape[ i ];\n\t\tind += s * strides[ i ];\n\t}\n\tif ( this._accessors ) {\n\t\treturn this._buffer.get( ind );\n\t}\n\treturn this._buffer[ ind ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = iget;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Sets an array element located a specified linear view index.\n*\n* ## Notes\n*\n* -   For zero-dimensional arrays, the first, and only, argument should be the value to set.\n*\n* @private\n* @param {integer} [idx] - linear view index\n* @param {*} v - value to set\n* @returns {ndarray} ndarray instance\n*/\nfunction iset( idx, v ) {\n\t/* eslint-disable no-invalid-this */\n\tvar strides;\n\tvar shape;\n\tvar ndims;\n\tvar ind;\n\tvar s;\n\tvar i;\n\n\tndims = this._ndims;\n\tif ( ndims === 0 ) {\n\t\tif ( this._accessors ) {\n\t\t\tthis._buffer.set( idx, this._offset );\n\t\t} else {\n\t\t\tthis._buffer[ this._offset ] = idx;\n\t\t}\n\t\treturn this;\n\t}\n\tif ( this._flags.ROW_MAJOR_CONTIGUOUS || this._flags.COLUMN_MAJOR_CONTIGUOUS ) { // eslint-disable-line max-len\n\t\t// Trivial case where we have all positive strides...\n\t\tif ( this._iterationOrder === 1 ) {\n\t\t\tif ( this._accessors ) {\n\t\t\t\tthis._buffer.set( v, this._offset+idx );\n\t\t\t} else {\n\t\t\t\tthis._buffer[ this._offset+idx ] = v;\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\t// Trivial case where we have all negative strides...\n\t\tif ( this._iterationOrder === -1 ) {\n\t\t\tif ( this._accessors ) {\n\t\t\t\tthis._buffer.set( v, this._offset-idx );\n\t\t\t} else {\n\t\t\t\tthis._buffer[ this._offset-idx ] = v;\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t}\n\t// The approach which follows is to resolve a view index to its subscripts and then plug the subscripts into the standard formula for computing the linear index in the underlying data buffer...\n\tshape = this._shape;\n\tstrides = this._strides;\n\tind = this._offset;\n\tif ( this._order === 'column-major' ) {\n\t\tfor ( i = 0; i < ndims; i++ ) {\n\t\t\ts = idx % shape[ i ];\n\t\t\tidx -= s;\n\t\t\tidx /= shape[ i ];\n\t\t\tind += s * strides[ i ];\n\t\t}\n\t\tif ( this._accessors ) {\n\t\t\tthis._buffer.set( v, ind );\n\t\t} else {\n\t\t\tthis._buffer[ ind ] = v;\n\t\t}\n\t\treturn this;\n\t}\n\t// Case: row-major\n\tfor ( i = ndims-1; i >= 0; i-- ) {\n\t\ts = idx % shape[ i ];\n\t\tidx -= s;\n\t\tidx /= shape[ i ];\n\t\tind += s * strides[ i ];\n\t}\n\tif ( this._accessors ) {\n\t\tthis._buffer.set( v, ind );\n\t} else {\n\t\tthis._buffer[ ind ] = v;\n\t}\n\treturn this;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iset;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   The number of indices should **equal** the number of dimensions. Accordingly, for zero-dimensional arrays, no indices should be provided.\n*\n* @private\n* @param {...integer} [idx] - indices\n* @param {*} v - value to set\n* @returns {ndarray} ndarray instance\n*/\nfunction set() {\n\t/* eslint-disable no-invalid-this */\n\tvar idx;\n\tvar i;\n\n\tidx = this._offset;\n\tfor ( i = 0; i < arguments.length-1; i++ ) {\n\t\tidx += this._strides[ i ] * arguments[ i ];\n\t}\n\tif ( this._accessors ) {\n\t\tthis._buffer.set( arguments[ i ], idx );\n\t} else {\n\t\tthis._buffer[ idx ] = arguments[ i ];\n\t}\n\treturn this;\n}\n\n\n// EXPORTS //\n\nmodule.exports = set;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array element.\n*\n* ## Notes\n*\n* -   The number of indices should **equal** the number of dimensions. Accordingly, for zero-dimensional arrays, no indices should be provided.\n*\n* @private\n* @param {...integer} idx - indices\n* @returns {*} array element\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar idx;\n\tvar i;\n\n\tidx = this._offset;\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\tidx += this._strides[ i ] * arguments[ i ];\n\t}\n\tif ( this._accessors ) {\n\t\treturn this._buffer.get( idx );\n\t}\n\treturn this._buffer[ idx ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = get;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar real = require( '@stdlib/complex/real' );\nvar imag = require( '@stdlib/complex/imag' );\n\n\n// MAIN //\n\n/**\n* Serializes an ndarray as a JSON object.\n*\n* ## Notes\n*\n* -   The method does **not** serialize data outside of the buffer region defined by the array configuration.\n*\n* @private\n* @returns {Object} JSON representation\n*/\nfunction toJSON() {\n\t/* eslint-disable no-invalid-this */\n\tvar out;\n\tvar len;\n\tvar v;\n\tvar i;\n\n\tlen = this._length;\n\n\t// Build an object containing all ndarray properties needed to revive a serialized ndarray...\n\tout = {};\n\tout.type = 'ndarray';\n\tout.dtype = this.dtype;\n\tout.flags = {\n\t\t'READONLY': this._flags.READONLY\n\t};\n\tout.order = this._order;\n\tout.shape = this._shape.slice();\n\tout.strides = this._strides.slice();\n\n\t// Flip the signs of negative strides:\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( out.strides[ i ] < 0 ) {\n\t\t\tout.strides[ i ] *= -1;\n\t\t}\n\t}\n\t// Cast data to generic array...\n\tout.data = [];\n\tif ( out.dtype === 'complex64' || out.dtype === 'complex128' ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv = this.iget( i );\n\t\t\tout.data.push( real( v ), imag( v ) );\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tout.data.push( this.iget( i ) );\n\t\t}\n\t}\n\treturn out;\n\n\t/* eslint-enable no-invalid-this */\n}\n\n\n// EXPORTS //\n\nmodule.exports = toJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar replace = require( '@stdlib/string/replace' );\nvar real = require( '@stdlib/complex/real' );\nvar imag = require( '@stdlib/complex/imag' );\n\n\n// VARIABLES //\n\nvar CTORS = {\n\t'int8': 'new Int8Array( [ {{data}} ] )',\n\t'uint8': 'new Uint8Array( [ {{data}} ] )',\n\t'uint8c': 'new Uint8ClampedArray( [ {{data}} ] )',\n\t'int16': 'new Int16Array( [ {{data}} ] )',\n\t'uint16': 'new Uint16Array( [ {{data}} ] )',\n\t'int32': 'new Int32Array( [ {{data}} ] )',\n\t'uint32': 'new Uint32Array( [ {{data}} ] )',\n\t'float32': 'new Float32Array( [ {{data}} ] )',\n\t'float64': 'new Float64Array( [ {{data}} ] )',\n\t'generic': '[ {{data}} ]',\n\t'binary': 'new Buffer( [ {{data}} ] )',\n\t'complex64': 'new Complex64Array( [ {{data}} ] )',\n\t'complex128': 'new Complex128Array( [ {{data}} ] )'\n};\n\n\n// MAIN //\n\n/**\n* Serializes an ndarray as a string.\n*\n* ## Notes\n*\n* -   The method does **not** serialize data outside of the buffer region defined by the array configuration.\n*\n* @private\n* @returns {string} string representation\n*/\nfunction toString() { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar buffer;\n\tvar ndims;\n\tvar ctor;\n\tvar str;\n\tvar dt;\n\tvar v;\n\tvar i;\n\n\tndims = this._shape.length;\n\tdt = this._dtype;\n\n\t// Function to invoke to create an ndarray:\n\tstr = 'ndarray( \\''+dt+'\\', ';\n\n\t// Data buffer parameter...\n\tbuffer = '';\n\tif ( this._length <= 100 ) {\n\t\tif ( dt === 'complex64' || dt === 'complex128' ) {\n\t\t\tfor ( i = 0; i < this._length; i++ ) {\n\t\t\t\tv = this.iget( i );\n\t\t\t\tbuffer += real( v ) + ', ' + imag( v );\n\t\t\t\tif ( i < this._length-1 ) {\n\t\t\t\t\tbuffer += ', ';\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i = 0; i < this._length; i++ ) {\n\t\t\t\tbuffer += this.iget( i );\n\t\t\t\tif ( i < this._length-1 ) {\n\t\t\t\t\tbuffer += ', ';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// First three values...\n\t\tif ( dt === 'complex64' || dt === 'complex128' ) {\n\t\t\tfor ( i = 0; i < 3; i++ ) {\n\t\t\t\tv = this.iget( i );\n\t\t\t\tbuffer += real( v ) + ', ' + imag( v );\n\t\t\t\tif ( i < 2 ) {\n\t\t\t\t\tbuffer += ', ';\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i = 0; i < 3; i++ ) {\n\t\t\t\tbuffer += this.iget( i );\n\t\t\t\tif ( i < 2 ) {\n\t\t\t\t\tbuffer += ', ';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbuffer += ', ..., ';\n\n\t\t// Last three values...\n\t\tif ( dt === 'complex64' || dt === 'complex128' ) {\n\t\t\tfor ( i = 2; i >= 0; i-- ) {\n\t\t\t\tv = this.iget( this._length-1-i );\n\t\t\t\tbuffer += real( v ) + ', ' + imag( v );\n\t\t\t\tif ( i > 0 ) {\n\t\t\t\t\tbuffer += ', ';\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i = 2; i >= 0; i-- ) {\n\t\t\t\tbuffer += this.iget( this._length-1-i );\n\t\t\t\tif ( i > 0 ) {\n\t\t\t\t\tbuffer += ', ';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tctor = CTORS[ this.dtype ];\n\tstr += replace( ctor, '{{data}}', buffer );\n\tstr += ', ';\n\n\t// Array shape...\n\tif ( ndims === 0 ) {\n\t\tstr += '[]';\n\t} else {\n\t\tstr += '[ ' + this._shape.join( ', ' ) + ' ]';\n\t}\n\tstr += ', ';\n\n\t// Stride array...\n\tstr += '[ ';\n\tif ( ndims === 0 ) {\n\t\tstr += '0';\n\t} else {\n\t\tfor ( i = 0; i < ndims; i++ ) {\n\t\t\tif ( this._strides[ i ] < 0 ) {\n\t\t\t\tstr += -this._strides[ i ];\n\t\t\t} else {\n\t\t\t\tstr += this._strides[ i ];\n\t\t\t}\n\t\t\tif ( i < ndims-1 ) {\n\t\t\t\tstr += ', ';\n\t\t\t}\n\t\t}\n\t}\n\tstr += ' ]';\n\tstr += ', ';\n\n\t// Buffer offset:\n\tstr += '0';\n\tstr += ', ';\n\n\t// Order:\n\tstr += '\\'' + this._order + '\\'';\n\n\t// Close the function call:\n\tstr += ' )';\n\treturn str;\n\n\t/* eslint-enable no-invalid-this */\n}\n\n\n// EXPORTS //\n\nmodule.exports = toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar IS_LITTLE_ENDIAN = require( '@stdlib/assert/is-little-endian' );\nvar ArrayBuffer = require( '@stdlib/array/buffer' );\nvar DataView = require( '@stdlib/array/dataview' );\nvar Uint8Array = require( '@stdlib/array/uint8' );\nvar dtypes = require( './../../../dtypes' ).enum;\nvar orders = require( './../../../orders' ).enum;\nvar modes = require( './../../../index-modes' ).enum;\nvar float64ToInt64Bytes = require( '@stdlib/number/float64/base/to-int64-bytes' ).assign;\n\n\n// VARIABLES //\n\nvar DTYPES = dtypes();\nvar ORDERS = orders();\nvar MODES = modes();\n\n\n// FUNCTIONS //\n\n/**\n* Serializes ndarray meta data to a `DataView`.\n*\n* ## Notes\n*\n* -   This function takes into account ndarray-like objects which may support index modes.\n*\n* -   This function defaults to returning cached serialized meta data. To force serialization, set the private `__meta_dataview__` property to `null`.\n*\n* -   Serialization is performed according to host byte order (endianness).\n*\n* -   Meta data format:\n*\n*     ```text\n*     | endianness (1 byte) | <dtype> (2 bytes) | <ndims> (8 bytes) | <shape> (ndims*8 bytes) | <strides> (ndims*8 bytes) | <offset> (8 bytes) | <order> (1 byte) | <mode> (1 byte) | <nsubmodes> (8 bytes) | <submodes> (nsubmodes*1 bytes) | <flags> (4 bytes) |\n*     ```\n*\n*     which translates to the following `ArrayBuffer` layout:\n*\n*     ```text\n*     ArrayBuffer[\n*         <endianness>[int8],\n*         <dtype>[int16],\n*         <ndims>[int64],\n*         <shape>[ndims*int64],\n*         <strides>[ndims*int64],\n*         <offset>[int64],\n*         <order>[int8],\n*         <mode>[int8],\n*         <nsubmodes>[int64],\n*         <submodes>[nsubmodes*int8],\n*         <flags>[int32]\n*     ]\n*     ```\n*\n*     where `strides` and `offset` are in units of bytes.\n*\n* -   If the endianness is `1`, the byte order is little endian. If the endianness is `0`, the byte order is big endian.\n*\n* -   Buffer length:\n*\n*     ```text\n*     1 + 2 + 8 + (ndims*8) + (ndims*8) + 8 + 1 + 1 + 8 + (nsubmodes*1) + 4 = 33 + (ndims*16) + nsubmodes\n*     ```\n*\n*     For example, consider a three-dimensional ndarray with one subscript index mode (submode):\n*\n*     ```text\n*     33 + (3*16) + 1 = 82 bytes\n*     ```\n*\n* -   Views:\n*\n*     -   endianness: `Int8Array( buf, 0, 1 )`\n*     -   dtype: `Int16Array( buf, 1, 1 )`\n*     -   ndims: `Int64Array( buf, 3, 1 )`\n*     -   shape: `Int64Array( buf, 11, ndims )`\n*     -   strides: `Int64Array( buf, 11+(ndims*8), ndims )`\n*     -   offset: `Int64Array( buf, 11+(ndims*16), 1 )`\n*     -   order: `Int8Array( buf, 19+(ndims*16), 1 )`\n*     -   mode: `Int8Array( buf, 20+(ndims*16), 1 )`\n*     -   nsubmodes: `Int64Array( buf, 21+(ndims*16), 1 )`\n*     -   submodes: `Int8Array( buf, 29+(ndims*16), nsubmodes )`\n*     -   flags: `Int32Array( buf, 29+(ndims*16)+nsubmodes, 1 )`\n*\n* @private\n* @returns {DataView} serialized meta data\n*/\nfunction meta2dataview() {\n\t/* eslint-disable no-invalid-this */\n\tvar nbytes;\n\tvar bytes;\n\tvar flgs;\n\tvar len;\n\tvar dt;\n\tvar sh;\n\tvar st;\n\tvar sm;\n\tvar v;\n\tvar m;\n\tvar o;\n\tvar s;\n\tvar N;\n\tvar M;\n\tvar i;\n\n\tm = this._mode || 'throw';\n\tsm = this._submode || [ m ];\n\tN = this._ndims;\n\tM = sm.length;\n\n\t// Compute the amount of memory we need to allocate for storing meta data:\n\tlen = 33 + (N*16) + M;\n\n\t// Check if we've already serialized ndarray meta data and can reuse an already allocated array buffer...\n\tv = this.__meta_dataview__;\n\tif ( v && v.byteLength === len ) { // Note: the byte length check is only a bare minimum sanity check, as cached contents may still be \"stale\" (e.g., shape and/or strides may have changed)\n\t\treturn v;\n\t}\n\t// Allocate raw memory and create views for interfacing with the allocated memory:\n\tv = new DataView( new ArrayBuffer( len ) );\n\tbytes = new Uint8Array( v.buffer );\n\n\t// Retrieve ndarray meta data:\n\tsh = this._shape;\n\tst = this._strides;\n\tdt = this._dtype;\n\tnbytes = this._bytesPerElement;\n\n\t// Endianness: (byteoffset: 0; bytelength: 1)\n\to = 0;\n\tv.setInt8( o, ( IS_LITTLE_ENDIAN ) ? 1 : 0 );\n\n\t// Data type: (byteoffset: 1; bytelength: 2)\n\to += 1;\n\tv.setInt16( o, DTYPES[ dt ], IS_LITTLE_ENDIAN );\n\n\t// Number of dimensions: (byteoffset: 3; bytelength: 8)\n\to += 2;\n\tfloat64ToInt64Bytes( N, bytes, 1, o );\n\n\t// Shape and strides: (byteoffset: 11 and 11+(ndims*8), respectively; bytelength: ndims*8 for both shape and strides, and, thus, ndims*16 total)\n\ts = N * 8; // stride length between a dimension (shape[i]) and its associated stride\n\to += 8;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tfloat64ToInt64Bytes( sh[i], bytes, 1, o );\n\t\tfloat64ToInt64Bytes( st[i]*nbytes, bytes, 1, o+s );\n\t\to += 8;\n\t}\n\t// Offset: (byteoffset: 11+(ndims*16); bytelength: 8)\n\to += s;\n\tfloat64ToInt64Bytes( this._offset*nbytes, bytes, 1, o );\n\n\t// Order: (byteoffset: 19+(ndims*16); bytelength: 1)\n\to += 8;\n\tv.setInt8( o, ORDERS[ this._order ] );\n\n\t// Mode: (byteoffset: 20+(ndims*16); bytelength: 1)\n\to += 1;\n\tv.setInt8( o, MODES[ m ] );\n\n\t// Number of submodes: (byteoffset: 21+(ndims*16); bytelength: 8)\n\to += 1;\n\tfloat64ToInt64Bytes( M, bytes, 1, o );\n\n\t// Submodes: (byteoffset: 29+(ndims*16); bytelength: nsubmodes*1)\n\to += 8;\n\tfor ( i = 0; i < M; i++ ) {\n\t\tv.setInt8( o, MODES[ sm[i] ] );\n\t\to += 1;\n\t}\n\t// Flags: (byteoffset: 29+(ndims*16)+nsubmodes; bytelength: 4)\n\tflgs = 0|0;\n\tflgs |= ( this._flags.READONLY ) ? 4 : 0; // 00000000 00000000 00000000 00000100\n\tv.setInt32( o, flgs, IS_LITTLE_ENDIAN );\n\n\t// Cache the serialized meta data:\n\tthis.__meta_dataview__ = v;\n\n\treturn v;\n\n\t/* eslint-enable no-invalid-this */\n}\n\n\n// EXPORTS //\n\nmodule.exports = meta2dataview;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Multidimensional array constructor.\n*\n* @module @stdlib/ndarray/base/ctor\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/base/ctor' );\n*\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var out = ndarray( 'float64', buffer, shape, strides, offset, 'row-major' );\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ndarray = require( '@stdlib/ndarray/base/ctor' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is ndarray-like.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is ndarray-like\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var arr = ndarray( 'generic', [ 0, 0, 0, 0 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n*\n* var bool = isndarrayLike( arr );\n* // returns true\n*\n* bool = isndarrayLike( [] );\n* // returns false\n*/\nfunction isndarrayLike( v ) {\n\treturn (\n\t\tv instanceof ndarray ||\n\t\t(\n\t\t\tv !== null &&\n\t\t\ttypeof v === 'object' &&\n\t\t\ttypeof v.data === 'object' &&\n\t\t\ttypeof v.shape === 'object' &&\n\t\t\ttypeof v.strides === 'object' &&\n\t\t\ttypeof v.offset === 'number' &&\n\t\t\ttypeof v.order === 'string' &&\n\t\t\ttypeof v.ndims === 'number' &&\n\t\t\ttypeof v.dtype === 'string' &&\n\t\t\ttypeof v.length === 'number' &&\n\t\t\ttypeof v.flags === 'object' &&\n\t\t\ttypeof v.get === 'function' &&\n\t\t\ttypeof v.set === 'function'\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isndarrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is ndarray-like.\n*\n* @module @stdlib/assert/is-ndarray-like\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var isndarrayLike = require( '@stdlib/assert/is-ndarray-like' );\n*\n* var arr = ndarray( 'generic', [ 0, 0, 0, 0 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n* var bool = isndarrayLike( arr );\n* // returns true\n*\n* bool = isndarrayLike( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isndarrayLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isndarrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar abs = require( './../../../../base/special/abs' );\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar isInfinite = require( './../../../../base/assert/is-infinite' );\n\n\n// MAIN //\n\n/**\n* Computes the absolute difference.\n*\n* @param {number} x - first number\n* @param {number} y - second number\n* @returns {number} absolute difference\n*\n* @example\n* var d = absoluteDifference( 2.0, 5.0 );\n* // returns 3.0\n*\n* @example\n* var d = absoluteDifference( -1.0, 3.14 );\n* // returns ~4.14\n*\n* @example\n* var d = absoluteDifference( 10.1, -2.05 );\n* // returns ~12.15\n*\n* @example\n* var d = absoluteDifference( -0.0, 0.0 );\n* // returns +0.0\n*\n* @example\n* var d = absoluteDifference( NaN, 5.0 );\n* // returns NaN\n*\n* @example\n* var d = absoluteDifference( Infinity, -Infinity  );\n* // returns Infinity\n*\n* @example\n* var d = absoluteDifference( Infinity, Infinity  );\n* // returns NaN\n*/\nfunction absoluteDifference( x, y ) {\n\tif ( isnan( x ) || isnan( y ) ) {\n\t\treturn NaN;\n\t}\n\tif ( isInfinite( x ) || isInfinite( y ) ) {\n\t\tif ( x === y ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn PINF;\n\t}\n\treturn abs( x - y );\n}\n\n\n// EXPORTS //\n\nmodule.exports = absoluteDifference;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the absolute difference.\n*\n* @module @stdlib/math/base/utils/absolute-difference\n*\n* @example\n* var diff = require( '@stdlib/math/base/utils/absolute-difference' );\n*\n* var d = diff( 2.0, 5.0 );\n* // returns 3.0\n*\n* d = diff( -1.0, 3.14 );\n* // returns ~4.14\n*\n* d = diff( 10.1, -2.05 );\n* // returns ~12.15\n*\n* d = diff( -0.0, 0.0 );\n* // returns +0.0\n*\n* d = diff( NaN, 5.0 );\n* // returns NaN\n*\n* d = diff( Infinity, -Infinity  );\n* // returns Infinity\n*\n* d = diff( Infinity, Infinity  );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar absoluteDifference = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = absoluteDifference;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* BLAS level 1 routine to multiply a vector `x` and a constant and add the result to `y`.\n*\n* @module @stdlib/blas/base/daxpy\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var daxpy = require( '@stdlib/blas/base/daxpy' );\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 1.0, 1.0, 1.0, 1.0 ] );\n* var alpha = 5.0;\n*\n* daxpy( x.length, alpha, x, 1, y, 1 );\n* // y => <Float64Array>[ 6.0, 11.0, 16.0, 21.0, 26.0 ]\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var daxpy = require( '@stdlib/blas/base/daxpy' );\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 1.0, 1.0, 1.0, 1.0 ] );\n* var alpha = 5.0;\n*\n* daxpy.ndarray( x.length, alpha, x, 1, 0, y, 1, 0 );\n* // y => <Float64Array>[ 6.0, 11.0, 16.0, 21.0, 26.0 ]\n*/\n\n// MODULES //\n\nvar join = require( 'path' ).join;\nvar tryRequire = require( '@stdlib/utils/try-require' );\nvar daxpy = require( './main.js' );\n\n\n// MAIN //\n\nvar tmp = tryRequire( join( __dirname, './native.js' ) );\nif ( !(tmp instanceof Error) ) {\n\tdaxpy = tmp;\n}\n\n\n// EXPORTS //\n\nmodule.exports = daxpy;\n","export default '/home/runner/work/stats/stats/node_modules/@stdlib/blas/base/daxpy/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* BLAS level 1 routine to multiply a double-precision floating-point vector by a constant.\n*\n* @module @stdlib/blas/base/dscal\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var dscal = require( '@stdlib/blas/base/dscal' );\n*\n* var x = new Float64Array( [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ] );\n*\n* dscal( x.length, 5.0, x, 1 );\n* // x => <Float64Array>[ -10.0, 5.0, 15.0, -25.0, 20.0, 0.0, -5.0, -15.0 ]\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var dscal = require( '@stdlib/blas/base/dscal' );\n*\n* var x = new Float64Array( [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ] );\n*\n* dscal.ndarray( x.length, 5.0, x, 1, 0 );\n* // x => <Float64Array>[ -10.0, 5.0, 15.0, -25.0, 20.0, 0.0, -5.0, -15.0 ]\n*/\n\n// MODULES //\n\nvar join = require( 'path' ).join;\nvar tryRequire = require( '@stdlib/utils/try-require' );\nvar dscal = require( './main.js' );\n\n\n// MAIN //\n\nvar tmp = tryRequire( join( __dirname, './native.js' ) );\nif ( !(tmp instanceof Error) ) {\n\tdscal = tmp;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dscal;\n","export default '/home/runner/work/stats/stats/node_modules/@stdlib/blas/base/dscal/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the sum of double-precision floating-point strided array elements using pairwise summation.\n*\n* @module @stdlib/blas/ext/base/dsumpw\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var dsumpw = require( '@stdlib/blas/ext/base/dsumpw' );\n*\n* var x = new Float64Array( [ 1.0, -2.0, 2.0 ] );\n* var N = x.length;\n*\n* var v = dsumpw( N, x, 1 );\n* // returns 1.0\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var floor = require( '@stdlib/math/base/special/floor' );\n* var dsumpw = require( '@stdlib/blas/ext/base/dsumpw' );\n*\n* var x = new Float64Array( [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ] );\n* var N = floor( x.length / 2 );\n*\n* var v = dsumpw.ndarray( N, x, 2, 1 );\n* // returns 5.0\n*/\n\n// MODULES //\n\nvar join = require( 'path' ).join;\nvar tryRequire = require( '@stdlib/utils/try-require' );\nvar dsumpw = require( './main.js' );\n\n\n// MAIN //\n\nvar tmp = tryRequire( join( __dirname, './native.js' ) );\nif ( !(tmp instanceof Error) ) {\n\tdsumpw = tmp;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dsumpw;\n","export default '/home/runner/work/stats/stats/node_modules/@stdlib/blas/ext/base/dsumpw/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar DEFAULTS = require( './defaults.json' );\n\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\treturn {\n\t\t'alpha': DEFAULTS.alpha,\n\t\t'ddof': DEFAULTS.ddof,\n\t\t'simulate': DEFAULTS.simulate,\n\t\t'iterations': DEFAULTS.iterations\n\t};\n}\n\n\n// EXPORTS //\n\nmodule.exports = defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {NonNegativeInteger} [options.ddof] - degrees of freedom adjustment\n* @param {boolean} [options.simulate] - boolean indicating whether to compute p-values by Monte Carlo simulation\n* @param {PositiveInteger} [options.iterations] - number of Monte Carlo iterations\n* @returns {(null|Error)} null or an error\n*\n* @example\n* var opts = {};\n* var options = {\n*     'alpha': 0.01,\n*     'simulate': false,\n*     'ddof': 2\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t\tif ( opts.alpha < 0.0 || opts.alpha > 1.0 ) {\n\t\t\treturn new RangeError( format( 'invalid option. `%s` option must be a number on the interval: [0, 1]. Value: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'ddof' ) ) {\n\t\topts.ddof = options.ddof;\n\t\tif ( !isNonNegativeInteger( opts.ddof ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'ddof', opts.ddof ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iterations' ) ) {\n\t\topts.iterations = options.iterations;\n\t\tif ( !isPositiveInteger( opts.iterations ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'iterations', opts.iterations ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'simulate' ) ) {\n\t\topts.simulate = options.simulate;\n\t\tif ( !isBoolean( opts.simulate ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'simulate', opts.simulate ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Evaluates the probability mass function (PMF) for a Bernoulli distribution with success probability `p` at a value `x`.\n*\n* @param {number} x - input value\n* @param {Probability} p - success probability\n* @returns {Probability} evaluated PMF\n*\n* @example\n* var y = pmf( 1.0, 0.3 );\n* // returns 0.3\n*\n* @example\n* var y = pmf( 0.0, 0.3 );\n* // returns 0.7\n*\n* @example\n* var y = pmf( -1.0, 0.5 );\n* // returns 0.0\n*\n* @example\n* var y = pmf( 0.8, 0.5 );\n* // returns 0.0\n*\n* @example\n* var y = pmf( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = pmf( NaN, 0.5 );\n* // returns NaN\n*\n* @example\n* // Invalid success probability:\n* var y = pmf( 1.0, 1.5 );\n* // returns NaN\n*/\nfunction pmf( x, p ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( p ) ||\n\t\tp < 0.0 ||\n\t\tp > 1.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x === 0.0 ) {\n\t\treturn 1.0 - p;\n\t}\n\tif ( x === 1.0 ) {\n\t\treturn p;\n\t}\n\treturn 0.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pmf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the probability mass function (PMF) for a Bernoulli distribution with success probability `p`.\n*\n* @param {Probability} p - success probability\n* @returns {Function} PMF\n*\n* @example\n* var pmf = factory( 0.8 );\n* var y = pmf( 0.0 );\n* // returns 0.2\n*\n* y = pmf( 1.0 );\n* // returns 0.8\n*/\nfunction factory( p ) {\n\tif (\n\t\tisnan( p ) ||\n\t\tp < 0.0 ||\n\t\tp > 1.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn pmf;\n\n\t/**\n\t* Evaluates the probability mass function (PMF) for a Bernoulli distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated PMF\n\t*\n\t* @example\n\t* var y = pmf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction pmf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x === 0.0 ) {\n\t\t\treturn 1.0 - p;\n\t\t}\n\t\tif ( x === 1.0 ) {\n\t\t\treturn p;\n\t\t}\n\t\treturn 0.0;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Bernoulli distribution probability mass function (PMF).\n*\n* @module @stdlib/stats/base/dists/bernoulli/pmf\n*\n* @example\n* var pmf = require( '@stdlib/stats/base/dists/bernoulli/pmf' );\n*\n* var y = pmf( 0.0, 0.3 );\n* // returns 0.7\n*\n* y = pmf( 1.0, 0.7 );\n* // returns 0.7\n*\n* y = pmf( -1.0, 0.5 );\n* // returns 0.0\n*\n* var mypmf = pmf.factory( 0.5 );\n* y = mypmf( 2.0 );\n* // returns 0.0\n*\n* y = mypmf( 1.0 );\n* // returns 0.5\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar pmf = require( './pmf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( pmf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = pmf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Evaluates the probability mass function (PMF) for a discrete uniform distribution with minimum support `a` and maximum support `b` at a value `x`.\n*\n* @param {number} x - input value\n* @param {integer} a - minimum support\n* @param {integer} b - maximum support\n* @returns {number} evaluated PMF\n*\n* @example\n* var y = pmf( 2.0, 0, 4 );\n* // returns ~0.2\n*\n* @example\n* var y = pmf( 5.0, 0, 4 );\n* // returns 0.0\n*\n* @example\n* var y = pmf( 2, 0, 8 );\n* // returns ~0.111\n*\n* @example\n* var y = pmf( NaN, 0, 1 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 0.0, NaN, 1 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 0.0, 0, NaN );\n* // returns NaN\n*\n* @example\n* var y = pmf( 2.0, 3, 1 );\n* // returns NaN\n*/\nfunction pmf( x, a, b ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\t!isInteger( a ) ||\n\t\t!isInteger( b ) ||\n\t\ta > b\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x < a || x > b || !isInteger( x ) ) {\n\t\treturn 0.0;\n\t}\n\treturn 1.0 / ( b - a + 1.0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = pmf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the probability mass function (PMF) for a discrete uniform distribution with minimum support `a` and maximum support `b`.\n*\n* @param {integer} a - minimum support\n* @param {integer} b - maximum support\n* @returns {Function} PMF\n*\n* @example\n* var pmf = factory( 0, 10 );\n* var y = pmf( 2.0 );\n* // returns ~0.091\n*\n* y = pmf( 12.0 );\n* // returns 0.0\n*/\nfunction factory( a, b ) {\n\tvar ninv;\n\tif (\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\t!isInteger( a ) ||\n\t\t!isInteger( b ) ||\n\t\ta > b\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\tninv = 1.0 / ( b - a + 1.0 );\n\treturn pmf;\n\n\t/**\n\t* Evaluates the probability mass function (PMF) for a discrete uniform distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated PMF\n\t*\n\t* @example\n\t* var y = pmf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction pmf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < a || x > b || !isInteger( x ) ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn ninv;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Discrete uniform distribution probability mass function (PMF).\n*\n* @module @stdlib/stats/base/dists/discrete-uniform/pmf\n*\n* @example\n* var pmf = require( '@stdlib/stats/base/dists/discrete-uniform/pmf' );\n*\n* var y = pmf( 3.0, 2, 6 );\n* // returns ~0.2\n*\n* var myPMF = pmf.factory( 6, 7 );\n* y = myPMF( 7.0 );\n* // returns 0.5\n*\n* y = myPMF( 5.0 );\n* // returns 0.0\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar pmf = require( './pmf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( pmf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = pmf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Evaluates the probability mass function (PMF) for a geometric distribution with success probability `p` at a value `x`.\n*\n* @param {number} x - input value\n* @param {Probability} p - success probability\n* @returns {Probability} evaluated PMF\n*\n* @example\n* var y = pmf( 4.0, 0.3 );\n* // returns ~0.072\n*\n* @example\n* var y = pmf( 2.0, 0.7 );\n* // returns ~0.063\n*\n* @example\n* var y = pmf( -1.0, 0.5 );\n* // returns 0.0\n*\n* @example\n* var y = pmf( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = pmf( NaN, 0.5 );\n* // returns NaN\n*\n* @example\n* // Invalid success probability:\n* var y = pmf( 2.0, 1.5 );\n* // returns NaN\n*/\nfunction pmf( x, p ) {\n\tvar q;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( p ) ||\n\t\tp < 0.0 ||\n\t\tp > 1.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( isNonNegativeInteger( x ) ) {\n\t\tq = 1.0 - p;\n\t\treturn p * pow( q, x );\n\t}\n\treturn 0.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pmf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the probability mass function (PMF) for a geometric distribution with success probability `p`.\n*\n* @param {Probability} p - success probability\n* @returns {Function} PMF\n*\n* @example\n* var pmf = factory( 0.5 );\n* var y = pmf( 3.0 );\n* // returns 0.0625\n*\n* y = pmf( 1.0 );\n* // returns 0.25\n*/\nfunction factory( p ) {\n\tif (\n\t\tisnan( p ) ||\n\t\tp < 0.0 ||\n\t\tp > 1.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn pmf;\n\n\t/**\n\t* Evaluates the probability mass function (PMF) for a geometric distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated PMF\n\t*\n\t* @example\n\t* var y = pmf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction pmf( x ) {\n\t\tvar q;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( isNonNegativeInteger( x ) ) {\n\t\t\tq = 1.0 - p;\n\t\t\treturn p * pow( q, x );\n\t\t}\n\t\treturn 0.0;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Geometric distribution probability mass function (PMF).\n*\n* @module @stdlib/stats/base/dists/geometric/pmf\n*\n* @example\n* var pmf = require( '@stdlib/stats/base/dists/geometric/pmf' );\n*\n* var y = pmf( 4.0, 0.3 );\n* // returns ~0.072\n*\n* y = pmf( 2.0, 0.7 );\n* // returns ~0.063\n*\n* y = pmf( -1.0, 0.5 );\n* // returns 0.0\n*\n* var mypmf = pmf.factory( 0.5 );\n* y = mypmf( 3.0 );\n* // returns 0.0625\n*\n* y = mypmf( 1.0 );\n* // returns 0.25\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar pmf = require( './pmf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( pmf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = pmf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( './../../../../base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is a negative integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is a negative integer\n*\n* @example\n* var bool = isNegativeInteger( -1.0 );\n* // returns true\n*\n* @example\n* var bool = isNegativeInteger( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isNegativeInteger( 10.0 );\n* // returns false\n*/\nfunction isNegativeInteger( x ) {\n\treturn (floor(x) === x && x < 0.0);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNegativeInteger = require( './../../../../base/assert/is-negative-integer' );\nvar gammaln = require( './../../../../base/special/gammaln' );\n\n\n// MAIN //\n\n/**\n* Evaluates the natural logarithm of the factorial of `x`.\n*\n* @param {number} x - input value\n* @returns {number} natural logarithm of factorial of `x`\n*\n* @example\n* var v = factorialln( 3.0 );\n* // returns ~1.792\n*\n* @example\n* var v = factorialln( 2.4 );\n* // returns ~1.092\n*\n* @example\n* var v = factorialln( -1.0 );\n* // returns NaN\n*\n* @example\n* var v = factorialln( -1.5 );\n* // returns ~1.266\n*\n* @example\n* var v = factorialln( NaN );\n* // returns NaN\n*/\nfunction factorialln( x ) {\n\tif ( isNegativeInteger( x ) ) {\n\t\treturn NaN;\n\t}\n\treturn gammaln( x + 1.0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = factorialln;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the natural logarithm of the factorial function.\n*\n* @module @stdlib/math/base/special/factorialln\n*\n* @example\n* var factorialln = require( '@stdlib/math/base/special/factorialln' );\n*\n* var v = factorialln( 3.0 );\n* // returns ~1.792\n*\n* v = factorialln( 2.4 );\n* // returns ~1.092\n*\n* v = factorialln( -1.0 );\n* // returns NaN\n*\n* v = factorialln( -1.5 );\n* // returns ~1.266\n*\n* v = factorialln( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar factorialln = require( './factorialln.js' );\n\n\n// EXPORTS //\n\nmodule.exports = factorialln;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar fln = require( '@stdlib/math/base/special/factorialln' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Evaluates the probability mass function (PMF) for a hypergeometric distribution with population size `N`, subpopulation size `K`, and number of draws `n`.\n*\n* @param {number} x - input value\n* @param {NonNegativeInteger} N - population size\n* @param {NonNegativeInteger} K - subpopulation size\n* @param {NonNegativeInteger} n - number of draws\n* @returns {Probability} evaluated PMF\n*\n* @example\n* var y = pmf( 1.0, 8, 4, 2 );\n* // returns ~0.571\n*\n* @example\n* var y = pmf( 2.0, 8, 4, 2 );\n* // returns ~0.214\n*\n* @example\n* var y = pmf( 0.0, 8, 4, 2 );\n* // returns ~0.214\n*\n* @example\n* var y = pmf( 1.5, 8, 4, 2 );\n* // returns 0.0\n*\n* @example\n* var y = pmf( NaN, 10, 5, 2 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 0.0, NaN, 5, 2 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 0.0, 10, NaN, 2 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 0.0, 10, 5, NaN );\n* // returns NaN\n*\n* @example\n* var y = pmf( 2.0, 10.5, 5, 2 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 2.0, 5, 1.5, 2 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 2.0, 10, 5, -2.0 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 2.0, 10, 5, 12 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 2.0, 8, 3, 9 );\n* // returns NaN\n*/\nfunction pmf( x, N, K, n ) {\n\tvar ldenom;\n\tvar lnum;\n\tvar lpmf;\n\tvar maxs;\n\tvar mins;\n\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( N ) ||\n\t\tisnan( K ) ||\n\t\tisnan( n ) ||\n\t\t!isNonNegativeInteger( N ) ||\n\t\t!isNonNegativeInteger( K ) ||\n\t\t!isNonNegativeInteger( n ) ||\n\t\tN === PINF ||\n\t\tK === PINF ||\n\t\tK > N ||\n\t\tn > N\n\t) {\n\t\treturn NaN;\n\t}\n\tmins = max( 0, n + K - N );\n\tmaxs = min( K, n );\n\tif (\n\t\tisNonNegativeInteger( x ) &&\n\t\tmins <= x &&\n\t\tx <= maxs\n\t) {\n\t\tlnum = fln( n ) + fln( K ) + fln( N - n ) + fln( N - K );\n\t\tldenom = fln( N ) + fln( x ) + fln( n - x );\n\t\tldenom += fln( K - x ) + fln( N - K + x - n );\n\t\tlpmf = lnum - ldenom;\n\t\treturn exp( lpmf );\n\t}\n\treturn 0.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pmf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar fln = require( '@stdlib/math/base/special/factorialln' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the probability mass function (PMF) for a hypergeometric distribution with population size `N`, subpopulation size `K`, and number of draws `n`.\n*\n* @param {NonNegativeInteger} N - population size\n* @param {NonNegativeInteger} K - subpopulation size\n* @param {NonNegativeInteger} n - number of draws\n* @returns {Function} PMF\n*\n* @example\n* var mypmf = factory( 30, 20, 5 );\n* var y = mypmf( 4.0 );\n* // returns ~0.34\n*\n* y = mypmf( 1.0 );\n* // returns ~0.029\n*/\nfunction factory( N, K, n ) {\n\tvar maxs;\n\tvar mins;\n\tif (\n\t\tisnan( N ) ||\n\t\tisnan( K ) ||\n\t\tisnan( n ) ||\n\t\t!isNonNegativeInteger( N ) ||\n\t\t!isNonNegativeInteger( K ) ||\n\t\t!isNonNegativeInteger( n ) ||\n\t\tN === PINF ||\n\t\tK === PINF ||\n\t\tK > N ||\n\t\tn > N\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\n\tmins = max( 0, n + K - N );\n\tmaxs = min( K, n );\n\treturn pmf;\n\n\t/**\n\t* Evaluates the probability mass function (PMF) for a hypergeometric distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated PMF\n\t*/\n\tfunction pmf( x ) {\n\t\tvar ldenom;\n\t\tvar lnum;\n\t\tvar lpmf;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif (\n\t\t\tisNonNegativeInteger( x ) &&\n\t\t\tmins <= x &&\n\t\t\tx <= maxs\n\t\t) {\n\t\t\tlnum = fln( n ) + fln( K ) + fln( N - n ) + fln( N - K );\n\t\t\tldenom = fln( N ) + fln( x ) + fln( n - x );\n\t\t\tldenom += fln( K - x ) + fln( N - K + x - n );\n\t\t\tlpmf = lnum - ldenom;\n\t\t\treturn exp( lpmf );\n\t\t}\n\t\treturn 0.0;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Hypergeometric distribution probability mass function (PMF).\n*\n* @module @stdlib/stats/base/dists/hypergeometric/pmf\n*\n* @example\n* var pmf = require( '@stdlib/stats/base/dists/hypergeometric/pmf' );\n*\n* var y = pmf( 1.0, 8, 4, 2 );\n* // returns ~0.571\n*\n* y = pmf( 2.0, 8, 4, 2 );\n* // returns ~0.214\n*\n* y = pmf( 0.0, 8, 4, 2 );\n* // returns ~0.214\n*\n* y = pmf( 1.5, 8, 4, 2 );\n* // returns 0.0\n*\n* var mypmf = pmf.factory( 30, 20, 5 );\n* y = mypmf( 4.0 );\n* // returns ~0.34\n*\n* y = mypmf( 1.0 );\n* // returns ~0.029\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar pmf = require( './pmf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( pmf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = pmf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_62_0/boost/math/special_functions/beta.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar lanczosSumExpGScaled = require( '@stdlib/math/base/special/gamma-lanczos-sum-expg-scaled' );\nvar expm1 = require( '@stdlib/math/base/special/expm1' );\nvar log1p = require( '@stdlib/math/base/special/log1p' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar MAX_LN = require( '@stdlib/constants/float64/max-ln' );\nvar MIN_LN = require( '@stdlib/constants/float64/min-ln' );\nvar G = require( '@stdlib/constants/float64/gamma-lanczos-g' );\nvar E = require( '@stdlib/constants/float64/e' );\n\n\n// MAIN //\n\n/**\n* Computes the leading power terms in the incomplete beta function.\n*\n* When normalized,\n*\n* ```tex\n* \\frac{ x^a y^b }{ \\operatorname{Beta}(a,b) }\n* ```\n*\n* and otherwise\n*\n* ```tex\n* x^a y^b\n* ```\n*\n* ## Notes\n*\n* -   Almost all of the error in the incomplete beta comes from this function, particularly when \\\\( a \\\\) and \\\\( b \\\\) are large. Computing large powers are _hard_ though, and using logarithms just leads to horrendous cancellation errors.\n*\n* -   For \\\\( l1 * l2 > 0 \\\\) or \\\\( \\operatorname{min}( a, b ) < 1 \\\\), the two power terms both go in the same direction (towards zero or towards infinity). In this case if either term overflows or underflows, then the product of the two must do so also. Alternatively, if one exponent is less than one, then we can't productively use it to eliminate overflow or underflow from the other term.  Problems with spurious overflow/underflow can't be ruled out in this case, but it is _very_ unlikely since one of the power terms will evaluate to a number close to 1.\n*\n* -   If \\\\( \\max( \\abs(l1), \\abs(l2) ) < 0.5 \\\\), both exponents are near one and both the exponents are greater than one, and, further, these two power terms tend in opposite directions (one toward zero, the other toward infinity), so we have to combine the terms to avoid any risk of overflow or underflow. We do this by moving one power term inside the other, we have:\n*\n*     ```tex\n*     (1 + l_1)^a \\cdot (1 + l_2)^b \\\\\n*     = ((1 + l_1) \\cdot (1 + l_2)^(b/a))^a \\\\\n*     = (1 + l_1 + l_3 + l_1*l_3)^a\n*     ```\n*\n*     and\n*\n*     ```tex\n*     l_3 = (1 + l_2)^(b/a) - 1 \\\\\n*     = \\exp((b/a) * \\ln(1 + l_2)) - 1\n*     ```\n*\n*     The tricky bit is deciding which term to move inside. By preference we move the larger term inside, so that the size of the largest exponent is reduced.  However, that can only be done as long as l3 (see above) is also small.\n*\n* @private\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {Probability} x - function parameter\n* @param {Probability} y - probability equal to `1-x`\n* @param {boolean} normalized - boolean indicating whether to evaluate the power terms of the regularized or non-regularized incomplete beta function\n* @returns {number} power terms\n*/\nfunction ibetaPowerTerms( a, b, x, y, normalized ) {\n\tvar result;\n\tvar smallA;\n\tvar ratio;\n\tvar agh;\n\tvar bgh;\n\tvar cgh;\n\tvar l1;\n\tvar l2;\n\tvar l3;\n\tvar p1;\n\tvar b1;\n\tvar b2;\n\tvar c;\n\tvar l;\n\n\tif ( !normalized ) {\n\t\t// Can we do better here?\n\t\treturn pow( x, a ) * pow( y, b );\n\t}\n\tc = a + b;\n\n\t// Combine power terms with Lanczos approximation:\n\tagh = a + G - 0.5;\n\tbgh = b + G - 0.5;\n\tcgh = c + G - 0.5;\n\tresult = lanczosSumExpGScaled( c );\n\tresult /= lanczosSumExpGScaled( a ) * lanczosSumExpGScaled( b );\n\n\t// Combine with the leftover terms from the Lanczos approximation:\n\tresult *= sqrt( bgh / E );\n\tresult *= sqrt( agh / cgh );\n\n\t// `l1` and `l2` are the base of the exponents minus one:\n\tl1 = ( ( x * b ) - ( y * agh ) ) / agh;\n\tl2 = ( ( y * a ) - ( x * bgh ) ) / bgh;\n\tif ( min( abs(l1), abs(l2) ) < 0.2 ) {\n\t\t// When the base of the exponent is very near 1 we get really gross errors unless extra care is taken:\n\t\tif ( l1 * l2 > 0 || min( a, b ) < 1 ) {\n\t\t\tif ( abs(l1) < 0.1 ) {\n\t\t\t\tresult *= exp( a * log1p( l1 ) );\n\t\t\t} else {\n\t\t\t\tresult *= pow( ( x*cgh ) / agh, a );\n\t\t\t}\n\t\t\tif ( abs(l2) < 0.1 ) {\n\t\t\t\tresult *= exp( b * log1p( l2 ) );\n\t\t\t} else {\n\t\t\t\tresult *= pow((y * cgh) / bgh, b);\n\t\t\t}\n\t\t}\n\t\telse if ( max( abs(l1), abs(l2) ) < 0.5 ) {\n\t\t\tsmallA = a < b;\n\t\t\tratio = b / a;\n\t\t\tif (\n\t\t\t\t(smallA && (ratio * l2 < 0.1)) ||\n\t\t\t\t(!smallA && (l1 / ratio > 0.1))\n\t\t\t) {\n\t\t\t\tl3 = expm1( ratio * log1p( l2 ) );\n\t\t\t\tl3 = l1 + l3 + ( l3 * l1 );\n\t\t\t\tl3 = a * log1p( l3 );\n\t\t\t\tresult *= exp( l3 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tl3 = expm1( log1p( l1 ) / ratio );\n\t\t\t\tl3 = l2 + l3 + ( l3 * l2 );\n\t\t\t\tl3 = b * log1p( l3 );\n\t\t\t\tresult *= exp( l3 );\n\t\t\t}\n\t\t}\n\t\telse if ( abs(l1) < abs(l2) ) {\n\t\t\t// First base near 1 only:\n\t\t\tl = ( a * log1p( l1 ) ) + ( b * ln( ( y*cgh ) / bgh ) );\n\t\t\tif ( l <= MIN_LN || l >= MAX_LN ) {\n\t\t\t\tl += ln(result);\n\t\t\t\tif ( l >= MAX_LN ) {\n\t\t\t\t\treturn NaN;\n\t\t\t\t}\n\t\t\t\tresult = exp( l );\n\t\t\t} else {\n\t\t\t\tresult *= exp( l );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Second base near 1 only:\n\t\t\tl = ( b * log1p( l2 ) ) + ( a * ln( (x*cgh) / agh ) );\n\t\t\tif ( l <= MIN_LN || l >= MAX_LN ) {\n\t\t\t\tl += ln(result);\n\t\t\t\tif ( l >= MAX_LN ) {\n\t\t\t\t\treturn NaN;\n\t\t\t\t}\n\t\t\t\tresult = exp( l );\n\t\t\t} else {\n\t\t\t\tresult *= exp( l );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// General case:\n\t\tb1 = (x * cgh) / agh;\n\t\tb2 = (y * cgh) / bgh;\n\t\tl1 = a * ln(b1);\n\t\tl2 = b * ln(b2);\n\t\tif (\n\t\t\tl1 >= MAX_LN ||\n\t\t\tl1 <= MIN_LN ||\n\t\t\tl2 >= MAX_LN ||\n\t\t\tl2 <= MIN_LN\n\t\t) {\n\t\t\t// Oops, under/overflow, sidestep if we can:\n\t\t\tif ( a < b ) {\n\t\t\t\tp1 = pow( b2, b / a );\n\t\t\t\tl3 = a * ( ln(b1) + ln(p1) );\n\t\t\t\tif ( l3 < MAX_LN && l3 > MIN_LN ) {\n\t\t\t\t\tresult *= pow( p1 * b1, a );\n\t\t\t\t} else {\n\t\t\t\t\tl2 += l1 + ln(result);\n\t\t\t\t\tif ( l2 >= MAX_LN ) {\n\t\t\t\t\t\treturn NaN;\n\t\t\t\t\t}\n\t\t\t\t\tresult = exp( l2 );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tp1 = pow( b1, a / b );\n\t\t\t\tl3 = ( ln(p1) + ln(b2) ) * b;\n\t\t\t\tif ( l3 < MAX_LN && l3 > MIN_LN ) {\n\t\t\t\t\tresult *= pow( p1 * b2, b );\n\t\t\t\t} else {\n\t\t\t\t\tl2 += l1 + ln( result );\n\t\t\t\t\tif (l2 >= MAX_LN) {\n\t\t\t\t\t\treturn NaN;\n\t\t\t\t\t}\n\t\t\t\t\tresult = exp( l2 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Finally the normal case:\n\t\t\tresult *= pow( b1, a ) * pow( b2, b );\n\t\t}\n\t}\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ibetaPowerTerms;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ibetaPowerTerms = require( './ibeta_power_terms.js' );\n\n\n// MAIN //\n\n/**\n* Computes the partial derivative with respect to x of the incomplete beta function.\n*\n* @private\n* @param {Probability} x - input value (0 < x <= 1)\n* @param {PositiveNumber} a - first parameter\n* @param {PositiveNumber} b - second parameter (must be greater than 1)\n* @returns {number} value of the partial derivative\n*/\nfunction ibetaDerivative( x, a, b ) {\n\tvar f1;\n\tvar y;\n\tif ( x === 1.0 ) {\n\t\treturn 0.0;\n\t}\n\t// Regular cases:\n\tf1 = ibetaPowerTerms( a, b, x, 1.0 - x, true );\n\ty = ( 1.0 - x ) * x;\n\tf1 /= y;\n\treturn f1;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ibetaDerivative;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );\nvar ibetaDerivative = require( './ibeta_derivative.js' );\n\n\n// MAIN //\n\n/**\n* Evaluates the probability mass function (PMF) for a negative binomial distribution with number of successes until experiment is stopped `r` and success probability `p`.\n*\n* @param {number} x - input value\n* @param {PositiveNumber} r - number of successes until experiment is stopped\n* @param {Probability} p - success probability\n* @returns {Probability} evaluated PMF\n*\n* @example\n* var y = pmf( 5.0, 20.0, 0.8 );\n* // returns ~0.157\n*\n* @example\n* var y = pmf( 21.0, 20.0, 0.5 );\n* // returns ~0.06\n*\n* @example\n* var y = pmf( 5.0, 10.0, 0.4 );\n* // returns ~0.016\n*\n* @example\n* var y = pmf( 0.0, 10.0, 0.9 );\n* // returns ~0.349\n*\n* @example\n* var y = pmf( 21.0, 15.5, 0.5 );\n* // returns ~0.037\n*\n* @example\n* var y = pmf( 5.0, 7.4, 0.4 );\n* // returns ~0.051\n*\n* @example\n* var y = pmf( 2.0, 0.0, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 2.0, -2.0, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 2.0, 20, -1.0 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 2.0, 20, 1.5 );\n* // returns NaN\n*\n* @example\n* var y = pmf( NaN, 20.0, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 0.0, NaN, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 0.0, 20.0, NaN );\n* // returns NaN\n*/\nfunction pmf( x, r, p ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( r ) ||\n\t\tisnan( p ) ||\n\t\tr <= 0.0 ||\n\t\tp <= 0.0 ||\n\t\tp > 1.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( !isNonNegativeInteger( x ) || p === 0.0 ) {\n\t\treturn 0.0;\n\t}\n\treturn ( p / ( r + x ) ) * ibetaDerivative( p, r, x + 1.0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = pmf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar ibetaDerivative = require( './ibeta_derivative.js' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the probability mass function (PMF) for a negative binomial distribution with number of successes until experiment is stopped `r` and success probability `p`.\n*\n* @param {PositiveNumber} r - number of successes until experiment is stopped\n* @param {Probability} p - success probability\n* @returns {Function} PMF\n*\n* @example\n* var pmf = factory( 10, 0.5 );\n* var y = pmf( 3.0 );\n* // returns ~0.027\n*\n* y = pmf( 5.0 );\n* // returns ~0.061\n*/\nfunction factory( r, p ) {\n\tif (\n\t\tisnan( r ) ||\n\t\tisnan( p ) ||\n\t\tr <= 0.0 ||\n\t\tp <= 0.0 ||\n\t\tp > 1.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn pmf;\n\n\t/**\n\t* Evaluates the probability mass function (PMF) for a negative binomial distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated PMF\n\t*\n\t* @example\n\t* var y = pmf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction pmf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( !isNonNegativeInteger( x ) ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn ( p / ( r + x ) ) * ibetaDerivative( p, r, x + 1.0 );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Negative binomial distribution probability mass function (PMF).\n*\n* @module @stdlib/stats/base/dists/negative-binomial/pmf\n*\n* @example\n* var pmf = require( '@stdlib/stats/base/dists/negative-binomial/pmf' );\n*\n* var y = pmf( 5.0, 20.0, 0.8 );\n* // returns ~0.157\n*\n* y = pmf( 21.0, 20.0, 0.5 );\n* // returns ~0.06\n*\n* y = pmf( 5.0, 10.0, 0.4 );\n* // returns ~0.016\n*\n* y = pmf( 0.0, 10.0, 0.9 );\n* // returns ~0.349\n*\n* y = pmf( 21.0, 15.5, 0.5 );\n* // returns ~0.037\n*\n* y = pmf( 5.0, 7.4, 0.4 );\n* // returns ~0.051\n*\n* var mypmf = pmf.factory( 10, 0.5 );\n* y = mypmf( 3.0 );\n* // returns ~0.027\n*\n* y = mypmf( 5.0 );\n* // returns ~0.061\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar pmf = require( './pmf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( pmf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = pmf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );\nvar factorialln = require( '@stdlib/math/base/special/factorialln' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Evaluates the probability mass function (PMF) for a Poisson distribution with mean parameter `lambda` at a value `x`.\n*\n* @param {number} x - input value\n* @param {NonNegativeNumber} lambda - mean parameter\n* @returns {Probability} evaluated PMF\n*\n* @example\n* var y = pmf( 4.0, 3.0 );\n* // returns ~0.168\n*\n* @example\n* var y = pmf( 1.0, 3.0 );\n* // returns ~0.149\n*\n* @example\n* var y = pmf( -1.0, 2.0 );\n* // returns 0.0\n*\n* @example\n* var y = pmf( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = pmf( NaN, 0.5 );\n* // returns NaN\n*\n* @example\n* // Invalid mean parameter:\n* var y = pmf( 2.0, -0.5 );\n* // returns NaN\n*/\nfunction pmf( x, lambda ) {\n\tvar lnl;\n\tif ( isnan( x ) || isnan( lambda ) || lambda < 0.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( lambda === 0.0 ) {\n\t\treturn ( x === 0.0 ) ? 1.0 : 0.0;\n\t}\n\tif ( isNonNegativeInteger( x ) && x !== PINF ) {\n\t\tlnl = (x * ln( lambda )) - lambda - factorialln( x );\n\t\treturn exp( lnl );\n\t}\n\treturn 0.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pmf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar factorialln = require( '@stdlib/math/base/special/factorialln' );\nvar degenerate = require( './../../../../../base/dists/degenerate/pmf' ).factory;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the probability mass function (PMF) for a Poisson distribution with mean parameter `lambda`.\n*\n* @param {NonNegativeNumber} lambda - mean parameter\n* @returns {Function} PMF\n*\n* @example\n* var pmf = factory( 1.0 );\n* var y = pmf( 3.0 );\n* // returns ~0.061\n*\n* y = pmf( 1.0 );\n* // returns ~0.368\n*/\nfunction factory( lambda ) {\n\tif ( isnan( lambda ) || lambda < 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( lambda === 0.0 ) {\n\t\treturn degenerate( 0.0 );\n\t}\n\treturn pmf;\n\n\t/**\n\t* Evaluates the probability mass function (PMF) for a Poisson distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated PMF\n\t*\n\t* @example\n\t* var y = pmf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction pmf( x ) {\n\t\tvar lnl;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( isNonNegativeInteger( x ) && x !== PINF ) {\n\t\t\tlnl = (x * ln( lambda )) - lambda - factorialln( x );\n\t\t\treturn exp( lnl );\n\t\t}\n\t\treturn 0.0;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Poisson distribution probability mass function (PMF).\n*\n* @module @stdlib/stats/base/dists/poisson/pmf\n*\n* @example\n* var pmf = require( '@stdlib/stats/base/dists/poisson/pmf' );\n*\n* var y = pmf( 4.0, 3.0 );\n* // returns ~0.168\n*\n* y = pmf( 1.0, 3.0 );\n* // returns ~0.149\n*\n* y = pmf( -1.0, 2.0 );\n* // returns 0.0\n*\n* var mypmf = pmf.factory( 1.0 );\n* y = mypmf( 3.0 );\n* // returns ~0.061\n*\n* y = mypmf( 1.0 );\n* // returns ~0.368\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar pmf = require( './pmf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( pmf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = pmf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\nvar PMF = require( './pmf.js' );\n\n\n// MAIN //\n\n/**\n* Returns the probability mass function (PMF) corresponding to a provided distribution name.\n*\n* @private\n* @param {string} name - distribution name\n* @returns {(Function|Error)} a probability mass function (PMF) or an error\n*/\nfunction getPMF( name ) {\n\tif ( !hasOwnProp( PMF, name ) ) {\n\t\treturn new Error( format( 'invalid argument. Unsupported/unrecognized distribution name. Value: `%s`.', name ) );\n\t}\n\treturn PMF[ name ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = getPMF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar bernoulli = require( './../../base/dists/bernoulli/pmf' );\nvar binomial = require( './../../base/dists/binomial/pmf' );\nvar discreteUniform = require( './../../base/dists/discrete-uniform/pmf' );\nvar geometric = require( './../../base/dists/geometric/pmf' );\nvar hypergeometric = require( './../../base/dists/hypergeometric/pmf' );\nvar negativeBinomial = require( './../../base/dists/negative-binomial/pmf' );\nvar poisson = require( './../../base/dists/poisson/pmf' );\n\n\n// MAIN //\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\nvar PMF = {\n\t'bernoulli': bernoulli,\n\t'binomial': binomial,\n\t'discrete-uniform': discreteUniform,\n\t'geometric': geometric,\n\t'hypergeometric': hypergeometric,\n\t'negative-binomial': negativeBinomial,\n\t'poisson': poisson\n};\n\n\n// EXPORTS //\n\nmodule.exports = PMF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Computes a chi-square test statistic.\n*\n* @private\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Float64Array} x - observation frequencies\n* @param {integer} strideX - `x` stride length\n* @param {Float64Array} y - expected frequencies\n* @param {integer} strideY - `y` stride length\n* @returns {number} test statistic\n*/\nfunction testStatistic( N, x, strideX, y, strideY ) {\n\tvar stat;\n\tvar v1;\n\tvar v2;\n\tvar d;\n\tvar i;\n\n\tstat = 0.0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv1 = x[ i*strideX ];\n\t\tv2 = y[ i*strideY ];\n\t\tif ( v2 === 0.0 ) {\n\t\t\tif ( v1 === 0.0 ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn PINF;\n\t\t}\n\t\td = v1 - v2;\n\t\tstat += ( d * d ) / v2;\n\t}\n\treturn stat;\n}\n\n\n// EXPORTS //\n\nmodule.exports = testStatistic;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ceil = require( '@stdlib/math/base/special/ceil' );\n\n\n// MAIN //\n\n/**\n* Generates a linearly spaced numeric array according to a provided increment.\n*\n* @param {number} x1 - first array value\n* @param {number} x2 - array element bound\n* @param {number} increment - increment\n* @returns {Array} linearly spaced numeric array\n*\n* @example\n* var arr = incrspace( 0, 11, 2 );\n* // returns [ 0, 2, 4, 6, 8, 10 ]\n*/\nfunction incrspace( x1, x2, increment ) {\n\tvar arr;\n\tvar len;\n\tvar i;\n\n\tlen = ceil( ( x2-x1 ) / increment );\n\tif ( len <= 1 ) {\n\t\treturn [ x1 ];\n\t}\n\tarr = [ x1 ];\n\tfor ( i = 1; i < len; i++ ) {\n\t\tarr.push( x1 + (increment*i) );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate a linearly spaced numeric array according to a provided increment.\n*\n* @module @stdlib/array/base/incrspace\n*\n* @example\n* var incrspace = require( '@stdlib/array/base/incrspace' );\n*\n* var arr = incrspace( 0, 11, 2 );\n* // returns [ 0, 2, 4, 6, 8, 10 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './../../define-property' );\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-write accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - get accessor\n* @param {Function} setter - set accessor\n*\n* @example\n* function getter() {\n*     return name + ' foo';\n* }\n*\n* function setter( v ) {\n*     name = v;\n* }\n*\n* var name = 'bar';\n* var obj = {};\n*\n* setNonEnumerableReadWriteAccessor( obj, 'foo', getter, setter );\n*\n* var v = obj.foo;\n* // returns 'bar foo'\n*\n* obj.foo = 'beep';\n*\n* v = obj.foo;\n* // returns 'beep foo'\n*/\nfunction setNonEnumerableReadWriteAccessor( obj, prop, getter, setter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'get': getter,\n\t\t'set': setter\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadWriteAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define a non-enumerable read-write accessor.\n*\n* @module @stdlib/utils/define-nonenumerable-read-write-accessor\n*\n* @example\n* var setNonEnumerableReadWriteAccessor = require( '@stdlib/utils/define-nonenumerable-read-write-accessor' );\n*\n* function getter() {\n*     return name + ' foo';\n* }\n*\n* function setter( v ) {\n*     name = v;\n* }\n*\n* var name = 'bar';\n* var obj = {};\n*\n* setNonEnumerableReadWriteAccessor( obj, 'foo', getter, setter );\n*\n* var v = obj.foo;\n* // returns 'bar foo'\n*\n* obj.foo = 'beep';\n*\n* v = obj.foo;\n* // returns 'beep foo'\n*/\n\n// MODULES //\n\nvar setNonEnumerableReadWriteAccessor = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadWriteAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\n// Define a mask for the least significant 16 bits (low word): 65535 => 0x0000ffff => 00000000000000001111111111111111\nvar LOW_WORD_MASK = 0x0000ffff>>>0; // asm type annotation\n\n\n// MAIN //\n\n/**\n* Performs C-like multiplication of two unsigned 32-bit integers.\n*\n* ## Method\n*\n* -   To emulate C-like multiplication without the aid of 64-bit integers, we recognize that a 32-bit integer can be split into two 16-bit words\n*\n*     ```tex\n*     a = w_h*2^{16} + w_l\n*     ```\n*\n*     where \\\\( w_h \\\\) is the most significant 16 bits and \\\\( w_l \\\\) is the least significant 16 bits. For example, consider the maximum unsigned 32-bit integer \\\\( 2^{32}-1 \\\\)\n*\n*     ```binarystring\n*     11111111111111111111111111111111\n*     ```\n*\n*     The 16-bit high word is then\n*\n*     ```binarystring\n*     1111111111111111\n*     ```\n*\n*     and the 16-bit low word\n*\n*     ```binarystring\n*     1111111111111111\n*     ```\n*\n*     If we cast the high word to 32-bit precision and multiply by \\\\( 2^{16} \\\\) (equivalent to a 16-bit left shift), then the bit sequence is\n*\n*     ```binarystring\n*     11111111111111110000000000000000\n*     ```\n*\n*     Similarly, upon casting the low word to 32-bit precision, the bit sequence is\n*\n*     ```binarystring\n*     00000000000000001111111111111111\n*     ```\n*\n*     From the rules of binary addition, we recognize that adding the two 32-bit values for the high and low words will return our original value \\\\( 2^{32}-1 \\\\).\n*\n* -   Accordingly, the multiplication of two 32-bit integers can be expressed\n*\n*     ```tex\n*     \\begin{align*}\n*     a \\cdot b &= ( a_h \\cdot 2^{16} + a_l) \\cdot ( b_h \\cdot 2^{16} + b_l) \\\\\n*           &= a_l \\cdot b_l + a_h \\cdot b_l \\cdot 2^{16} + a_l \\cdot b_h \\cdot 2^{16} + (a_h \\cdot b_h) \\cdot 2^{32} \\\\\n*           &= a_l \\cdot b_l + (a_h \\cdot b_l + a_l \\cdot b_h) \\cdot 2^{16} + (a_h \\cdot b_h) \\cdot 2^{32}\n*     \\end{align*}\n*     ```\n*\n* -   We note that multiplying (dividing) an integer by \\\\( 2^n \\\\) is equivalent to performing a left (right) shift of \\\\( n \\\\) bits.\n*\n* -   Further, as we want to return an integer of the same precision, for a 32-bit integer, the return value will be modulo \\\\( 2^{32} \\\\). Stated another way, we only care about the low word of a 64-bit result.\n*\n* -   Accordingly, the last term, being evenly divisible by \\\\( 2^{32} \\\\), drops from the equation leaving the remaining two terms as the remainder.\n*\n*     ```tex\n*     a \\cdot b = a_l \\cdot b_l + (a_h \\cdot b_l + a_l \\cdot b_h) << 16\n*     ```\n*\n* -   Lastly, the second term in the above equation contributes to the middle bits and may cause the product to \"overflow\". However, we can disregard (`>>>0`) overflow bits due to modulo arithmetic, as discussed earlier with regard to the term involving the partial product of high words.\n*\n*\n* @param {uinteger32} a - integer\n* @param {uinteger32} b - integer\n* @returns {uinteger32} product\n*\n* @example\n* var v = umul( 10>>>0, 4>>>0 );\n* // returns 40\n*/\nfunction umul( a, b ) {\n\tvar lbits;\n\tvar mbits;\n\tvar ha;\n\tvar hb;\n\tvar la;\n\tvar lb;\n\n\ta >>>= 0; // asm type annotation\n\tb >>>= 0; // asm type annotation\n\n\t// Isolate the most significant 16-bits:\n\tha = ( a>>>16 )>>>0; // asm type annotation\n\thb = ( b>>>16 )>>>0; // asm type annotation\n\n\t// Isolate the least significant 16-bits:\n\tla = ( a&LOW_WORD_MASK )>>>0; // asm type annotation\n\tlb = ( b&LOW_WORD_MASK )>>>0; // asm type annotation\n\n\t// Compute partial sums:\n\tlbits = ( la*lb )>>>0; // asm type annotation; no integer overflow possible\n\tmbits = ( ((ha*lb) + (la*hb))<<16 )>>>0; // asm type annotation; possible integer overflow\n\n\t// The final `>>>0` converts the intermediate sum to an unsigned integer (possible integer overflow during sum):\n\treturn ( lbits + mbits )>>>0; // asm type annotation\n}\n\n\n// EXPORTS //\n\nmodule.exports = umul;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Perform C-like multiplication of two unsigned 32-bit integers.\n*\n* @module @stdlib/math/base/ops/umul\n*\n* @example\n* var umul = require( '@stdlib/math/base/ops/umul' );\n*\n* var v = umul( 10>>>0, 4>>>0 );\n* // returns 40\n*/\n\n// MODULES //\n\nvar umul = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = umul;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Sets an array element using an accessor method.\n*\n* @private\n* @param {Collection} x - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*/\nfunction setter( x, idx, value ) {\n\tx.set( value, idx );\n}\n\n\n// EXPORTS //\n\nmodule.exports = setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getIndexed = require( './getter.js' );\nvar getAccessor = require( './getter.accessor.js' );\nvar setIndexed = require( './setter.js' );\nvar setAccessor = require( './setter.accessor.js' );\n\n\n// MAIN //\n\n/**\n* Converts an array-like to an object likely to have the same \"shape\".\n*\n* ## Notes\n*\n* -   This function is intended as a potential performance optimization. In V8, for example, even if two objects share common properties, if those properties were added in different orders or if one object has additional properties not shared by the other object, then those objects will have different \"hidden\" classes. If a function is provided many objects having different \"shapes\", some JavaScript VMs (e.g., V8) will consider the function \"megamorphic\" and fail to perform various runtime optimizations. Accordingly, the intent of this function is to standardize the \"shape\" of the object holding array meta data to ensure that internal functions operating on arrays are provided consistent argument \"shapes\".\n*\n* -   The returned object has the following properties:\n*\n*     -   **data**: data buffer.\n*     -   **accessors**: `boolean` indicating whether the data buffer uses accessors for getting and setting elements.\n*     -   **getter**: accessor for retrieving a data buffer element.\n*     -   **setter**: accessor for setting a data buffer element.\n*\n* @param {Collection} x - array-like object\n* @returns {Object} object containing array meta data\n*\n* @example\n* var obj = arraylike2object( [ 1, 2, 3, 4 ] );\n* // returns {...}\n*/\nfunction arraylike2object( x ) {\n\tvar bool = Boolean( x.get && x.set ); // Note: intentional weak check, as we don't explicitly check for functions for (perhaps marginally) better performance.\n\treturn {\n\t\t'data': x,\n\t\t'accessors': bool,\n\t\t'getter': ( bool ) ? getAccessor : getIndexed,\n\t\t'setter': ( bool ) ? setAccessor : setIndexed\n\t};\n}\n\n\n// EXPORTS //\n\nmodule.exports = arraylike2object;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array element.\n*\n* @private\n* @param {Collection} x - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element\n*/\nfunction getter( x, idx ) {\n\treturn x[ idx ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array element using an accessor method.\n*\n* @private\n* @param {Collection} x - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element\n*/\nfunction getter( x, idx ) {\n\treturn x.get( idx );\n}\n\n\n// EXPORTS //\n\nmodule.exports = getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Sets an array element.\n*\n* @private\n* @param {Collection} x - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*/\nfunction setter( x, idx, value ) {\n\tx[ idx ] = value;\n}\n\n\n// EXPORTS //\n\nmodule.exports = setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert an array-like object to an object likely to have the same \"shape\".\n*\n* @module @stdlib/array/base/arraylike2object\n*\n* @example\n* var arraylike2object = require( '@stdlib/array/base/arraylike2object' );\n*\n* var obj = arraylike2object( [ 1, 2, 3, 4 ] );\n* // returns {...}\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Copies values from `x` into `y`.\n*\n* @private\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Object} x - input array object\n* @param {Collection} x.data - input array data\n* @param {Function} x.get - getter\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Object} y - output array object\n* @param {Collection} y.data - output array data\n* @param {Function} y.set - setter\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @returns {Object} output array object\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n* var Complex64 = require( '@stdlib/complex/float32' );\n* var reinterpret64 = require( '@stdlib/strided/base/reinterpret-complex64' );\n*\n* function setter( data, idx, value ) {\n*     data.set( value, idx );\n* }\n*\n* function getter( data, idx ) {\n*     return data.get( idx );\n* }\n*\n* var x = {\n*     'data': new Complex64Array( [ 1.0, 2.0, 3.0, 4.0 ] ),\n*     'setter': setter,\n*     'getter': getter\n* };\n*\n* var y = {\n*     'data': new Complex64Array( [ 5.0, 6.0, 7.0, 8.0 ] ),\n*     'setter': setter,\n*     'getter': getter\n* };\n*\n* gcopy( x.data.length, x, 1, 0, y, 1, 0 );\n*\n* var view = reinterpret64( y.data, 0 );\n* // view => <Float32Array>[ 1.0, 2.0, 3.0, 4.0 ]\n*/\nfunction gcopy( N, x, strideX, offsetX, y, strideY, offsetY ) {\n\tvar xbuf;\n\tvar ybuf;\n\tvar set;\n\tvar get;\n\tvar ix;\n\tvar iy;\n\tvar i;\n\n\t// Cache references to array data:\n\txbuf = x.data;\n\tybuf = y.data;\n\n\t// Cache a reference to the element accessors:\n\tget = x.getter;\n\tset = y.setter;\n\n\tix = offsetX;\n\tiy = offsetY;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tset( ybuf, iy, get( xbuf, ix ) );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gcopy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar arraylike2object = require( '@stdlib/array/base/arraylike2object' );\nvar accessors = require( './accessors.js' );\n\n\n// VARIABLES //\n\nvar M = 8;\n\n\n// MAIN //\n\n/**\n* Copies values from `x` into `y`.\n*\n* @param {PositiveInteger} N - number of values to copy\n* @param {Collection} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {Collection} y - destination array\n* @param {integer} strideY - `y` stride length\n* @returns {Collection} `y`\n*\n* @example\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var y = [ 6.0, 7.0, 8.0, 9.0, 10.0 ];\n*\n* gcopy( x.length, x, 1, y, 1 );\n* // y => [ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction gcopy( N, x, strideX, y, strideY ) {\n\tvar ix;\n\tvar iy;\n\tvar ox;\n\tvar oy;\n\tvar m;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tox = arraylike2object( x );\n\toy = arraylike2object( y );\n\tif ( ox.accessors || oy.accessors ) {\n\t\tif ( strideX < 0 ) {\n\t\t\tix = (1-N) * strideX;\n\t\t} else {\n\t\t\tix = 0;\n\t\t}\n\t\tif ( strideY < 0 ) {\n\t\t\tiy = (1-N) * strideY;\n\t\t} else {\n\t\t\tiy = 0;\n\t\t}\n\t\taccessors( N, ox, strideX, ix, oy, strideY, iy );\n\t\treturn oy.data;\n\t}\n\t// Use unrolled loops if both strides are equal to `1`...\n\tif ( strideX === 1 && strideY === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\ty[ i ] = x[ i ];\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn y;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\ty[ i ] = x[ i ];\n\t\t\ty[ i+1 ] = x[ i+1 ];\n\t\t\ty[ i+2 ] = x[ i+2 ];\n\t\t\ty[ i+3 ] = x[ i+3 ];\n\t\t\ty[ i+4 ] = x[ i+4 ];\n\t\t\ty[ i+5 ] = x[ i+5 ];\n\t\t\ty[ i+6 ] = x[ i+6 ];\n\t\t\ty[ i+7 ] = x[ i+7 ];\n\t\t}\n\t\treturn y;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = (1-N) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty[ iy ] = x[ ix ];\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gcopy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar arraylike2object = require( '@stdlib/array/base/arraylike2object' );\nvar accessors = require( './accessors.js' );\n\n\n// VARIABLES //\n\nvar M = 8;\n\n\n// MAIN //\n\n/**\n* Copies values from `x` into `y`.\n*\n* @param {PositiveInteger} N - number of values to copy\n* @param {Collection} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Collection} y - destination array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @returns {Collection} `y`\n*\n* @example\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var y = [ 6.0, 7.0, 8.0, 9.0, 10.0 ];\n*\n* gcopy( x.length, x, 1, 0, y, 1, 0 );\n* // y => [ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction gcopy( N, x, strideX, offsetX, y, strideY, offsetY ) {\n\tvar ix;\n\tvar iy;\n\tvar ox;\n\tvar oy;\n\tvar m;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tox = arraylike2object( x );\n\toy = arraylike2object( y );\n\tif ( ox.accessors || oy.accessors ) {\n\t\taccessors( N, ox, strideX, offsetX, oy, strideY, offsetY );\n\t\treturn oy.data;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\n\t// Use unrolled loops if both strides are equal to `1`...\n\tif ( strideX === 1 && strideY === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\ty[ iy ] = x[ ix ];\n\t\t\t\tix += strideX;\n\t\t\t\tiy += strideY;\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn y;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\ty[ iy ] = x[ ix ];\n\t\t\ty[ iy+1 ] = x[ ix+1 ];\n\t\t\ty[ iy+2 ] = x[ ix+2 ];\n\t\t\ty[ iy+3 ] = x[ ix+3 ];\n\t\t\ty[ iy+4 ] = x[ ix+4 ];\n\t\t\ty[ iy+5 ] = x[ ix+5 ];\n\t\t\ty[ iy+6 ] = x[ ix+6 ];\n\t\t\ty[ iy+7 ] = x[ ix+7 ];\n\t\t\tix += M;\n\t\t\tiy += M;\n\t\t}\n\t\treturn y;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty[ iy ] = x[ ix ];\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gcopy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* BLAS level 1 routine to copy values from `x` into `y`.\n*\n* @module @stdlib/blas/base/gcopy\n*\n* @example\n* var gcopy = require( '@stdlib/blas/base/gcopy' );\n*\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var y = [ 6.0, 7.0, 8.0, 9.0, 10.0 ];\n*\n* gcopy( x.length, x, 1, y, 1 );\n* // y => [ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* @example\n* var gcopy = require( '@stdlib/blas/base/gcopy' );\n*\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var y = [ 6.0, 7.0, 8.0, 9.0, 10.0 ];\n*\n* gcopy.ndarray( x.length, x, 1, 0, y, 1, 0 );\n* // y => [ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Dummy function.\n*\n* @private\n*/\nfunction foo() {\n\t// No-op...\n}\n\n\n// EXPORTS //\n\nmodule.exports = foo;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar foo = require( './foo.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native function `name` support.\n*\n* @returns {boolean} boolean indicating if an environment has function `name` support\n*\n* @example\n* var bool = hasFunctionNameSupport();\n* // returns <boolean>\n*/\nfunction hasFunctionNameSupport() {\n\treturn ( foo.name === 'foo' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasFunctionNameSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar hasFunctionNameSupport = require( '@stdlib/assert/has-function-name-support' );\nvar format = require( '@stdlib/string/format' );\nvar RE = require( '@stdlib/regexp/function-name' ).REGEXP;\n\n\n// VARIABLES //\n\nvar isFunctionNameSupported = hasFunctionNameSupport();\n\n\n// MAIN //\n\n/**\n* Returns the name of a function.\n*\n* @param {Function} fcn - input function\n* @throws {TypeError} must provide a function\n* @returns {string} function name\n*\n* @example\n* var v = functionName( Math.sqrt );\n* // returns 'sqrt'\n*\n* @example\n* var v = functionName( function foo(){} );\n* // returns 'foo'\n*\n* @example\n* var v = functionName( function(){} );\n* // returns '' || 'anonymous'\n*\n* @example\n* var v = functionName( String );\n* // returns 'String'\n*/\nfunction functionName( fcn ) {\n\t// TODO: add support for generator functions?\n\tif ( isFunction( fcn ) === false ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( isFunctionNameSupported ) {\n\t\treturn fcn.name;\n\t}\n\treturn RE.exec( fcn.toString() )[ 1 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = functionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctorName = require( '@stdlib/utils/constructor-name' );\nvar fcnName = require( '@stdlib/utils/function-name' );\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar hasFloat64ArraySupport = require( './../../has-float64array-support' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar CTORS = require( './ctors.js' );\nvar NAMES = require( './names.json' );\n\n\n// VARIABLES //\n\n// Abstract `TypedArray` class:\nvar TypedArray = ( hasFloat64ArraySupport() ) ? getPrototypeOf( Float64Array ) : Dummy; // eslint-disable-line max-len\n\n// Ensure abstract typed array class has expected name:\nTypedArray = ( fcnName( TypedArray ) === 'TypedArray' ) ? TypedArray : Dummy;\n\n\n// FUNCTIONS //\n\n/**\n* Dummy constructor.\n*\n* @private\n*/\nfunction Dummy() {} // eslint-disable-line no-empty-function\n\n\n// MAIN //\n\n/**\n* Tests if a value is a typed array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a typed array\n*\n* @example\n* var Int8Array = require( '@stdlib/array/int8' );\n*\n* var bool = isTypedArray( new Int8Array( 10 ) );\n* // returns true\n*/\nfunction isTypedArray( value ) {\n\tvar v;\n\tvar i;\n\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for the abstract class...\n\tif ( value instanceof TypedArray ) {\n\t\treturn true;\n\t}\n\t// Check for typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( value instanceof CTORS[ i ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired class...\n\twhile ( value ) {\n\t\tv = ctorName( value );\n\t\tfor ( i = 0; i < NAMES.length; i++ ) {\n\t\t\tif ( NAMES[ i ] === v ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tvalue = getPrototypeOf( value );\n\t}\n\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isTypedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the name of a function.\n*\n* @module @stdlib/utils/function-name\n*\n* @example\n* var functionName = require( '@stdlib/utils/function-name' );\n*\n* var v = functionName( String );\n* // returns 'String'\n*\n* v = functionName( function foo(){} );\n* // returns 'foo'\n*\n* v = functionName( function(){} );\n* // returns '' || 'anonymous'\n*/\n\n// MODULES //\n\nvar functionName = require( './function_name.js' );\n\n\n// EXPORTS //\n\nmodule.exports = functionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Int8Array = require( '@stdlib/array/int8' );\nvar Uint8Array = require( '@stdlib/array/uint8' );\nvar Uint8ClampedArray = require( '@stdlib/array/uint8c' );\nvar Int16Array = require( '@stdlib/array/int16' );\nvar Uint16Array = require( '@stdlib/array/uint16' );\nvar Int32Array = require( '@stdlib/array/int32' );\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float32Array = require( '@stdlib/array/float32' );\nvar Float64Array = require( '@stdlib/array/float64' );\n\n\n// MAIN //\n\nvar CTORS = [\n\tFloat64Array,\n\tFloat32Array,\n\tInt32Array,\n\tUint32Array,\n\tInt16Array,\n\tUint16Array,\n\tInt8Array,\n\tUint8Array,\n\tUint8ClampedArray\n];\n\n\n// EXPORTS //\n\nmodule.exports = CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a typed array.\n*\n* @module @stdlib/assert/is-typed-array\n*\n* @example\n* var Int8Array = require( '@stdlib/array/int8' );\n* var isTypedArray = require( '@stdlib/assert/is-typed-array' );\n*\n* var bool = isTypedArray( new Int8Array( 10 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar isTypedArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isTypedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object.\n*\n* @module @stdlib/assert/is-array-like-object\n*\n* @example\n* var isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\n*\n* var bool = isArrayLikeObject( [] );\n* // returns true\n*\n* bool = isArrayLikeObject( { 'length':10 } );\n* // returns true\n*\n* bool = isArrayLikeObject( 'beep' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isArrayLikeObject = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isArrayLikeObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar MAX_LENGTH = require( '@stdlib/constants/array/max-array-length' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array-like object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is an array-like object\n*\n* @example\n* var bool = isArrayLikeObject( [] );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( { 'length':10 } );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( 'beep' );\n* // returns false\n*/\nfunction isArrayLikeObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArrayLikeObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* @private\n* @returns {Object} JSON representation\n*/\nfunction toJSON() {\n\t/* eslint-disable no-invalid-this */\n\tvar out = {};\n\tout.type = 'Complex128';\n\tout.re = this.re;\n\tout.im = this.im;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = toJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar defineProperty = require( '@stdlib/utils/define-property' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar format = require( '@stdlib/string/format' );\nvar toStr = require( './tostring.js' );\nvar toJSON = require( './tojson.js' );\n\n\n// MAIN //\n\n/**\n* 128-bit complex number constructor.\n*\n* @constructor\n* @param {number} real - real component\n* @param {number} imag - imaginary component\n* @throws {TypeError} must invoke using the `new` keyword\n* @throws {TypeError} real component must be a number\n* @throws {TypeError} imaginary component must be a number\n* @returns {Complex128} 128-bit complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n* // returns <Complex128>\n*/\nfunction Complex128( real, imag ) {\n\tif ( !( this instanceof Complex128 ) ) {\n\t\tthrow new TypeError( 'invalid invocation. Constructor must be called with the `new` keyword.' );\n\t}\n\tif ( !isNumber( real ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Real component must be a number. Value: `%s`.', real ) );\n\t}\n\tif ( !isNumber( imag ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Imaginary component must be a number. Value: `%s`.', imag ) );\n\t}\n\tdefineProperty( this, 're', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': real\n\t});\n\tdefineProperty( this, 'im', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': imag\n\t});\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var nbytes = Complex128.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex128, 'BYTES_PER_ELEMENT', 8 );\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128.prototype\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var nbytes = z.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex128.prototype, 'BYTES_PER_ELEMENT', 8 );\n\n/**\n* Length (in bytes) of a complex number.\n*\n* @name byteLength\n* @memberof Complex128.prototype\n* @type {integer}\n* @returns {integer} byte length\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var nbytes = z.byteLength;\n* // returns 16\n*/\nsetReadOnly( Complex128.prototype, 'byteLength', 16 );\n\n/**\n* Serializes a complex number as a string.\n*\n* @name toString\n* @memberof Complex128.prototype\n* @type {Function}\n* @returns {string} serialized complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var str = z.toString();\n* // returns '5 + 3i'\n*/\nsetReadOnly( Complex128.prototype, 'toString', toStr );\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `Complex128` instance.\n*\n*\n* @name toJSON\n* @memberof Complex128.prototype\n* @type {Function}\n* @returns {Object} serialized complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var obj = z.toJSON();\n* // returns { 'type': 'Complex128', 're': 5.0, 'im': 3.0 }\n*/\nsetReadOnly( Complex128.prototype, 'toJSON', toJSON );\n\n\n// EXPORTS //\n\nmodule.exports = Complex128;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a string.\n*\n* @private\n* @returns {string} serialized complex number\n*/\nfunction toString() { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar str = '' + this.re;\n\tif ( this.im < 0 ) {\n\t\tstr += ' - ' + (-this.im);\n\t} else {\n\t\tstr += ' + ' + this.im;\n\t}\n\tstr += 'i';\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* 128-bit complex number constructor.\n*\n* @module @stdlib/complex/float64\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n*\n* var z = new Complex128( 5.0, 3.0 );\n* // returns <Complex128>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar fround = ( typeof Math.fround === 'function' ) ? Math.fround : null; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nmodule.exports = fround;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float32Array = require( '@stdlib/array/float32' );\n\n\n// VARIABLES //\n\nvar FLOAT32_VIEW = new Float32Array( 1 );\n\n\n// MAIN //\n\n/**\n* Converts a double-precision floating-point number to the nearest single-precision floating-point number.\n*\n* @param {number} x - double-precision floating-point number\n* @returns {number} nearest single-precision floating-point number\n*\n* @example\n* var y = float64ToFloat32( 1.337 );\n* // returns 1.3370000123977661\n*/\nfunction float64ToFloat32( x ) {\n\tFLOAT32_VIEW[ 0 ] = x;\n\treturn FLOAT32_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = float64ToFloat32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a double-precision floating-point number to the nearest single-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/to-float32\n*\n* @example\n* var float64ToFloat32 = require( '@stdlib/number/float64/base/to-float32' );\n*\n* var y = float64ToFloat32( 1.337 );\n* // returns 1.3370000123977661\n*/\n\n// MODULES //\n\nvar float64ToFloat32 = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nif ( typeof float64ToFloat32 !== 'function' ) {\n\tfloat64ToFloat32 = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = float64ToFloat32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* @private\n* @returns {Object} JSON representation\n*/\nfunction toJSON() {\n\t/* eslint-disable no-invalid-this */\n\tvar out = {};\n\tout.type = 'Complex64';\n\tout.re = this.re;\n\tout.im = this.im;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = toJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar defineProperty = require( '@stdlib/utils/define-property' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar float64ToFloat32 = require( '@stdlib/number/float64/base/to-float32' );\nvar format = require( '@stdlib/string/format' );\nvar toStr = require( './tostring.js' );\nvar toJSON = require( './tojson.js' );\n\n\n// MAIN //\n\n/**\n* 64-bit complex number constructor.\n*\n* @constructor\n* @param {number} real - real component\n* @param {number} imag - imaginary component\n* @throws {TypeError} must invoke using the `new` keyword\n* @throws {TypeError} real component must be a number\n* @throws {TypeError} imaginary component must be a number\n* @returns {Complex64} 64-bit complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n* // returns <Complex64>\n*/\nfunction Complex64( real, imag ) {\n\tif ( !( this instanceof Complex64 ) ) {\n\t\tthrow new TypeError( 'invalid invocation. Constructor must be called with the `new` keyword.' );\n\t}\n\tif ( !isNumber( real ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Real component must be a number. Value: `%s`.', real ) );\n\t}\n\tif ( !isNumber( imag ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Imaginary component must be a number. Value: `%s`.', imag ) );\n\t}\n\tdefineProperty( this, 're', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': float64ToFloat32( real )\n\t});\n\tdefineProperty( this, 'im', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': float64ToFloat32( imag )\n\t});\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var nbytes = Complex64.BYTES_PER_ELEMENT;\n* // returns 4\n*/\nsetReadOnly( Complex64, 'BYTES_PER_ELEMENT', 4 );\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64.prototype\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var nbytes = z.BYTES_PER_ELEMENT;\n* // returns 4\n*/\nsetReadOnly( Complex64.prototype, 'BYTES_PER_ELEMENT', 4 );\n\n/**\n* Length (in bytes) of a complex number.\n*\n* @name byteLength\n* @memberof Complex64.prototype\n* @type {integer}\n* @returns {integer} byte length\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var nbytes = z.byteLength;\n* // returns 8\n*/\nsetReadOnly( Complex64.prototype, 'byteLength', 8 );\n\n/**\n* Serializes a complex number as a string.\n*\n* @name toString\n* @memberof Complex64.prototype\n* @type {Function}\n* @returns {string} serialized complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var str = z.toString();\n* // returns '5 + 3i'\n*/\nsetReadOnly( Complex64.prototype, 'toString', toStr );\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `Complex64` instance.\n*\n*\n* @name toJSON\n* @memberof Complex64.prototype\n* @type {Function}\n* @returns {Object} serialized complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var obj = z.toJSON();\n* // returns { 'type': 'Complex64', 're': 5.0, 'im': 3.0 }\n*/\nsetReadOnly( Complex64.prototype, 'toJSON', toJSON );\n\n\n// EXPORTS //\n\nmodule.exports = Complex64;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a string.\n*\n* @private\n* @returns {string} serialized complex number\n*/\nfunction toString() { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar str = '' + this.re;\n\tif ( this.im < 0 ) {\n\t\tstr += ' - ' + (-this.im);\n\t} else {\n\t\tstr += ' + ' + this.im;\n\t}\n\tstr += 'i';\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* 64-bit complex number constructor.\n*\n* @module @stdlib/complex/float32\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32' );\n*\n* var z = new Complex64( 5.0, 3.0 );\n* // returns <Complex64>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Complex128 = require( '@stdlib/complex/float64' );\nvar Complex64 = require( '@stdlib/complex/float32' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a complex number-like object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex number-like object.\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n* var Complex64 = require( '@stdlib/complex/float32' );\n*\n* var x = new Complex128( 4.0, 2.0 );\n* var bool = isComplexLike( x );\n* // returns true\n*\n* x = new Complex64( 4.0, 2.0 );\n* bool = isComplexLike( x );\n* // returns true\n*/\nfunction isComplexLike( value ) {\n\tif ( value instanceof Complex128 || value instanceof Complex64 ) {\n\t\treturn true;\n\t}\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.re === 'number' &&\n\t\ttypeof value.im === 'number'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isComplexLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a complex number-like object.\n*\n* @module @stdlib/assert/is-complex-like\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n* var Complex64 = require( '@stdlib/complex/float32' );\n* var isComplexLike = require( '@stdlib/assert/is-complex-like' );\n*\n* var x = new Complex128( 4.0, 2.0 );\n* var bool = isComplexLike( x );\n* // returns true\n*\n* x = new Complex64( 4.0, 2.0 );\n* bool = isComplexLike( x );\n* // returns true\n*/\n\n// MODULES //\n\nvar isComplexLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isComplexLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Symbol.iterator` support.\n*\n* @module @stdlib/assert/has-iterator-symbol-support\n*\n* @example\n* var hasIteratorSymbolSupport = require( '@stdlib/assert/has-iterator-symbol-support' );\n*\n* var bool = hasIteratorSymbolSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasIteratorSymbolSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasIteratorSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( './../../has-own-property' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Symbol.iterator` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol.iterator` support\n*\n* @example\n* var bool = hasIteratorSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasIteratorSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol' &&\n\t\thasOwnProp( Symbol, 'iterator' ) &&\n\t\ttypeof Symbol.iterator === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasIteratorSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Iterator symbol.\n*\n* @module @stdlib/symbol/iterator\n*\n* @example\n* var IteratorSymbol = require( '@stdlib/symbol/iterator' );\n*\n* function iterator() {\n*     var it;\n*     var i;\n*\n*     i = -1;\n*\n*     it = {};\n*     it.next = next;\n*     it.return = done;\n*\n*     if ( IteratorSymbol ) {\n*         it[ IteratorSymbol ] = iterator;\n*     }\n*     return it;\n*\n*     function next() {\n*         i += 1;\n*         return {\n*             'value': i,\n*             'done': false\n*         };\n*     }\n*\n*     function done( value ) {\n*         if ( arguments.length === 0 ) {\n*             return {\n*                 'done': true\n*             };\n*         }\n*         return {\n*             'value': value,\n*             'done': true\n*         };\n*     }\n* }\n*\n* var obj = iterator();\n*/\n\n// MAIN //\n\nvar IteratorSymbol = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = IteratorSymbol;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasIteratorSymbolSupport = require( '@stdlib/assert/has-iterator-symbol-support' );\n\n\n// MAIN //\n\n/**\n* Iterator symbol.\n*\n* @name IteratorSymbol\n* @constant\n* @type {(symbol|null)}\n*\n* @example\n* function iterator() {\n*     var it;\n*     var i;\n*\n*     i = -1;\n*\n*     it = {};\n*     it.next = next;\n*     it.return = done;\n*\n*     if ( IteratorSymbol ) {\n*         it[ IteratorSymbol ] = iterator;\n*     }\n*     return it;\n*\n*     function next() {\n*         i += 1;\n*         return {\n*             'value': i,\n*             'done': false\n*         };\n*     }\n*\n*     function done( value ) {\n*         if ( arguments.length === 0 ) {\n*             return {\n*                 'done': true\n*             };\n*         }\n*         return {\n*             'value': value,\n*             'done': true\n*         };\n*     }\n* }\n*\n* var obj = iterator();\n*/\nvar IteratorSymbol = ( hasIteratorSymbolSupport() ) ? Symbol.iterator : null;\n\n\n// EXPORTS //\n\nmodule.exports = IteratorSymbol;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the real component of a single-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} real component\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32' );\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var re = realf( z );\n* // returns 5.0\n*/\nfunction realf( z ) {\n\treturn z.re;\n}\n\n\n// EXPORTS //\n\nmodule.exports = realf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the real component of a single-precision complex floating-point number.\n*\n* @module @stdlib/complex/realf\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32' );\n* var realf = require( '@stdlib/complex/realf' );\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var re = realf( z );\n* // returns 5.0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the imaginary component of a single-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} imaginary component\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32' );\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var im = imagf( z );\n* // returns 3.0\n*/\nfunction imagf( z ) {\n\treturn z.im;\n}\n\n\n// EXPORTS //\n\nmodule.exports = imagf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the imaginary component of a single-precision complex floating-point number.\n*\n* @module @stdlib/complex/imagf\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32' );\n* var imagf = require( '@stdlib/complex/imagf' );\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var im = imagf( z );\n* // returns 3.0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float32Array = require( '@stdlib/array/float32' );\n\n\n// MAIN //\n\n/**\n* Reinterprets a `Complex64Array` as a `Float32Array`.\n*\n* @param {Complex64Array} x - input array\n* @param {NonNegativeInteger} offset - starting index\n* @returns {Float32Array} `Float32Array` view\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var x = new Complex64Array( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Float32Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/\nfunction reinterpret( x, offset ) {\n\treturn new Float32Array( x.buffer, x.byteOffset+(x.BYTES_PER_ELEMENT*offset), 2*(x.length-offset) ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = reinterpret;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Reinterpret a `Complex64Array` as a `Float32Array`.\n*\n* @module @stdlib/strided/base/reinterpret-complex64\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n* var reinterpret = require( '@stdlib/strided/base/reinterpret-complex64' );\n*\n* var x = new Complex64Array( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Float32Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float64Array = require( '@stdlib/array/float64' );\n\n\n// MAIN //\n\n/**\n* Reinterprets a `Complex128Array` as a `Float64Array`.\n*\n* @param {Complex128Array} x - input array\n* @param {NonNegativeInteger} offset - starting index\n* @returns {Float64Array} `Float64Array` view\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var x = new Complex128Array( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Float64Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/\nfunction reinterpret( x, offset ) {\n\treturn new Float64Array( x.buffer, x.byteOffset+(x.BYTES_PER_ELEMENT*offset), 2*(x.length-offset) ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = reinterpret;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Reinterpret a `Complex128Array` as a `Float64Array`.\n*\n* @module @stdlib/strided/base/reinterpret-complex128\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n* var reinterpret = require( '@stdlib/strided/base/reinterpret-complex128' );\n*\n* var x = new Complex128Array( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Float64Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar realf = require( '@stdlib/complex/realf' );\nvar imagf = require( '@stdlib/complex/imagf' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tz = v.value;\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( realf( z ), imagf( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. An iterator must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar realf = require( '@stdlib/complex/realf' );\nvar imagf = require( '@stdlib/complex/imagf' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tz = clbk.call( thisArg, v.value, i );\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( realf( z ), imagf( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromIteratorMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar realf = require( '@stdlib/complex/realf' );\nvar imagf = require( '@stdlib/complex/imagf' );\n\n\n// MAIN //\n\n/**\n* Returns a strided array of real and imaginary components.\n*\n* @private\n* @param {Float32Array} buf - output array\n* @param {Array} arr - array containing complex numbers\n* @returns {(Float32Array|null)} output array or null\n*/\nfunction fromArray( buf, arr ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tvar j;\n\n\tlen = arr.length;\n\tj = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arr[ i ];\n\t\tif ( !isComplexLike( v ) ) {\n\t\t\treturn null;\n\t\t}\n\t\tbuf[ j ] = realf( v );\n\t\tbuf[ j+1 ] = imagf( v );\n\t\tj += 2; // stride\n\t}\n\treturn buf;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromArray;\n","/* eslint-disable no-restricted-syntax, max-lines, no-invalid-this */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isArrayBuffer = require( '@stdlib/assert/is-arraybuffer' );\nvar isObject = require( '@stdlib/assert/is-object' );\nvar isArray = require( '@stdlib/assert/is-array' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar isEven = require( '@stdlib/math/base/assert/is-even' );\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar hasIteratorSymbolSupport = require( '@stdlib/assert/has-iterator-symbol-support' );\nvar ITERATOR_SYMBOL = require( '@stdlib/symbol/iterator' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar Float32Array = require( './../../float32' );\nvar Complex64 = require( '@stdlib/complex/float32' );\nvar format = require( '@stdlib/string/format' );\nvar realf = require( '@stdlib/complex/realf' );\nvar imagf = require( '@stdlib/complex/imagf' );\nvar reinterpret64 = require( '@stdlib/strided/base/reinterpret-complex64' );\nvar reinterpret128 = require( '@stdlib/strided/base/reinterpret-complex128' );\nvar arraylike2object = require( './../../base/arraylike2object' );\nvar fromIterator = require( './from_iterator.js' );\nvar fromIteratorMap = require( './from_iterator_map.js' );\nvar fromArray = require( './from_array.js' );\n\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = Float32Array.BYTES_PER_ELEMENT * 2;\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if a value is a complex typed array.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*/\nfunction isComplexArray( value ) {\n\treturn (\n\t\tvalue instanceof Complex64Array ||\n\t\t(\n\t\t\ttypeof value === 'object' &&\n\t\t\tvalue !== null &&\n\t\t\t(\n\t\t\t\tvalue.constructor.name === 'Complex64Array' ||\n\t\t\t\tvalue.constructor.name === 'Complex128Array'\n\t\t\t) &&\n\t\t\ttypeof value._length === 'number' && // eslint-disable-line no-underscore-dangle\n\n\t\t\t// NOTE: we don't perform a more rigorous test here for a typed array for performance reasons, as robustly checking for a typed array instance could require walking the prototype tree and performing relatively expensive constructor checks...\n\t\t\ttypeof value._buffer === 'object' // eslint-disable-line no-underscore-dangle\n\t\t)\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a complex typed array constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array constructor\n*/\nfunction isComplexArrayConstructor( value ) {\n\treturn (\n\t\tvalue === Complex64Array ||\n\n\t\t// NOTE: weaker test in order to avoid a circular dependency with Complex128Array...\n\t\tvalue.name === 'Complex128Array'\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a `Complex64Array`.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex64Array`\n*/\nfunction isComplex64Array( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex64Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a `Complex128Array`.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex128Array`\n*/\nfunction isComplex128Array( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex128Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT*2\n\t);\n}\n\n\n// MAIN //\n\n/**\n* 64-bit complex number array constructor.\n*\n* @constructor\n* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or an iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @throws {RangeError} ArrayBuffer byte length must be a multiple of `8`\n* @throws {RangeError} array-like object and typed array input arguments must have a length which is a multiple of two\n* @throws {TypeError} if provided only a single argument, must provide a valid argument\n* @throws {TypeError} byte offset must be a nonnegative integer\n* @throws {RangeError} byte offset must be a multiple of `8`\n* @throws {TypeError} view length must be a positive multiple of `8`\n* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex64Array} complex number array\n*\n* @example\n* var arr = new Complex64Array();\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var arr = new Complex64Array( 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var arr = new Complex64Array( [ 1.0, -1.0 ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf, 8 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex64Array( buf, 8, 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nfunction Complex64Array() {\n\tvar byteOffset;\n\tvar nargs;\n\tvar buf;\n\tvar len;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof Complex64Array) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new Complex64Array();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new Complex64Array( arguments[0] );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\treturn new Complex64Array( arguments[0], arguments[1] );\n\t\t}\n\t\treturn new Complex64Array( arguments[0], arguments[1], arguments[2] );\n\t}\n\t// Create the underlying data buffer...\n\tif ( nargs === 0 ) {\n\t\tbuf = new Float32Array( 0 ); // backward-compatibility\n\t} else if ( nargs === 1 ) {\n\t\tif ( isNonNegativeInteger( arguments[0] ) ) {\n\t\t\tbuf = new Float32Array( arguments[0]*2 );\n\t\t} else if ( isCollection( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tlen = buf.length;\n\n\t\t\t// If provided a \"generic\" array, peak at the first value, and, if the value is a complex number, try to process as an array of complex numbers, falling back to \"normal\" typed array initialization if we fail and ensuring consistency if the first value had not been a complex number...\n\t\t\tif ( len && isArray( buf ) && isComplexLike( buf[0] ) ) {\n\t\t\t\tbuf = fromArray( new Float32Array( len*2 ), buf );\n\t\t\t\tif ( buf === null ) {\n\t\t\t\t\t// We failed and we are now forced to allocate a new array :-(\n\t\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t\t}\n\t\t\t\t\t// We failed, so fall back to directly setting values...\n\t\t\t\t\tbuf = new Float32Array( arguments[0] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( isComplex64Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret64( buf, 0 );\n\t\t\t\t} else if ( isComplex128Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret128( buf, 0 );\n\t\t\t\t} else if ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object and typed array arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t}\n\t\t\t\tbuf = new Float32Array( buf );\n\t\t\t}\n\t\t} else if ( isArrayBuffer( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( !isInteger( buf.byteLength/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. ArrayBuffer byte length must be a multiple of %u. Byte length: `%u`.', BYTES_PER_ELEMENT, buf.byteLength ) );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf );\n\t\t} else if ( isObject( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tif ( !isFunction( buf[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = buf[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( buf.next ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = fromIterator( buf );\n\t\t\tif ( buf instanceof Error ) {\n\t\t\t\tthrow buf;\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf );\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arguments[0] ) );\n\t\t}\n\t} else {\n\t\tbuf = arguments[ 0 ];\n\t\tif ( !isArrayBuffer( buf ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an ArrayBuffer. Value: `%s`.', buf ) );\n\t\t}\n\t\tbyteOffset = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( byteOffset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.', byteOffset ) );\n\t\t}\n\t\tif ( !isInteger( byteOffset/BYTES_PER_ELEMENT ) ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Byte offset must be a multiple of %u. Value: `%u`.', BYTES_PER_ELEMENT, byteOffset ) );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\tlen = buf.byteLength - byteOffset;\n\t\t\tif ( !isInteger( len/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer view byte length must be a multiple of %u. View byte length: `%u`.', BYTES_PER_ELEMENT, len ) );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf, byteOffset );\n\t\t} else {\n\t\t\tlen = arguments[ 2 ];\n\t\t\tif ( !isNonNegativeInteger( len ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Length must be a nonnegative integer. Value: `%s`.', len ) );\n\t\t\t}\n\t\t\tif ( (len*BYTES_PER_ELEMENT) > (buf.byteLength-byteOffset) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `%u`.', len*BYTES_PER_ELEMENT ) );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf, byteOffset, len*2 );\n\t\t}\n\t}\n\tsetReadOnly( this, '_buffer', buf );\n\tsetReadOnly( this, '_length', buf.length/2 );\n\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64Array\n* @readonly\n* @type {PositiveInteger}\n* @default 8\n*\n* @example\n* var nbytes = Complex64Array.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex64Array, 'BYTES_PER_ELEMENT', BYTES_PER_ELEMENT );\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof Complex64Array\n* @readonly\n* @type {string}\n* @default 'Complex64Array'\n*\n* @example\n* var str = Complex64Array.name;\n* // returns 'Complex64Array'\n*/\nsetReadOnly( Complex64Array, 'name', 'Complex64Array' );\n\n/**\n* Creates a new 64-bit complex number array from an array-like object or an iterable.\n*\n* @name from\n* @memberof Complex64Array\n* @type {Function}\n* @param {(Collection|Iterable)} src - array-like object or iterable\n* @param {Function} [clbk] - callback to invoke for each source element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @throws {TypeError} when provided an iterator, a callback must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex64Array} 64-bit complex number array\n*\n* @example\n* var arr = Complex64Array.from( [ 1.0, -1.0 ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32' );\n*\n* var arr = Complex64Array.from( [ new Complex64( 1.0, 1.0 ) ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32' );\n* var realf = require( '@stdlib/complex/realf' );\n* var imagf = require( '@stdlib/complex/imagf' );\n*\n* function clbk( v ) {\n*     return new Complex64( realf(v)*2.0, imagf(v)*2.0 );\n* }\n*\n* var arr = Complex64Array.from( [ new Complex64( 1.0, 1.0 ) ], clbk );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*/\nsetReadOnly( Complex64Array, 'from', function from( src ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar clbk;\n\tvar out;\n\tvar buf;\n\tvar tmp;\n\tvar len;\n\tvar flg;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tif ( nargs > 2 ) {\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( isComplexArray( src ) ) {\n\t\tlen = src.length;\n\t\tif ( clbk ) {\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, src.get( i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = realf( v );\n\t\t\t\t\tbuf[ j+1 ] = imagf( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isCollection( src ) ) {\n\t\tif ( clbk ) {\n\t\t\t// Note: array contents affect how we iterate over a provided data source. If only complex number objects, we can extract real and imaginary components. Otherwise, for non-complex number arrays (e.g., `Float64Array`, etc), we assume a strided array where real and imaginary components are interleaved. In the former case, we expect a callback to return real and imaginary components (possibly as a complex number). In the latter case, we expect a callback to return *either* a real or imaginary component.\n\n\t\t\tlen = src.length;\n\t\t\ttmp = arraylike2object( src );\n\n\t\t\t// Detect whether we've been provided an array which returns complex number objects...\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( !isComplexLike( tmp.getter( src, i ) ) ) {\n\t\t\t\t\tflg = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If an array does not contain only complex number objects, then we assume interleaved real and imaginary components...\n\t\t\tif ( flg ) {\n\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. First argument must have a length which is a multiple of %u. Length: `%u`.', 2, len ) );\n\t\t\t\t}\n\t\t\t\tout = new this( len/2 );\n\t\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tbuf[ i ] = clbk.call( thisArg, tmp.getter( src, i ), i );\n\t\t\t\t}\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\t// If an array contains only complex number objects, then we need to extract real and imaginary components...\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, tmp.getter( src, i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = realf( v );\n\t\t\t\t\tbuf[ j+1 ] = imagf( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isObject( src ) && HAS_ITERATOR_SYMBOL && isFunction( src[ ITERATOR_SYMBOL ] ) ) { // eslint-disable-line max-len\n\t\tbuf = src[ ITERATOR_SYMBOL ]();\n\t\tif ( !isFunction( buf.next ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t\t}\n\t\tif ( clbk ) {\n\t\t\ttmp = fromIteratorMap( buf, clbk, thisArg );\n\t\t} else {\n\t\t\ttmp = fromIterator( buf );\n\t\t}\n\t\tif ( tmp instanceof Error ) {\n\t\t\tthrow tmp;\n\t\t}\n\t\tlen = tmp.length / 2;\n\t\tout = new this( len );\n\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tbuf[ i ] = tmp[ i ];\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n});\n\n/**\n* Creates a new 64-bit complex number array from a variable number of arguments.\n*\n* @name of\n* @memberof Complex64Array\n* @type {Function}\n* @param {...*} element - array elements\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} 64-bit complex number array\n*\n* @example\n* var arr = Complex64Array.of( 1.0, 1.0, 1.0, 1.0 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nsetReadOnly( Complex64Array, 'of', function of() {\n\tvar args;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\targs = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn new this( args );\n});\n\n/**\n* Pointer to the underlying data buffer.\n*\n* @name buffer\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {ArrayBuffer}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var buf = arr.buffer;\n* // returns <ArrayBuffer>\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'buffer', function get() {\n\treturn this._buffer.buffer;\n});\n\n/**\n* Size (in bytes) of the array.\n*\n* @name byteLength\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var byteLength = arr.byteLength;\n* // returns 80\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'byteLength', function get() {\n\treturn this._buffer.byteLength;\n});\n\n/**\n* Offset (in bytes) of the array from the start of its underlying `ArrayBuffer`.\n*\n* @name byteOffset\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var byteOffset = arr.byteOffset;\n* // returns 0\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'byteOffset', function get() {\n\treturn this._buffer.byteOffset;\n});\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {PositiveInteger}\n* @default 8\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var nbytes = arr.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex64Array.prototype, 'BYTES_PER_ELEMENT', Complex64Array.BYTES_PER_ELEMENT );\n\n/**\n* Copies a sequence of elements within the array to the position starting at `target`.\n*\n* @name copyWithin\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} target - index at which to start copying elements\n* @param {integer} start - source index at which to copy elements from\n* @param {integer} [end] - source index at which to stop copying elements from\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} modified array\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32' );\n* var realf = require( '@stdlib/complex/realf' );\n* var imagf = require( '@stdlib/complex/imagf' );\n*\n* var arr = new Complex64Array( 4 );\n*\n* // Set the array elements:\n* arr.set( new Complex64( 1.0, 1.0 ), 0 );\n* arr.set( new Complex64( 2.0, 2.0 ), 1 );\n* arr.set( new Complex64( 3.0, 3.0 ), 2 );\n* arr.set( new Complex64( 4.0, 4.0 ), 3 );\n*\n* // Copy the first two elements to the last two elements:\n* arr.copyWithin( 2, 0, 2 );\n*\n* // Get the last array element:\n* var z = arr.get( 3 );\n*\n* var re = realf( z );\n* // returns 2.0\n*\n* var im = imagf( z );\n* // returns 2.0\n*/\nsetReadOnly( Complex64Array.prototype, 'copyWithin', function copyWithin( target, start ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\t// FIXME: prefer a functional `copyWithin` implementation which addresses lack of universal browser support (e.g., IE11 and Safari) or ensure that typed arrays are polyfilled\n\tif ( arguments.length === 2 ) {\n\t\tthis._buffer.copyWithin( target*2, start*2 );\n\t} else {\n\t\tthis._buffer.copyWithin( target*2, start*2, arguments[2]*2 );\n\t}\n\treturn this;\n});\n\n/**\n* Returns an iterator for iterating over array key-value pairs.\n*\n* @name entries\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32' );\n*\n* var arr = [\n*     new Complex64( 1.0, 1.0 ),\n*     new Complex64( 2.0, 2.0 ),\n*     new Complex64( 3.0, 3.0 )\n* ];\n* arr = new Complex64Array( arr );\n*\n* // Create an iterator:\n* var it = arr.entries();\n*\n* // Iterate over the key-value pairs...\n* var v = it.next().value;\n* // returns [ 0, <Complex64> ]\n*\n* v = it.next().value;\n* // returns [ 1, <Complex64> ]\n*\n* v = it.next().value;\n* // returns [ 2, <Complex64> ]\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( Complex64Array.prototype, 'entries', function entries() {\n\tvar buffer;\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar FLG;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tbuffer = this._buffer;\n\tlen = this._length;\n\n\t// Initialize the iteration indices:\n\ti = -1;\n\tj = -2;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar z;\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tj += 2;\n\t\tz = new Complex64( buffer[ j ], buffer[ j+1 ] );\n\t\treturn {\n\t\t\t'value': [ i, z ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.entries();\n\t}\n});\n\n/**\n* Returns an array element.\n*\n* @name get\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {NonNegativeInteger} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {(Complex64|void)} array element\n*\n* @example\n* var arr = new Complex64Array( 10 );\n* var realf = require( '@stdlib/complex/realf' );\n* var imagf = require( '@stdlib/complex/imagf' );\n*\n* var z = arr.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 0.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns -1.0\n*\n* z = arr.get( 100 );\n* // returns undefined\n*/\nsetReadOnly( Complex64Array.prototype, 'get', function get( idx ) {\n\tvar buf;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isNonNegativeInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx >= this._length ) {\n\t\treturn;\n\t}\n\tbuf = this._buffer;\n\tidx *= 2;\n\treturn new Complex64( buf[ idx ], buf[ idx+1 ] );\n});\n\n/**\n* Number of array elements.\n*\n* @name length\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var len = arr.length;\n* // returns 10\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   When provided a typed array, real or complex, we must check whether the source array shares the same buffer as the target array and whether the underlying memory overlaps. In particular, we are concerned with the following scenario:\n*\n*     ```text\n*     buf:                ---------------------\n*     src: ---------------------\n*     ```\n*\n*     In the above, as we copy values from `src`, we will overwrite values in the `src` view, resulting in duplicated values copied into the end of `buf`, which is not intended. Hence, to avoid overwriting source values, we must **copy** source values to a temporary array.\n*\n*     In the other overlapping scenario,\n*\n*     ```text\n*     buf: ---------------------\n*     src:                ---------------------\n*     ```\n*\n*     by the time we begin copying into the overlapping region, we are copying from the end of `src`, a non-overlapping region, which means we don't run the risk of copying copied values, rather than the original `src` values as intended.\n*\n*\n* @name set\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n* @param {NonNegativeInteger} [i=0] - element index at which to start writing values\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be either a complex number, an array-like object, or a complex number array\n* @throws {TypeError} index argument must be a nonnegative integer\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {RangeError} target array lacks sufficient storage to accommodate source values\n* @returns {void}\n*\n* @example\n* var realf = require( '@stdlib/complex/realf' );\n* var imagf = require( '@stdlib/complex/imagf' );\n*\n* var arr = new Complex64Array( 10 );\n*\n* var z = arr.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 0.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns -1.0\n*/\nsetReadOnly( Complex64Array.prototype, 'set', function set( value ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar sbuf;\n\tvar idx;\n\tvar buf;\n\tvar tmp;\n\tvar flg;\n\tvar N;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tif ( arguments.length > 1 ) {\n\t\tidx = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Index argument must be a nonnegative integer. Value: `%s`.', idx ) );\n\t\t}\n\t} else {\n\t\tidx = 0;\n\t}\n\tif ( isComplexLike( value ) ) {\n\t\tif ( idx >= this._length ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%u`.', idx ) );\n\t\t}\n\t\tidx *= 2;\n\t\tbuf[ idx ] = realf( value );\n\t\tbuf[ idx+1 ] = imagf( value );\n\t\treturn;\n\t}\n\tif ( isComplexArray( value ) ) {\n\t\tN = value._length;\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tsbuf = value._buffer;\n\n\t\t// Check for overlapping memory...\n\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\tif (\n\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t(\n\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t)\n\t\t) {\n\t\t\t// We need to copy source values...\n\t\t\ttmp = new Float32Array( sbuf.length );\n\t\t\tfor ( i = 0; i < sbuf.length; i++ ) {\n\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t}\n\t\t\tsbuf = tmp;\n\t\t}\n\t\tidx *= 2;\n\t\tj = 0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\tidx += 2; // stride\n\t\t\tj += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tif ( isCollection( value ) ) {\n\t\t// Detect whether we've been provided an array of complex numbers...\n\t\tN = value.length;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tif ( !isComplexLike( value[ i ] ) ) {\n\t\t\t\tflg = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// If an array does not contain only complex numbers, then we assume interleaved real and imaginary components...\n\t\tif ( flg ) {\n\t\t\tif ( !isEven( N ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', N ) );\n\t\t\t}\n\t\t\tif ( idx+(N/2) > this._length ) {\n\t\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t\t}\n\t\t\tsbuf = value;\n\n\t\t\t// Check for overlapping memory...\n\t\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\t\tif (\n\t\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t\t(\n\t\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// We need to copy source values...\n\t\t\t\ttmp = new Float32Array( N );\n\t\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t\t}\n\t\t\t\tsbuf = tmp;\n\t\t\t}\n\t\t\tidx *= 2;\n\t\t\tN /= 2;\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\t\tidx += 2; // stride\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// If an array contains only complex numbers, then we need to extract real and imaginary components...\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tidx *= 2;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tv = value[ i ];\n\t\t\tbuf[ idx ] = realf( v );\n\t\t\tbuf[ idx+1 ] = imagf( v );\n\t\t\tidx += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either a complex number, an array-like object, or a complex number array. Value: `%s`.', value ) );\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n\n// EXPORTS //\n\nmodule.exports = Complex64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* 64-bit complex number array.\n*\n* @module @stdlib/array/complex64\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var arr = new Complex64Array();\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var arr = new Complex64Array( 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var arr = new Complex64Array( [ 1.0, -1.0 ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf, 8 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex64Array( buf, 8, 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar format = require( '@stdlib/string/format' );\nvar real = require( '@stdlib/complex/real' );\nvar imag = require( '@stdlib/complex/imag' );\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tz = v.value;\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( real( z ), imag( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. An iterator must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar format = require( '@stdlib/string/format' );\nvar real = require( '@stdlib/complex/real' );\nvar imag = require( '@stdlib/complex/imag' );\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tz = clbk.call( thisArg, v.value, i );\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( real( z ), imag( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromIteratorMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar real = require( '@stdlib/complex/real' );\nvar imag = require( '@stdlib/complex/imag' );\n\n\n// MAIN //\n\n/**\n* Returns a strided array of real and imaginary components.\n*\n* @private\n* @param {Float64Array} buf - output array\n* @param {Array} arr - array containing complex numbers\n* @returns {(Float64Array|null)} output array or null\n*/\nfunction fromArray( buf, arr ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tvar j;\n\n\tlen = arr.length;\n\tj = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arr[ i ];\n\t\tif ( !isComplexLike( v ) ) {\n\t\t\treturn null;\n\t\t}\n\t\tbuf[ j ] = real( v );\n\t\tbuf[ j+1 ] = imag( v );\n\t\tj += 2; // stride\n\t}\n\treturn buf;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromArray;\n","/* eslint-disable no-restricted-syntax, max-lines, no-invalid-this */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isArrayBuffer = require( '@stdlib/assert/is-arraybuffer' );\nvar isObject = require( '@stdlib/assert/is-object' );\nvar isArray = require( '@stdlib/assert/is-array' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar isEven = require( '@stdlib/math/base/assert/is-even' );\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar hasIteratorSymbolSupport = require( '@stdlib/assert/has-iterator-symbol-support' );\nvar ITERATOR_SYMBOL = require( '@stdlib/symbol/iterator' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar Float64Array = require( './../../float64' );\nvar Complex128 = require( '@stdlib/complex/float64' );\nvar real = require( '@stdlib/complex/real' );\nvar imag = require( '@stdlib/complex/imag' );\nvar reinterpret64 = require( '@stdlib/strided/base/reinterpret-complex64' );\nvar reinterpret128 = require( '@stdlib/strided/base/reinterpret-complex128' );\nvar arraylike2object = require( './../../base/arraylike2object' );\nvar format = require( '@stdlib/string/format' );\nvar fromIterator = require( './from_iterator.js' );\nvar fromIteratorMap = require( './from_iterator_map.js' );\nvar fromArray = require( './from_array.js' );\n\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = Float64Array.BYTES_PER_ELEMENT * 2;\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if a value is a complex typed array.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*/\nfunction isComplexArray( value ) {\n\treturn (\n\t\tvalue instanceof Complex128Array ||\n\t\t(\n\t\t\ttypeof value === 'object' &&\n\t\t\tvalue !== null &&\n\t\t\t(\n\t\t\t\tvalue.constructor.name === 'Complex64Array' ||\n\t\t\t\tvalue.constructor.name === 'Complex128Array'\n\t\t\t) &&\n\t\t\ttypeof value._length === 'number' && // eslint-disable-line no-underscore-dangle\n\n\t\t\t// NOTE: we don't perform a more rigorous test here for a typed array for performance reasons, as robustly checking for a typed array instance could require walking the prototype tree and performing relatively expensive constructor checks...\n\t\t\ttypeof value._buffer === 'object' // eslint-disable-line no-underscore-dangle\n\t\t)\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a complex typed array constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array constructor\n*/\nfunction isComplexArrayConstructor( value ) {\n\treturn (\n\t\tvalue === Complex128Array ||\n\n\t\t// NOTE: weaker test in order to avoid a circular dependency with Complex64Array...\n\t\tvalue.name === 'Complex64Array'\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a `Complex64Array`.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex64Array`\n*/\nfunction isComplex64Array( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex64Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT/2\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a `Complex128Array`.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex128Array`\n*/\nfunction isComplex128Array( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex128Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT\n\t);\n}\n\n\n// MAIN //\n\n/**\n* 128-bit complex number array constructor.\n*\n* @constructor\n* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @throws {RangeError} ArrayBuffer byte length must be a multiple of `16`\n* @throws {RangeError} array-like object and typed array input arguments must have a length which is a multiple of two\n* @throws {TypeError} if provided only a single argument, must provide a valid argument\n* @throws {TypeError} byte offset must be a nonnegative integer\n* @throws {RangeError} byte offset must be a multiple of `16`\n* @throws {TypeError} view length must be a positive multiple of `16`\n* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex128Array} complex number array\n*\n* @example\n* var arr = new Complex128Array();\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var arr = new Complex128Array( 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var arr = new Complex128Array( [ 1.0, -1.0 ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf, 16 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 64 );\n* var arr = new Complex128Array( buf, 16, 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nfunction Complex128Array() {\n\tvar byteOffset;\n\tvar nargs;\n\tvar buf;\n\tvar len;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof Complex128Array) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new Complex128Array();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new Complex128Array( arguments[0] );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\treturn new Complex128Array( arguments[0], arguments[1] );\n\t\t}\n\t\treturn new Complex128Array( arguments[0], arguments[1], arguments[2] );\n\t}\n\t// Create the underlying data buffer...\n\tif ( nargs === 0 ) {\n\t\tbuf = new Float64Array( 0 ); // backward-compatibility\n\t} else if ( nargs === 1 ) {\n\t\tif ( isNonNegativeInteger( arguments[0] ) ) {\n\t\t\tbuf = new Float64Array( arguments[0]*2 );\n\t\t} else if ( isCollection( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tlen = buf.length;\n\n\t\t\t// If provided a \"generic\" array, peak at the first value, and, if the value is a complex number, try to process as an array of complex numbers, falling back to \"normal\" typed array initialization if we fail and ensuring consistency if the first value had not been a complex number...\n\t\t\tif ( len && isArray( buf ) && isComplexLike( buf[0] ) ) {\n\t\t\t\tbuf = fromArray( new Float64Array( len*2 ), buf );\n\t\t\t\tif ( buf === null ) {\n\t\t\t\t\t// We failed and we are now forced to allocate a new array :-(\n\t\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t\t}\n\t\t\t\t\t// We failed, so fall back to directly setting values...\n\t\t\t\t\tbuf = new Float64Array( arguments[0] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( isComplex64Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret64( buf, 0 );\n\t\t\t\t} else if ( isComplex128Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret128( buf, 0 );\n\t\t\t\t} else if ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object and typed array arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t}\n\t\t\t\tbuf = new Float64Array( buf );\n\t\t\t}\n\t\t} else if ( isArrayBuffer( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( !isInteger( buf.byteLength/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. ArrayBuffer byte length must be a multiple of %u. Byte length: `%u`.', BYTES_PER_ELEMENT, buf.byteLength ) );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf );\n\t\t} else if ( isObject( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tif ( !isFunction( buf[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = buf[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( buf.next ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = fromIterator( buf );\n\t\t\tif ( buf instanceof Error ) {\n\t\t\t\tthrow buf;\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf );\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arguments[0] ) );\n\t\t}\n\t} else {\n\t\tbuf = arguments[ 0 ];\n\t\tif ( !isArrayBuffer( buf ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an ArrayBuffer. Value: `%s`.', buf ) );\n\t\t}\n\t\tbyteOffset = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( byteOffset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.', byteOffset ) );\n\t\t}\n\t\tif ( !isInteger( byteOffset/BYTES_PER_ELEMENT ) ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Byte offset must be a multiple of %u. Value: `%u`.', BYTES_PER_ELEMENT, byteOffset ) );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\tlen = buf.byteLength - byteOffset;\n\t\t\tif ( !isInteger( len/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer view byte length must be a multiple of %u. View byte length: `%u`.', BYTES_PER_ELEMENT, len ) );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf, byteOffset );\n\t\t} else {\n\t\t\tlen = arguments[ 2 ];\n\t\t\tif ( !isNonNegativeInteger( len ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Length must be a nonnegative integer. Value: `%s`.', len ) );\n\t\t\t}\n\t\t\tif ( (len*BYTES_PER_ELEMENT) > (buf.byteLength-byteOffset) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `%u`.', len*BYTES_PER_ELEMENT ) );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf, byteOffset, len*2 );\n\t\t}\n\t}\n\tsetReadOnly( this, '_buffer', buf );\n\tsetReadOnly( this, '_length', buf.length/2 );\n\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128Array\n* @readonly\n* @type {PositiveInteger}\n* @default 16\n*\n* @example\n* var nbytes = Complex128Array.BYTES_PER_ELEMENT;\n* // returns 16\n*/\nsetReadOnly( Complex128Array, 'BYTES_PER_ELEMENT', BYTES_PER_ELEMENT );\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof Complex128Array\n* @readonly\n* @type {string}\n* @default 'Complex128Array'\n*\n* @example\n* var name = Complex128Array.name;\n* // returns 'Complex128Array'\n*/\nsetReadOnly( Complex128Array, 'name', 'Complex128Array' );\n\n/**\n* Creates a new 128-bit complex number array from an array-like object or an iterable.\n*\n* @name from\n* @memberof Complex128Array\n* @type {Function}\n* @param {(Collection|Object)} src - array-like object or iterable\n* @param {Function} [clbk] - callback to invoke for each source element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @throws {TypeError} when provided an iterator, a callback must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex128Array} 128-bit complex number array\n*\n* @example\n* var arr = Complex128Array.from( [ 1.0, -1.0 ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n*\n* var arr = Complex128Array.from( [ new Complex128( 1.0, 1.0 ) ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n* var real = require( '@stdlib/complex/real' );\n* var imag = require( '@stdlib/complex/imag' );\n*\n* function clbk( v ) {\n*     return new Complex128( real(v)*2.0, imag(v)*2.0 );\n* }\n*\n* var arr = Complex128Array.from( [ new Complex128( 1.0, 1.0 ) ], clbk );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*/\nsetReadOnly( Complex128Array, 'from', function from( src ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar clbk;\n\tvar out;\n\tvar buf;\n\tvar tmp;\n\tvar len;\n\tvar flg;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tif ( nargs > 2 ) {\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( isComplexArray( src ) ) {\n\t\tlen = src.length;\n\t\tif ( clbk ) {\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, src.get( i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = real( v );\n\t\t\t\t\tbuf[ j+1 ] = imag( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isCollection( src ) ) {\n\t\tif ( clbk ) {\n\t\t\t// Note: array contents affect how we iterate over a provided data source. If only complex number objects, we can extract real and imaginary components. Otherwise, for non-complex number arrays (e.g., `Float64Array`, etc), we assume a strided array where real and imaginary components are interleaved. In the former case, we expect a callback to return real and imaginary components (possibly as a complex number). In the latter case, we expect a callback to return *either* a real or imaginary component.\n\n\t\t\tlen = src.length;\n\t\t\ttmp = arraylike2object( src );\n\n\t\t\t// Detect whether we've been provided an array which returns complex number objects...\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( !isComplexLike( tmp.getter( src, i ) ) ) {\n\t\t\t\t\tflg = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If an array does not contain only complex number objects, then we assume interleaved real and imaginary components...\n\t\t\tif ( flg ) {\n\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. First argument must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t}\n\t\t\t\tout = new this( len/2 );\n\t\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tbuf[ i ] = clbk.call( thisArg, tmp.getter( src, i ), i );\n\t\t\t\t}\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\t// If an array contains only complex number objects, then we need to extract real and imaginary components...\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, tmp.getter( src, i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = real( v );\n\t\t\t\t\tbuf[ j+1 ] = imag( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isObject( src ) && HAS_ITERATOR_SYMBOL && isFunction( src[ ITERATOR_SYMBOL ] ) ) { // eslint-disable-line max-len\n\t\tbuf = src[ ITERATOR_SYMBOL ]();\n\t\tif ( !isFunction( buf.next ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t\t}\n\t\tif ( clbk ) {\n\t\t\ttmp = fromIteratorMap( buf, clbk, thisArg );\n\t\t} else {\n\t\t\ttmp = fromIterator( buf );\n\t\t}\n\t\tif ( tmp instanceof Error ) {\n\t\t\tthrow tmp;\n\t\t}\n\t\tlen = tmp.length / 2;\n\t\tout = new this( len );\n\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tbuf[ i ] = tmp[ i ];\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n});\n\n/**\n* Creates a new 128-bit complex number array from a variable number of arguments.\n*\n* @name of\n* @memberof Complex128Array\n* @type {Function}\n* @param {...*} element - array elements\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} 128-bit complex number array\n*\n* @example\n* var arr = Complex128Array.of( 1.0, 1.0, 1.0, 1.0 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nsetReadOnly( Complex128Array, 'of', function of() {\n\tvar args;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\targs = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn new this( args );\n});\n\n/**\n* Pointer to the underlying data buffer.\n*\n* @name buffer\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {ArrayBuffer}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var buf = arr.buffer;\n* // returns <ArrayBuffer>\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'buffer', function get() {\n\treturn this._buffer.buffer;\n});\n\n/**\n* Size (in bytes) of the array.\n*\n* @name byteLength\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var byteLength = arr.byteLength;\n* // returns 160\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'byteLength', function get() {\n\treturn this._buffer.byteLength;\n});\n\n/**\n* Offset (in bytes) of the array from the start of its underlying `ArrayBuffer`.\n*\n* @name byteOffset\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var byteOffset = arr.byteOffset;\n* // returns 0\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'byteOffset', function get() {\n\treturn this._buffer.byteOffset;\n});\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {PositiveInteger}\n* @default 16\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var nbytes = arr.BYTES_PER_ELEMENT;\n* // returns 16\n*/\nsetReadOnly( Complex128Array.prototype, 'BYTES_PER_ELEMENT', Complex128Array.BYTES_PER_ELEMENT );\n\n/**\n* Copies a sequence of elements within the array to the position starting at `target`.\n*\n* @name copyWithin\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} target - index at which to start copying elements\n* @param {integer} start - source index at which to copy elements from\n* @param {integer} [end] - source index at which to stop copying elements from\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} modified array\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n* var real = require( '@stdlib/complex/real' );\n* var imag = require( '@stdlib/complex/imag' );\n*\n* var arr = new Complex128Array( 4 );\n*\n* // Set the array elements:\n* arr.set( new Complex128( 1.0, 1.0 ), 0 );\n* arr.set( new Complex128( 2.0, 2.0 ), 1 );\n* arr.set( new Complex128( 3.0, 3.0 ), 2 );\n* arr.set( new Complex128( 4.0, 4.0 ), 3 );\n*\n* // Copy the first two elements to the last two elements:\n* arr.copyWithin( 2, 0, 2 );\n*\n* // Get the last array element:\n* var z = arr.get( 3 );\n*\n* var re = real( z );\n* // returns 2.0\n*\n* var im = imag( z );\n* // returns 2.0\n*/\nsetReadOnly( Complex128Array.prototype, 'copyWithin', function copyWithin( target, start ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\t// FIXME: prefer a functional `copyWithin` implementation which addresses lack of universal browser support (e.g., IE11 and Safari) or ensure that typed arrays are polyfilled\n\tif ( arguments.length === 2 ) {\n\t\tthis._buffer.copyWithin( target*2, start*2 );\n\t} else {\n\t\tthis._buffer.copyWithin( target*2, start*2, arguments[2]*2 );\n\t}\n\treturn this;\n});\n\n/**\n* Returns an iterator for iterating over array key-value pairs.\n*\n* @name entries\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n*\n* var arr = [\n*     new Complex128( 1.0, 1.0 ),\n*     new Complex128( 2.0, 2.0 ),\n*     new Complex128( 3.0, 3.0 )\n* ];\n* arr = new Complex128Array( arr );\n*\n* // Create an iterator:\n* var it = arr.entries();\n*\n* // Iterate over the key-value pairs...\n* var v = it.next().value;\n* // returns [ 0, <Complex128> ]\n*\n* v = it.next().value;\n* // returns [ 1, <Complex128> ]\n*\n* v = it.next().value;\n* // returns [ 2, <Complex128> ]\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( Complex128Array.prototype, 'entries', function entries() {\n\tvar buffer;\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar FLG;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tbuffer = this._buffer;\n\tlen = this._length;\n\n\t// Initialize the iteration indices:\n\ti = -1;\n\tj = -2;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar z;\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tj += 2;\n\t\tz = new Complex128( buffer[ j ], buffer[ j+1 ] );\n\t\treturn {\n\t\t\t'value': [ i, z ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.entries();\n\t}\n});\n\n/**\n* Returns an array element.\n*\n* @name get\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {NonNegativeInteger} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {(Complex128|void)} array element\n*\n* @example\n* var arr = new Complex128Array( 10 );\n* var real = require( '@stdlib/complex/real' );\n* var imag = require( '@stdlib/complex/imag' );\n*\n* var z = arr.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 0.0\n*\n* var im = imag( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns -1.0\n*\n* z = arr.get( 100 );\n* // returns undefined\n*/\nsetReadOnly( Complex128Array.prototype, 'get', function get( idx ) {\n\tvar buf;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isNonNegativeInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx >= this._length ) {\n\t\treturn;\n\t}\n\tbuf = this._buffer;\n\tidx *= 2;\n\treturn new Complex128( buf[ idx ], buf[ idx+1 ] );\n});\n\n/**\n* Number of array elements.\n*\n* @name length\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var len = arr.length;\n* // returns 10\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   When provided a typed array, real or complex, we must check whether the source array shares the same buffer as the target array and whether the underlying memory overlaps. In particular, we are concerned with the following scenario:\n*\n*     ```text\n*     buf:                ---------------------\n*     src: ---------------------\n*     ```\n*\n*     In the above, as we copy values from `src`, we will overwrite values in the `src` view, resulting in duplicated values copied into the end of `buf`, which is not intended. Hence, to avoid overwriting source values, we must **copy** source values to a temporary array.\n*\n*     In the other overlapping scenario,\n*\n*     ```text\n*     buf: ---------------------\n*     src:                ---------------------\n*     ```\n*\n*     by the time we begin copying into the overlapping region, we are copying from the end of `src`, a non-overlapping region, which means we don't run the risk of copying copied values, rather than the original `src` values as intended.\n*\n*\n* @name set\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n* @param {NonNegativeInteger} [i=0] - element index at which to start writing values\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be either a complex number, an array-like object, or a complex number array\n* @throws {TypeError} index argument must be a nonnegative integer\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {RangeError} target array lacks sufficient storage to accommodate source values\n* @returns {void}\n*\n* @example\n* var real = require( '@stdlib/complex/real' );\n* var imag = require( '@stdlib/complex/imag' );\n*\n* var arr = new Complex128Array( 10 );\n*\n* var z = arr.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 0.0\n*\n* var im = imag( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns -1.0\n*/\nsetReadOnly( Complex128Array.prototype, 'set', function set( value ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar sbuf;\n\tvar idx;\n\tvar buf;\n\tvar tmp;\n\tvar flg;\n\tvar N;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tif ( arguments.length > 1 ) {\n\t\tidx = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Index argument must be a nonnegative integer. Value: `%s`.', idx ) );\n\t\t}\n\t} else {\n\t\tidx = 0;\n\t}\n\tif ( isComplexLike( value ) ) {\n\t\tif ( idx >= this._length ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%u`.', idx ) );\n\t\t}\n\t\tidx *= 2;\n\t\tbuf[ idx ] = real( value );\n\t\tbuf[ idx+1 ] = imag( value );\n\t\treturn;\n\t}\n\tif ( isComplexArray( value ) ) {\n\t\tN = value._length;\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tsbuf = value._buffer;\n\n\t\t// Check for overlapping memory...\n\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\tif (\n\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t(\n\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t)\n\t\t) {\n\t\t\t// We need to copy source values...\n\t\t\ttmp = new Float64Array( sbuf.length );\n\t\t\tfor ( i = 0; i < sbuf.length; i++ ) {\n\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t}\n\t\t\tsbuf = tmp;\n\t\t}\n\t\tidx *= 2;\n\t\tj = 0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\tidx += 2; // stride\n\t\t\tj += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tif ( isCollection( value ) ) {\n\t\t// Detect whether we've been provided an array of complex numbers...\n\t\tN = value.length;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tif ( !isComplexLike( value[ i ] ) ) {\n\t\t\t\tflg = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// If an array does not contain only complex numbers, then we assume interleaved real and imaginary components...\n\t\tif ( flg ) {\n\t\t\tif ( !isEven( N ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', N ) );\n\t\t\t}\n\t\t\tif ( idx+(N/2) > this._length ) {\n\t\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t\t}\n\t\t\tsbuf = value;\n\n\t\t\t// Check for overlapping memory...\n\t\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\t\tif (\n\t\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t\t(\n\t\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// We need to copy source values...\n\t\t\t\ttmp = new Float64Array( N );\n\t\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t\t}\n\t\t\t\tsbuf = tmp;\n\t\t\t}\n\t\t\tidx *= 2;\n\t\t\tN /= 2;\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\t\tidx += 2; // stride\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// If an array contains only complex numbers, then we need to extract real and imaginary components...\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tidx *= 2;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tv = value[ i ];\n\t\t\tbuf[ idx ] = real( v );\n\t\t\tbuf[ idx+1 ] = imag( v );\n\t\t\tidx += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either a complex number, an array-like object, or a complex number array. Value: `%s`.', value ) );\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n\n// EXPORTS //\n\nmodule.exports = Complex128Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* 128-bit complex number array.\n*\n* @module @stdlib/array/complex128\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var arr = new Complex128Array();\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var arr = new Complex128Array( 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var arr = new Complex128Array( [ 1.0, -1.0 ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf, 16 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var buf = new ArrayBuffer( 64 );\n* var arr = new Complex128Array( buf, 16, 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctorName = require( '@stdlib/utils/constructor-name' );\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar CTORS = require( './ctors.js' );\nvar NAMES = require( './names.json' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a complex typed array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var bool = isComplexTypedArray( new Complex128Array( 10 ) );\n* // returns true\n*/\nfunction isComplexTypedArray( value ) {\n\tvar v;\n\tvar i;\n\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for complex typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( value instanceof CTORS[ i ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired class...\n\twhile ( value ) {\n\t\tv = ctorName( value );\n\t\tfor ( i = 0; i < NAMES.length; i++ ) {\n\t\t\tif ( NAMES[ i ] === v ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tvalue = getPrototypeOf( value );\n\t}\n\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isComplexTypedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Complex64Array = require( '@stdlib/array/complex64' );\nvar Complex128Array = require( '@stdlib/array/complex128' );\n\n\n// MAIN //\n\nvar CTORS = [\n\tComplex128Array,\n\tComplex64Array\n];\n\n\n// EXPORTS //\n\nmodule.exports = CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests whether a value has in its prototype chain a specified constructor as a prototype property.\n*\n* @param {*} value - value to test\n* @param {Function} constructor - constructor to test against\n* @throws {TypeError} constructor must be callable\n* @returns {boolean} boolean indicating whether a value is an instance of a provided constructor\n*\n* @example\n* var bool = instanceOf( [], Array );\n* // returns true\n*\n* @example\n* var bool = instanceOf( {}, Object ); // exception\n* // returns true\n*\n* @example\n* var bool = instanceOf( 'beep', String );\n* // returns false\n*\n* @example\n* var bool = instanceOf( null, Object );\n* // returns false\n*\n* @example\n* var bool = instanceOf( 5, Object );\n* // returns false\n*/\nfunction instanceOf( value, constructor ) {\n\t// TODO: replace with `isCallable` check\n\tif ( typeof constructor !== 'function' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be callable. Value: `%s`.', constructor ) );\n\t}\n\treturn ( value instanceof constructor );\n}\n\n\n// EXPORTS //\n\nmodule.exports = instanceOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar instanceOf = require( '@stdlib/assert/instance-of' );\nvar ctorName = require( '@stdlib/utils/constructor-name' );\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar CTORS = require( './ctors.js' );\n\n\n// MAIN //\n\n/**\n* Returns the typed array type.\n*\n* @private\n* @param {TypedArray} arr - typed array\n* @returns {(string|void)} typed array type\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = new Float64Array( 5 );\n* var str = typeName( arr );\n* // returns 'Float64Array'\n*/\nfunction typeName( arr ) {\n\tvar v;\n\tvar i;\n\n\t// Check for typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( instanceOf( arr, CTORS[ i ][ 0 ] ) ) {\n\t\t\treturn CTORS[ i ][ 1 ];\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired native class...\n\twhile ( arr ) {\n\t\tv = ctorName( arr );\n\t\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\t\tif ( v === CTORS[ i ][ 1 ] ) {\n\t\t\t\treturn CTORS[ i ][ 1 ];\n\t\t\t}\n\t\t}\n\t\tarr = getPrototypeOf( arr );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = typeName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Int8Array = require( './../../int8' );\nvar Uint8Array = require( './../../uint8' );\nvar Uint8ClampedArray = require( './../../uint8c' );\nvar Int16Array = require( './../../int16' );\nvar Uint16Array = require( './../../uint16' );\nvar Int32Array = require( './../../int32' );\nvar Uint32Array = require( './../../uint32' );\nvar Float32Array = require( './../../float32' );\nvar Float64Array = require( './../../float64' );\nvar Complex64Array = require( './../../complex64' );\nvar Complex128Array = require( './../../complex128' );\n\n\n// MAIN //\n\nvar CTORS = [\n\t[ Float64Array, 'Float64Array' ],\n\t[ Float32Array, 'Float32Array' ],\n\t[ Int32Array, 'Int32Array' ],\n\t[ Uint32Array, 'Uint32Array' ],\n\t[ Int16Array, 'Int16Array' ],\n\t[ Uint16Array, 'Uint16Array' ],\n\t[ Int8Array, 'Int8Array' ],\n\t[ Uint8Array, 'Uint8Array' ],\n\t[ Uint8ClampedArray, 'Uint8ClampedArray' ],\n\t[ Complex64Array, 'Complex64Array' ],\n\t[ Complex128Array, 'Complex128Array' ]\n];\n\n\n// EXPORTS //\n\nmodule.exports = CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isTypedArray = require( '@stdlib/assert/is-typed-array' );\nvar isComplexTypedArray = require( '@stdlib/assert/is-complex-typed-array' );\nvar reinterpret64 = require( '@stdlib/strided/base/reinterpret-complex64' );\nvar reinterpret128 = require( '@stdlib/strided/base/reinterpret-complex128' );\nvar format = require( '@stdlib/string/format' );\nvar typeName = require( './type.js' );\n\n\n// MAIN //\n\n/**\n* Returns a JSON representation of a typed array.\n*\n* ## Notes\n*\n* -   We build a JSON object representing a typed array similar to how Node.js `Buffer` objects are represented. See [Buffer][1].\n*\n* [1]: https://nodejs.org/api/buffer.html#buffer_buf_tojson\n*\n* @param {TypedArray} arr - typed array to serialize\n* @throws {TypeError} first argument must be a typed array\n* @returns {Object} JSON representation\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = new Float64Array( [ 5.0, 3.0 ] );\n* var json = toJSON( arr );\n* // returns { 'type': 'Float64Array', 'data': [ 5.0, 3.0 ] }\n*/\nfunction toJSON( arr ) {\n\tvar data;\n\tvar out;\n\tvar i;\n\n\tif ( isTypedArray( arr ) ) {\n\t\tdata = arr;\n\t} else if ( isComplexTypedArray( arr ) ) {\n\t\tif ( arr.BYTES_PER_ELEMENT === 8 ) {\n\t\t\tdata = reinterpret64( arr, 0 );\n\t\t} else { // arr.BYTES_PER_ELEMENT === 16\n\t\t\tdata = reinterpret128( arr, 0 );\n\t\t}\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a typed array. Value: `%s`.', arr ) );\n\t}\n\tout = {\n\t\t'type': typeName( arr ),\n\t\t'data': []\n\t};\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tout.data.push( data[ i ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = toJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar UINT32_MAX = require( '@stdlib/constants/uint32/max' );\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// VARIABLES //\n\nvar MAX = UINT32_MAX - 1;\n\n\n// MAIN //\n\n/**\n* Returns a pseudorandom integer on the interval \\\\( [1, 2^{32}-1) \\\\).\n*\n* @private\n* @returns {PositiveInteger} pseudorandom integer\n*\n* @example\n* var v = randuint32();\n* // returns <number>\n*/\nfunction randuint32() {\n\tvar v = floor( 1.0 + (MAX*Math.random()) ); // eslint-disable-line stdlib/no-builtin-math\n\treturn v >>> 0; // asm type annotation\n}\n\n\n// EXPORTS //\n\nmodule.exports = randuint32;\n","/* eslint-disable max-lines, max-len */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C code and copyright notice are from the [source implementation][mt19937]. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without\n* modification, are permitted provided that the following conditions\n* are met:\n*\n*   1. Redistributions of source code must retain the above copyright\n*      notice, this list of conditions and the following disclaimer.\n*\n*   2. Redistributions in binary form must reproduce the above copyright\n*      notice, this list of conditions and the following disclaimer in the\n*      documentation and/or other materials provided with the distribution.\n*\n*   3. The names of its contributors may not be used to endorse or promote\n*      products derived from this software without specific prior written\n*      permission.\n*\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n* \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n* A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n* EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n* PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n* PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n* LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* ```\n*\n* [mt19937]: http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/CODES/mt19937ar.c\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar setReadWriteAccessor = require( '@stdlib/utils/define-nonenumerable-read-write-accessor' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isUint32Array = require( '@stdlib/assert/is-uint32array' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar FLOAT64_MAX_SAFE_INTEGER = require( '@stdlib/constants/float64/max-safe-integer' );\nvar UINT32_MAX = require( '@stdlib/constants/uint32/max' );\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar umul = require( '@stdlib/math/base/ops/umul' );\nvar gcopy = require( '@stdlib/blas/base/gcopy' );\nvar typedarray2json = require( '@stdlib/array/to-json' );\nvar format = require( '@stdlib/string/format' );\nvar randuint32 = require( './rand_uint32.js' );\n\n\n// VARIABLES //\n\n// Define the size of the state array (see refs):\nvar N = 624;\n\n// Define a (magic) constant used for indexing into the state array:\nvar M = 397;\n\n// Define the maximum seed: 11111111111111111111111111111111\nvar MAX_SEED = UINT32_MAX >>> 0; // asm type annotation\n\n// For seed arrays, define an initial state (magic) constant: 19650218 => 00000001001010111101011010101010\nvar SEED_ARRAY_INIT_STATE = 19650218 >>> 0; // asm type annotation\n\n// Define a mask for the most significant `w-r` bits, where `w` is the word size (32 bits) and `r` is the separation point of one word (see refs): 2147483648 => 0x80000000 => 10000000000000000000000000000000\nvar UPPER_MASK = 0x80000000 >>> 0; // asm type annotation\n\n// Define a mask for the least significant `r` bits (see refs): 2147483647 => 0x7fffffff => 01111111111111111111111111111111\nvar LOWER_MASK = 0x7fffffff >>> 0; // asm type annotation\n\n// Define a multiplier (see Knuth TAOCP Vol2. 3rd Ed. P.106): 1812433253 => 01101100000001111000100101100101\nvar KNUTH_MULTIPLIER = 1812433253 >>> 0; // asm type annotation\n\n// Define a (magic) multiplier: 1664525 => 00000000000110010110011000001101\nvar MAGIC_MULTIPLIER_1 = 1664525 >>> 0; // asm type annotation\n\n// Define a (magic) multiplier: 1566083941 => 01011101010110001000101101100101\nvar MAGIC_MULTIPLIER_2 = 1566083941 >>> 0; // asm type annotation\n\n// Define a tempering coefficient: 2636928640 => 0x9d2c5680 => 10011101001011000101011010000000\nvar TEMPERING_COEFFICIENT_1 = 0x9d2c5680 >>> 0; // asm type annotation\n\n// Define a tempering coefficient: 4022730752 => 0xefc60000 => 11101111110001100000000000000000\nvar TEMPERING_COEFFICIENT_2 = 0xefc60000 >>> 0; // asm type annotation\n\n// Define a constant vector `a` (see refs): 2567483615 => 0x9908b0df => 10011001000010001011000011011111\nvar MATRIX_A = 0x9908b0df >>> 0; // asm type annotation\n\n// MAG01[x] = x * MATRIX_A; for x = {0,1}\nvar MAG01 = [ 0x0 >>> 0, MATRIX_A >>> 0 ]; // asm type annotation\n\n// Define a normalization constant when generating double-precision floating-point numbers: 2^53 => 9007199254740992\nvar FLOAT64_NORMALIZATION_CONSTANT = 1.0 / ( FLOAT64_MAX_SAFE_INTEGER+1.0 ); // eslint-disable-line id-length\n\n// 2^26: 67108864\nvar TWO_26 = 67108864 >>> 0; // asm type annotation\n\n// 2^32: 2147483648 => 0x80000000 => 10000000000000000000000000000000\nvar TWO_32 = 0x80000000 >>> 0; // asm type annotation\n\n// 1 (as a 32-bit unsigned integer): 1 => 0x1 => 00000000000000000000000000000001\nvar ONE = 0x1 >>> 0; // asm type annotation\n\n// Define the maximum normalized pseudorandom double-precision floating-point number: ( (((2^32-1)>>>5)*2^26)+( (2^32-1)>>>6) ) / 2^53\nvar MAX_NORMALIZED = FLOAT64_MAX_SAFE_INTEGER * FLOAT64_NORMALIZATION_CONSTANT;\n\n// Define the state array schema version:\nvar STATE_ARRAY_VERSION = 1; // NOTE: anytime the state array schema changes, this value should be incremented!!!\n\n// Define the number of sections in the state array:\nvar NUM_STATE_SECTIONS = 3; // state, other, seed\n\n// Define the index offset of the \"state\" section in the state array:\nvar STATE_SECTION_OFFSET = 2; // | version | num_sections | state_length | ...state | other_length | state_index | seed_length | ...seed |\n\n// Define the index offset of the \"other\" section in the state array:\nvar OTHER_SECTION_OFFSET = N + 3; // | version | num_sections | state_length | ...state | other_length | state_index | seed_length | ...seed |\n\n// Define the index offset of the seed section in the state array:\nvar SEED_SECTION_OFFSET = N + 5; // | version | num_sections | state_length | ...state | other_length | state_index | seed_length | ...seed |\n\n// Define the length of the \"fixed\" length portion of the state array:\nvar STATE_FIXED_LENGTH = N + 6; // 1 (version) + 1 (num_sections) + 1 (state_length) + N (state) + 1 (other_length) + 1 (state_index) + 1 (seed_length)\n\n\n// FUNCTIONS //\n\n/**\n* Verifies state array integrity.\n*\n* @private\n* @param {Uint32Array} state - state array\n* @param {boolean} FLG - flag indicating whether the state array was provided as an option (true) or an argument (false)\n* @returns {(Error|null)} an error or `null`\n*/\nfunction verifyState( state, FLG ) {\n\tvar s1;\n\tif ( FLG ) {\n\t\ts1 = 'option';\n\t} else {\n\t\ts1 = 'argument';\n\t}\n\t// The state array must have a minimum length...\n\tif ( state.length < STATE_FIXED_LENGTH+1 ) {\n\t\treturn new RangeError( format( 'invalid %s. `state` array has insufficient length.', s1 ) );\n\t}\n\t// The first element of the state array must equal the supported state array schema version...\n\tif ( state[ 0 ] !== STATE_ARRAY_VERSION ) {\n\t\treturn new RangeError( format( 'invalid %s. `state` array has an incompatible schema version. Expected: `%s`. Actual: `%s.`', s1, STATE_ARRAY_VERSION, state[ 0 ] ) );\n\t}\n\t// The second element of the state array must contain the number of sections...\n\tif ( state[ 1 ] !== NUM_STATE_SECTIONS ) {\n\t\treturn new RangeError( format( 'invalid %s. `state` array has an incompatible number of sections. Expected: `%s`. Actual: `%s`.', s1, NUM_STATE_SECTIONS, state[ 1 ] ) );\n\t}\n\t// The length of the \"state\" section must equal `N`...\n\tif ( state[ STATE_SECTION_OFFSET ] !== N ) {\n\t\treturn new RangeError( format( 'invalid %s. `state` array has an incompatible state length. Expected: `%u`. Actual: `%u`.', s1, N, state[ STATE_SECTION_OFFSET ] ) );\n\t}\n\t// The length of the \"other\" section must equal `1`...\n\tif ( state[ OTHER_SECTION_OFFSET ] !== 1 ) {\n\t\treturn new RangeError( format( 'invalid %s. `state` array has an incompatible section length. Expected: `%u`. Actual: `%u`.', s1, 1, state[ OTHER_SECTION_OFFSET ] ) );\n\t}\n\t// The length of the \"seed\" section much match the empirical length...\n\tif ( state[ SEED_SECTION_OFFSET ] !== state.length-STATE_FIXED_LENGTH ) {\n\t\treturn new RangeError( format( 'invalid %s. `state` array length is incompatible with seed section length. Expected: `%u`. Actual: `%u`.', s1, state.length-STATE_FIXED_LENGTH, state[ SEED_SECTION_OFFSET ] ) );\n\t}\n\treturn null;\n}\n\n/**\n* Returns an initial PRNG state.\n*\n* @private\n* @param {Uint32Array} state - state array\n* @param {PositiveInteger} N - state size\n* @param {uinteger32} s - seed\n* @returns {Uint32Array} state array\n*/\nfunction createState( state, N, s ) {\n\tvar i;\n\n\t// Set the first element of the state array to the provided seed:\n\tstate[ 0 ] = s >>> 0; // equivalent to `s & 0xffffffffUL` in original C implementation\n\n\t// Initialize the remaining state array elements:\n\tfor ( i = 1; i < N; i++ ) {\n\t\t/*\n\t\t* In the original C implementation (see `init_genrand()`),\n\t\t*\n\t\t* ```c\n\t\t* mt[i] = (KNUTH_MULTIPLIER * (mt[i-1] ^ (mt[i-1] >> 30)) + i)\n\t\t* ```\n\t\t*\n\t\t* In order to replicate this in JavaScript, we must emulate C-like multiplication of unsigned 32-bit integers.\n\t\t*/\n\t\ts = state[ i-1 ]>>>0; // asm type annotation\n\t\ts = ( s^(s>>>30) )>>>0; // asm type annotation\n\t\tstate[ i ] = ( umul( s, KNUTH_MULTIPLIER ) + i )>>>0; // asm type annotation\n\t}\n\treturn state;\n}\n\n/**\n* Initializes a PRNG state array according to a seed array.\n*\n* @private\n* @param {Uint32Array} state - state array\n* @param {NonNegativeInteger} N - state array length\n* @param {Collection} seed - seed array\n* @param {NonNegativeInteger} M - seed array length\n* @returns {Uint32Array} state array\n*/\nfunction initState( state, N, seed, M ) {\n\tvar s;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\ti = 1;\n\tj = 0;\n\tfor ( k = max( N, M ); k > 0; k-- ) {\n\t\t/*\n\t\t* In the original C implementation (see `init_by_array()`),\n\t\t*\n\t\t* ```c\n\t\t* mt[i] = (mt[i]^((mt[i-1]^(mt[i-1]>>30))*1664525UL)) + seed[j] + j;\n\t\t* ```\n\t\t*\n\t\t* In order to replicate this in JavaScript, we must emulate C-like multiplication of unsigned 32-bit integers.\n\t\t*/\n\t\ts = state[ i-1 ]>>>0; // asm type annotation\n\t\ts = ( s^(s>>>30) )>>>0; // asm type annotation\n\t\ts = ( umul( s, MAGIC_MULTIPLIER_1 ) )>>>0; // asm type annotation\n\t\tstate[ i ] = ( ((state[i]>>>0)^s) + seed[j] + j )>>>0; /* non-linear */ // asm type annotation\n\n\t\ti += 1;\n\t\tj += 1;\n\t\tif ( i >= N ) {\n\t\t\tstate[ 0 ] = state[ N-1 ];\n\t\t\ti = 1;\n\t\t}\n\t\tif ( j >= M ) {\n\t\t\tj = 0;\n\t\t}\n\t}\n\tfor ( k = N-1; k > 0; k-- ) {\n\t\t/*\n\t\t* In the original C implementation (see `init_by_array()`),\n\t\t*\n\t\t* ```c\n\t\t* mt[i] = (mt[i]^((mt[i-1]^(mt[i-1]>>30))*1566083941UL)) - i;\n\t\t* ```\n\t\t*\n\t\t* In order to replicate this in JavaScript, we must emulate C-like multiplication of unsigned 32-bit integers.\n\t\t*/\n\t\ts = state[ i-1 ]>>>0; // asm type annotation\n\t\ts = ( s^(s>>>30) )>>>0; // asm type annotation\n\t\ts = ( umul( s, MAGIC_MULTIPLIER_2 ) )>>>0; // asm type annotation\n\t\tstate[ i ] = ( ((state[i]>>>0)^s) - i )>>>0; /* non-linear */ // asm type annotation\n\n\t\ti += 1;\n\t\tif ( i >= N ) {\n\t\t\tstate[ 0 ] = state[ N-1 ];\n\t\t\ti = 1;\n\t\t}\n\t}\n\t// Ensure a non-zero initial state array:\n\tstate[ 0 ] = TWO_32; // MSB (most significant bit) is 1\n\n\treturn state;\n}\n\n/**\n* Updates a PRNG's internal state by generating the next `N` words.\n*\n* @private\n* @param {Uint32Array} state - state array\n* @returns {Uint32Array} state array\n*/\nfunction twist( state ) {\n\tvar w;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\tk = N - M;\n\tfor ( i = 0; i < k; i++ ) {\n\t\tw = ( state[i]&UPPER_MASK ) | ( state[i+1]&LOWER_MASK );\n\t\tstate[ i ] = state[ i+M ] ^ ( w>>>1 ) ^ MAG01[ w&ONE ];\n\t}\n\tj = N - 1;\n\tfor ( ; i < j; i++ ) {\n\t\tw = ( state[i]&UPPER_MASK ) | ( state[i+1]&LOWER_MASK );\n\t\tstate[ i ] = state[ i-k ] ^ ( w>>>1 ) ^ MAG01[ w&ONE ];\n\t}\n\tw = ( state[j]&UPPER_MASK ) | ( state[0]&LOWER_MASK );\n\tstate[ j ] = state[ M-1 ] ^ ( w>>>1 ) ^ MAG01[ w&ONE ];\n\treturn state;\n}\n\n\n// MAIN //\n\n/**\n* Returns a 32-bit Mersenne Twister pseudorandom number generator.\n*\n* ## Notes\n*\n* -   In contrast to the original C implementation, array seeds of length `1` are considered integer seeds. This ensures that the seed `[ 1234 ]` generates the same output as the seed `1234`. In the original C implementation, the two seeds would yield different output, which is **not** obvious from a user perspective.\n*\n* @param {Options} [options] - options\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} a seed must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integers less than or equal to the maximum unsigned 32-bit integer\n* @throws {RangeError} a numeric seed must be a positive integer less than or equal to the maximum unsigned 32-bit integer\n* @throws {TypeError} state must be a `Uint32Array`\n* @throws {Error} must provide a valid state\n* @throws {TypeError} `copy` option must be a boolean\n* @returns {PRNG} Mersenne Twister PRNG\n*\n* @example\n* var mt19937 = factory();\n*\n* var v = mt19937();\n* // returns <number>\n*\n* @example\n* // Return a seeded Mersenne Twister PRNG:\n* var mt19937 = factory({\n*     'seed': 1234\n* });\n*\n* var v = mt19937();\n* // returns 822569775\n*/\nfunction factory( options ) {\n\tvar STATE;\n\tvar state;\n\tvar opts;\n\tvar seed;\n\tvar slen;\n\tvar err;\n\n\topts = {};\n\tif ( arguments.length ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\t\topts.copy = options.copy;\n\t\t\tif ( !isBoolean( options.copy ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', options.copy ) );\n\t\t\t}\n\t\t}\n\t\tif ( hasOwnProp( options, 'state' ) ) {\n\t\t\tstate = options.state;\n\t\t\topts.state = true;\n\t\t\tif ( !isUint32Array( state ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a Uint32Array. Option: `%s`.', 'state', state ) );\n\t\t\t}\n\t\t\terr = verifyState( state, true );\n\t\t\tif ( err ) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tif ( opts.copy === false ) {\n\t\t\t\tSTATE = state;\n\t\t\t} else {\n\t\t\t\tSTATE = new Uint32Array( state.length );\n\t\t\t\tgcopy( state.length, state, 1, STATE, 1 );\n\t\t\t}\n\t\t\t// Create a state \"view\":\n\t\t\tstate = new Uint32Array( STATE.buffer, STATE.byteOffset+((STATE_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), N );\n\n\t\t\t// Create a seed \"view\":\n\t\t\tseed = new Uint32Array( STATE.buffer, STATE.byteOffset+((SEED_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), state[ SEED_SECTION_OFFSET ] );\n\t\t}\n\t\t// If provided a PRNG state, we ignore the `seed` option...\n\t\tif ( seed === void 0 ) {\n\t\t\tif ( hasOwnProp( options, 'seed' ) ) {\n\t\t\t\tseed = options.seed;\n\t\t\t\topts.seed = true;\n\t\t\t\tif ( isPositiveInteger( seed ) ) {\n\t\t\t\t\tif ( seed > MAX_SEED ) {\n\t\t\t\t\t\tthrow new RangeError( format( 'invalid option. `%s` option must be a positive integer less than or equal to the maximum unsigned 32-bit integer. Option: `%u`.', 'seed', seed ) );\n\t\t\t\t\t}\n\t\t\t\t\tseed >>>= 0; // asm type annotation\n\t\t\t\t} else if ( isCollection( seed ) === false || seed.length < 1 ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `%s`.', 'seed', seed ) );\n\t\t\t\t} else if ( seed.length === 1 ) {\n\t\t\t\t\tseed = seed[ 0 ];\n\t\t\t\t\tif ( !isPositiveInteger( seed ) ) {\n\t\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `%s`.', 'seed', seed ) );\n\t\t\t\t\t}\n\t\t\t\t\tif ( seed > MAX_SEED ) {\n\t\t\t\t\t\tthrow new RangeError( format( 'invalid option. `%s` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `%u`.', 'seed', seed ) );\n\t\t\t\t\t}\n\t\t\t\t\tseed >>>= 0; // asm type annotation\n\t\t\t\t} else {\n\t\t\t\t\tslen = seed.length;\n\t\t\t\t\tSTATE = new Uint32Array( STATE_FIXED_LENGTH+slen );\n\n\t\t\t\t\t// Initialize sections:\n\t\t\t\t\tSTATE[ 0 ] = STATE_ARRAY_VERSION;\n\t\t\t\t\tSTATE[ 1 ] = NUM_STATE_SECTIONS;\n\t\t\t\t\tSTATE[ STATE_SECTION_OFFSET ] = N;\n\t\t\t\t\tSTATE[ OTHER_SECTION_OFFSET ] = 1;\n\t\t\t\t\tSTATE[ OTHER_SECTION_OFFSET+1 ] = N; // state index\n\t\t\t\t\tSTATE[ SEED_SECTION_OFFSET ] = slen;\n\n\t\t\t\t\t// Copy the provided seed array to prevent external mutation, as mutation would lead to an inability to reproduce PRNG values according to the PRNG's stated seed:\n\t\t\t\t\tgcopy.ndarray( slen, seed, 1, 0, STATE, 1, SEED_SECTION_OFFSET+1 );\n\n\t\t\t\t\t// Create a state \"view\":\n\t\t\t\t\tstate = new Uint32Array( STATE.buffer, STATE.byteOffset+((STATE_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), N );\n\n\t\t\t\t\t// Create a seed \"view\":\n\t\t\t\t\tseed = new Uint32Array( STATE.buffer, STATE.byteOffset+((SEED_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), slen );\n\n\t\t\t\t\t// Initialize the internal PRNG state:\n\t\t\t\t\tstate = createState( state, N, SEED_ARRAY_INIT_STATE );\n\t\t\t\t\tstate = initState( state, N, seed, slen );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tseed = randuint32() >>> 0; // asm type annotation\n\t\t\t}\n\t\t}\n\t} else {\n\t\tseed = randuint32() >>> 0; // asm type annotation\n\t}\n\tif ( state === void 0 ) {\n\t\tSTATE = new Uint32Array( STATE_FIXED_LENGTH+1 );\n\n\t\t// Initialize sections:\n\t\tSTATE[ 0 ] = STATE_ARRAY_VERSION;\n\t\tSTATE[ 1 ] = NUM_STATE_SECTIONS;\n\t\tSTATE[ STATE_SECTION_OFFSET ] = N;\n\t\tSTATE[ OTHER_SECTION_OFFSET ] = 1;\n\t\tSTATE[ OTHER_SECTION_OFFSET+1 ] = N; // state index\n\t\tSTATE[ SEED_SECTION_OFFSET ] = 1;\n\t\tSTATE[ SEED_SECTION_OFFSET+1 ] = seed;\n\n\t\t// Create a state \"view\":\n\t\tstate = new Uint32Array( STATE.buffer, STATE.byteOffset+((STATE_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), N );\n\n\t\t// Create a seed \"view\":\n\t\tseed = new Uint32Array( STATE.buffer, STATE.byteOffset+((SEED_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), 1 );\n\n\t\t// Initialize the internal PRNG state:\n\t\tstate = createState( state, N, seed );\n\t}\n\t// Note: property order matters in order to maintain consistency of PRNG \"shape\" (hidden classes).\n\tsetReadOnly( mt19937, 'NAME', 'mt19937' );\n\tsetReadOnlyAccessor( mt19937, 'seed', getSeed );\n\tsetReadOnlyAccessor( mt19937, 'seedLength', getSeedLength );\n\tsetReadWriteAccessor( mt19937, 'state', getState, setState );\n\tsetReadOnlyAccessor( mt19937, 'stateLength', getStateLength );\n\tsetReadOnlyAccessor( mt19937, 'byteLength', getStateSize );\n\tsetReadOnly( mt19937, 'toJSON', toJSON );\n\tsetReadOnly( mt19937, 'MIN', 0 );\n\tsetReadOnly( mt19937, 'MAX', UINT32_MAX );\n\tsetReadOnly( mt19937, 'normalized', normalized );\n\n\tsetReadOnly( normalized, 'NAME', mt19937.NAME );\n\tsetReadOnlyAccessor( normalized, 'seed', getSeed );\n\tsetReadOnlyAccessor( normalized, 'seedLength', getSeedLength );\n\tsetReadWriteAccessor( normalized, 'state', getState, setState );\n\tsetReadOnlyAccessor( normalized, 'stateLength', getStateLength );\n\tsetReadOnlyAccessor( normalized, 'byteLength', getStateSize );\n\tsetReadOnly( normalized, 'toJSON', toJSON );\n\tsetReadOnly( normalized, 'MIN', 0.0 );\n\tsetReadOnly( normalized, 'MAX', MAX_NORMALIZED );\n\n\treturn mt19937;\n\n\t/**\n\t* Returns the PRNG seed.\n\t*\n\t* @private\n\t* @returns {PRNGSeedMT19937} seed\n\t*/\n\tfunction getSeed() {\n\t\tvar len = STATE[ SEED_SECTION_OFFSET ];\n\t\treturn gcopy( len, seed, 1, new Uint32Array( len ), 1 );\n\t}\n\n\t/**\n\t* Returns the PRNG seed length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} seed length\n\t*/\n\tfunction getSeedLength() {\n\t\treturn STATE[ SEED_SECTION_OFFSET ];\n\t}\n\n\t/**\n\t* Returns the PRNG state length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state length\n\t*/\n\tfunction getStateLength() {\n\t\treturn STATE.length;\n\t}\n\n\t/**\n\t* Returns the PRNG state size (in bytes).\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state size (in bytes)\n\t*/\n\tfunction getStateSize() {\n\t\treturn STATE.byteLength;\n\t}\n\n\t/**\n\t* Returns the current PRNG state.\n\t*\n\t* ## Notes\n\t*\n\t* -   The PRNG state array is comprised of a preamble followed by `3` sections:\n\t*\n\t*     0.  preamble (version + number of sections)\n\t*     1.  internal PRNG state\n\t*     2.  auxiliary state information\n\t*     3.  PRNG seed\n\t*\n\t* -   The first element of the PRNG state array preamble is the state array schema version.\n\t*\n\t* -   The second element of the PRNG state array preamble is the number of state array sections (i.e., `3`).\n\t*\n\t* -   The first element of each section following the preamble specifies the section length. The remaining section elements comprise the section contents.\n\t*\n\t* @private\n\t* @returns {PRNGStateMT19937} current state\n\t*/\n\tfunction getState() {\n\t\tvar len = STATE.length;\n\t\treturn gcopy( len, STATE, 1, new Uint32Array( len ), 1 );\n\t}\n\n\t/**\n\t* Sets the PRNG state.\n\t*\n\t* ## Notes\n\t*\n\t* -   If PRNG state is \"shared\" (meaning a state array was provided during PRNG creation and **not** copied) and one sets the generator state to a state array having a different length, the PRNG does **not** update the existing shared state and, instead, points to the newly provided state array. In order to synchronize PRNG output according to the new shared state array, the state array for **each** relevant PRNG must be **explicitly** set.\n\t* -   If PRNG state is \"shared\" and one sets the generator state to a state array of the same length, the PRNG state is updated (along with the state of all other PRNGs sharing the PRNG's state array).\n\t*\n\t* @private\n\t* @param {PRNGStateMT19937} s - generator state\n\t* @throws {TypeError} must provide a `Uint32Array`\n\t* @throws {Error} must provide a valid state\n\t*/\n\tfunction setState( s ) {\n\t\tvar err;\n\t\tif ( !isUint32Array( s ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a Uint32Array. Value: `%s`.', s ) );\n\t\t}\n\t\terr = verifyState( s, false );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( opts.copy === false ) {\n\t\t\tif ( opts.state && s.length === STATE.length ) {\n\t\t\t\tgcopy( s.length, s, 1, STATE, 1 ); // update current shared state\n\t\t\t} else {\n\t\t\t\tSTATE = s; // point to new shared state\n\t\t\t\topts.state = true; // setting this flag allows updating a shared state even if a state array was not provided at PRNG creation\n\t\t\t}\n\t\t} else {\n\t\t\t// Check if we can reuse allocated memory...\n\t\t\tif ( s.length !== STATE.length ) {\n\t\t\t\tSTATE = new Uint32Array( s.length ); // reallocate\n\t\t\t}\n\t\t\tgcopy( s.length, s, 1, STATE, 1 );\n\t\t}\n\t\t// Create a new state \"view\":\n\t\tstate = new Uint32Array( STATE.buffer, STATE.byteOffset+((STATE_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), N );\n\n\t\t// Create a new seed \"view\":\n\t\tseed = new Uint32Array( STATE.buffer, STATE.byteOffset+((SEED_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), STATE[ SEED_SECTION_OFFSET ] );\n\t}\n\n\t/**\n\t* Serializes the pseudorandom number generator as a JSON object.\n\t*\n\t* ## Notes\n\t*\n\t* -   `JSON.stringify()` implicitly calls this method when stringifying a PRNG.\n\t*\n\t* @private\n\t* @returns {Object} JSON representation\n\t*/\n\tfunction toJSON() {\n\t\tvar out = {};\n\t\tout.type = 'PRNG';\n\t\tout.name = mt19937.NAME;\n\t\tout.state = typedarray2json( STATE );\n\t\tout.params = [];\n\t\treturn out;\n\t}\n\n\t/**\n\t* Generates a pseudorandom integer on the interval \\\\( [0, 2^{32}) \\\\).\n\t*\n\t* @private\n\t* @returns {uinteger32} pseudorandom integer\n\t*\n\t* @example\n\t* var r = mt19937();\n\t* // returns <number>\n\t*/\n\tfunction mt19937() {\n\t\tvar r;\n\t\tvar i;\n\n\t\t// Retrieve the current state index:\n\t\ti = STATE[ OTHER_SECTION_OFFSET+1 ];\n\n\t\t// Determine whether we need to update the PRNG state:\n\t\tif ( i >= N ) {\n\t\t\tstate = twist( state );\n\t\t\ti = 0;\n\t\t}\n\t\t// Get the next word of \"raw\"/untempered state:\n\t\tr = state[ i ];\n\n\t\t// Update the state index:\n\t\tSTATE[ OTHER_SECTION_OFFSET+1 ] = i + 1;\n\n\t\t// Tempering transform to compensate for the reduced dimensionality of equidistribution:\n\t\tr ^= r >>> 11;\n\t\tr ^= ( r << 7 ) & TEMPERING_COEFFICIENT_1;\n\t\tr ^= ( r << 15 ) & TEMPERING_COEFFICIENT_2;\n\t\tr ^= r >>> 18;\n\n\t\treturn r >>> 0;\n\t}\n\n\t/**\n\t* Generates a pseudorandom number on the interval \\\\( [0, 1) \\\\).\n\t*\n\t* ## Notes\n\t*\n\t* -   The original C implementation credits Isaku Wada for this algorithm (2002/01/09).\n\t*\n\t* @private\n\t* @returns {number} pseudorandom number\n\t*\n\t* @example\n\t* var r = normalized();\n\t* // returns <number>\n\t*/\n\tfunction normalized() {\n\t\tvar x = mt19937() >>> 5;\n\t\tvar y = mt19937() >>> 6;\n\t\treturn ( (x*TWO_26)+y ) * FLOAT64_NORMALIZATION_CONSTANT;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A 32-bit Mersenne Twister pseudorandom number generator.\n*\n* @module @stdlib/random/base/mt19937\n*\n* @example\n* var mt19937 = require( '@stdlib/random/base/mt19937' );\n*\n* var v = mt19937();\n* // returns <number>\n*\n* @example\n* var factory = require( '@stdlib/random/base/mt19937' ).factory;\n*\n* var mt19937 = factory({\n*     'seed': 1234\n* });\n*\n* var v = mt19937();\n* // returns 822569775\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar mt19937 = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( mt19937, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = mt19937;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar factory = require( './factory.js' );\nvar randuint32 = require( './rand_uint32.js' );\n\n\n// MAIN //\n\n/**\n* Generates a pseudorandom integer on the interval \\\\( [0, 2^{32}) \\\\).\n*\n* ## Method\n*\n* -   When generating normalized double-precision floating-point numbers, we first generate two pseudorandom integers \\\\( x \\\\) and \\\\( y \\\\) on the interval \\\\( [0, 2^{32}) \\\\) for a combined \\\\( 64 \\\\) random bits.\n*\n* -   We would like \\\\( 53 \\\\) random bits to generate a 53-bit precision integer and, thus, want to discard \\\\( 11 \\\\) of the generated bits.\n*\n* -   We do so by discarding \\\\( 5 \\\\) bits from \\\\( x \\\\) and \\\\( 6 \\\\) bits from \\\\( y \\\\).\n*\n* -   Accordingly, \\\\( x \\\\) contains \\\\( 27 \\\\) random bits, which are subsequently shifted left \\\\( 26 \\\\) bits (multiplied by \\\\( 2^{26} \\\\), and \\\\( y \\\\) contains \\\\( 26 \\\\) random bits to fill in the lower \\\\( 26 \\\\) bits. When summed, they combine to comprise \\\\( 53 \\\\) random bits of a double-precision floating-point integer.\n*\n* -   As an example, suppose, for the sake of argument, the 32-bit PRNG generates the maximum unsigned 32-bit integer \\\\( 2^{32}-1 \\\\) twice in a row. Then,\n*\n*     ```javascript\n*     x = 4294967295 >>> 5; // 00000111111111111111111111111111\n*     y = 4294967295 >>> 6; // 00000011111111111111111111111111\n*     ```\n*\n*     Multiplying \\\\( x \\\\) by \\\\( 2^{26} \\\\) returns \\\\( 9007199187632128 \\\\), which, in binary, is\n*\n*     ```binarystring\n*     0 10000110011 11111111111111111111 11111100000000000000000000000000\n*     ```\n*\n*     Adding \\\\( y \\\\) yields \\\\( 9007199254740991 \\\\) (the maximum \"safe\" double-precision floating-point integer value), which, in binary, is\n*\n*     ```binarystring\n*     0 10000110011 11111111111111111111 11111111111111111111111111111111\n*     ```\n*\n* -   Similarly, suppose the 32-bit PRNG generates the following values\n*\n*     ```javascript\n*     x = 1 >>> 5;  // 0 => 00000000000000000000000000000000\n*     y = 64 >>> 6; // 1 => 00000000000000000000000000000001\n*     ```\n*\n*     Multiplying \\\\( x \\\\) by \\\\( 2^{26} \\\\) returns \\\\( 0 \\\\), which, in binary, is\n*\n*     ```binarystring\n*     0 00000000000 00000000000000000000 00000000000000000000000000000000\n*     ```\n*\n*     Adding \\\\( y \\\\) yields \\\\( 1 \\\\), which, in binary, is\n*\n*     ```binarystring\n*     0 01111111111 00000000000000000000 00000000000000000000000000000000\n*     ```\n*\n* -   As different combinations of \\\\( x \\\\) and \\\\( y \\\\) are generated, different combinations of double-precision floating-point exponent and significand bits will be toggled, thus generating pseudorandom double-precision floating-point numbers.\n*\n*\n* ## References\n*\n* -   Matsumoto, Makoto, and Takuji Nishimura. 1998. \"Mersenne Twister: A 623-dimensionally Equidistributed Uniform Pseudo-random Number Generator.\" _ACM Transactions on Modeling and Computer Simulation_ 8 (1). New York, NY, USA: ACM: 3–30. doi:[10.1145/272991.272995][@matsumoto:1998a].\n* -   Harase, Shin. 2017. \"Conversion of Mersenne Twister to double-precision floating-point numbers.\" _ArXiv_ abs/1708.06018 (September). <https://arxiv.org/abs/1708.06018>.\n*\n* [@matsumoto:1998a]: https://doi.org/10.1145/272991.272995\n*\n*\n* @function mt19937\n* @type {PRNG}\n* @returns {PositiveInteger} pseudorandom integer\n*\n* @example\n* var v = mt19937();\n* // returns <number>\n*/\nvar mt19937 = factory({\n\t'seed': randuint32()\n});\n\n\n// EXPORTS //\n\nmodule.exports = mt19937;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Samples from a discrete uniform distribution (equal probabilities and with replacement).\n*\n* @private\n* @param {ArrayLike} x - array-like object from which to sample\n* @param {NonNegativeInteger} size - sample size\n* @param {Function} rand - PRNG for generating uniformly distributed numbers\n* @returns {Array} sample\n*/\nfunction discreteUniform( x, size, rand ) {\n\tvar pos;\n\tvar out;\n\tvar N;\n\tvar i;\n\n\tN = x.length;\n\tout = new Array( size );\n\tfor ( i = 0; i < size; i++ ) {\n\t\tpos = floor( N * rand() );\n\t\tout[ i ] = x[ pos ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = discreteUniform;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Samples without replacement from a discrete set using custom probabilities.\n*\n* ## Notes\n*\n* -   After each draw, the probabilities of the remaining observations are renormalized so that they sum to one.\n*\n*\n* @private\n* @param {ArrayLike} x - array-like object from which to sample\n* @param {NonNegativeInteger} size - sample size\n* @param {Function} rand - PRNG for generating uniformly distributed numbers\n* @param {ProbabilityArray} probabilities - element probabilities\n* @returns {Array} sample\n*/\nfunction renormalizing( x, size, rand, probabilities ) {\n\tvar probs;\n\tvar psum;\n\tvar out;\n\tvar N;\n\tvar i;\n\tvar j;\n\tvar k;\n\tvar u;\n\n\tN = x.length;\n\tprobs = new Array( N );\n\tfor ( i = 0; i < N; i++ ) {\n\t\tprobs[ i ] = probabilities[ i ];\n\t}\n\tout = new Array( size );\n\tfor ( i = 0; i < size; i++ ) {\n\t\tu = rand();\n\t\tpsum = 0;\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tpsum += probs[ j ];\n\t\t\tif ( u < psum ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor ( k = 0; k < N; k++ ) {\n\t\t\tif ( k === j ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprobs[ k ] /= 1.0 - probs[ j ];\n\t\t}\n\t\tprobs[ j ] = 0.0;\n\t\tout[ i ] = x[ j ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = renormalizing;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// FUNCTIONS //\n\nvar slice = Array.prototype.slice;\n\n\n// MAIN //\n\n/**\n* Samples uniformly without replacement using the Fisher-Yates shuffle.\n*\n* ## References\n*\n* -   Knuth, Donald E. 1997. _The Art of Computer Programming, Volume 2 (3rd Ed.): Seminumerical Algorithms_. Boston, MA, USA: Addison-Wesley Longman Publishing Co., Inc.\n*\n* @private\n* @param {ArrayLike} x - array-like object from which to sample\n* @param {NonNegativeInteger} size - sample size\n* @param {Function} rand - PRNG for generating uniformly distributed numbers\n* @returns {Array} sample\n*/\nfunction fisherYates( x, size, rand ) {\n\tvar tmp;\n\tvar N;\n\tvar i;\n\tvar j;\n\n\tN = x.length;\n\n\t// Note: we skip the first element, as no further swaps are possible given that all other indices are excluded from swapping...\n\tfor ( i = N-1; i > 0; i-- ) {\n\t\t// Generate an integer index on the interval: [0,i]\n\t\tj = floor( rand()*(i+1) );\n\n\t\t// Swap elements:\n\t\ttmp = x[ i ];\n\t\tx[ i ] = x[ j ];\n\t\tx[ j ] = tmp;\n\t}\n\treturn slice.call( x, 0, size );\n}\n\n\n// EXPORTS //\n\nmodule.exports = fisherYates;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Samples with replacement and non-uniform probabilities using Vose's [alias method][alias-method].\n*\n* ## References\n*\n* -   Vose, Michael D. 1991. \"A linear algorithm for generating random numbers with a given distribution.\" _IEEE Transactions on Software Engineering_ 17 (9): 972–75. doi:[10.1109/32.92917][@vose:1991].\n*\n* [alias-method]: http://keithschwarz.com/darts-dice-coins/\n* [@vose:1991]: https://doi.org/10.1109/32.92917\n*\n*\n* @private\n* @param {ArrayLike} x - array-like object from which to sample\n* @param {NonNegativeInteger} size - sample size\n* @param {Function} rand - PRNG for generating uniformly distributed numbers\n* @param {ProbabilityArray} probabilities - element probabilities\n* @returns {Array} sample\n*/\nfunction vose( x, size, rand, probabilities ) {\n\tvar small;\n\tvar large;\n\tvar probs;\n\tvar alias;\n\tvar out;\n\tvar N;\n\tvar p;\n\tvar g;\n\tvar i;\n\tvar l;\n\n\tprobs = probabilities.slice();\n\tN = x.length;\n\n\tsmall = [];\n\tlarge = [];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tprobs[ i ] *= N;\n\t\tif ( probs[ i ] < 1.0 ) {\n\t\t\tsmall.push( i );\n\t\t} else {\n\t\t\tlarge.push( i );\n\t\t}\n\t}\n\talias = new Array( N );\n\tp = new Array( N );\n\twhile ( small.length !== 0 && large.length !== 0 ) {\n\t\tl = small.shift();\n\t\tg = large.shift();\n\t\tp[ l ] = probs[ l ];\n\t\talias[ l ] = g;\n\t\tprobs[ g ] = probs[ g ] + probs[ l ] - 1.0;\n\t\tif ( probs[ g ] < 1.0 ) {\n\t\t\tsmall.push( g );\n\t\t} else {\n\t\t\tlarge.push( g );\n\t\t}\n\t}\n\tfor ( i = 0; i < large.length; i++ ) {\n\t\tp[ large[ i ] ] = 1.0;\n\t}\n\tfor ( i = 0; i < small.length; i++ ) {\n\t\tp[ small[ i ] ] = 1.0;\n\t}\n\tout = new Array( size );\n\tfor ( i = 0; i < size; i++ ) {\n\t\tl = floor( N*rand() );\n\t\tif ( rand() < p[ l ] ) {\n\t\t\tout[ i ] = x[ l ];\n\t\t} else {\n\t\t\tout[ i ] = x[ alias[ l ] ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = vose;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isTypedArray = require( './../../is-typed-array' );\nvar isArray = require( './../../is-array' );\nvar isNumber = require( './../../is-number' ).isPrimitive;\nvar absdiff = require( '@stdlib/math/base/utils/absolute-difference' );\nvar FLOAT64_SQRT_EPS = require( '@stdlib/constants/float64/sqrt-eps' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array of probabilities that sum to one.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a probability array\n*\n* @example\n* var bool = isUnityProbabilityArray( [ 0.25, 0.5, 0.25 ] );\n* // returns true\n*\n* @example\n* var bool = isUnityProbabilityArray( new Uint8Array( [ 0, 1 ] ) );\n* // returns true\n*\n* @example\n* var bool = isUnityProbabilityArray( [ 0.4, 0.4, 0.4 ] );\n* // returns false\n*\n* @example\n* var bool = isUnityProbabilityArray( [ 3.14, 0.0 ] );\n* // returns false\n*/\nfunction isUnityProbabilityArray( v ) {\n\tvar sum;\n\tvar i;\n\tif ( isArray( v ) ) {\n\t\tsum = 0.0;\n\t\tfor ( i = 0; i < v.length; i++ ) {\n\t\t\tif (\n\t\t\t\t!isNumber( v[ i ] ) ||\n\t\t\t\tv[ i ] > 1.0 ||\n\t\t\t\tv[ i ] < 0.0\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tsum += v[ i ];\n\t\t}\n\t\treturn ( absdiff( sum, 1.0 ) <= FLOAT64_SQRT_EPS );\n\t}\n\tif ( isTypedArray( v ) ) {\n\t\tsum = 0.0;\n\t\tfor ( i = 0; i < v.length; i++ ) {\n\t\t\tif (\n\t\t\t\tv[ i ] > 1.0 ||\n\t\t\t\tv[ i ] < 0.0\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tsum += v[ i ];\n\t\t}\n\t\treturn ( absdiff( sum, 1.0 ) <= FLOAT64_SQRT_EPS );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUnityProbabilityArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' );\nvar isUnityProbabilityArray = require( '@stdlib/assert/is-unity-probability-array' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.size] - sample size\n* @param {ProbabilityArray} [options.probs] - element probabilities\n* @param {boolean} [options.replace] - boolean indicating whether to sample with replacement\n* @param {boolean} [options.mutate] - boolean indicating whether to mutate the `pool` when sampling without replacement\n* @returns {(null|Error)} null or an error\n*\n* @example\n* var opts = {};\n* var options = {\n*     'size': 10,\n*     'replace': false,\n*     'mutate': true,\n*     'probs': [ 0.7, 0.3 ]\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'size' ) ) {\n\t\topts.size = options.size;\n\t\tif ( !isNonNegativeInteger( opts.size ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'size', opts.size ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'probs' ) ) {\n\t\topts.probs = options.probs;\n\t\tif ( !isUnityProbabilityArray( opts.probs ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an array of probabilities that sum to one. Option: `%s`.', 'probs', opts.probs ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'mutate' ) ) {\n\t\topts.mutate = options.mutate;\n\t\tif ( !isBoolean( opts.mutate ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'mutate', opts.mutate ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'replace' ) ) {\n\t\topts.replace = options.replace;\n\t\tif ( !isBoolean( opts.replace ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'replace', opts.replace ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array of probabilities that sum to one.\n*\n* @module @stdlib/assert/is-unity-probability-array\n*\n* @example\n* var isUnityProbabilityArray = require( '@stdlib/assert/is-unity-probability-array' );\n*\n* var bool = isUnityProbabilityArray( [ 0.25, 0.5, 0.25 ] );\n* // returns true\n*\n* bool = isUnityProbabilityArray( new Uint8Array( [ 0, 1 ] ) );\n* // returns true\n*\n* bool = isUnityProbabilityArray( [ 0.4, 0.4, 0.4 ] );\n* // returns false\n*\n* bool = isUnityProbabilityArray( [ 3.14, 0.0 ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isUnityProbabilityArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isUnityProbabilityArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isArrayLike = require( '@stdlib/assert/is-array-like' );\nvar isTypedArrayLike = require( '@stdlib/assert/is-typed-array-like' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar randu = require( './../../base/mt19937' ).factory;\nvar copy = require( '@stdlib/utils/copy' );\nvar discreteUniform = require( './discrete_uniform.js' );\nvar renormalizing = require( './renormalizing.js' );\nvar fisherYates = require( './fisher_yates.js' );\nvar vose = require( './vose.js' );\nvar defaults = require( './defaults.json' );\nvar validate = require( './validate.js' );\n\n\n// FUNCTIONS //\n\nvar slice = Array.prototype.slice;\n\n\n// MAIN //\n\n/**\n* Returns a function to sample elements from an array-like object.\n*\n* @param {(ArrayLike|TypedArrayLike)} [pool] - array-like object from which to sample\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.seed] - integer-valued seed\n* @param {NonNegativeInteger} [options.size] - sample size\n* @param {boolean} [options.replace=true] - boolean indicating whether to sample with replacement\n* @param {boolean} [options.mutate=false] - boolean indicating whether to mutate the `pool` when sampling without replacement\n* @throws {TypeError} `pool` must be an array-like object\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Function} function to sample elements from an array-like object\n*\n* @example\n* var sample = factory({\n*     'seed': 232\n* });\n* var out = sample( 'abcdefg' );\n* // e.g., returns [ 'g', 'd', 'g', 'f', 'c', 'e', 'f' ]\n*\n* @example\n* var sample = factory( [ 1, 2, 3, 4, 5, 6 ], {\n*     'seed': 232,\n*     'size': 2\n* });\n* var out = sample();\n* // e.g., returns [ 6, 4 ]\n*\n* out = sample();\n* // e.g., returns [ 6, 5 ]\n*\n* @example\n* var sample = factory( [ 1, 2, 3, 4, 5, 6 ], {\n*     'seed': 474,\n*     'size': 3,\n*     'mutate': true,\n*     'replace': false\n* });\n* var out = sample();\n* // e.g., returns [ 4, 3, 6 ]\n*\n* out = sample();\n* // e.g., returns [ 1, 5, 2 ]\n*\n* out = sample();\n* // returns null\n*\n* @example\n* var sample = factory( [ 0, 1 ], {\n*     'size': 2\n* });\n*\n* var out = sample();\n* // e.g., returns [ 1, 1 ]\n*\n* out = sample({\n*     'size': 10\n* });\n* // e.g., returns [ 0, 1, 1, 1, 0, 1, 0, 0, 1, 1 ]\n*\n* @example\n* var sample = factory( [ 0, 1 ], {\n*     'size': 2\n* });\n*\n* var out = sample();\n* // e.g., returns [ 1, 1 ]\n*\n* out = sample({\n*     'replace': false\n* });\n* // e.g., returns [ 0, 1 ] or [ 1, 0 ]\n*\n* out = sample();\n* // e.g., returns [ 1, 1 ]\n*\n* @example\n* var sample = factory( [ 0, 1 ], {\n*     'size': 2,\n*     'mutate': true\n* });\n*\n* var out = sample();\n* // e.g., returns [ 1, 1 ]\n*\n* out = sample({\n*     'replace': false\n* });\n* // e.g., returns [ 0, 1 ] or [ 1, 0 ]\n*\n* out = sample();\n* // returns null\n*/\nfunction factory() {\n\tvar config;\n\tvar pool;\n\tvar conf;\n\tvar rand;\n\tvar err;\n\tvar fcn;\n\n\tconf = copy( defaults );\n\tif ( arguments.length === 1 ) {\n\t\tif ( isArrayLike( arguments[ 0 ] ) || isTypedArrayLike( arguments[ 0 ] ) ) { // eslint-disable-line max-len\n\t\t\tpool = arguments[ 0 ];\n\t\t} else {\n\t\t\tconfig = arguments[ 0 ];\n\t\t\terr = validate( conf, config );\n\t\t}\n\t} else if ( arguments.length > 1 ) {\n\t\tpool = arguments[ 0 ];\n\t\tconfig = arguments[ 1 ];\n\t\tif ( !( isArrayLike( pool ) || isTypedArrayLike( pool ) ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. `%s` argument must be array-like. Value: `%s`.', 'pool', pool ) );\n\t\t}\n\t\terr = validate( conf, config );\n\t}\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tif ( config && config.seed ) {\n\t\trand = randu({\n\t\t\t'seed': config.seed\n\t\t});\n\t} else {\n\t\trand = randu();\n\t}\n\tif ( pool === void 0 ) {\n\t\tfcn = sample1;\n\t} else {\n\t\tif ( isString( pool ) ) {\n\t\t\tpool = pool.split( '' );\n\t\t} else {\n\t\t\tpool = copy( pool );\n\t\t}\n\t\tfcn = sample2;\n\t}\n\tsetReadOnly( fcn, 'seed', rand.seed );\n\tsetReadOnly( fcn, 'PRNG', rand );\n\n\trand = rand.normalized;\n\n\treturn fcn;\n\n\t/**\n\t* Samples elements from an array-like object.\n\t*\n\t* @private\n\t* @param {(ArrayLike|TypedArrayLike)} x - array-like object from which to sample elements\n\t* @param {Options} [options] - function options\n\t* @param {NonNegativeInteger} [options.size] - sample size\n\t* @param {ProbabilityArray} [options.probs] - element probabilities\n\t* @param {boolean} [options.replace=true] - boolean indicating whether to sample with replacement\n\t* @throws {TypeError} first argument must be array-like\n\t* @throws {TypeError} options argument must be an object\n\t* @throws {TypeError} must provide valid options\n\t* @throws {RangeError} `size` option must be less than or equal to the length of `x` when the `replace` option is `false`\n\t* @returns {Array} sample\n\t*/\n\tfunction sample1( x, options ) {\n\t\tvar replace;\n\t\tvar xcopy;\n\t\tvar probs;\n\t\tvar opts;\n\t\tvar size;\n\t\tvar err;\n\n\t\tif ( !( isArrayLike( x ) || isTypedArrayLike( x ) ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be array-like. Value: `%s`.', x ) );\n\t\t}\n\t\tif ( isString( x ) ) {\n\t\t\tx = x.split( '' );\n\t\t}\n\t\topts = {};\n\t\tif ( arguments.length > 1 ) {\n\t\t\terr = validate( opts, options );\n\t\t\tif ( err ) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t\tif ( opts.replace === void 0 ) {\n\t\t\treplace = conf.replace;\n\t\t} else {\n\t\t\treplace = opts.replace;\n\t\t}\n\t\tif ( opts.probs !== void 0 ) {\n\t\t\tprobs = opts.probs;\n\t\t}\n\t\tif ( opts.size ) {\n\t\t\tsize = opts.size;\n\t\t} else if ( conf.size ) {\n\t\t\tsize = conf.size;\n\t\t} else {\n\t\t\tsize = x.length;\n\t\t}\n\t\tif (\n\t\t\treplace === false &&\n\t\t\tsize > x.length\n\t\t) {\n\t\t\tthrow new RangeError( format( 'invalid option. `size` option must be less than or equal to the length of `x` when `replace` is `false`. Option: `%s`.', size ) );\n\t\t}\n\t\t// Custom probabilities...\n\t\tif ( probs ) {\n\t\t\tif ( replace ) {\n\t\t\t\treturn vose( x, size, rand, probs );\n\t\t\t}\n\t\t\treturn renormalizing( x, size, rand, probs );\n\t\t}\n\t\t// All elements equally likely...\n\t\tif ( replace ) {\n\t\t\treturn discreteUniform( x, size, rand );\n\t\t}\n\t\txcopy = slice.call( x );\n\t\treturn fisherYates( xcopy, size, rand );\n\t}\n\n\t/**\n\t* Samples elements from a population.\n\t*\n\t* @private\n\t* @param {Options} [options] - function options\n\t* @param {NonNegativeInteger} [options.size] - sample size\n\t* @param {boolean} [options.replace=true] - boolean indicating whether to sample with replacement\n\t* @param {boolean} [options.mutate=false] - boolean indicating whether to mutate the `pool` when sampling without replacement\n\t* @throws {TypeError} options argument must be an object\n\t* @throws {TypeError} must provide valid options\n\t* @throws {RangeError} `size` option must be less than or equal to the population when the `replace` option is `false`\n\t* @returns {Array} sample\n\t*/\n\tfunction sample2( options ) {\n\t\tvar replace;\n\t\tvar mutate;\n\t\tvar opts;\n\t\tvar size;\n\t\tvar err;\n\t\tvar out;\n\n\t\tif ( pool.length === 0 ) {\n\t\t\treturn null;\n\t\t}\n\t\topts = {};\n\t\tif ( arguments.length ) {\n\t\t\terr = validate( opts, options );\n\t\t\tif ( err ) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t\tif ( opts.mutate === void 0 ) {\n\t\t\tmutate = conf.mutate;\n\t\t} else {\n\t\t\tmutate = opts.mutate;\n\t\t}\n\t\tif ( opts.replace === void 0 ) {\n\t\t\treplace = conf.replace;\n\t\t} else {\n\t\t\treplace = opts.replace;\n\t\t}\n\t\tif ( opts.size ) {\n\t\t\tsize = opts.size;\n\t\t} else if ( conf.size ) {\n\t\t\tsize = conf.size;\n\t\t} else {\n\t\t\tsize = pool.length;\n\t\t}\n\t\tif (\n\t\t\treplace === false &&\n\t\t\tsize > pool.length\n\t\t) {\n\t\t\tthrow new RangeError( format( 'invalid option. `size` option must be less than or equal to the population size when `replace` is `false`. Option: `%s`.', size ) );\n\t\t}\n\t\tif ( replace ) {\n\t\t\treturn discreteUniform( pool, size, rand );\n\t\t}\n\t\tout = fisherYates( pool, size, rand );\n\t\tif ( mutate ) {\n\t\t\t// Remove the sample observations:\n\t\t\tpool = pool.slice( size, pool.length );\n\t\t}\n\t\treturn out;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Sample elements from an array-like object.\n*\n* @module @stdlib/random/sample\n*\n* @example\n* var sample = require( '@stdlib/random/sample' );\n*\n* var out = sample( 'abc' );\n* // e.g., returns [ 'a', 'a', 'b' ]\n*\n* out = sample( [ 3, 6, 9 ] );\n* // e.g., returns [ 3, 9, 6 ]\n*\n* var bool = ( out.length === 3 );\n* // returns true\n*\n* @example\n* var sample = require( '@stdlib/random/sample' );\n*\n* var mysample = sample.factory({\n*     'seed': 323\n* });\n* var out = mysample( [ 3, 6, 9 ], {\n*     'size': 10\n* });\n* // e.g., returns [ 3, 9, 3, 3, 3, 6, 3, 3, 3, 6 ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar sample = require( './sample.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( sample, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = sample;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\n/**\n* Samples elements from an array-like object.\n*\n* @name sample\n* @type {Function}\n* @param {ArrayLike} x - array-like object from which to sample\n* @param {Options} [options] - function options\n* @param {NonNegativeInteger} [options.size] - sample size\n* @param {ProbabilityArray} [options.probs] - element probabilities\n* @param {boolean} [options.replace=true] - boolean indicating whether to sample with replacement\n* @throws {TypeError} first argument must be array-like\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} `size` option must be less than or equal to the length of `x` when the `replace` option is `false`\n* @returns {Array} sample\n*\n* @example\n* var out = sample( [ 3, null, NaN, 'abc', function(){} ] );\n* // e.g., returns [ 3, 'abc', null, 3, null ]\n*/\nvar sample = factory();\n\n\n// EXPORTS //\n\nmodule.exports = sample;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Fill a double-precision floating-point strided array with a specified scalar constant.\n*\n* @module @stdlib/blas/ext/base/dfill\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var dfill = require( '@stdlib/blas/ext/base/dfill' );\n*\n* var x = new Float64Array( [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ] );\n*\n* dfill( x.length, 5.0, x, 1 );\n* // x => <Float64Array>[ 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0 ]\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var dfill = require( '@stdlib/blas/ext/base/dfill' );\n*\n* var x = new Float64Array( [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ] );\n*\n* dfill.ndarray( x.length, 5.0, x, 1, 0 );\n* // x => <Float64Array>[ 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0 ]\n*/\n\n// MODULES //\n\nvar join = require( 'path' ).join;\nvar tryRequire = require( '@stdlib/utils/try-require' );\nvar dfill = require( './main.js' );\n\n\n// MAIN //\n\nvar tmp = tryRequire( join( __dirname, './native.js' ) );\nif ( !(tmp instanceof Error) ) {\n\tdfill = tmp;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dfill;\n","export default '/home/runner/work/stats/stats/node_modules/@stdlib/blas/ext/base/dfill/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Creates a frequency table from an input array.\n*\n* @private\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Collection} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {Float64Array} y - output array\n* @param {integer} strideY - `y` stride length\n* @returns {Collection} output array\n*\n* @example\n* var arr = [ 0, 1, 1, 0, 0, 2, 3, 5 ];\n* var out = [ 0, 0, 0, 0, 0, 0, 0, 0 ];\n*\n* var freq = tabulate( arr.length, arr, 1, out, 1 );\n* // returns [ 3, 2, 1, 1, 0, 1, 0, 0 ]\n*/\nfunction tabulate( N, x, strideX, y, strideY ) {\n\tvar i;\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty[ x[ i*strideX ] * strideY ] += 1;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nmodule.exports = tabulate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar incrspace = require( '@stdlib/array/base/incrspace' );\nvar sample = require( '@stdlib/random/sample' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar dfill = require( '@stdlib/blas/ext/base/dfill' );\nvar tabulate = require( './tabulate.js' );\nvar testStatistic = require( './statistic.js' );\n\n\n// MAIN //\n\n/**\n* Performs a Monte-Carlo simulation.\n*\n* @private\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Float64Array} expected - expected number of observations\n* @param {NumericArray} p - probabilities\n* @param {number} stat - test statistic\n* @param {NonNegativeInteger} nobs - total number of observations\n* @param {NonNegativeInteger} niter - number of iterations\n* @returns {number} p-value\n*/\nfunction simulate( N, expected, p, stat, nobs, niter ) {\n\tvar pool;\n\tvar opts;\n\tvar freq;\n\tvar cnt;\n\tvar v;\n\tvar i;\n\n\tpool = incrspace( 0, N, 1 ); // TODO: replace with strided interface\n\topts = {\n\t\t'size': nobs,\n\t\t'probs': p\n\t};\n\tfreq = new Float64Array( N );\n\tcnt = 1;\n\tfor ( i = 0; i < niter; i++ ) {\n\t\tv = sample( pool, opts ); // TODO: use `sample.factory` method once sample pkg is updated\n\t\tfreq = tabulate( N, v, 1, freq, 1 );\n\t\tif ( testStatistic( N, freq, 1, expected, 1 ) >= stat ) { // TODO: consider replacing with low-level double-precision strided interface\n\t\t\tcnt += 1;\n\t\t}\n\t\tif ( i < niter-1 ) {\n\t\t\tdfill( N, 0.0, freq, 1 );\n\t\t}\n\t}\n\treturn cnt / ( niter+1 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = simulate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-invalid-this, no-restricted-syntax */\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar roundn = require( '@stdlib/math/base/special/roundn' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns a results object.\n*\n* @private\n* @constructor\n* @param {number} pValue - p-value\n* @param {number} alpha - significance\n* @param {number} statistic - test statistic\n* @param {(number|null)} df - degrees of freedom\n* @returns {Results} results object\n*\n* @example\n* var res = new Results( 0.0406, 0.05, 9.9901, 4 );\n* // returns <Results>\n*/\nfunction Results( pValue, alpha, statistic, df ) {\n\tif ( !(this instanceof Results) ) {\n\t\treturn new Results( pValue, alpha, statistic, df );\n\t}\n\tthis._pValue = pValue;\n\tthis._alpha = alpha;\n\tthis._statistic = statistic;\n\tthis._df = df;\n\treturn this;\n}\n\n/**\n* Significance level.\n*\n* @private\n* @name alpha\n* @memberof Results.prototype\n* @type {number}\n*\n* @example\n* var res = new Results( 0.0406, 0.05, 9.9901, 4 );\n*\n* var alpha = res.alpha;\n* // returns 0.05\n*/\nsetReadOnlyAccessor( Results.prototype, 'alpha', function get() {\n\treturn this._alpha;\n});\n\n/**\n* Degrees of freedom.\n*\n* @private\n* @name df\n* @memberof Results.prototype\n* @type {(number|null)}\n*\n* @example\n* var res = new Results( 0.0406, 0.05, 9.9901, 4 );\n*\n* var df = res.df;\n* // returns 4\n*/\nsetReadOnlyAccessor( Results.prototype, 'df', function get() {\n\treturn this._df;\n});\n\n/**\n* Test name.\n*\n* @private\n* @name method\n* @memberof Results.prototype\n* @type {string}\n*\n* @example\n* var res = new Results( 0.0406, 0.05, 9.9901, 4 );\n*\n* var method = res.method;\n* // returns 'Chi-square goodness-of-fit test'\n*/\nsetReadOnly( Results.prototype, 'method', 'Chi-square goodness-of-fit test' );\n\n/**\n* Test p-value.\n*\n* @private\n* @name pValue\n* @memberof Results.prototype\n* @type {number}\n*\n* @example\n* var res = new Results( 0.0406, 0.05, 9.9901, 4 );\n*\n* var pval = res.pValue;\n* // returns 0.0406\n*/\nsetReadOnlyAccessor( Results.prototype, 'pValue', function get() {\n\treturn this._pValue;\n});\n\n/**\n* Boolean indicating the test decision.\n*\n* @private\n* @name rejected\n* @memberof Results.prototype\n* @type {boolean}\n*\n* @example\n* var res = new Results( 0.0406, 0.05, 9.9901, 4 );\n*\n* var bool = res.rejected;\n* // returns true\n*/\nsetReadOnlyAccessor( Results.prototype, 'rejected', function get() {\n\treturn ( this._pValue <= this._alpha );\n});\n\n/**\n* Test statistic.\n*\n* @private\n* @name statistic\n* @memberof Results.prototype\n* @type {number}\n*\n* @example\n* var res = new Results( 0.0406, 0.05, 9.9901, 4 );\n*\n* var stat = res.statistic;\n* // returns 9.9901\n*/\nsetReadOnlyAccessor( Results.prototype, 'statistic', function get() {\n\treturn this._statistic;\n});\n\n/**\n* Serializes a results object as a string.\n*\n* ## Notes\n*\n* -   Example output:\n*\n*     ```text\n*\n*     Chi-square goodness-of-fit test\n*\n*     Null hypothesis: population probabilities are equal to those in p\n*\n*        pValue: 0.0406\n*        statistic: 9.9901\n*        degrees of freedom: 4\n*\n*     Test Decision: Reject null in favor of alternative at 5% significance level\n*\n*     ```\n*\n* @private\n* @name toString\n* @memberof Results.prototype\n* @type {Function}\n* @param {Options} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to show the test decision\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} serialized results\n*\n* @example\n* var res = new Results( 0.0406, 0.05, 9.9901, 4 );\n*\n* var str = res.toString();\n* // returns <string>\n*/\nsetReadOnly( Results.prototype, 'toString', function toString( opts ) {\n\tvar decision;\n\tvar dgts;\n\tvar out;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\tout = [\n\t\tthis.method,\n\t\t'',\n\t\t'',\n\t\t'Null hypothesis: population probabilities are equal to those in p',\n\t\t'',\n\t\t'',\n\t\t'    pValue: ' + roundn( this._pValue, -dgts ),\n\t\t'    statistic: ' + roundn( this._statistic, -dgts ),\n\t\t'    degrees of freedom: ' + this._df,\n\t\t''\n\t];\n\tif ( decision ) {\n\t\tout.push( 'Test Decision: ' + ( ( this.rejected ) ? 'Reject' : 'Fail to reject' ) + ' null in favor of alternative at ' + (this._alpha*100.0) + '% significance level' );\n\t\tout.push( '' );\n\t}\n\treturn out.join( '\\n' );\n});\n\n/**\n* Serializes a results object as a JSON object.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `Results` instance.\n*\n* @private\n* @name toJSON\n* @memberof Results.prototype\n* @type {Function}\n* @returns {Object} serialized object\n*\n* @example\n* var res = new Results( 0.0406, 0.05, 9.9901, 4 );\n*\n* var o = res.toJSON();\n* // returns {'rejected': true, 'alpha': 0.05, 'pValue': 0.0406, 'df': 4, ...}\n*/\nsetReadOnly( Results.prototype, 'toJSON', function toJSON() {\n\treturn {\n\t\t'rejected': this.rejected,\n\t\t'alpha': this._alpha,\n\t\t'pValue': this._pValue,\n\t\t'df': this._df,\n\t\t'statistic': this._statistic,\n\t\t'method': this.method\n\t};\n});\n\n\n// EXPORTS //\n\nmodule.exports = Results;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isndarrayLike = require( '@stdlib/assert/is-ndarray-like' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar absdiff = require( '@stdlib/math/base/utils/absolute-difference' );\nvar FLOAT64_SQRT_EPS = require( '@stdlib/constants/float64/sqrt-eps' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar chisqCDF = require( './../../base/dists/chisquare/cdf' );\nvar format = require( '@stdlib/string/format' );\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar daxpy = require( '@stdlib/blas/base/daxpy' );\nvar dscal = require( '@stdlib/blas/base/dscal' );\nvar dsumpw = require( '@stdlib/blas/ext/base/dsumpw' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar defaults = require( './defaults.js' );\nvar validate = require( './validate.js' );\nvar getPMF = require( './get_pmf.js' );\nvar testStatistic = require( './statistic.js' );\nvar simulate = require( './simulate.js' );\nvar Results = require( './results.js' );\n\n\n// MAIN //\n\n/**\n* Performs a chi-square goodness-of-fit test.\n*\n* @param {(Collection|VectorLike)} x - observation frequencies\n* @param {(Collection|VectorLike|string)} y - expected frequencies or a discrete probability distribution name\n* @param {...number} [args] - probability mass function (PMF) arguments\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {NonNegativeInteger} [options.ddof=0] - degrees of freedom adjustment\n* @param {boolean} [options.simulate=false] - boolean indicating whether to compute p-values by Monte Carlo simulation\n* @param {PositiveInteger} [options.iterations=500] - number of Monte Carlo iterations\n* @throws {TypeError} first argument must be an array-like object or a 1-dimensional array containing nonnegative integers\n* @throws {TypeError} second argument must be either an array-like object (or a 1-dimensional array) of nonnegative numbers, an array-like object (or a 1-dimensional array) of probabilities summing to one, or a discrete probability distribution name\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} first and second arguments must have the same length\n* @throws {Error} first argument must contain at least one element greater than zero\n* @throws {RangeError} significance level must be a number on the interval `[0,1]`\n* @throws {TypeError} probability mass function (PMF) arguments must be numbers\n* @returns {Object} test results\n*\n* @example\n* var x = [ 89, 37, 30, 28, 2 ];\n* var p = [ 0.40, 0.20, 0.20, 0.15, 0.05 ];\n*\n* var out = chi2gof( x, p );\n*\n* var o = out.toJSON();\n* // returns { 'pValue': ~0.0406, 'statistic': ~9.9901, ... }\n*/\nfunction chi2gof( x, y ) {\n\tvar expected;\n\tvar nargs;\n\tvar args;\n\tvar opts;\n\tvar pval;\n\tvar stat;\n\tvar obs;\n\tvar err;\n\tvar pmf;\n\tvar sum;\n\tvar df;\n\tvar N;\n\tvar d;\n\tvar s;\n\tvar o;\n\tvar n;\n\tvar p;\n\tvar v;\n\tvar i;\n\n\tif ( isndarrayLike( x ) && x.ndims === 1 && x.strides.length === 1 ) { // is ndarray-like vector?\n\t\td = x.data;\n\t\ts = x.strides[ 0 ];\n\t\to = x.offset;\n\t} else if ( isCollection( x ) ) {\n\t\td = x;\n\t\ts = 1;\n\t\to = 0;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be either an array-like object or a one-dimensional ndarray. Value: `%s`.', x ) );\n\t}\n\tN = x.length;\n\n\t// Initialize an array for storing a copy of the observations array:\n\tobs = new Float64Array( N+1 ); // Note: `N+1` is intentional in the event that we need to add a remaining category for all values greater than or equal to `N`\n\n\tn = 0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv = d[ o+(s*i) ];\n\t\tif ( !isNonNegativeInteger( v ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must contain nonnegative integers. Index: `%u`. Value: `%s`.', i, v ) );\n\t\t}\n\t\tobs[ i ] = v;\n\t\tn += v;\n\t}\n\tif ( n === 0 ) {\n\t\tthrow new Error( 'invalid argument. First argument must contain at least one element greater than zero (i.e., the total number number of observations must be greater than zero).' );\n\t}\n\t// NOTE: `obs` is now a single-segment contiguous Float64Array\n\n\tnargs = 0;\n\tif ( isString( y ) ) {\n\t\tpmf = getPMF( y );\n\t\tif ( pmf instanceof Error ) {\n\t\t\tthrow pmf;\n\t\t}\n\t\tnargs += pmf.length - 1; // WARNING: this relies on PMF functions having an explicit arity\n\t\targs = [ 0 ];\n\t\tfor ( i = 0; i < nargs; i++ ) {\n\t\t\tv = arguments[ i+2 ];\n\t\t\tif ( !isNumber( v ) || isnan( v ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Probability mass function (PMF) arguments must be numbers. Argument: `%u`. Value: `%s`.', i+2, v ) );\n\t\t\t}\n\t\t\targs.push( v );\n\t\t}\n\t\texpected = new Float64Array( N+1 );\n\t\tsum = 0.0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\targs[ 0 ] = i;\n\t\t\tif ( y === 'discrete-uniform' ) {\n\t\t\t\targs[ 0 ] += args[ 1 ]; // scales the value at which to evaluate the PMF based on the minimum support of the distribution (which should have been provided as the first distribution parameter)\n\t\t\t}\n\t\t\tv = pmf.apply( null, args );\n\t\t\tsum += v;\n\t\t\texpected[ i ] = v * n;\n\t\t}\n\t\t// Check whether we need to add a remaining category for all values greater than or equal to `N`...\n\t\tif ( sum < 1.0 ) {\n\t\t\texpected[ N ] = (1.0-sum) * n;\n\t\t\tN += 1;\n\t\t}\n\t} else {\n\t\tif ( isndarrayLike( y ) && y.ndims === 1 && y.strides.length === 1 ) { // is ndarray-like vector?\n\t\t\td = y.data;\n\t\t\ts = y.strides[ 0 ];\n\t\t\to = y.offset;\n\t\t} else if ( isCollection( y ) ) {\n\t\t\td = y;\n\t\t\ts = 1;\n\t\t\to = 0;\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be either an array-like object (or one-dimensional ndarray) of probabilities summing to one, an array-like object (or one-dimensional ndarray) of expected frequencies, or a discrete probability distribution name. Value: `%s`.', y ) );\n\t\t}\n\t\tif ( y.length !== N ) {\n\t\t\tthrow new RangeError( 'invalid arguments. First and second arguments must have the same length.' );\n\t\t}\n\t\texpected = new Float64Array( N );\n\t\tsum = 0.0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tv = d[ o+(s*i) ];\n\t\t\tif ( !isNumber( v ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must only contain numbers. Index: `%u`. Value: `%s`.', i, v ) );\n\t\t\t}\n\t\t\tif ( v < 0.0 ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must only contain nonnegative numbers. Index: `%u`. Value: `%d`.', i, v ) );\n\t\t\t} else if ( v > 1.0 ) {\n\t\t\t\tsum += PINF;\n\t\t\t} else {\n\t\t\t\tsum += v;\n\t\t\t}\n\t\t\texpected[ i ] = v;\n\t\t}\n\t\t// Check if provided a unity probability array (otherwise, assume provided an expected frequencies array)...\n\t\tif ( absdiff( sum, 1.0 ) <= FLOAT64_SQRT_EPS ) {\n\t\t\tp = y; // NOTE: `y` may not be a Float64Array\n\t\t\texpected = dscal( N, n, expected, 1 );\n\t\t}\n\t}\n\t// NOTE: `expected` is now a single-segment contiguous Float64Array\n\n\topts = defaults();\n\tif ( arguments.length > 2+nargs ) {\n\t\terr = validate( opts, arguments[ 2+nargs ] );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tstat = testStatistic( N, obs, 1, expected, 1 ); // TODO: consider replacing with low-level double-precision strided interface\n\tif ( opts.simulate ) {\n\t\tif ( p === void 0 ) {\n\t\t\tv = dsumpw( N, expected, 1 );\n\t\t\tp = daxpy( N, 1.0/v, expected, 1, new Float64Array( N ), 1 );\n\t\t}\n\t\tpval = simulate( N, expected, p, stat, n, opts.iterations );\n\t} else {\n\t\tdf = N - 1 - opts.ddof;\n\t\tpval = 1.0 - chisqCDF( stat, df );\n\t}\n\treturn new Results( pval, opts.alpha, stat, ( df === void 0 ) ? null : df );\n}\n\n\n// EXPORTS //\n\nmodule.exports = chi2gof;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Chi-square goodness-of-fit test.\n*\n* @module @stdlib/stats/chi2gof\n*\n* @example\n* var chi2gof = require( '@stdlib/stats/chi2gof' );\n* var x = [ 89, 37, 30, 28, 2 ];\n* var p = [ 0.40, 0.20, 0.20, 0.15, 0.05 ];\n*\n* var out = chi2gof( x, p );\n*\n* var o = out.toJSON();\n* // returns { 'pValue': ~0.0406, 'statistic': ~9.9901, ... }\n*\n* var table = out.toString();\n* /*\n* Null hypothesis: population probabilities are equal to those in p\n*\n*     pValue: 0.0406\n*     statistic: 9.9901\n*     degrees of freedom: 4\n*\n* Test Decision: Reject null in favor of alternative at 5% significance level\n* /*\n*/\n\n// MODULES //\n\nvar chi2gof = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = chi2gof;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only nonnegative integers.\n*\n* @module @stdlib/assert/is-nonnegative-integer-array\n*\n* @example\n* var isNonNegativeIntegerArray = require( '@stdlib/assert/is-nonnegative-integer-array' );\n*\n* var bool = isNonNegativeIntegerArray( [ 3.0, new Number(3.0) ] );\n* // returns true\n*\n* bool = isNonNegativeIntegerArray( [ 3.0, '3.0' ] );\n* // returns false\n*\n* @example\n* var isNonNegativeIntegerArray = require( '@stdlib/assert/is-nonnegative-integer-array' ).primitives;\n*\n* var bool = isNonNegativeIntegerArray( [ 1.0, 0.0, 10.0 ] );\n* // returns true\n*\n* bool = isNonNegativeIntegerArray( [ 3.0, new Number(1.0) ] );\n* // returns false\n*\n* @example\n* var isNonNegativeIntegerArray = require( '@stdlib/assert/is-nonnegative-integer-array' ).objects;\n*\n* var bool = isNonNegativeIntegerArray( [ new Number(3.0), new Number(1.0) ] );\n* // returns true\n*\n* bool = isNonNegativeIntegerArray( [ 1.0, 0.0, 10.0 ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNonNegativeInteger = require( './../../is-nonnegative-integer' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\n\n\n// MAIN //\n\nvar isNonNegativeIntegerArray = arrayfun( isNonNegativeInteger );\nsetReadOnly( isNonNegativeIntegerArray, 'primitives', arrayfun( isNonNegativeInteger.isPrimitive ) );\nsetReadOnly( isNonNegativeIntegerArray, 'objects', arrayfun( isNonNegativeInteger.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeIntegerArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isndarrayLike = require( './../../is-ndarray-like' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a 2-dimensional ndarray-like object.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a 2-dimensional ndarray-like object\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var arr = ndarray( 'generic', [ 0, 0, 0, 0 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n*\n* var bool = isMatrixLike( arr );\n* // returns true\n*\n* bool = isMatrixLike( [] );\n* // returns false\n*/\nfunction isMatrixLike( v ) {\n\treturn (\n\t\tisndarrayLike( v ) &&\n\t\tv.ndims === 2 &&\n\t\tv.shape.length === 2 &&\n\t\tv.strides.length === 2\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isMatrixLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a 2-dimensional ndarray-like object.\n*\n* @module @stdlib/assert/is-matrix-like\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var isMatrixLike = require( '@stdlib/assert/is-matrix-like' );\n*\n* var arr = ndarray( 'float64', [ 0, 0, 0, 0 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n*\n* var bool = isMatrixLike( arr );\n* // returns true\n*\n* bool = isMatrixLike( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isMatrixLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isMatrixLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array of arrays.\n*\n* @module @stdlib/assert/is-array-array\n*\n* @example\n* var isArrayArray = require( '@stdlib/assert/is-array-array' );\n*\n* var bool = isArrayArray( [ [], [] ] );\n* // returns true\n*\n* bool = isArrayArray( [ {}, {} ] );\n* // returns false\n*\n* bool = isArrayArray( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isArrayArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isArrayArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar arrayfun = require( './../../tools/array-function' );\nvar isArray = require( './../../is-array' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array of arrays.\n*\n* @name isArrayArray\n* @type {Function}\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an array of arrays\n*\n* @example\n* var bool = isArrayArray( [ [], [] ] );\n* // returns true\n*\n* bool = isArrayArray( [ {}, {} ] );\n* // returns false\n*\n* bool = isArrayArray( [] );\n* // returns false\n*/\nvar isArrayArray = arrayfun( isArray );\n\n\n// EXPORTS //\n\nmodule.exports = isArrayArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Generates a stride array from an array shape (row-major).\n*\n* @private\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {Array} array strides\n*/\nfunction rowmajor( shape ) {\n\tvar ndims;\n\tvar out;\n\tvar s;\n\tvar i;\n\n\tndims = shape.length;\n\tout = [];\n\tfor ( i = 0; i < ndims; i++ ) {\n\t\tout.push( 0 );\n\t}\n\ts = 1;\n\tfor ( i = ndims-1; i >= 0; i-- ) {\n\t\tout[ i ] = s;\n\t\ts *= shape[ i ];\n\t}\n\treturn out;\n}\n\n/**\n* Generates a stride array from an array shape (column-major).\n*\n* @private\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {Array} array strides\n*/\nfunction columnmajor( shape ) {\n\tvar out;\n\tvar s;\n\tvar i;\n\n\tout = [];\n\ts = 1;\n\tfor ( i = 0; i < shape.length; i++ ) {\n\t\tout.push( s );\n\t\ts *= shape[ i ];\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Generates a stride array from an array shape.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {string} order - specifies whether an array is row-major (C-style) or column-major (Fortran-style)\n* @returns {Array} array strides\n*\n* @example\n* var s = shape2strides( [ 3, 2 ], 'row-major' );\n* // returns [ 2, 1 ]\n*\n* s = shape2strides( [ 3, 2 ], 'column-major' );\n* // returns [ 1, 3 ]\n*/\nfunction shape2strides( shape, order ) {\n\tif ( order === 'column-major' ) {\n\t\treturn columnmajor( shape );\n\t}\n\treturn rowmajor( shape );\n}\n\n\n// EXPORTS //\n\nmodule.exports = shape2strides;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Generates a stride array from an array shape (row-major).\n*\n* @private\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {(Array|TypedArray|Object)} out - output object\n* @returns {(Array|TypedArray|Object)} array strides\n*/\nfunction rowmajor( shape, out ) {\n\tvar ndims;\n\tvar s;\n\tvar i;\n\n\tndims = shape.length;\n\ts = 1;\n\tfor ( i = ndims-1; i >= 0; i-- ) {\n\t\tout[ i ] = s;\n\t\ts *= shape[ i ];\n\t}\n\treturn out;\n}\n\n/**\n* Generates a stride array from an array shape (column-major).\n*\n* @private\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {(Array|TypedArray|Object)} out - output object\n* @returns {(Array|TypedArray|Object)} array strides\n*/\nfunction columnmajor( shape, out ) {\n\tvar s;\n\tvar i;\n\n\ts = 1;\n\tfor ( i = 0; i < shape.length; i++ ) {\n\t\tout[ i ] = s;\n\t\ts *= shape[ i ];\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Generates a stride array from an array shape.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {string} order - specifies whether an array is row-major (C-style) or column-major (Fortran-style)\n* @param {(Array|TypedArray|Object)} out - output object\n* @returns {(Array|TypedArray|Object)} array strides\n*\n* @example\n* var strides = [ 0, 0 ];\n*\n* var out = shape2strides( [ 3, 2 ], 'row-major', strides );\n* // returns [ 2, 1 ]\n*\n* var bool = ( out === strides );\n* // returns true\n*\n* out = shape2strides( [ 3, 2 ], 'column-major', strides );\n* // returns [ 1, 3 ]\n*/\nfunction shape2strides( shape, order, out ) {\n\tif ( order === 'column-major' ) {\n\t\treturn columnmajor( shape, out );\n\t}\n\treturn rowmajor( shape, out );\n}\n\n\n// EXPORTS //\n\nmodule.exports = shape2strides;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate a stride array from an array shape.\n*\n* @module @stdlib/ndarray/base/shape2strides\n*\n* @example\n* var shape2strides = require( '@stdlib/ndarray/base/shape2strides' );\n*\n* var strides = shape2strides( [ 3, 2 ], 'row-major' );\n* // returns [ 2, 1 ]\n*\n* strides = shape2strides( [ 3, 2 ], 'column-major' );\n* // returns [ 1, 3 ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar assign = require( './assign.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the index offset which specifies the location of the first indexed value in a multidimensional array based on a stride array.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - stride array\n* @returns {NonNegativeInteger} offset - offset\n*\n* @example\n* var shape = [ 2, 3, 10 ];\n* var strides = [ 30, -10, 1 ];\n*\n* var offset = strides2offset( shape, strides );\n* // returns 20\n*/\nfunction strides2offset( shape, strides ) {\n\tvar offset;\n\tvar ndims;\n\tvar i;\n\n\tndims = shape.length;\n\toffset = 0;\n\tfor ( i = 0; i < ndims; i++ ) {\n\t\tif ( strides[ i ] < 0 ) {\n\t\t\t// Note that, since the stride is negative, this operation increments, not decrements, the offset...\n\t\t\toffset -= strides[ i ] * ( shape[ i ]-1 );\n\t\t}\n\t}\n\treturn offset;\n}\n\n\n// EXPORTS //\n\nmodule.exports = strides2offset;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine the index offset which specifies the location of the first indexed value in a multidimensional array based on a stride array.\n*\n* @module @stdlib/ndarray/strides2offset\n*\n* @example\n* var strides2offset = require( '@stdlib/ndarray/base/strides2offset' );\n*\n* var shape = [ 2, 3, 10 ];\n* var strides = [ 30, -10, 1 ];\n*\n* var offset = strides2offset( shape, strides );\n* // returns 20\n*/\n\n// MODULES //\n\nvar strides2offset = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = strides2offset;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the number of elements in an array.\n*\n* @module @stdlib/ndarray/base/numel\n*\n* @example\n* var numel = require( '@stdlib/ndarray/base/numel' );\n*\n* var n = numel( [ 3, 3, 3 ] );\n* // returns 27\n*/\n\n// MODULES //\n\nvar numel = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = numel;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the number of elements in an array.\n*\n* @param {(NonNegativeIntegerArray|EmptyArray)} shape - array shape\n* @returns {NonNegativeInteger} number of elements\n*\n* @example\n* var n = numel( [ 3, 3, 3 ] );\n* // returns 27\n*/\nfunction numel( shape ) {\n\tvar ndims;\n\tvar n;\n\tvar i;\n\n\tndims = shape.length;\n\tif ( ndims === 0 ) {\n\t\treturn 0;\n\t}\n\tn = 1;\n\tfor ( i = 0; i < ndims; i++ ) {\n\t\tn *= shape[ i ];\n\t}\n\treturn n;\n}\n\n\n// EXPORTS //\n\nmodule.exports = numel;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar orders = require( './../../../../orders' );\n\n\n// VARIABLES //\n\nvar ORDERS = orders();\nvar len = ORDERS.length;\n\n\n// MAIN //\n\n/**\n* Tests whether an input value is an ndarray order.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating whether an input value is an ndarray order\n*\n* @example\n* var bool = isOrder( 'row-major' );\n* // returns true\n*\n* bool = isOrder( 'column-major' );\n* // returns true\n*\n* bool = isOrder( 'foo' );\n* // returns false\n*/\nfunction isOrder( v ) {\n\tvar i;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( v === ORDERS[ i ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isOrder;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an input value is an ndarray order.\n*\n* @module @stdlib/ndarray/base/assert/is-order\n*\n* @example\n* var isOrder = require( '@stdlib/ndarray/base/assert/is-order' );\n*\n* var bool = isOrder( 'row-major' );\n* // returns true\n*\n* bool = isOrder( 'column-major' );\n* // returns true\n*\n* bool = isOrder( 'foo' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isOrder = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isOrder;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar dtypes = require( './../../../../dtypes' );\n\n\n// VARIABLES //\n\nvar DTYPES = dtypes();\nvar len = DTYPES.length;\n\n\n// MAIN //\n\n/**\n* Tests whether an input value is a supported ndarray data type.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating whether an input value is a supported ndarray data type\n*\n* @example\n* var bool = isDataType( 'binary' );\n* // returns true\n*\n* bool = isDataType( 'float32' );\n* // returns true\n*\n* bool = isDataType( 'float64' );\n* // returns true\n*\n* bool = isDataType( 'generic' );\n* // returns true\n*\n* bool = isDataType( 'int16' );\n* // returns true\n*\n* bool = isDataType( 'int32' );\n* // returns true\n*\n* bool = isDataType( 'int8' );\n* // returns true\n*\n* bool = isDataType( 'uint16' );\n* // returns true\n*\n* bool = isDataType( 'uint32' );\n* // returns true\n*\n* bool = isDataType( 'uint8' );\n* // returns true\n*\n* bool = isDataType( 'uint8c' );\n* // returns true\n*\n* bool = isDataType( 'foo' );\n* // returns false\n*/\nfunction isDataType( v ) {\n\tvar i;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( v === DTYPES[ i ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isDataType;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an input value is a supported ndarray data type.\n*\n* @module @stdlib/ndarray/base/assert/is-data-type\n*\n* @example\n* var isDataType = require( '@stdlib/ndarray/base/assert/is-data-type' );\n*\n* var bool = isDataType( 'binary' );\n* // returns true\n*\n* bool = isDataType( 'float32' );\n* // returns true\n*\n* bool = isDataType( 'float64' );\n* // returns true\n*\n* bool = isDataType( 'generic' );\n* // returns true\n*\n* bool = isDataType( 'int16' );\n* // returns true\n*\n* bool = isDataType( 'int32' );\n* // returns true\n*\n* bool = isDataType( 'int8' );\n* // returns true\n*\n* bool = isDataType( 'uint16' );\n* // returns true\n*\n* bool = isDataType( 'uint32' );\n* // returns true\n*\n* bool = isDataType( 'uint8' );\n* // returns true\n*\n* bool = isDataType( 'uint8c' );\n* // returns true\n*\n* bool = isDataType( 'foo' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isDataType = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isDataType;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a boolean indicating if a buffer length is compatible with provided ndarray meta data.\n*\n* @module @stdlib/ndarray/base/assert/is-stride-offset-buffer-compatible\n*\n* @example\n* var isBufferLengthCompatible = require( '@stdlib/ndarray/base/assert/is-buffer-length-compatible' );\n*\n* var shape = [ 2, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var bool = isBufferLengthCompatible( 4, shape, strides, offset );\n* // returns true\n*\n* @example\n* var isBufferLengthCompatible = require( '@stdlib/ndarray/base/assert/is-buffer-length-compatible' );\n*\n* var shape = [ 2, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 2;\n*\n* var bool = isBufferLengthCompatible( 4, shape, strides, offset );\n* // returns false\n*/\n\n// MODULES //\n\nvar isBufferLengthCompatible = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isBufferLengthCompatible;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar minmax = require( './../../../../base/minmax-view-buffer-index' );\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if a buffer length is compatible with provided ndarray meta data.\n*\n* @param {NonNegativeInteger} len - buffer length\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - stride array\n* @param {NonNegativeInteger} offset - index offset\n* @returns {boolean} boolean indicating if a buffer length is compatible\n*\n* @example\n* var shape = [ 2, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var bool = isBufferLengthCompatible( 4, shape, strides, offset );\n* // returns true\n*\n* @example\n* var shape = [ 2, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 2;\n*\n* var bool = isBufferLengthCompatible( 4, shape, strides, offset );\n* // returns false\n*/\nfunction isBufferLengthCompatible( len, shape, strides, offset ) {\n\t// Determine the minimum and maximum linear indices which are accessible by the array view:\n\tvar buf = minmax( shape, strides, offset );\n\n\t// If the indices are \"inbounds\", then the buffer length is compatible:\n\treturn ( buf[ 0 ] >= 0 && buf[ 1 ] < len );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBufferLengthCompatible;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar builtin = require( './native.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar createObject;\nif ( typeof builtin === 'function' ) {\n\tcreateObject = builtin;\n} else {\n\tcreateObject = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = createObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nmodule.exports = Object.create;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Dummy constructor.\n*\n* @private\n*/\nfunction Ctor() {\n\t// Empty...\n}\n\n\n// MAIN //\n\n/**\n* An `Object.create` shim for older JavaScript engines.\n*\n* @private\n* @param {Object} proto - prototype\n* @returns {Object} created object\n*\n* @example\n* var obj = createObject( Object.prototype );\n* // returns {}\n*/\nfunction createObject( proto ) {\n\tCtor.prototype = proto;\n\treturn new Ctor();\n}\n\n\n// EXPORTS //\n\nmodule.exports = createObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './../../define-property' );\nvar format = require( '@stdlib/string/format' );\nvar validate = require( './validate.js' );\nvar createObject = require( './detect.js' );\n\n\n// MAIN //\n\n/**\n* Implements prototypical inheritance by replacing the prototype of one constructor with the prototype of another constructor.\n*\n* ## Notes\n*\n* -   This implementation is not designed to work with ES2015/ES6 classes. For ES2015/ES6 classes, use `class` with `extends`.\n* -   For reference, see [node#3455](https://github.com/nodejs/node/pull/3455), [node#4179](https://github.com/nodejs/node/issues/4179), [node#3452](https://github.com/nodejs/node/issues/3452), and [node commit](https://github.com/nodejs/node/commit/29da8cf8d7ab8f66b9091ab22664067d4468461e#diff-3deb3f32958bb937ae05c6f3e4abbdf5).\n*\n*\n* @param {(Object|Function)} ctor - constructor which will inherit\n* @param {(Object|Function)} superCtor - super (parent) constructor\n* @throws {TypeError} first argument must be either an object or a function which can inherit\n* @throws {TypeError} second argument must be either an object or a function from which a constructor can inherit\n* @throws {TypeError} second argument must have an inheritable prototype\n* @returns {(Object|Function)} child constructor\n*\n* @example\n* function Foo() {\n*     return this;\n* }\n* Foo.prototype.beep = function beep() {\n*     return 'boop';\n* };\n*\n* function Bar() {\n*     Foo.call( this );\n*     return this;\n* }\n* inherit( Bar, Foo );\n*\n* var bar = new Bar();\n* var v = bar.beep();\n* // returns 'boop'\n*/\nfunction inherit( ctor, superCtor ) {\n\tvar err = validate( ctor );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\terr = validate( superCtor );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tif ( typeof superCtor.prototype === 'undefined' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must have a prototype from which another object can inherit. Value: `%s`.', superCtor.prototype ) );\n\t}\n\t// Create a prototype which inherits from the parent prototype:\n\tctor.prototype = createObject( superCtor.prototype );\n\n\t// Set the constructor to refer to the child constructor:\n\tdefineProperty( ctor.prototype, 'constructor', {\n\t\t'configurable': true,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': ctor\n\t});\n\n\treturn ctor;\n}\n\n\n// EXPORTS //\n\nmodule.exports = inherit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests that a value is a valid constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {(Error|null)} error object or null\n*\n* @example\n* var ctor = function ctor() {};\n*\n* var err = validate( ctor );\n* // returns null\n*\n* err = validate( null );\n* // returns <TypeError>\n*/\nfunction validate( value ) {\n\tvar type = typeof value;\n\tif (\n\t\tvalue === null ||\n\t\t(type !== 'object' && type !== 'function')\n\t) {\n\t\treturn new TypeError( format( 'invalid argument. A provided constructor must be either an object (except null) or a function. Value: `%s`.', value ) );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Restrict an index to the interval `[0,max]`.\n*\n* @module @stdlib/ndarray/base/clamp-index\n*\n* @example\n* var clampIndex = require( '@stdlib/ndarray/base/clamp-index' );\n*\n* var idx = clampIndex( -1, 10 );\n* // returns 0\n*\n* idx = clampIndex( 15, 10 );\n* // returns 10\n*\n* idx = clampIndex( 5, 10 );\n* // returns 5\n*/\n\n// MODULES //\n\nvar clampIndex = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = clampIndex;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Restricts an index to the interval `[0,max]`.\n*\n* @param {integer} idx - index\n* @param {NonNegativeInteger} max - maximum index\n* @returns {NonNegativeInteger} index\n*\n* @example\n* var idx = clampIndex( -1, 10 );\n* // returns 0\n*\n* idx = clampIndex( 15, 10 );\n* // returns 10\n*\n* idx = clampIndex( 5, 10 );\n* // returns 5\n*/\nfunction clampIndex( idx, max ) {\n\tif ( idx < 0 ) {\n\t\treturn 0;\n\t}\n\tif ( idx > max ) {\n\t\treturn max;\n\t}\n\treturn idx;\n}\n\n\n// EXPORTS //\n\nmodule.exports = clampIndex;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Wrap an index on the interval `[0,max]`.\n*\n* @module @stdlib/ndarray/base/wrap-index\n*\n* @example\n* var wrapIndex = require( '@stdlib/ndarray/base/wrap-index' );\n*\n* var idx = wrapIndex( -1, 10 );\n* // returns 10\n*\n* idx = wrapIndex( 14, 10 );\n* // returns 3\n*\n* idx = wrapIndex( 6, 10 );\n* // returns 6\n*/\n\n// MODULES //\n\nvar wrapIndex = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = wrapIndex;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Wraps an index on the interval `[0,max]`.\n*\n* @param {integer} idx - index\n* @param {NonNegativeInteger} max - maximum index\n* @returns {NonNegativeInteger} index\n*\n* @example\n* var idx = wrapIndex( -1, 10 );\n* // returns 10\n*\n* idx = wrapIndex( 13, 10 );\n* // returns 2\n*\n* idx = wrapIndex( 6, 10 );\n* // returns 6\n*/\nfunction wrapIndex( idx, max ) {\n\tvar mp1 = max + 1;\n\tif ( idx < 0 ) {\n\t\tidx += mp1; // slight optimization to avoid modulo arithmetic when |idx| <= max+1\n\t\tif ( idx < 0 ) {\n\t\t\tidx %= mp1;\n\t\t\tif ( idx !== 0 ) {\n\t\t\t\tidx += mp1;\n\t\t\t}\n\t\t}\n\t\treturn idx;\n\t}\n\tif ( idx > max ) {\n\t\tidx -= mp1; // slight optimization to avoid modulo arithmetic when max+1 < idx <= 2*(max+1)\n\t\tif ( idx > max ) {\n\t\t\tidx %= mp1;\n\t\t}\n\t\treturn idx;\n\t}\n\treturn idx;\n}\n\n\n// EXPORTS //\n\nmodule.exports = wrapIndex;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an index given an index mode.\n*\n* @module @stdlib/ndarray/base/ind\n*\n* @example\n* var ind = require( '@stdlib/ndarray/base/ind' );\n*\n* var idx = ind( -1, 10, 'wrap' );\n* // returns 10\n*\n* idx = ind( 14, 10, 'wrap' );\n* // returns 3\n*\n* idx = ind( 6, 10, 'wrap' );\n* // returns 6\n*\n* @example\n* var ind = require( '@stdlib/ndarray/base/ind' );\n*\n* var idx = ind( -1, 10, 'clamp' );\n* // returns 0\n*\n* idx = ind( 14, 10, 'clamp' );\n* // returns 10\n*\n* idx = ind( 6, 10, 'clamp' );\n* // returns 6\n*\n* @example\n* var ind = require( '@stdlib/ndarray/base/ind' );\n*\n* var idx = ind( 1, 10, 'throw' );\n* // returns 1\n*\n* idx = ind( 14, 10, 'throw' );\n* // throws <RangeError>\n*\n* idx = ind( -1, 10, 'throw' );\n* // throws <RangeError>\n*/\n\n// MODULES //\n\nvar ind = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ind;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar clampIndex = require( './../../../base/clamp-index' );\nvar wrapIndex = require( './../../../base/wrap-index' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an index given an index mode.\n*\n* @param {integer} idx - index\n* @param {NonNegativeInteger} max - maximum index\n* @param {string} mode - specifies how to handle an index outside the interval `[0,max]`\n* @throws {RangeError} index out-of-bounds\n* @returns {integer} index\n*\n* @example\n* var idx = ind( 2, 9, 'clamp' );\n* // returns 2\n*\n* idx = ind( 10, 9, 'clamp' );\n* // returns 9\n*\n* idx = ind( -1, 9, 'clamp' );\n* // returns 0\n*\n* @example\n* var idx = ind( 2, 9, 'wrap' );\n* // returns 2\n*\n* idx = ind( 10, 9, 'wrap' );\n* // returns 0\n*\n* idx = ind( -1, 9, 'wrap' );\n* // returns 9\n*\n* @example\n* var idx = ind( 2, 9, 'throw' );\n* // returns 2\n*\n* idx = ind( 10, 9, 'throw' );\n* // throws <RangeError>\n*\n* idx = ind( -1, 9, 'throw' );\n* // throws <RangeError>\n*/\nfunction ind( idx, max, mode ) {\n\tif ( mode === 'clamp' ) {\n\t\treturn clampIndex( idx, max );\n\t}\n\tif ( mode === 'wrap' ) {\n\t\treturn wrapIndex( idx, max );\n\t}\n\tif ( idx < 0 || idx > max ) {\n\t\tthrow new RangeError( format( 'invalid argument. Index must be on the interval: [0, %f]. Value: `%f`.', max, idx ) );\n\t}\n\treturn idx;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ind;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an input value is a supported ndarray index mode.\n*\n* @module @stdlib/ndarray/base/assert/is-index-mode\n*\n* @example\n* var isIndexMode = require( '@stdlib/ndarray/base/assert/is-index-mode' );\n*\n* var bool = isIndexMode( 'wrap' );\n* // returns true\n*\n* bool = isIndexMode( 'clamp' );\n* // returns true\n*\n* bool = isIndexMode( 'throw' );\n* // returns true\n*\n* bool = isIndexMode( 'foo' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isIndexMode = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isIndexMode;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar modes = require( './../../../../index-modes' );\n\n\n// VARIABLES //\n\nvar MODES = modes();\nvar len = MODES.length;\n\n\n// MAIN //\n\n/**\n* Tests whether an input value is a supported ndarray index mode.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating whether an input value is a supported ndarray index mode\n*\n* @example\n* var bool = isIndexMode( 'wrap' );\n* // returns true\n*\n* bool = isIndexMode( 'clamp' );\n* // returns true\n*\n* bool = isIndexMode( 'throw' );\n* // returns true\n*\n* bool = isIndexMode( 'foo' );\n* // returns false\n*/\nfunction isIndexMode( v ) {\n\tvar i;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( v === MODES[ i ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isIndexMode;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isNonNegativeIntegerArray = require( '@stdlib/assert/is-nonnegative-integer-array' ).primitives;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isIntegerArray = require( '@stdlib/assert/is-integer-array' ).primitives;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isOrder = require( './../../base/assert/is-order' );\nvar isDataType = require( './../../base/assert/is-data-type' );\nvar isBufferLengthCompatible = require( './../../base/assert/is-buffer-length-compatible' );\nvar numel = require( './../../base/numel' );\nvar parent = require( './../../base/ctor' ); // eslint-disable-line stdlib/no-redeclare\nvar inherit = require( '@stdlib/utils/inherit' );\nvar format = require( '@stdlib/string/format' );\nvar defaults = require( './defaults.json' );\nvar iget = require( './iget.js' );\nvar iset = require( './iset.js' );\nvar get = require( './get.js' );\nvar set = require( './set.js' );\nvar copy = require( './copy_array.js' );\nvar validate = require( './validate.js' );\n\n\n// VARIABLES //\n\n/*\n* See the following references:\n*\n* -  https://stackoverflow.com/questions/22747068/is-there-a-max-number-of-arguments-javascript-functions-can-accept\n* -  https://bugs.webkit.org/show_bug.cgi?id=80797\n* -  https://github.com/numpy/numpy/issues/5744\n*\n* Note that the maximum number of function arguments can vary from engine to engine. Here, we choose something of a lowest common denominator which may **not** be valid everywhere.\n*/\nvar MAX_DIMS = 32767|0;\n\n\n// MAIN //\n\n/**\n* ndarray constructor.\n*\n* @constructor\n* @param {string} dtype - data type\n* @param {Collection} buffer - data buffer\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - array strides\n* @param {NonNegativeInteger} offset - index offset\n* @param {string} order - specifies whether an array is row-major (C-style) or column-major (Fortran-style)\n* @param {Options} [options] - function options\n* @param {string} [options.mode=\"throw\"] - specifies how to handle indices which exceed array dimensions\n* @param {StringArray} [options.submode=[\"throw\"]] - specifies how to handle subscripts which exceed array dimensions on a per dimension basis\n* @param {boolean} [options.readonly=false] - boolean indicating whether an array should be read-only\n* @throws {TypeError} `dtype` argument must be a supported ndarray data type\n* @throws {TypeError} `buffer` argument must be an array-like object, typed-array-like, or a Buffer\n* @throws {TypeError} `buffer` argument `get` and `set` properties must be functions\n* @throws {TypeError} `shape` argument must be an array-like object containing nonnegative integers\n* @throws {Error} `shape` argument length must equal the number of dimensions\n* @throws {TypeError} `strides` argument must be an array-like object containing integers\n* @throws {Error} `strides` argument length must equal the number of dimensions (except for zero-dimensional arrays; in which case, the `strides` argument length must be equal to `1`)\n* @throws {Error} for zero-dimensional ndarrays, the `strides` argument must contain a single element equal to `0`\n* @throws {TypeError} `offset` argument must be a nonnegative integer\n* @throws {TypeError} `order` argument must be a supported ndarray order\n* @throws {Error} `buffer` argument must be compatible with specified meta data\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} too many dimensions\n* @returns {ndarray} ndarray instance\n*\n* @example\n* var buffer = [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var out = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*/\nfunction ndarray( dtype, buffer, shape, strides, offset, order, options ) {\n\tvar ndims;\n\tvar opts;\n\tvar err;\n\tvar sh;\n\tvar st;\n\n\tif ( !(this instanceof ndarray) ) {\n\t\tif ( arguments.length < 7 ) {\n\t\t\treturn new ndarray( dtype, buffer, shape, strides, offset, order );\n\t\t}\n\t\treturn new ndarray( dtype, buffer, shape, strides, offset, order, options ); // eslint-disable-line max-len\n\t}\n\tif ( !isDataType( dtype ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a supported ndarray data type. Value: `%s`.', dtype ) );\n\t}\n\tif ( !isCollection( buffer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object, typed-array-like, or a Buffer. Value: `%s`.', buffer ) );\n\t} else if ( buffer.get && buffer.set && ( !isFunction( buffer.get ) || !isFunction( buffer.set ) ) ) { // eslint-disable-line max-len\n\t\tthrow new TypeError( format( 'invalid argument. Second argument `get` and `set` properties must be functions. Value: `%s`.', buffer ) );\n\t}\n\tif ( !isNonNegativeIntegerArray( shape ) ) {\n\t\tif ( !isCollection( shape) || shape.length > 0 ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an array-like object containing nonnegative integers. Value: `%s`.', shape ) );\n\t\t}\n\t}\n\tndims = shape.length;\n\tif ( ndims > MAX_DIMS ) {\n\t\tthrow new RangeError( format( 'invalid argument. Number of dimensions must not exceed %u due to stack limits. Value: `%u`.', MAX_DIMS, ndims ) );\n\t}\n\tif ( !isIntegerArray( strides ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be an array-like object containing integers. Value: `%s`.', strides ) );\n\t}\n\tif ( ndims > 0 ) {\n\t\tif ( strides.length !== ndims ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Fourth argument length must match the number of dimensions. Expected number of dimensions: `%u`. Strides length: `%u`.', ndims, strides.length ) );\n\t\t}\n\t} else if ( strides.length !== 1 ) {\n\t\tthrow new RangeError( 'invalid argument. Fourth argument length must be equal to 1 when creating a zero-dimensional ndarray.' );\n\t} else if ( strides[ 0 ] !== 0 ) {\n\t\tthrow new RangeError( format( 'invalid argument. Fourth argument must contain a single element equal to 0. Value: `%d`.', strides[ 0 ] ) );\n\t}\n\tif ( !isNonNegativeInteger( offset ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be a nonnegative integer. Value: `%s`.', offset ) );\n\t}\n\tif ( !isOrder( order ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Sixth argument must be a supported order. Value: `%s`.', order ) );\n\t}\n\tif ( ndims > 0 && !isBufferLengthCompatible( buffer.length, shape, strides, offset ) && numel( shape ) > 0 ) { // eslint-disable-line max-len\n\t\tthrow new Error( 'invalid arguments. Input buffer is incompatible with the specified meta data. Ensure that the offset is valid with regard to the strides array and that the buffer has enough elements to satisfy the desired array shape.' );\n\t}\n\topts = {};\n\topts.mode = defaults.mode;\n\topts.readonly = defaults.readonly;\n\tif ( arguments.length > 6 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tthis._mode = opts.mode;\n\tif ( opts.submode === void 0 ) {\n\t\topts.submode = [ this._mode ];\n\t}\n\tthis._submode = opts.submode;\n\n\t// Copy `shape` and `strides` to prevent external mutation:\n\tsh = copy( shape, ndims );\n\tst = copy( strides, ndims || 1 );\n\n\t// Call the parent constructor:\n\tparent.call( this, dtype, buffer, sh, st, offset, order );\n\tthis._flags.READONLY = opts.readonly;\n\n\treturn this;\n\n\t/* eslint-enable no-invalid-this */\n}\n\n// Inherit from the parent constructor:\ninherit( ndarray, parent );\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof ndarray\n* @type {string}\n* @default 'ndarray'\n*\n* @example\n* var str = ndarray.name;\n* // returns 'ndarray'\n*/\nsetReadOnly( ndarray, 'name', 'ndarray' );\n\n/**\n* Returns an array element.\n*\n* ## Notes\n*\n* -   The number of indices should **equal** the number of dimensions. Accordingly, for zero-dimensional arrays, no indices should be provided.\n*\n* @name get\n* @memberof ndarray.prototype\n* @type {Function}\n* @param {...integer} [idx] - indices\n* @returns {*} array element\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var v = x.get( 1, 1 );\n* // returns 4\n*/\nsetReadOnly( ndarray.prototype, 'get', get );\n\n/**\n* Returns an array element located at a specified linear index.\n*\n* ## Notes\n*\n* -   For zero-dimensional arrays, the input argument is ignored and, for clarity, should not be provided.\n*\n* @name iget\n* @memberof ndarray.prototype\n* @type {Function}\n* @param {integer} [idx] - linear index\n* @returns {*} array element\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var v = x.iget( 3 );\n* // returns 4\n*/\nsetReadOnly( ndarray.prototype, 'iget', iget );\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   The number of indices should **equal** the number of dimensions. Accordingly, for zero-dimensional arrays, no indices should be provided.\n*\n* @name set\n* @memberof ndarray.prototype\n* @type {Function}\n* @param {...integer} [idx] - indices\n* @param {*} v - value to set\n* @returns {ndarray} ndarray instance\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var v = x.get( 1, 1 );\n* // returns 4\n*\n* x.set( 1, 1, 10 );\n*\n* var b = x.data;\n* // returns [ 1, 2, 3, 10, 5, 6 ]\n*\n* v = x.get( 1, 1 );\n* // returns 10\n*/\nsetReadOnly( ndarray.prototype, 'set', set );\n\n/**\n* Sets an array element located at a specified linear index.\n*\n* ## Notes\n*\n* -   For zero-dimensional arrays, the first, and only, argument should be the value to set.\n*\n* @name iset\n* @memberof ndarray.prototype\n* @type {Function}\n* @param {integer} [idx] - linear index\n* @param {*} v - value to set\n* @returns {ndarray} ndarray instance\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var v = x.iget( 3 );\n* // returns 4\n*\n* x.iset( 3, 10 );\n*\n* var b = x.data;\n* // returns [ 1, 2, 3, 10, 5, 6 ]\n*\n* v = x.iget( 3 );\n* // returns 10\n*/\nsetReadOnly( ndarray.prototype, 'iset', iset );\n\n\n// EXPORTS //\n\nmodule.exports = ndarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only integers.\n*\n* @module @stdlib/assert/is-integer-array\n*\n* @example\n* var isIntegerArray = require( '@stdlib/assert/is-integer-array' );\n*\n* var bool = isIntegerArray( [ -3.0, new Number(0.0), 2.0 ] );\n* // returns true\n*\n* bool = isIntegerArray( [ -3.0, '3.0' ] );\n* // returns false\n*\n* @example\n* var isIntegerArray = require( '@stdlib/assert/is-integer-array' ).primitives;\n*\n* var bool = isIntegerArray( [ -1.0, 10.0 ] );\n* // returns true\n*\n* bool = isIntegerArray( [ -1.0, 0.0, 5.0 ] );\n* // returns true\n*\n* bool = isIntegerArray( [ -3.0, new Number(-1.0) ] );\n* // returns false\n*\n* @example\n* var isIntegerArray = require( '@stdlib/assert/is-integer-array' ).objects;\n*\n* var bool = isIntegerArray( [ new Number(1.0), new Number(3.0) ] );\n* // returns true\n*\n* bool = isIntegerArray( [ -1.0, 0.0, 3.0 ] );\n* // returns false\n*\n* bool = isIntegerArray( [ 3.0, new Number(-1.0) ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\n\n\n// MAIN //\n\nvar isIntegerArray = arrayfun( isInteger );\nsetReadOnly( isIntegerArray, 'primitives', arrayfun( isInteger.isPrimitive ) );\nsetReadOnly( isIntegerArray, 'objects', arrayfun( isInteger.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isIntegerArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Implement prototypical inheritance by replacing the prototype of one constructor with the prototype of another constructor.\n*\n* @module @stdlib/utils/inherit\n*\n* @example\n* var inherit = require( '@stdlib/utils/inherit' );\n*\n* function Foo() {\n*     return this;\n* }\n* Foo.prototype.beep = function beep() {\n*     return 'boop';\n* };\n*\n* function Bar() {\n*     Foo.call( this );\n*     return this;\n* }\n* inherit( Bar, Foo );\n*\n* var bar = new Bar();\n* var v = bar.beep();\n* // returns 'boop'\n*/\n\n// MODULES //\n\nvar inherit = require( './inherit.js' );\n\n\n// EXPORTS //\n\nmodule.exports = inherit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar getIndex = require( './../../base/ind' );\nvar parent = require( './../../base/ctor' ); // eslint-disable-line stdlib/no-redeclare\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar base = parent.prototype.iget;\n\n\n// MAIN //\n\n/**\n* Returns an array element located at a specified linear index.\n*\n* ## Notes\n*\n* -   For zero-dimensional arrays, the input argument is ignored and, for clarity, should not be provided.\n*\n* @private\n* @param {integer} [idx] - linear view index\n* @throws {TypeError} index must be an integer\n* @throws {RangeError} index exceeds array dimensions\n* @returns {*} array element\n*/\nfunction iget( idx ) {\n\tif ( this._ndims > 0 ) {\n\t\tif ( !isInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Index must be an integer. Value: `%s`.', idx ) );\n\t\t}\n\t\tidx = getIndex( idx, this._length-1, this._mode );\n\t\treturn base.call( this, idx );\n\t}\n\treturn base.call( this );\n}\n\n\n// EXPORTS //\n\nmodule.exports = iget;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-invalid-this */\n\n'use strict';\n\n// METHODS //\n\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar getIndex = require( './../../base/ind' );\nvar parent = require( './../../base/ctor' ); // eslint-disable-line stdlib/no-redeclare\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar base = parent.prototype.iset;\n\n\n// MAIN //\n\n/**\n* Sets an array element located at a specified linear index.\n*\n* ## Notes\n*\n* -   For zero-dimensional arrays, the first, and only, argument should be the value to set.\n*\n* @private\n* @param {integer} [idx] - linear view index\n* @param {*} v - value to set\n* @throws {Error} cannot write to a read-only array\n* @throws {TypeError} index must be an integer\n* @throws {RangeError} index exceeds array dimensions\n* @returns {ndarray} ndarray instance\n*/\nfunction iset( idx, v ) {\n\tif ( this._flags.READONLY ) {\n\t\tthrow new Error( 'invalid invocation. Cannot write to a read-only array.' );\n\t}\n\tif ( this._ndims > 0 ) {\n\t\tif ( !isInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Index must be an integer. Value: `%s`.', idx ) );\n\t\t}\n\t\tidx = getIndex( idx, this._length-1, this._mode );\n\t\tbase.call( this, idx, v );\n\t} else {\n\t\tbase.call( this, idx );\n\t}\n\treturn this;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iset;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar getIndex = require( './../../base/ind' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an array element.\n*\n* ## Notes\n*\n* -   The number of indices should **equal** the number of dimensions. Accordingly, for zero-dimensional arrays, no indices should be provided.\n*\n* @private\n* @param {...integer} [idx] - indices\n* @throws {TypeError} provided indices must be integer valued\n* @throws {RangeError} index exceeds array dimensions\n* @throws {RangeError} number of indices must equal the number of dimensions\n* @returns {*} array element\n*/\nfunction get() {\n\tvar idx;\n\tvar ind;\n\tvar M;\n\tvar i;\n\n\tif ( arguments.length !== this._ndims ) {\n\t\tthrow new RangeError( format( 'invalid arguments. Number of indices must match the number of dimensions. ndims: `%u`. nargs: `%u`.', this._ndims, arguments.length ) );\n\t}\n\tidx = this._offset;\n\tM = this._submode.length;\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\tif ( !isInteger( arguments[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Indices must be integer valued. Argument: `%u`. Value: `%s`.', i, arguments[ i ] ) );\n\t\t}\n\t\tind = getIndex( arguments[ i ], this._shape[ i ]-1, this._submode[ i%M ] ); // eslint-disable-line max-len\n\t\tidx += this._strides[ i ] * ind;\n\t}\n\tif ( this._accessors ) {\n\t\treturn this._buffer.get( idx );\n\t}\n\treturn this._buffer[ idx ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = get;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar getIndex = require( './../../base/ind' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   The number of indices should **equal** the number of dimensions. Accordingly, for zero-dimensional arrays, no indices should be provided.\n*\n* @private\n* @param {...integer} [idx] - indices\n* @param {*} v - value to set\n* @throws {Error} cannot write to a read-only array\n* @throws {TypeError} provided indices must be integer valued\n* @throws {RangeError} index exceeds array dimensions\n* @throws {RangeError} number of indices must equal the number of dimensions\n* @returns {ndarray} ndarray instance\n*/\nfunction set() {\n\tvar idx;\n\tvar ind;\n\tvar M;\n\tvar i;\n\n\tif ( this._flags.READONLY ) {\n\t\tthrow new Error( 'invalid invocation. Cannot write to a read-only array.' );\n\t}\n\tif ( arguments.length !== this._ndims+1 ) {\n\t\tthrow new RangeError( format( 'invalid arguments. Number of indices must match the number of dimensions. ndims: `%u`. nargs: `%u`.', this._ndims, arguments.length ) );\n\t}\n\tidx = this._offset;\n\tM = this._submode.length;\n\tfor ( i = 0; i < arguments.length-1; i++ ) {\n\t\tif ( !isInteger( arguments[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Indices must be integer valued. Argument: `%i`. Value: `%u`.', i, arguments[ i ] ) );\n\t\t}\n\t\tind = getIndex( arguments[ i ], this._shape[ i ]-1, this._submode[ i%M ] ); // eslint-disable-line max-len\n\t\tidx += this._strides[ i ] * ind;\n\t}\n\tif ( this._accessors ) {\n\t\tthis._buffer.set( arguments[ i ], idx );\n\t} else {\n\t\tthis._buffer[ idx ] = arguments[ i ];\n\t}\n\treturn this;\n}\n\n\n// EXPORTS //\n\nmodule.exports = set;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Copies the contents of array-like value to a new array.\n*\n* @private\n* @param {ArrayLike} arr - input array\n* @param {NonNegativeInteger} len - array length\n* @returns {Array} output array\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0 ];\n*\n* var out = copy( arr, arr.length );\n* // returns [ 1.0, 2.0, 3.0 ]\n*\n* var bool = ( arr === out );\n* // returns false\n*/\nfunction copy( arr, len ) {\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout.push( arr[ i ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = copy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isArray = require( '@stdlib/assert/is-array' );\nvar isIndexMode = require( './../../base/assert/is-index-mode' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.mode] - specifies how to handle indices which exceed array dimensions\n* @param {string} [options.submode] - specifies how to handle subscripts which exceed array dimensions\n* @param {boolean} [options.readonly] - boolean indicating whether an array should be read-only\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'mode': 'clamp',\n*     'submode': [ 'throw', 'wrap', 'clamp' ]\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tvar i;\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'mode' ) ) {\n\t\topts.mode = options.mode;\n\t\tif ( !isIndexMode( opts.mode ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a recognized mode. Option: `%s`.', 'mode', opts.mode ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'submode' ) ) {\n\t\topts.submode = options.submode;\n\t\tif ( !isArray( opts.submode ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an array containing recognized modes. Option: `%s`.', 'submode', opts.submode ) );\n\t\t}\n\t\tif ( opts.submode.length === 0 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an array containing recognized modes. Option: `%s`.', 'submode', opts.submode.join( ',' ) ) );\n\t\t}\n\t\tfor ( i = 0; i < opts.submode.length; i++ ) {\n\t\t\tif ( !isIndexMode( opts.submode[ i ] ) ) {\n\t\t\t\treturn new TypeError( format( 'invalid option. Each submode must be a recognized mode. Option: `%s`.', opts.submode[ i ] ) );\n\t\t\t}\n\t\t}\n\t\topts.submode = opts.submode.slice();\n\t}\n\tif ( hasOwnProp( options, 'readonly' ) ) {\n\t\topts.readonly = options.readonly;\n\t\tif ( !isBoolean( opts.readonly ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'readonly', opts.readonly ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Multidimensional array constructor.\n*\n* @module @stdlib/ndarray/ctor\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var buffer = [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var out = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar MODES = require( './modes.json' );\n\n\n// MAIN //\n\n/**\n* Returns a list of ndarray casting modes.\n*\n* @returns {StringArray} list of ndarray casting modes\n*\n* @example\n* var list = modes();\n* // returns [ 'none', 'equiv', 'safe', 'same-kind', 'unsafe' ]\n*/\nfunction modes() {\n\treturn MODES.slice();\n}\n\n\n// EXPORTS //\n\nmodule.exports = modes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an object mapping supported casting modes to integer values for purposes of C inter-operation.\n*\n* ## Notes\n*\n* -   Downstream consumers of this mapping should **not** rely on specific integer values (e.g., `NO_CASTING == 0`). Instead, the object should be used in an opaque manner.\n* -   The main purpose of this function is JavaScript and C inter-operation of ndarray objects.\n*\n* @returns {Object} object mapping supported casting modes to integer values\n*\n* @example\n* var table = enumerated();\n* // returns <Object>\n*/\nfunction enumerated() {\n\t// NOTE: the following should match the C `casting_modes.h` enumeration!!!!\n\treturn {\n\t\t'none': 0,\n\t\t'equiv': 1,\n\t\t'safe': 2,\n\t\t'same-kind': 3,\n\t\t'unsafe': 4\n\t};\n}\n\n\n// EXPORTS //\n\nmodule.exports = enumerated;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of ndarray casting modes.\n*\n* @module @stdlib/ndarray/casting-modes\n*\n* @example\n* var modes = require( '@stdlib/ndarray/casting-modes' );\n*\n* var list = modes();\n* // returns [ 'none', 'equiv', 'safe', 'same-kind', 'unsafe' ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar modes = require( './main.js' );\nvar enumeration = require( './enum.js' );\n\n\n// MAIN //\n\nsetReadOnly( modes, 'enum', enumeration );\n\n\n// EXPORTS //\n\nmodule.exports = modes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar modes = require( './../../../../casting-modes' );\n\n\n// VARIABLES //\n\nvar MODES = modes();\nvar len = MODES.length;\n\n\n// MAIN //\n\n/**\n* Tests whether an input value is a supported ndarray casting mode.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating whether an input value is a supported ndarray casting mode\n*\n* @example\n* var bool = isCastingMode( 'none' );\n* // returns true\n*\n* bool = isCastingMode( 'equiv' );\n* // returns true\n*\n* bool = isCastingMode( 'safe' );\n* // returns true\n*\n* bool = isCastingMode( 'same-kind' );\n* // returns true\n*\n* bool = isCastingMode( 'unsafe' );\n* // returns true\n*\n* bool = isCastingMode( 'foo' );\n* // returns false\n*/\nfunction isCastingMode( v ) {\n\tvar i;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( v === MODES[ i ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isCastingMode;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an input value is a supported ndarray casting mode.\n*\n* @module @stdlib/ndarray/base/assert/is-casting-mode\n*\n* @example\n* var isCastingMode = require( '@stdlib/ndarray/base/assert/is-casting-mode' );\n*\n* var bool = isCastingMode( 'none' );\n* // returns true\n*\n* bool = isCastingMode( 'equiv' );\n* // returns true\n*\n* bool = isCastingMode( 'safe' );\n* // returns true\n*\n* bool = isCastingMode( 'same-kind' );\n* // returns true\n*\n* bool = isCastingMode( 'unsafe' );\n* // returns true\n*\n* bool = isCastingMode( 'foo' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isCastingMode = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isCastingMode;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( './../../keys' );\nvar isArray = require( '@stdlib/assert/is-array' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isObjectLike = require( '@stdlib/assert/is-object-like' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Inverts an object, such that keys become values and values become keys.\n*\n* @param {ObjectLike} obj - input object\n* @param {Options} [opts] - function options\n* @param {boolean} [opts.duplicates=true] - boolean indicating whether to store duplicate keys\n* @throws {TypeError} first argument must be object-like\n* @throws {TypeError} second argument must an an object\n* @throws {TypeError} must provide valid options\n* @returns {Object} inverted object\n*\n* @example\n* var out = invert({\n*     'a': 'beep',\n*     'b': 'boop'\n* });\n* // returns { 'beep': 'a', 'boop': 'b' }\n*\n* @example\n* var out = invert({\n*     'a': 'beep',\n*     'b': 'beep'\n* });\n* // returns { 'beep': [ 'a', 'b' ] }\n*\n* @example\n* var obj = {};\n* obj.a = 'beep';\n* obj.b = 'boop';\n* obj.c = 'beep'; // inserted after `a`\n*\n* var out = invert( obj, {\n*     'duplicates': false\n* });\n* // returns { 'beep': 'c', 'boop': 'b' }\n*/\nfunction invert( obj, opts ) {\n\tvar allowDupes = true;\n\tvar keys;\n\tvar len;\n\tvar key;\n\tvar val;\n\tvar out;\n\tvar v;\n\tvar i;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object (except null). Value: `%s`.', obj ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'duplicates' ) ) {\n\t\t\tallowDupes = opts.duplicates;\n\t\t\tif ( !isBoolean( allowDupes ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'duplicates', allowDupes ) );\n\t\t\t}\n\t\t}\n\t}\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tout = {};\n\tif ( allowDupes ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tkey = keys[ i ];\n\t\t\tval = obj[ key ];\n\t\t\tif ( !hasOwnProp( out, val ) ) {\n\t\t\t\tout[ val ] = key;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tv = out[ val ];\n\t\t\tif ( isArray( v ) ) {\n\t\t\t\tout[ val ].push( key );\n\t\t\t} else {\n\t\t\t\tout[ val ] = [ v, key ];\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tkey = keys[ i ];\n\t\t\tout[ obj[ key ] ] = key;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = invert;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Invert an object, such that keys become values and values become keys.\n*\n* @module @stdlib/utils/object-inverse\n*\n* @example\n* var invert = require( '@stdlib/utils/object-inverse' );\n*\n* var out = invert({\n*     'a': 'beep',\n*     'b': 'boop'\n* });\n* // returns { 'beep': 'a', 'boop': 'b' }\n*\n* out = invert({\n*     'a': 'beep',\n*     'b': 'beep'\n* });\n* // returns { 'beep': [ 'a', 'b' ] }\n*\n* var obj = {};\n* obj.a = 'beep';\n* obj.b = 'boop';\n* obj.c = 'beep'; // inserted after `a`\n*\n* out = invert( obj, {\n*     'duplicates': false\n* });\n* // returns { 'beep': 'c', 'boop': 'b' }\n*/\n\n// MODULES //\n\nvar invert = require( './object_inverse.js' );\n\n\n// EXPORTS //\n\nmodule.exports = invert;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar DTYPES = require( './dtypes.json' );\n\n\n// MAIN //\n\n/**\n* Returns a list of strided array data type strings.\n*\n* @returns {StringArray} list of strided array data type strings\n*\n* @example\n* var list = dtypes();\n* // returns [...]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nmodule.exports = dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ndtypes = require( '@stdlib/ndarray/dtypes' ).enum;\n\n\n// VARIABLES //\n\nvar dt = ndtypes();\n\n\n// MAIN //\n\n/**\n* Returns an object mapping supported data strings to enumeration constants for purposes of C inter-operation.\n*\n* ## Notes\n*\n* -   Downstream consumers of this mapping should **not** rely on specific integer values (e.g., `INT8 == 0`). Instead, the object should be used in an opaque manner.\n* -   The main purpose of this function is JavaScript and C inter-operation of strided arrays.\n*\n* @private\n* @returns {Object} object mapping supported data strings strings to enumeration constants\n*\n* @example\n* var table = enumeration();\n* // returns <Object>\n*/\nfunction enumeration() {\n\t// NOTE: the returned object should match the C `dtypes.h` enumeration!!!!\n\treturn {\n\t\t'bool': dt[ 'bool' ],\n\n\t\t'int8': dt[ 'int8' ],\n\t\t'uint8': dt[ 'uint8' ],\n\t\t'uint8c': dt[ 'uint8c' ],\n\t\t'int16': dt[ 'int16' ],\n\t\t'uint16': dt[ 'uint16' ],\n\t\t'int32': dt[ 'int32' ],\n\t\t'uint32': dt[ 'uint32' ],\n\t\t'int64': dt[ 'int64' ],\n\t\t'uint64': dt[ 'uint64' ],\n\n\t\t'float32': dt[ 'float32' ],\n\t\t'float64': dt[ 'float64' ],\n\n\t\t'complex64': dt[ 'complex64' ],\n\t\t'complex128': dt[ 'complex128' ],\n\n\t\t'binary': dt[ 'binary' ],\n\n\t\t'generic': dt[ 'generic' ],\n\n\t\t'notype': dt[ 'notype' ],\n\n\t\t'userdefined_type': dt[ 'userdefined_type' ]\n\t};\n}\n\n\n// EXPORTS //\n\nmodule.exports = enumeration;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar objectKeys = require( '@stdlib/utils/keys' );\n\n\n// MAIN //\n\n/**\n* Copies all enumerable own properties from a source object to a target object as enumerable read-only properties.\n*\n* @private\n* @param {Object} target - target object\n* @param {Object} source - source object\n* @returns {Object} modified target object\n*\n* @example\n* var source = {\n*     'beep': 'boop'\n* };\n* var target = {};\n*\n* var out = assign( target, source );\n* // returns <Object>\n*\n* var bool = ( out === target );\n* // returns true\n*\n* var v = target.beep;\n* // returns 'boop'\n*/\nfunction assign( target, source ) {\n\tvar keys;\n\tvar k;\n\tvar i;\n\n\tkeys = objectKeys( source );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tk = keys[ i ];\n\t\tsetReadOnly( target, k, source[ k ] );\n\t}\n\treturn target;\n}\n\n\n// EXPORTS //\n\nmodule.exports = assign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of strided array data types.\n*\n* @module @stdlib/strided/dtypes\n*\n* @example\n* var dtypes = require( '@stdlib/strided/dtypes' );\n*\n* var list = dtypes();\n* // returns [...]\n*\n* @example\n* var enumeration = require( '@stdlib/strided/dtypes' ).enum;\n*\n* var table = enumeration();\n* // returns {...}\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar dtypes = require( './main.js' );\nvar enumeration = require( './enum.js' );\nvar assign = require( './assign.js' );\n\n\n// MAIN //\n\nsetReadOnly( dtypes, 'enum', enumeration );\nassign( dtypes, enumeration() );\n\n\n// EXPORTS //\n\nmodule.exports = dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectInverse = require( '@stdlib/utils/object-inverse' );\nvar enumeration = require( '@stdlib/strided/dtypes' ).enum;\n\n\n// VARIABLES //\n\nvar hash = objectInverse( enumeration(), {\n\t'duplicates': false\n});\n\n\n// MAIN //\n\n/**\n* Returns the data type string associated with an ndarray data type enumeration constant.\n*\n* @param {integer} dtype - data type enumeration constant\n* @returns {(string|null)} data type string or null\n*\n* @example\n* var str2enum = require( '@stdlib/ndarray/base/dtype-str2enum' );\n*\n* var v = str2enum( 'float64' );\n* // returns <number>\n*\n* var dt = enum2str( v );\n* // returns 'float64'\n*/\nfunction enum2str( dtype ) {\n\tvar v = hash[ dtype ];\n\treturn ( typeof v === 'string' ) ? v : null; // note: we include this guard to prevent walking the prototype chain\n}\n\n\n// EXPORTS //\n\nmodule.exports = enum2str;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the data type string associated with an ndarray data type enumeration constant.\n*\n* @module @stdlib/ndarray/base/dtype-enum2str\n*\n* @example\n* var str2enum = require( '@stdlib/ndarray/base/dtype-str2enum' );\n* var enum2str = require( '@stdlib/ndarray/base/dtype-enum2str' );\n*\n* var v = str2enum( 'float64' );\n* // returns <number>\n*\n* var dt = enum2str( v );\n* // returns 'float64'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar enumeration = require( './../../../dtypes' ).enum;\n\n\n// VARIABLES //\n\nvar ENUM = enumeration();\n\n\n// MAIN //\n\n/**\n* Returns the enumeration constant associated with an ndarray data type string.\n*\n* ## Notes\n*\n* -   Downstream consumers of this function should **not** rely on specific integer values (e.g., `INT8 == 0`). Instead, the function should be used in an opaque manner.\n*\n* @param {string} dtype - data type string\n* @returns {(integer|null)} integer value or null\n*\n* @example\n* var v = str2enum( 'int8' );\n* // returns <number>\n*/\nfunction str2enum( dtype ) {\n\tvar v = ENUM[ dtype ];\n\treturn ( typeof v === 'number' ) ? v : null; // note: we include this guard to prevent walking the prototype chain\n}\n\n\n// EXPORTS //\n\nmodule.exports = str2enum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar enum2str = require( './../../../base/dtype-enum2str' );\nvar str2enum = require( './../../../base/dtype-str2enum' );\n\n\n// MAIN //\n\n/**\n* Returns the data type string associated with a supported ndarray data type value.\n*\n* @param {*} dtype - data type value\n* @returns {(string|null)} data type string or null\n*\n* @example\n* var str2enum = require( '@stdlib/ndarray/base/dtype-str2enum' );\n*\n* var v = resolve( str2enum( 'float64' ) );\n* // returns 'float64'\n*/\nfunction resolve( dtype ) {\n\tvar t = ( typeof dtype );\n\tif ( t === 'string' ) {\n\t\treturn ( str2enum( dtype ) === null ) ? null : dtype;\n\t}\n\tif ( t === 'number' ) {\n\t\treturn enum2str( dtype );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = resolve;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the enumeration constant associated with an ndarray data type string.\n*\n* @module @stdlib/ndarray/base/dtype-str2enum\n*\n* @example\n* var str2enum = require( '@stdlib/ndarray/base/dtype-str2enum' );\n*\n* var v = str2enum( 'float64' );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( '@stdlib/utils/keys' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar resolve = require( './../../base/dtype-resolve-str' );\nvar SAFE_CASTS = require( './safe_casts.json' );\n\n\n// VARIABLES //\n\nvar TABLE;\n\n\n// FUNCTIONS //\n\n/**\n* Generates a full table of safe casts for each ndarray data type.\n*\n* @private\n* @returns {Object} table\n*/\nfunction generateFullTable() {\n\tvar dtypes;\n\tvar ntypes;\n\tvar out;\n\tvar tmp;\n\tvar dt1;\n\tvar dt2;\n\tvar o;\n\tvar j;\n\tvar i;\n\n\tout = {};\n\tdtypes = objectKeys( SAFE_CASTS );\n\tntypes = dtypes.length;\n\tfor ( i = 0; i < ntypes; i++ ) {\n\t\tdt1 = dtypes[ i ];\n\t\to = SAFE_CASTS[ dt1 ];\n\t\ttmp = {};\n\t\tfor ( j = 0; j < ntypes; j++ ) {\n\t\t\tdt2 = dtypes[ j ];\n\t\t\ttmp[ dt2 ] = o[ dt2 ];\n\t\t}\n\t\tout[ dt1 ] = tmp;\n\t}\n\treturn out;\n}\n\n/**\n* Generates a table of safe casts for each ndarray data type.\n*\n* @private\n* @returns {Object} table\n*/\nfunction generateTable() {\n\tvar dtypes;\n\tvar ntypes;\n\tvar out;\n\tvar tmp;\n\tvar dt1;\n\tvar dt2;\n\tvar o;\n\tvar j;\n\tvar i;\n\n\tout = {};\n\tdtypes = objectKeys( SAFE_CASTS );\n\tntypes = dtypes.length;\n\tfor ( i = 0; i < ntypes; i++ ) {\n\t\tdt1 = dtypes[ i ];\n\t\to = SAFE_CASTS[ dt1 ];\n\t\ttmp = [];\n\t\tfor ( j = 0; j < ntypes; j++ ) {\n\t\t\tdt2 = dtypes[ j ];\n\t\t\tif ( o[ dt2 ] === 1 ) {\n\t\t\t\ttmp.push( dt2 );\n\t\t\t}\n\t\t}\n\t\tout[ dt1 ] = tmp;\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Returns a list of ndarray data types to which a provided ndarray data type can be safely cast.\n*\n* @param {*} [dtype] - ndarray data type value\n* @returns {(Object|StringArray|null)} list of ndarray data types or null\n*\n* @example\n* var list = safeCasts( 'float32' );\n* // returns [...]\n*/\nfunction safeCasts( dtype ) {\n\tif ( arguments.length === 0 ) {\n\t\treturn generateFullTable();\n\t}\n\tif ( TABLE === void 0 ) {\n\t\t// Lazily generate table...\n\t\tTABLE = generateTable();\n\t}\n\tdtype = resolve( dtype );\n\tif ( hasOwnProp( TABLE, dtype ) ) {\n\t\treturn TABLE[ dtype ].slice();\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = safeCasts;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the data type string associated with a supported ndarray data type value.\n*\n* @module @stdlib/ndarray/base/dtype-resolve-str\n*\n* @example\n* var str2enum = require( '@stdlib/ndarray/base/dtype-str2enum' );\n* var resolve = require( '@stdlib/ndarray/base/dtype-resolve-str' );\n*\n* var v = resolve( str2enum( 'float64' ) );\n* // returns 'float64'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar safeCasts = require( './../../../../safe-casts' );\n\n\n// VARIABLES //\n\nvar TABLE = safeCasts();\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if a provided ndarray data type can be safely cast to another ndarray data type.\n*\n* @param {string} from - ndarray data type\n* @param {string} to - ndarray data type\n* @returns {boolean} boolean indicating if a data type can be safely cast to another data type\n*\n* @example\n* var bool = isSafeCast( 'float32', 'float64' );\n* // returns true\n*\n* bool = isSafeCast( 'float64', 'int32' );\n* // returns false\n*/\nfunction isSafeCast( from, to ) {\n\tif ( from === to ) {\n\t\treturn true;\n\t}\n\treturn ( TABLE[ from ][ to ] > 0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSafeCast;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of ndarray data types to which a provided ndarray data type can be safely cast.\n*\n* @module @stdlib/ndarray/safe-casts\n*\n* @example\n* var safeCasts = require( '@stdlib/ndarray/safe-casts' );\n*\n* var list = safeCasts( 'float32' );\n* // returns [...]\n*/\n\n// MODULES //\n\nvar safeCasts = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = safeCasts;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( '@stdlib/utils/keys' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar resolve = require( './../../base/dtype-resolve-str' );\nvar SAME_KIND_CASTS = require( './same_kind_casts.json' );\n\n\n// VARIABLES //\n\nvar TABLE;\n\n\n// FUNCTIONS //\n\n/**\n* Generates a full table of same \"kind\" casts for each ndarray data type.\n*\n* @private\n* @returns {Object} table\n*/\nfunction generateFullTable() {\n\tvar dtypes;\n\tvar ntypes;\n\tvar out;\n\tvar tmp;\n\tvar dt1;\n\tvar dt2;\n\tvar o;\n\tvar j;\n\tvar i;\n\n\tout = {};\n\tdtypes = objectKeys( SAME_KIND_CASTS );\n\tntypes = dtypes.length;\n\tfor ( i = 0; i < ntypes; i++ ) {\n\t\tdt1 = dtypes[ i ];\n\t\to = SAME_KIND_CASTS[ dt1 ];\n\t\ttmp = {};\n\t\tfor ( j = 0; j < ntypes; j++ ) {\n\t\t\tdt2 = dtypes[ j ];\n\t\t\ttmp[ dt2 ] = o[ dt2 ];\n\t\t}\n\t\tout[ dt1 ] = tmp;\n\t}\n\treturn out;\n}\n\n/**\n* Generates a table of same \"kind\" casts for each ndarray data type.\n*\n* @private\n* @returns {Object} table\n*/\nfunction generateTable() {\n\tvar dtypes;\n\tvar ntypes;\n\tvar out;\n\tvar tmp;\n\tvar dt1;\n\tvar dt2;\n\tvar o;\n\tvar j;\n\tvar i;\n\n\tout = {};\n\tdtypes = objectKeys( SAME_KIND_CASTS );\n\tntypes = dtypes.length;\n\tfor ( i = 0; i < ntypes; i++ ) {\n\t\tdt1 = dtypes[ i ];\n\t\to = SAME_KIND_CASTS[ dt1 ];\n\t\ttmp = [];\n\t\tfor ( j = 0; j < ntypes; j++ ) {\n\t\t\tdt2 = dtypes[ j ];\n\t\t\tif ( o[ dt2 ] === 1 ) {\n\t\t\t\ttmp.push( dt2 );\n\t\t\t}\n\t\t}\n\t\tout[ dt1 ] = tmp;\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Returns a list of ndarray data types to which a provided ndarray data type can be safely cast or cast within the same \"kind\".\n*\n* @param {*} [dtype] - ndarray data type value\n* @returns {(Object|StringArray|null)} list of ndarray data types or null\n*\n* @example\n* var list = sameKindCasts( 'float32' );\n* // returns [...]\n*/\nfunction sameKindCasts( dtype ) {\n\tif ( arguments.length === 0 ) {\n\t\treturn generateFullTable();\n\t}\n\tif ( TABLE === void 0 ) {\n\t\t// Lazily generate table...\n\t\tTABLE = generateTable();\n\t}\n\tdtype = resolve( dtype );\n\tif ( hasOwnProp( TABLE, dtype ) ) {\n\t\treturn TABLE[ dtype ].slice();\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sameKindCasts;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine if an ndarray data type can be safely cast to another ndarray data type.\n*\n* @module @stdlib/ndarray/base/assert/is-safe-data-type-cast\n*\n* @example\n* var isSafeCast = require( '@stdlib/ndarray/base/assert/is-safe-data-type-cast' );\n*\n* var bool = isSafeCast( 'float32', 'float64' );\n* // returns true\n*\n* bool = isSafeCast( 'float64', 'int32' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isSafeCast = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isSafeCast;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar sameKindCasts = require( './../../../../same-kind-casts' );\n\n\n// VARIABLES //\n\nvar TABLE = sameKindCasts();\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if a provided ndarray data type can be safely cast to, or is of the same \"kind\" as, another ndarray data type.\n*\n* @param {string} from - ndarray data type\n* @param {string} to - ndarray data type\n* @returns {boolean} boolean indicating if a data type can be cast to another data type\n*\n* @example\n* var bool = isSameKindCast( 'float32', 'float64' );\n* // returns true\n*\n* bool = isSameKindCast( 'uint16', 'int16' );\n* // returns false\n*/\nfunction isSameKindCast( from, to ) {\n\tif ( from === to ) {\n\t\treturn true;\n\t}\n\treturn ( TABLE[ from ][ to ] > 0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSameKindCast;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of ndarray data types to which a provided ndarray data type can be safely cast or cast within the same \"kind\".\n*\n* @module @stdlib/ndarray/same-kind-casts\n*\n* @example\n* var sameKindCasts = require( '@stdlib/ndarray/same-kind-casts' );\n*\n* var list = sameKindCasts( 'float32' );\n* // returns [...]\n*/\n\n// MODULES //\n\nvar sameKindCasts = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = sameKindCasts;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isSafeCast = require( './../../../../base/assert/is-safe-data-type-cast' );\nvar isSameKindCast = require( './../../../../base/assert/is-same-kind-data-type-cast' );\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if a provided ndarray data type can be cast to another ndarray data type according to a specified casting mode.\n*\n* @param {string} from - ndarray data type\n* @param {string} to - ndarray data type\n* @param {string} casting - ndarray casting mode\n* @returns {boolean} boolean indicating if a data type can be cast to another data type\n*\n* @example\n* var bool = isAllowedCast( 'float32', 'float64', 'safe' );\n* // returns true\n*\n* bool = isAllowedCast( 'float64', 'int32', 'safe' );\n* // returns false\n*/\nfunction isAllowedCast( from, to, casting ) {\n\t// Anything goes for \"unsafe\" casting...\n\tif ( casting === 'unsafe' ) {\n\t\treturn true;\n\t}\n\t// \"Casting\" to the same data type is always allowed, regardless of the casting mode...\n\tif ( from === to ) {\n\t\treturn true;\n\t}\n\t// No casts between different data types are allowed in \"none\" or \"equiv\" casting modes...\n\tif ( casting === 'none' || casting === 'equiv' ) {\n\t\treturn false;\n\t}\n\t// In \"safe\" casting mode, only casts which preserve values are allowed...\n\tif ( casting === 'safe' ) {\n\t\treturn isSafeCast( from, to );\n\t}\n\t// In \"same-kind\" casting mode, in addition to \"safe\" casts, casts within a \"kind\" (e.g., between signed integers or between floating-point numbers) are allowed...\n\treturn isSameKindCast( from, to );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isAllowedCast;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine if an ndarray data type can be safely cast to, or is of the same \"kind\" as, another ndarray data type.\n*\n* @module @stdlib/ndarray/base/assert/is-same-kind-data-type-cast\n*\n* @example\n* var isSameKindCast = require( '@stdlib/ndarray/base/assert/is-same-kind-data-type-cast' );\n*\n* var bool = isSameKindCast( 'float32', 'float64' );\n* // returns true\n*\n* bool = isSameKindCast( 'uint16', 'int16' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isSameKindCast = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isSameKindCast;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine if an array data type can be cast to another array data type according to a specified casting rule.\n*\n* @module @stdlib/ndarray/base/assert/is-allowed-data-type-cast\n*\n* @example\n* var isAllowedCast = require( '@stdlib/ndarray/base/assert/is-allowed-data-type-cast' );\n*\n* var bool = isAllowedCast( 'float32', 'float64', 'safe' );\n* // returns true\n*\n* bool = isAllowedCast( 'float64', 'int32', 'safe' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isAllowedCast = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isAllowedCast;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar table = require( './ctors.js' );\n\n\n// MAIN //\n\n/**\n* Returns an ndarray data buffer constructor.\n*\n* @param {string} dtype - data type\n* @returns {(Function|null)} data buffer constructor or null\n*\n* @example\n* var ctor = ctors( 'float64' );\n* // returns <Function>\n*\n* @example\n* var ctor = ctors( 'float' );\n* // returns null\n*/\nfunction ctors( dtype ) {\n\treturn table[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Buffer = require( '@stdlib/buffer/ctor' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar Float32Array = require( '@stdlib/array/float32' );\nvar Int16Array = require( '@stdlib/array/int16' );\nvar Int32Array = require( '@stdlib/array/int32' );\nvar Int8Array = require( '@stdlib/array/int8' );\nvar Uint16Array = require( '@stdlib/array/uint16' );\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Uint8Array = require( '@stdlib/array/uint8' );\nvar Uint8ClampedArray = require( '@stdlib/array/uint8c' );\nvar Complex64Array = require( '@stdlib/array/complex64' );\nvar Complex128Array = require( '@stdlib/array/complex128' );\n\n\n// MAIN //\n\n// Mapping from data types to underlying buffer constructors...\nvar ctors = {\n\t'binary': Buffer,\n\t'float64': Float64Array,\n\t'float32': Float32Array,\n\t'generic': Array, // TODO: replace with `stdlib` pkg\n\t'int16': Int16Array,\n\t'int32': Int32Array,\n\t'int8': Int8Array,\n\t'uint16': Uint16Array,\n\t'uint32': Uint32Array,\n\t'uint8': Uint8Array,\n\t'uint8c': Uint8ClampedArray,\n\t'complex64': Complex64Array,\n\t'complex128': Complex128Array\n};\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* ndarray data buffer constructors.\n*\n* @module @stdlib/ndarray/base/buffer-ctors\n*\n* @example\n* var ctors = require( '@stdlib/ndarray/base/buffer-ctors' );\n*\n* var ctor = ctors( 'float64' );\n* // returns <Function>\n*\n* ctor = ctors( 'int' );\n* // returns null\n*/\n\n// MODULES //\n\nvar ctors = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar Buffer = require( './../../ctor' );\n\n\n// MAIN //\n\nvar bool = isFunction( Buffer.allocUnsafe );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' );\nvar format = require( '@stdlib/string/format' );\nvar Buffer = require( './../../ctor' );\n\n\n// MAIN //\n\n/**\n* Allocates a buffer having a specified number of bytes.\n*\n* ## Notes\n*\n* -   The underlying memory of returned `Buffer` instances is not initialized. Memory contents are unknown and may contain sensitive data.\n* -   When the size is less than half the pool size (specified on the `Buffer` constructor), memory is allocated from the `Buffer` pool for faster allocation of new `Buffer` instances.\n*\n*\n* @param {NonNegativeInteger} size - number of bytes to allocate\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {Buffer} new `Buffer` instance\n*\n* @example\n* var buf = allocUnsafe( 10 );\n* // returns <Buffer>\n*/\nfunction allocUnsafe( size ) {\n\tif ( !isNonNegativeInteger( size ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', size ) );\n\t}\n\treturn Buffer.allocUnsafe( size );\n}\n\n\n// EXPORTS //\n\nmodule.exports = allocUnsafe;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' );\nvar format = require( '@stdlib/string/format' );\nvar Buffer = require( './../../ctor' );\n\n\n// MAIN //\n\n/**\n* Allocates a buffer having a specified number of bytes.\n*\n* ## Notes\n*\n* -   The underlying memory of returned `Buffer` instances is not initialized. Memory contents are unknown and may contain sensitive data.\n* -   When the size is less than half the pool size (specified on the `Buffer` constructor), memory is allocated from the `Buffer` pool for faster allocation of new `Buffer` instances.\n*\n*\n* @param {NonNegativeInteger} size - number of bytes to allocate\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {Buffer} new `Buffer` instance\n*\n* @example\n* var buf = allocUnsafe( 10 );\n* // returns <Buffer>\n*/\nfunction allocUnsafe( size ) {\n\tif ( !isNonNegativeInteger( size ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', size ) );\n\t}\n\treturn new Buffer( size ); // eslint-disable-line no-buffer-constructor\n}\n\n\n// EXPORTS //\n\nmodule.exports = allocUnsafe;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Allocate a buffer having a specified number of bytes.\n*\n* @module @stdlib/buffer/alloc-unsafe\n*\n* @example\n* var allocUnsafe = require( '@stdlib/buffer/alloc-unsafe' );\n*\n* var buf = allocUnsafe( 10 );\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nvar hasAllocUnsafe = require( './has_alloc_unsafe.js' );\nvar main = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar allocUnsafe;\nif ( hasAllocUnsafe ) {\n\tallocUnsafe = main;\n} else {\n\tallocUnsafe = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = allocUnsafe;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Fills an array-like object with zeros.\n*\n* @private\n* @param {(Array|TypedArray|Buffer)} v - array-like object to fill\n* @returns {(Array|TypedArray|Buffer)} input value\n*\n* @example\n* var arr = zeros( new Array( 2 ) );\n* // returns [ 0, 0 ]\n*/\nfunction zeros( v ) {\n\tvar i;\n\tfor ( i = 0; i < v.length; i++ ) {\n\t\tv[ i ] = 0;\n\t}\n\treturn v;\n}\n\n\n// EXPORTS //\n\nmodule.exports = zeros;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar bufferCtors = require( './../../../base/buffer-ctors' );\nvar allocUnsafe = require( '@stdlib/buffer/alloc-unsafe' );\nvar zeros = require( './zeros.js' );\n\n\n// FUNCTIONS //\n\n/**\n* Returns a zero-filled generic array.\n*\n* @private\n* @param {NonNegativeInteger} size - buffer size\n* @returns {Array} zero-filled generic array\n*/\nfunction generic( size ) {\n\tvar buf;\n\tvar i;\n\n\tbuf = [];\n\tfor ( i = 0; i < size; i++ ) {\n\t\tbuf.push( 0 );\n\t}\n\treturn buf;\n}\n\n/**\n* Returns a zero-filled binary buffer.\n*\n* @private\n* @param {NonNegativeInteger} size - buffer size\n* @returns {Buffer} zero-filled binary buffer\n*/\nfunction binary( size ) {\n\treturn zeros( allocUnsafe( size ) );\n}\n\n/**\n* Returns a zero-filled typed array.\n*\n* @private\n* @param {string} dtype - data type\n* @param {NonNegativeInteger} size - buffer size\n* @returns {(TypedArray|null)} zero-filled typed array\n*/\nfunction typedarray( dtype, size ) {\n\tvar ctor = bufferCtors( dtype );\n\tif ( ctor ) {\n\t\treturn new ctor( size );\n\t}\n\treturn null;\n}\n\n\n// MAIN //\n\n/**\n* Returns a zero-filled contiguous linear ndarray data buffer.\n*\n* @param {string} dtype - data type\n* @param {NonNegativeInteger} size - buffer size\n* @returns {(Array|TypedArray|Buffer|null)} data buffer\n*\n* @example\n* var buf = buffer( 'float64', 3 );\n* // returns <Float64Array>[ 0.0, 0.0, 0.0 ]\n*/\nfunction buffer( dtype, size ) {\n\tif ( dtype === 'generic' ) {\n\t\treturn generic( size );\n\t}\n\tif ( dtype === 'binary' ) {\n\t\treturn binary( size );\n\t}\n\treturn typedarray( dtype, size );\n}\n\n\n// EXPORTS //\n\nmodule.exports = buffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a zero-filled contiguous linear ndarray data buffer.\n*\n* @module @stdlib/ndarray/base/buffer\n*\n* @example\n* var buffer = require( '@stdlib/ndarray/base/buffer' );\n*\n* var buf = buffer( 'float64', 3 );\n* // returns <Float64Array>[ 0.0, 0.0, 0.0 ]\n*/\n\n// MODULES //\n\nvar buffer = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = buffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBuffer = require( '@stdlib/assert/is-buffer' );\nvar isArray = require( '@stdlib/assert/is-array' );\nvar constructorName = require( '@stdlib/utils/constructor-name' );\nvar ctor2dtype = require( './ctor2dtype.js' );\nvar CTORS = require( './ctors.js' );\nvar DTYPES = require( './dtypes.js' );\n\n\n// VARIABLES //\n\nvar NTYPES = DTYPES.length;\n\n\n// MAIN //\n\n/**\n* Returns the data type of an ndarray data buffer.\n*\n* @param {*} value - input value\n* @returns {(string|null)} data type\n*\n* @example\n* var dt = dtype( [ 1, 2, 3 ] );\n* // returns 'generic'\n*\n* var dt = dtype( 'beep' );\n* // returns null\n*/\nfunction dtype( value ) {\n\tvar i;\n\tif ( isArray( value ) ) {\n\t\treturn 'generic';\n\t}\n\tif ( isBuffer( value ) ) {\n\t\treturn 'binary';\n\t}\n\tfor ( i = 0; i < NTYPES; i++ ) {\n\t\tif ( value instanceof CTORS[ i ] ) {\n\t\t\treturn DTYPES[ i ];\n\t\t}\n\t}\n\t// If the above failed, fall back to a more robust (and significantly slower) means for resolving underlying data types:\n\treturn ctor2dtype[ constructorName( value ) ] || null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dtype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n// Mapping from ndarray data buffer constructors to data types...\nvar dtypes = {\n\t'Buffer': 'binary',\n\t'Float32Array': 'float32',\n\t'Float64Array': 'float64',\n\t'Array': 'generic',\n\t'Int16Array': 'int16',\n\t'Int32Array': 'int32',\n\t'Int8Array': 'int8',\n\t'Object': 'generic',\n\t'Uint16Array': 'uint16',\n\t'Uint32Array': 'uint32',\n\t'Uint8Array': 'uint8',\n\t'Uint8ClampedArray': 'uint8c',\n\t'Complex64Array': 'complex64',\n\t'Complex128Array': 'complex128'\n};\n\n\n// EXPORTS //\n\nmodule.exports = dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float64Array = require( '@stdlib/array/float64' );\nvar Float32Array = require( '@stdlib/array/float32' );\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Int32Array = require( '@stdlib/array/int32' );\nvar Uint16Array = require( '@stdlib/array/uint16' );\nvar Int16Array = require( '@stdlib/array/int16' );\nvar Uint8Array = require( '@stdlib/array/uint8' );\nvar Uint8ClampedArray = require( '@stdlib/array/uint8c' );\nvar Int8Array = require( '@stdlib/array/int8' );\nvar Complex64Array = require( '@stdlib/array/complex64' );\nvar Complex128Array = require( '@stdlib/array/complex128' );\n\n\n// MAIN //\n\n// Note: order should match `dtypes` order\nvar CTORS = [\n\tFloat64Array,\n\tFloat32Array,\n\tInt32Array,\n\tUint32Array,\n\tInt16Array,\n\tUint16Array,\n\tInt8Array,\n\tUint8Array,\n\tUint8ClampedArray,\n\tComplex64Array,\n\tComplex128Array\n];\n\n\n// EXPORTS //\n\nmodule.exports = CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n// Note: order should match `ctors` order\nvar DTYPES = [\n\t'float64',\n\t'float32',\n\t'int32',\n\t'uint32',\n\t'int16',\n\t'uint16',\n\t'int8',\n\t'uint8',\n\t'uint8c',\n\t'complex64',\n\t'complex128'\n];\n\n\n// EXPORTS //\n\nmodule.exports = DTYPES;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the data type of an ndarray data buffer.\n*\n* @module @stdlib/ndarray/base/buffer-dtype\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var dtype = require( '@stdlib/ndarray/base/buffer-dtype' );\n*\n* var buf = new Float64Array( 10 );\n*\n* var dt = dtype( buf );\n* // returns 'float64'\n*\n* dt = dtype( {} );\n* // returns 'generic'\n*\n* dt = dtype( 'beep' );\n* // returns null\n*/\n\n// MODULES //\n\nvar dtype = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = dtype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar format = require( '@stdlib/string/format' );\n\n\n// FUNCTIONS //\n\n/**\n* Recursively (and eagerly) attempts to resolve nested array dimensions.\n*\n* @private\n* @param {Array} shape - output array\n* @param {ArrayLikeObject} arr - array\n* @returns {Array} shape array\n*/\nfunction recurse( shape, arr ) {\n\tvar v = arr[ 0 ];\n\tif ( isArrayLikeObject( v ) ) {\n\t\tshape.push( v.length );\n\t\trecurse( shape, v );\n\t}\n\treturn shape;\n}\n\n/**\n* Recursively verifies that all nested arrays have consistent dimensions.\n*\n* @private\n* @param {PositiveInteger} ndims - number of dimensions\n* @param {Array} shape - shape array\n* @param {NonNegativeInteger} d - dimension\n* @param {ArrayLikeObject} arr - array element to verify\n* @param {boolean} flg - boolean indicating whether to continue recursing\n* @returns {NonNegativeInteger} number of consistent dimensions\n*/\nfunction check( ndims, shape, d, arr, flg ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\n\t// Get the size of the current dimension:\n\tlen = shape[ d ];\n\n\t// Ensure that each array element is an array of the same size:\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tv = arr[ i ];\n\n\t\t// If the array element is not an array or is not the same size, we have found an inconsistent dimension:\n\t\tif ( !isArrayLikeObject( v ) || v.length !== len ) {\n\t\t\t// `d` is one more than the index of the last consistent dimension and thus equal to the number of consistent dimensions:\n\t\t\treturn d;\n\t\t}\n\t\t// Recursively examine nested elements:\n\t\tif ( flg ) {\n\t\t\tv = check( ndims, shape, d+1, v, d+1 < ndims-1 );\n\t\t\tif ( v < ndims ) {\n\t\t\t\t// Propagate the number of consistent dimensions up the recursion chain...\n\t\t\t\treturn v;\n\t\t\t}\n\t\t}\n\t}\n\treturn ndims;\n}\n\n\n// MAIN //\n\n/**\n* Determines (nested) array dimensions.\n*\n* @param {ArrayLikeObject} arr - array\n* @throws {TypeError} must provide an array\n* @returns {Array} array shape\n*\n* @example\n* var arr = [ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8, 9 ] ];\n*\n* var shape = arrayShape( arr );\n* // returns [ 3, 3 ]\n*\n* @example\n* var arr = [ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8 ] ];\n*\n* var shape = arrayShape( arr );\n* // returns [ 3 ]\n*\n* @example\n* var arr = [ [ 1, 2, 3 ], [ 4, 5, 6 ], null ];\n*\n* var shape = arrayShape( arr );\n* // returns [ 3 ]\n*/\nfunction arrayShape( arr ) {\n\tvar shape;\n\tvar ndims;\n\n\tif ( !isArrayLikeObject( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an array-like object. Value: `%s`.', arr ) );\n\t}\n\t// Initialize the shape/dimensions array:\n\tshape = [ arr.length ];\n\n\t// Eagerly determine array dimensions:\n\trecurse( shape, arr );\n\tndims = shape.length;\n\n\t// Check that all array element dimensions are consistent:\n\tif ( ndims > 1 ) {\n\t\t// If `check()` returns a value less than `ndims`, trim off the inconsistent dimensions:\n\t\tshape.length = check( ndims, shape, 1, arr, ndims > 2 );\n\t}\n\treturn shape;\n}\n\n\n// EXPORTS //\n\nmodule.exports = arrayShape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine (nested) array dimensions.\n*\n* @module @stdlib/array/shape\n*\n* @example\n* var arrayShape = require( '@stdlib/array/shape' );\n*\n* var arr = [ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8, 9 ] ];\n*\n* var shape = arrayShape( arr );\n* // returns [ 3, 3 ]\n*\n* @example\n* var arrayShape = require( '@stdlib/array/shape' );\n*\n* var arr = [ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8 ] ];\n*\n* var shape = arrayShape( arr );\n* // returns [ 3 ]\n*\n* @example\n* var arrayShape = require( '@stdlib/array/shape' );\n*\n* var arr = [ [ 1, 2, 3 ], [ 4, 5, 6 ], null ];\n*\n* var shape = arrayShape( arr );\n* // returns [ 3 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar FLOAT64_MAX = require( '@stdlib/constants/float64/max' );\n\n\n// MAIN //\n\nvar defaults = {\n\t'copy': false,\n\t'depth': FLOAT64_MAX\n};\n\n\n// EXPORTS //\n\nmodule.exports = defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for function options\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.depth] - depth to flatten\n* @param {boolean} [options.copy] - boolean indicating whether to deep copy array elements\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'depth': 10,\n*     'copy': false\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'depth' ) ) {\n\t\topts.depth = options.depth;\n\t\tif ( !isNonNegativeInteger( opts.depth ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'depth', opts.depth ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\topts.copy = options.copy;\n\t\tif ( !isBoolean( opts.copy ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', opts.copy ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\n\n\n// MAIN //\n\n/**\n* Recursively flattens an array.\n*\n* @private\n* @param {Array} out - output array\n* @param {ArrayLikeObject} arr - input array\n* @param {NonNegativeInteger} depth - recursion depth\n* @returns {Array} output array\n*/\nfunction recurse( out, arr, depth ) {\n\tvar v;\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tv = arr[ i ];\n\t\tif ( depth && isArrayLikeObject( v ) ) {\n\t\t\trecurse( out, v, depth-1 );\n\t\t} else {\n\t\t\tout.push( v );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = recurse;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar copy = require( './../../copy' );\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar format = require( '@stdlib/string/format' );\nvar defaults = require( './defaults.js' );\nvar validate = require( './validate.js' );\nvar recurse = require( './recurse.js' );\n\n\n// MAIN //\n\n/**\n* Flattens an array.\n*\n* @param {ArrayLikeObject} arr - input array\n* @param {Options} [options] - function options\n* @param {NonNegativeInteger} [options.depth] - maximum depth to flatten\n* @param {boolean} [options.copy=false] - boolean indicating whether to deep copy array elements\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Array} flattened array\n*\n* @example\n* var arr = [ 1, [2, [3, [4, [ 5 ], 6], 7], 8], 9 ];\n*\n* var out = flattenArray( arr );\n* // returns [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]\n*/\nfunction flattenArray( arr, options ) {\n\tvar opts;\n\tvar err;\n\tvar out;\n\tif ( !isArrayLikeObject( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\topts = {\n\t\t'copy': defaults.copy,\n\t\t'depth': defaults.depth\n\t};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.depth === 0 ) {\n\t\tout = arr;\n\t} else {\n\t\tout = recurse( [], arr, opts.depth );\n\t}\n\tif ( opts.copy ) {\n\t\treturn copy( out );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = flattenArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only positive integers.\n*\n* @module @stdlib/assert/is-positive-integer-array\n*\n* @example\n* var isPositiveIntegerArray = require( '@stdlib/assert/is-positive-integer-array' );\n*\n* var bool = isPositiveIntegerArray( [ 3.0, new Number(3.0) ] );\n* // returns true\n*\n* bool = isPositiveIntegerArray( [ 3.0, '3.0' ] );\n* // returns false\n*\n* @example\n* var isPositiveIntegerArray = require( '@stdlib/assert/is-positive-integer-array' ).primitives;\n*\n* var bool = isPositiveIntegerArray( [ 1.0, 2.0, 10.0 ] );\n* // returns true\n*\n* bool = isPositiveIntegerArray( [ 3.0, new Number(1.0) ] );\n* // returns false\n*\n* @example\n* var isPositiveIntegerArray = require( '@stdlib/assert/is-positive-integer-array' ).objects;\n*\n* var bool = isPositiveIntegerArray( [ new Number(3.0), new Number(1.0) ] );\n* // returns true\n*\n* bool = isPositiveIntegerArray( [ 1.0, 2.0, 10.0 ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isPositiveInteger = require( './../../is-positive-integer' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\n\n\n// MAIN //\n\nvar isPositiveIntegerArray = arrayfun( isPositiveInteger );\nsetReadOnly( isPositiveIntegerArray, 'primitives', arrayfun( isPositiveInteger.isPrimitive ) );\nsetReadOnly( isPositiveIntegerArray, 'objects', arrayfun( isPositiveInteger.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveIntegerArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns a function to flatten an array containing elements all having the same dimensions.\n*\n* @private\n* @param {PositiveIntegerArray} dims - dimensions\n* @returns {Function} flatten function\n*/\nfunction genFcn( dims ) {\n\tvar len;\n\tvar n;\n\tvar f;\n\tvar i;\n\n\t// Code generation. Start with the function definition:\n\tf = 'return function flattenArray(x){';\n\n\t// Create the function body...\n\tlen = dims.length;\n\tn = len - 1;\n\n\t// Create the variables...\n\tf += 'var o=[];var ';\n\tfor ( i = 0; i < len; i++ ) {\n\t\tf += 'i' + i;\n\t\tif ( i < n ) {\n\t\t\tf += ',';\n\t\t} else {\n\t\t\tf += ';';\n\t\t}\n\t}\n\t// Create the nested for loops...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tf += 'for(i' + i + '=0;i' + i + '<' + dims[ i ] + ';i' + i + '++){';\n\t}\n\t// Create the code which accesses the nested array values and pushes them onto the flattened array.\n\tf += 'o.push(x';\n\tfor ( i = 0; i < len; i++ ) {\n\t\tf += '[i' + i + ']';\n\t}\n\tf += ');';\n\n\t// Closing braces...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tf += '}';\n\t}\n\tf += 'return o;';\n\n\t// Close the function:\n\tf += '}';\n\n\t// Add a source directive for debugging:\n\tf += '//# sourceURL=flatten_array.gen_fcn.js';\n\n\t// Create the function in the global scope:\n\treturn ( new Function( f ) )(); // eslint-disable-line no-new-func\n\n\t/*\n\t* e.g.,\n\t*\n\t*   function flattenArray( x ) {\n\t*       var o = [];\n\t*       var i0, i1;\n\t*       for ( i0 = 0; i0 < 2; i0++ ) {\n\t*           for ( i1 = 0; i1 < 2; i1++ ) {\n\t*               o.push( x[i0][i1] );\n\t*           }\n\t*       }\n\t*       return o;\n\t*   }\n\t*/\n}\n\n\n// EXPORTS //\n\nmodule.exports = genFcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns a function to flatten an array.\n*\n* @private\n* @param {Function} flatten - flatten function\n* @returns {Function} wrapped flatten function\n*/\nfunction wrap( flatten ) {\n\treturn flattenArray;\n\n\t/**\n\t* Flattens an array.\n\t*\n\t* @private\n\t* @param {ArrayLikeObject} arr - array to flatten\n\t* @throws {TypeError} must provide an array-like object\n\t* @returns {Array} flattened array\n\t*/\n\tfunction flattenArray( arr ) {\n\t\tif ( !isArrayLikeObject( arr ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an array-like object. Value: `%s`.', arr ) );\n\t\t}\n\t\treturn flatten( arr );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar format = require( '@stdlib/string/format' );\nvar copy = require( './../../copy' );\n\n\n// MAIN //\n\n/**\n* Returns a function to flatten an array and deep copy.\n*\n* @private\n* @param {Function} flatten - flatten function\n* @returns {Function} wrapped flatten function\n*/\nfunction wrap( flatten ) {\n\treturn flattenArray;\n\n\t/**\n\t* Flattens an array and deep copies array elements.\n\t*\n\t* @private\n\t* @param {ArrayLikeObject} arr - array to flatten\n\t* @throws {TypeError} must provide an array-like object\n\t* @returns {Array} flattened array\n\t*/\n\tfunction flattenArray( arr ) {\n\t\tif ( !isArrayLikeObject( arr ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an array-like object. Value: `%s`.', arr ) );\n\t\t}\n\t\treturn copy( flatten( arr ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveIntegerArray = require( '@stdlib/assert/is-positive-integer-array' ).primitives;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar defaults = require( './defaults.js' );\nvar genFcn = require( './gen_fcn.js' );\nvar wrapFlatten = require( './wrap_flatten.js' );\nvar wrapFlattenCopy = require( './wrap_flatten_copy.js' );\n\n\n// MAIN //\n\n/**\n* Returns a function for flattening arrays having specified dimensions.\n*\n* @param {PositiveIntegerArray} dims - dimensions\n* @param {Options} [options] - function options\n* @param {boolean} [options.copy=false] - boolean indicating whether to deep copy array elements\n* @throws {TypeError} first argument must be an array of positive integers\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Function} flatten function\n*\n* @example\n* var flatten = factory( [2,2], {\n*     'copy': false\n* });\n*\n* var out = flatten( [[1,2],[3,4]] );\n* // returns [ 1, 2, 3, 4 ]\n*\n* out = flatten( [[5,6],[7,8]] );\n* // returns [ 5, 6, 7, 8 ]\n*/\nfunction factory( dims, options ) {\n\tvar copyFLG;\n\tvar flatten;\n\tif ( !isPositiveIntegerArray( dims ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array of positive integers. Value: `%s`.', dims ) );\n\t}\n\tcopyFLG = defaults.copy;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\t\tcopyFLG = options.copy;\n\t\t\tif ( !isBoolean( copyFLG ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', copyFLG ) );\n\t\t\t}\n\t\t}\n\t}\n\tflatten = genFcn( dims );\n\tif ( copyFLG ) {\n\t\treturn wrapFlattenCopy( flatten );\n\t}\n\treturn wrapFlatten( flatten );\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Flatten an array.\n*\n* @module @stdlib/utils/flatten-array\n*\n* @example\n* var flattenArray = require( '@stdlib/utils/flatten-array' );\n*\n* var arr = [ 1, [2, [3, [4, [ 5 ], 6], 7], 8], 9 ];\n*\n* var out = flattenArray( arr );\n* // returns [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]\n*\n* @example\n* var flattenArray = require( '@stdlib/utils/flatten-array' );\n*\n* var flatten = flattenArray.factory( [2,2], {\n*     'copy': false\n* });\n*\n* var out = flatten( [[1,2],[3,4]] );\n* // returns [ 1, 2, 3, 4 ]\n*\n* out = flatten( [[5,6],[7,8]] );\n* // returns [ 5, 6, 7, 8 ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( './../../define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\n\n\n// MAIN //\n\n/**\n* Tests (loosely) if an input value is an array-like object.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if an input value is an array-like object\n*\n* @example\n* var bool = isArrayLikeObject( [] );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( '' );\n* // returns false\n*/\nfunction isArrayLikeObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length < PINF\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArrayLikeObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar bufferCtors = require( './../../base/buffer-ctors' );\nvar allocUnsafe = require( '@stdlib/buffer/alloc-unsafe' );\n\n\n// MAIN //\n\n/**\n* Casts buffer elements by copying those elements to a buffer of another data type.\n*\n* @private\n* @param {(Array|TypedArray|Buffer)} buffer - input buffer\n* @param {NonNegativeInteger} len - number of elements to cast\n* @param {string} dtype - data type\n* @returns {(Array|TypedArray|Buffer)} output buffer\n*\n* @example\n* var b = castBuffer( [ 1.0, 2.0, 3.0 ], 3, 'float64' );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0 ]\n*/\nfunction castBuffer( buffer, len, dtype ) {\n\tvar ctor;\n\tvar out;\n\tvar i;\n\n\tctor = bufferCtors( dtype );\n\tif ( dtype === 'generic') {\n\t\tout = [];\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tout.push( buffer[ i ] );\n\t\t}\n\t} else if ( dtype === 'binary' ) {\n\t\tout = allocUnsafe( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tout[ i ] = buffer[ i ];\n\t\t}\n\t} else {\n\t\tout = new ctor( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tout[ i ] = buffer[ i ]; // TODO: wrap and use accessors here and above\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = castBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar bufferCtors = require( './../../base/buffer-ctors' );\nvar allocUnsafe = require( '@stdlib/buffer/alloc-unsafe' );\n\n\n// FUNCTIONS //\n\n/**\n* Copies a \"generic\" ndarray view.\n*\n* @private\n* @param {ndarray} arr - input ndarray\n* @returns {Array} output data buffer\n*/\nfunction generic( arr ) {\n\tvar len;\n\tvar out;\n\tvar i;\n\n\tlen = arr.length;\n\tout = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout.push( arr.get( i ) ); // FIXME: what if `arr` has more than one dimensions?\n\t}\n\treturn out;\n}\n\n/**\n* Copies a \"binary\" ndarray view.\n*\n* @private\n* @param {ndarray} arr - input ndarray\n* @returns {Array} output data buffer\n*/\nfunction binary( arr ) {\n\tvar len;\n\tvar out;\n\tvar i;\n\n\tlen = arr.length;\n\tout = allocUnsafe( len );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout[ i ] = arr.get( i ); // FIXME: what if `arr` has more than one dimensions?\n\t}\n\treturn out;\n}\n\n/**\n* Copies a \"typed\" ndarray view.\n*\n* @private\n* @param {ndarray} arr - input ndarray\n* @param {string} dtype - data type\n* @returns {Array} output data buffer\n*/\nfunction typed( arr, dtype ) {\n\tvar ctor;\n\tvar len;\n\tvar out;\n\tvar i;\n\n\tctor = bufferCtors( dtype );\n\tlen = arr.length;\n\tout = new ctor( len ); // FIXME: need to account for complex number arrays; in which case, we may want to do something similar to `array/convert`\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout[ i ] = arr.get( i ); // FIXME: what if `arr` has more than one dimensions?\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Copies an ndarray view to a data buffer.\n*\n* @private\n* @param {ndarray} arr - input ndarray\n* @param {string} dtype - data type\n* @returns {(Array|TypedArray|Buffer)} output data buffer\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var buffer = [ 1.0, 2.0, 3.0 ];\n* var shape = [ 3 ];\n* var strides = [ -1 ];\n* var vec = ndarray( 'generic', buffer, shape, strides, 2, 'row-major' );\n*\n* var b = copyView( vec, 'float64' );\n* // returns <Float64Array>[ 3.0, 2.0, 1.0 ]\n*/\nfunction copyView( arr, dtype ) {\n\t// TODO: handle complex number dtypes!!\n\tif ( dtype === 'generic') {\n\t\treturn generic( arr );\n\t}\n\tif ( dtype === 'binary' ) {\n\t\treturn binary( arr );\n\t}\n\treturn typed( arr, dtype );\n}\n\n\n// EXPORTS //\n\nmodule.exports = copyView;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Prepends singleton dimensions in order to satisfy a minimum number of dimensions.\n*\n* @private\n* @param {NonNegativeInteger} ndims - number of dimensions\n* @param {Array} shape - array dimensions\n* @param {NonNegativeInteger} ndmin - minimum number of dimensions\n* @returns {Array} output shape array\n*/\nfunction expandShape( ndims, shape, ndmin ) {\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < ndmin-ndims; i++ ) {\n\t\tout.push( 1 );\n\t}\n\tfor ( i = 0; i < ndims; i++ ) {\n\t\tout.push( shape[ i ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = expandShape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\n\n\n// MAIN //\n\n/**\n* Expands a strides array to accommodate an expanded array shape (i.e., an array shape with prepended singleton dimensions).\n*\n* @private\n* @param {NonNegativeInteger} ndims - number of dimensions\n* @param {Array} shape - expanded array shape\n* @param {Array} strides - strides array\n* @param {string} order - memory layout order\n* @returns {Array} output strides array\n*\n* @example\n* var out = expandStrides( 4, [ 1, 1, 2, 2 ], [ 1, 2 ], 'column-major' );\n* // returns [ 1, 1, 1, 2 ]\n*\n* @example\n* var out = expandStrides( 4, [ 1, 1, 2, 2 ], [ 2, 1 ], 'row-major' );\n* // returns [ 4, 4, 2, 1 ]\n*/\nfunction expandStrides( ndims, shape, strides, order ) {\n\tvar out;\n\tvar N;\n\tvar s;\n\tvar i;\n\tvar j;\n\n\tN = strides.length;\n\tj = ndims - N;\n\tout = [];\n\tif ( order === 'row-major' ) {\n\t\ts = abs( strides[ 0 ] ) * shape[ j ]; // at `j` is the size of the first non-prepended dimension\n\t\tfor ( i = 0; i < j; i++ ) {\n\t\t\tout.push( s );\n\t\t}\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tout.push( strides[ i ] );\n\t\t}\n\t} else { // column-major\n\t\tfor ( i = 0; i < j; i++ ) {\n\t\t\tout.push( 1 );\n\t\t}\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tout.push( strides[ i ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = expandStrides;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isArray = require( '@stdlib/assert/is-array' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isndarrayLike = require( '@stdlib/assert/is-ndarray-like' );\nvar shape2strides = require( './../../base/shape2strides' );\nvar strides2offset = require( './../../base/strides2offset' );\nvar strides2order = require( './../../base/strides2order' );\nvar numel = require( './../../base/numel' );\nvar ndarray = require( './../../ctor' );\nvar isDataType = require( './../../base/assert/is-data-type' );\nvar isOrder = require( './../../base/assert/is-order' );\nvar isCastingMode = require( './../../base/assert/is-casting-mode' );\nvar isAllowedCast = require( './../../base/assert/is-allowed-data-type-cast' );\nvar createBuffer = require( './../../base/buffer' );\nvar getType = require( './../../base/buffer-dtype' );\nvar arrayShape = require( '@stdlib/array/shape' );\nvar flattenArray = require( '@stdlib/utils/flatten-array' );\nvar format = require( '@stdlib/string/format' );\nvar isArrayLikeObject = require( './is_array_like_object.js' );\nvar defaults = require( './defaults.json' );\nvar castBuffer = require( './cast_buffer.js' );\nvar copyView = require( './copy_view.js' );\nvar expandShape = require( './expand_shape.js' );\nvar expandStrides = require( './expand_strides.js' );\n\n\n// MAIN //\n\n/**\n* Returns a multidimensional array.\n*\n* @param {(ArrayLikeObject|TypedArrayLike|Buffer|ndarrayLike)} [buffer] - data source\n* @param {Options} [options] - function options\n* @param {(ArrayLikeObject|TypedArrayLike|Buffer|ndarrayLike)} [options.buffer] - data source\n* @param {string} [options.dtype=\"float64\"] - underlying storage data type (if the input data is not of the same type, this option specifies the data type to which to cast the input data)\n* @param {string} [options.order=\"row-major\"] - specifies the memory layout of the array as either row-major (C-style) or column-major (Fortran-style)\n* @param {NonNegativeIntegerArray} [options.shape] - array shape\n* @param {string} [options.mode=\"throw\"] - specifies how to handle indices which exceed array dimensions\n* @param {StringArray} [options.submode=[\"throw\"]] - specifies how to handle subscripts which exceed array dimensions on a per dimension basis\n* @param {boolean} [options.copy=false] - boolean indicating whether to copy source data to a new data buffer\n* @param {boolean} [options.flatten=true] - boolean indicating whether to automatically flatten generic array data sources\n* @param {NonNegativeInteger} [options.ndmin=0] - minimum number of dimensions\n* @param {string} [options.casting=\"safe\"] - casting rule used to determine what constitutes an acceptable cast\n* @param {boolean} [options.readonly=false] - boolean indicating if an array should be read-only\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {Error} must provide either an array shape, data source, or both\n* @throws {Error} invalid cast\n* @throws {RangeError} data source must be compatible with specified meta data\n* @returns {ndarray} ndarray instance\n*\n* @example\n* var arr = array( [ [ 1, 2 ], [ 3, 4 ] ] );\n* // returns <ndarray>\n*\n* var v = arr.get( 0, 0 );\n* // returns 1\n*\n* @example\n* var opts = {\n*     'dtype': 'generic',\n*     'flatten': false\n* };\n*\n* var arr = array( [ [ 1, 2 ], [ 3, 4 ] ], opts );\n* // returns <ndarray>\n*\n* var v = arr.get( 0 );\n* // returns [ 1, 2 ]\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var opts = {\n*     'shape': [ 2, 2 ]\n* };\n*\n* var arr = array( new Float64Array( [ 1.0, 2.0, 3.0, 4.0 ] ), opts );\n* // returns <ndarray>\n*\n* var v = arr.get( 0, 0 );\n* // returns 1.0\n*/\nfunction array() {\n\tvar options;\n\tvar strides;\n\tvar buffer;\n\tvar offset;\n\tvar order;\n\tvar dtype;\n\tvar btype;\n\tvar shape;\n\tvar ndims;\n\tvar nopts;\n\tvar opts;\n\tvar len;\n\tvar ord;\n\tvar FLG;\n\n\tif ( arguments.length === 1 ) {\n\t\tif ( isArrayLikeObject( arguments[ 0 ] ) ) {\n\t\t\tbuffer = arguments[ 0 ];\n\t\t\toptions = {};\n\t\t} else {\n\t\t\toptions = arguments[ 0 ];\n\t\t\tif ( !isObject( options ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide either a valid data source, options argument, or both. Value: `%s`.', options ) );\n\t\t\t}\n\t\t\tif ( hasOwnProp( options, 'buffer' ) ) {\n\t\t\t\tbuffer = options.buffer;\n\t\t\t\tif ( !isArrayLikeObject( buffer ) ) { // weak test\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be an array-like object, typed-array-like, a Buffer, or an ndarray. Option: `%s`.', 'buffer', buffer ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tbuffer = arguments[ 0 ];\n\t\tif ( !isArrayLikeObject( buffer ) ) { // weak test\n\t\t\tthrow new TypeError( format( 'invalid option. Data source must be an array-like object, typed-array-like, a Buffer, or an ndarray. Value: `%s`.', buffer ) );\n\t\t}\n\t\toptions = arguments[ 1 ];\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\t// Note: we ignore whether `options` has a `buffer` property\n\t}\n\tif ( buffer ) {\n\t\tif ( isndarrayLike( buffer ) ) {\n\t\t\tbtype = buffer.dtype;\n\t\t\tFLG = true;\n\t\t} else {\n\t\t\tbtype = getType( buffer );\n\t\t\tFLG = false;\n\t\t}\n\t}\n\tnopts = {};\n\topts = {};\n\n\t// Validate some options before others...\n\tif ( hasOwnProp( options, 'casting' ) ) {\n\t\topts.casting = options.casting;\n\t\tif ( !isCastingMode( opts.casting ) ) {\n\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a recognized casting mode. Option: `%s`.', 'casting', opts.casting ) );\n\t\t}\n\t} else {\n\t\topts.casting = defaults.casting;\n\t}\n\tif ( hasOwnProp( options, 'flatten' ) ) {\n\t\topts.flatten = options.flatten;\n\t\tif ( !isBoolean( opts.flatten ) ) {\n\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'flatten', opts.flatten ) );\n\t\t}\n\t} else {\n\t\topts.flatten = defaults.flatten;\n\t}\n\tif ( hasOwnProp( options, 'ndmin' ) ) {\n\t\topts.ndmin = options.ndmin;\n\t\tif ( !isNonNegativeInteger( opts.ndmin ) ) {\n\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'ndmin', opts.ndmin ) );\n\t\t}\n\t\t// TODO: validate that minimum number of dimensions does not exceed the maximum number of possible dimensions (in theory, infinite; in practice, determined by max array length; see https://github.com/stdlib-js/stdlib/blob/ac350059877c036640775d6b30d0e98e840d07cf/lib/node_modules/%40stdlib/ndarray/ctor/lib/main.js#L57)\n\t} else {\n\t\topts.ndmin = defaults.ndmin;\n\t}\n\n\t// Validate the remaining options...\n\tif ( hasOwnProp( options, 'dtype' ) ) {\n\t\tdtype = options.dtype;\n\t\tif ( !isDataType( dtype ) ) {\n\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a recognized data type. Option: `%s`.', 'dtype', dtype ) );\n\t\t}\n\t\tif ( btype && !isAllowedCast( btype, dtype, opts.casting ) ) {\n\t\t\tthrow new Error( format( 'invalid option. Data type cast is not allowed. Casting mode: `%s`. From: `%s`. To: `%s`.', opts.casting, btype, dtype ) );\n\t\t}\n\t} else if ( btype ) {\n\t\t// TODO: reconcile difference in behavior when provided a generic array and no `dtype` option. Currently, we cast here, but do not allow casting a generic array (by default) when explicitly providing a `dtype` option.\n\n\t\t// Only cast generic array data sources when not provided an ndarray...\n\t\tif ( !FLG && btype === 'generic' ) {\n\t\t\tdtype = defaults.dtype;\n\t\t} else {\n\t\t\tdtype = btype;\n\t\t}\n\t} else {\n\t\tdtype = defaults.dtype;\n\t}\n\tif ( hasOwnProp( options, 'order' ) ) {\n\t\torder = options.order;\n\t\tif ( order === 'any' || order === 'same' ) {\n\t\t\tif ( FLG ) {\n\t\t\t\t// If the user indicated that \"any\" order suffices (meaning the user does not care about ndarray order), then we use the default order, unless the input ndarray is either unequivocally \"row-major\" or \"column-major\" or configured as such....\n\t\t\t\tif ( order === 'any' ) {\n\t\t\t\t\t// Compute the layout order in order to ascertain whether an ndarray can be considered both \"row-major\" and \"column-major\":\n\t\t\t\t\tord = strides2order( buffer.strides );\n\n\t\t\t\t\t// If the ndarray can be considered both \"row-major\" and \"column-major\", then use the default order; otherwise, use the ndarray's stated layout order...\n\t\t\t\t\tif ( ord === 3 ) {\n\t\t\t\t\t\torder = defaults.order;\n\t\t\t\t\t} else {\n\t\t\t\t\t\torder = buffer.order;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Otherwise, use the same order as the provided ndarray...\n\t\t\t\telse if ( order === 'same' ) {\n\t\t\t\t\torder = buffer.order;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\torder = defaults.order;\n\t\t\t}\n\t\t} else if ( !isOrder( order ) ) {\n\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a recognized order. Option: `%s`.', 'order', order ) );\n\t\t}\n\t} else {\n\t\torder = defaults.order;\n\t}\n\tif ( hasOwnProp( options, 'mode' ) ) {\n\t\tnopts.mode = options.mode;\n\t} else {\n\t\tnopts.mode = defaults.mode;\n\t}\n\tif ( hasOwnProp( options, 'submode' ) ) {\n\t\tnopts.submode = options.submode;\n\t} else {\n\t\tnopts.submode = [ nopts.mode ];\n\t}\n\tif ( hasOwnProp( options, 'readonly' ) ) {\n\t\tnopts.readonly = options.readonly;\n\t} else {\n\t\tnopts.readonly = defaults.readonly;\n\t}\n\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\topts.copy = options.copy;\n\t\tif ( !isBoolean( opts.copy ) ) {\n\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', opts.copy ) );\n\t\t}\n\t} else {\n\t\topts.copy = defaults.copy;\n\t}\n\t// If not provided a shape, infer from a provided data source...\n\tif ( hasOwnProp( options, 'shape' ) ) {\n\t\tshape = options.shape;\n\t\tif ( !isArrayLikeObject( shape ) ) { // weak test\n\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be an array-like object containing nonnegative integers. Option: `%s`.', 'shape', shape ) );\n\t\t}\n\t\tndims = shape.length;\n\t\tlen = numel( shape );\n\t} else if ( buffer ) {\n\t\tif ( FLG ) {\n\t\t\tshape = buffer.shape;\n\t\t\tndims = buffer.ndims;\n\t\t\tlen = buffer.length;\n\t\t} else if ( opts.flatten && isArray( buffer ) ) {\n\t\t\tshape = arrayShape( buffer );\n\t\t\tndims = shape.length;\n\t\t\tlen = numel( shape );\n\t\t} else {\n\t\t\tndims = 1;\n\t\t\tlen = buffer.length;\n\t\t\tshape = [ len ]; // assume a 1-dimensional array (vector)\n\t\t}\n\t} else {\n\t\tthrow new Error( 'invalid arguments. Must provide either a data source, array shape, or both.' );\n\t}\n\t// Adjust the array shape to satisfy the minimum number of dimensions...\n\tif ( ndims < opts.ndmin ) {\n\t\tshape = expandShape( ndims, shape, opts.ndmin );\n\t\tndims = opts.ndmin;\n\t}\n\t// If not provided a data buffer, create it; otherwise, see if we need to cast a provided data buffer to another data type or perform a copy...\n\tif ( FLG ) {\n\t\tif ( buffer.length !== len ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Array shape is incompatible with provided data source. Number of data source elements does not match array shape.' );\n\t\t}\n\t\tif ( btype !== dtype || opts.copy ) {\n\t\t\tbuffer = copyView( buffer, dtype );\n\t\t} else {\n\t\t\tstrides = buffer.strides;\n\t\t\toffset = buffer.offset;\n\t\t\tbuffer = buffer.data;\n\t\t\tif ( strides.length < ndims ) {\n\t\t\t\t// Account for augmented dimensions (note: expanding the strides array to account for prepended singleton dimensions does **not** affect the index offset):\n\t\t\t\tstrides = expandStrides( ndims, shape, strides, order );\n\t\t\t}\n\t\t}\n\t} else if ( buffer ) {\n\t\tif ( btype === 'generic' && opts.flatten ) {\n\t\t\tbuffer = flattenArray( buffer );\n\t\t}\n\t\tif ( buffer.length !== len ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Array shape is incompatible with provided data source. Number of data source elements does not match array shape.' );\n\t\t}\n\t\tif ( btype !== dtype || opts.copy ) {\n\t\t\tbuffer = castBuffer( buffer, len, dtype );\n\t\t}\n\t} else {\n\t\tbuffer = createBuffer( dtype, len );\n\t}\n\t// If we have yet to determine array strides, we assume that we can compute the strides, along with the index offset, for a **contiguous** data source based solely on the array shape and specified memory layout order...\n\tif ( strides === void 0 ) {\n\t\tstrides = shape2strides( shape, order );\n\t\toffset = strides2offset( shape, strides );\n\t}\n\treturn new ndarray( dtype, buffer, shape, strides, offset, order, nopts );\n}\n\n\n// EXPORTS //\n\nmodule.exports = array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Multidimensional array.\n*\n* @module @stdlib/ndarray/array\n*\n* @example\n* var array = require( '@stdlib/ndarray/array' );\n*\n* var arr = array( [ [ 1, 2 ], [ 3, 4 ] ] );\n* // returns <ndarray>\n*\n* var v = arr.get( 0, 0 );\n* // returns 1\n*\n* @example\n* var array = require( '@stdlib/ndarray/array' );\n*\n* var opts = {\n*     'dtype': 'generic',\n*     'flatten': false\n* };\n*\n* var arr = array( [ [ 1, 2 ], [ 3, 4 ] ], opts );\n* // returns <ndarray>\n*\n* var v = arr.get( 0 );\n* // returns [ 1, 2 ]\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var array = require( '@stdlib/ndarray/array' );\n*\n* var opts = {\n*     'shape': [ 2, 2 ]\n* };\n*\n* var arr = array( new Float64Array( [ 1.0, 2.0, 3.0, 4.0 ] ), opts );\n* // returns <ndarray>\n*\n* var v = arr.get( 0, 0 );\n* // returns 1.0\n*/\n\n// MODULES //\n\nvar array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isNegativeZero = require( '@stdlib/math/base/assert/is-negative-zero' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a minimum value.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmin();\n*\n* var min = accumulator();\n* // returns null\n*\n* min = accumulator( 3.14 );\n* // returns 3.14\n*\n* min = accumulator( -5.0 );\n* // returns -5.0\n*\n* min = accumulator( 10.1 );\n* // returns -5.0\n*\n* min = accumulator();\n* // returns -5.0\n*/\nfunction incrmin() {\n\tvar min;\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated minimum value. If not provided a value, the accumulator function returns the current min.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} min value or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn ( min === void 0 ) ? null : min;\n\t\t}\n\t\tif (\n\t\t\tmin === void 0 ||\n\t\t\tx < min ||\n\t\t\tisnan( x ) ||\n\t\t\t( x === min && isNegativeZero( x ) )\n\t\t) {\n\t\t\tmin = x;\n\t\t}\n\t\treturn min;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a minimum value incrementally.\n*\n* @module @stdlib/stats/incr/min\n*\n* @example\n* var incrmin = require( '@stdlib/stats/incr/min' );\n*\n* var accumulator = incrmin();\n*\n* var min = accumulator();\n* // returns null\n*\n* min = accumulator( 3.14 );\n* // returns 3.14\n*\n* min = accumulator( -5.0 );\n* // returns -5.0\n*\n* min = accumulator( 10.1 );\n* // returns -5.0\n*\n* min = accumulator();\n* // returns -5.0\n*/\n\n// MODULES //\n\nvar incrmin = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\n\n\n// MAIN //\n\n/**\n* Computes the sum of strided array elements using an improved Kahan–Babuška algorithm.\n*\n* ## Method\n*\n* -   This implementation uses an \"improved Kahan–Babuška algorithm\", as described by Neumaier (1974).\n*\n* ## References\n*\n* -   Neumaier, Arnold. 1974. \"Rounding Error Analysis of Some Methods for Summing Finite Sums.\" _Zeitschrift Für Angewandte Mathematik Und Mechanik_ 54 (1): 39–51. doi:[10.1002/zamm.19740540106](https://doi.org/10.1002/zamm.19740540106).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} sum\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = gsumkbn( N, x, 1 );\n* // returns 1.0\n*/\nfunction gsumkbn( N, x, stride ) {\n\tvar sum;\n\tvar ix;\n\tvar v;\n\tvar t;\n\tvar c;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn x[ 0 ];\n\t}\n\tif ( stride < 0 ) {\n\t\tix = (1-N) * stride;\n\t} else {\n\t\tix = 0;\n\t}\n\tsum = 0.0;\n\tc = 0.0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv = x[ ix ];\n\t\tt = sum + v;\n\t\tif ( abs( sum ) >= abs( v ) ) {\n\t\t\tc += (sum-t) + v;\n\t\t} else {\n\t\t\tc += (v-t) + sum;\n\t\t}\n\t\tsum = t;\n\t\tix += stride;\n\t}\n\treturn sum + c;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gsumkbn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\n\n\n// MAIN //\n\n/**\n* Computes the sum of strided array elements using an improved Kahan–Babuška algorithm.\n*\n* ## Method\n*\n* -   This implementation uses an \"improved Kahan–Babuška algorithm\", as described by Neumaier (1974).\n*\n* ## References\n*\n* -   Neumaier, Arnold. 1974. \"Rounding Error Analysis of Some Methods for Summing Finite Sums.\" _Zeitschrift Für Angewandte Mathematik Und Mechanik_ 54 (1): 39–51. doi:[10.1002/zamm.19740540106](https://doi.org/10.1002/zamm.19740540106).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} sum\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = gsumkbn( N, x, 2, 1 );\n* // returns 5.0\n*/\nfunction gsumkbn( N, x, stride, offset ) {\n\tvar sum;\n\tvar ix;\n\tvar v;\n\tvar t;\n\tvar c;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn x[ offset ];\n\t}\n\tix = offset;\n\tsum = 0.0;\n\tc = 0.0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv = x[ ix ];\n\t\tt = sum + v;\n\t\tif ( abs( sum ) >= abs( v ) ) {\n\t\t\tc += (sum-t) + v;\n\t\t} else {\n\t\t\tc += (v-t) + sum;\n\t\t}\n\t\tsum = t;\n\t\tix += stride;\n\t}\n\treturn sum + c;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gsumkbn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the sum of strided array elements using an improved Kahan–Babuška algorithm.\n*\n* @module @stdlib/blas/ext/base/gsumkbn\n*\n* @example\n* var gsumkbn = require( '@stdlib/blas/ext/base/gsumkbn' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = gsumkbn( N, x, 1 );\n* // returns 1.0\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n* var gsumkbn = require( '@stdlib/blas/ext/base/gsumkbn' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = gsumkbn.ndarray( N, x, 2, 1 );\n* // returns 5.0\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gsumkbn = require( './../../../../ext/base/gsumkbn' );\n\n\n// MAIN //\n\n/**\n* Computes the sum of strided array elements.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} sum\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = gsum( N, x, 1 );\n* // returns 1.0\n*/\nfunction gsum( N, x, stride ) {\n\treturn gsumkbn( N, x, stride );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gsum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gsumkbn = require( './../../../../ext/base/gsumkbn' ).ndarray;\n\n\n// MAIN //\n\n/**\n* Computes the sum of strided array elements.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} sum\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = gsum( N, x, 2, 1 );\n* // returns 5.0\n*/\nfunction gsum( N, x, stride, offset ) {\n\treturn gsumkbn( N, x, stride, offset );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gsum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the sum of strided array elements.\n*\n* @module @stdlib/blas/ext/base/gsum\n*\n* @example\n* var gsum = require( '@stdlib/blas/ext/base/gsum' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = gsum( N, x, 1 );\n* // returns 1.0\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n* var gsum = require( '@stdlib/blas/ext/base/gsum' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = gsum.ndarray( N, x, 2, 1 );\n* // returns 5.0\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar roundn = require( '@stdlib/math/base/special/roundn' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns a function to pretty print test results.\n*\n* @private\n* @param {Object} results - test results\n* @returns {Function} pretty print function\n*/\nfunction prettyPrint( results ) {\n\treturn print;\n\n\t/**\n\t* Pretty-print test results.\n\t*\n\t* @private\n\t* @param {Options} [opts] - options object\n\t* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n\t* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n\t* @throws {TypeError} options argument must be an object\n\t* @throws {TypeError} must provide valid options\n\t* @returns {string} formatted results\n\t*/\n\tfunction print( opts ) {\n\t\tvar decision;\n\t\tvar dgts;\n\t\tvar str;\n\n\t\tdgts = 4;\n\t\tdecision = true;\n\t\tif ( arguments.length > 0 ) {\n\t\t\tif ( !isObject( opts ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an object. Value: `%s`.', opts ) );\n\t\t\t}\n\t\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', opts.digits ) );\n\t\t\t\t}\n\t\t\t\tdgts = opts.digits;\n\t\t\t}\n\t\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', opts.decision ) );\n\t\t\t\t}\n\t\t\t\tdecision = opts.decision;\n\t\t\t}\n\t\t}\n\t\tstr = '';\n\t\tstr += results.method;\n\t\tstr += '\\n\\n';\n\t\tstr += 'Null hypothesis: the two variables are independent';\n\t\tstr += '\\n\\n';\n\t\tstr += '    pValue: ' + roundn( results.pValue, -dgts ) + '\\n';\n\t\tstr += '    statistic: ' + roundn( results.statistic, -dgts ) + '\\n';\n\t\tstr += '    degrees of freedom: ' + results.df + '\\n';\n\t\tstr += '\\n';\n\t\tif ( decision ) {\n\t\t\tstr += 'Test Decision: ';\n\t\t\tif ( results.rejected ) {\n\t\t\t\tstr += 'Reject null in favor of alternative at ' + (results.alpha*100) + '% significance level';\n\t\t\t} else {\n\t\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (results.alpha*100) + '% significance level';\n\t\t\t}\n\t\t\tstr += '\\n';\n\t\t}\n\t\treturn str;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = prettyPrint;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float64Array = require( '@stdlib/array/float64' );\n\n\n// MAIN //\n\n/**\n* Computes the sum along a matrix dimension.\n*\n* @param {Matrix} mat - input matrix\n* @param {number} [dim=2] - matrix dimension along which to compute the sum. If `dim=1`, compute along matrix rows. If `dim=2`, compute along matrix columns.\n* @returns {(Int32Array|number)} sums or 0\n*/\nfunction sum( mat, dim ) {\n\tvar out;\n\tvar s0;\n\tvar s1;\n\tvar s;\n\tvar M;\n\tvar N;\n\tvar o;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\tif ( dim === 1 ) {\n\t\t// Compute along the rows...\n\t\tM = mat.shape[ 1 ];\n\t\tN = mat.shape[ 0 ];\n\t\ts0 = mat.strides[ 1 ];\n\t\ts1 = mat.strides[ 0 ];\n\t} else {\n\t\t// Compute along the columns...\n\t\tM = mat.shape[ 0 ];\n\t\tN = mat.shape[ 1 ];\n\t\ts0 = mat.strides[ 0 ];\n\t\ts1 = mat.strides[ 1 ];\n\t}\n\tif ( M === 0 || N === 0 ) {\n\t\treturn 0;\n\t}\n\tout = new Float64Array( M );\n\to = mat.offset;\n\tfor ( i = 0; i < M; i++ ) {\n\t\tk = o + ( i*s0 );\n\t\ts = 0;\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\ts += mat.data[ k + ( j*s1 ) ];\n\t\t}\n\t\tout[ i ] = s;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar array = require( '@stdlib/ndarray/array' );\nvar Float64Array = require( '@stdlib/array/float64' );\n\n\n// MAIN //\n\n/**\n* Computes the outer product.\n*\n* @param {Float64Array} x - first factor of outer product\n* @param {Float64Array} y - second factor of outer product\n* @returns {Matrix} output matrix\n*/\nfunction outer( x, y ) {\n\tvar xlen = x.length;\n\tvar ylen = y.length;\n\tvar out = array( new Float64Array( xlen * ylen ), {\n\t\t'shape': [ xlen, ylen ]\n\t});\n\tvar i;\n\tvar j;\n\tfor ( i = 0; i < xlen; i++ ) {\n\t\tfor ( j = 0; j < ylen; j++ ) {\n\t\t\tout.set( i, j, x[ i ] * y[ j ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = outer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float64Array = require( '@stdlib/array/float64' );\nvar array = require( '@stdlib/ndarray/array' );\nvar abs = require( '@stdlib/math/base/special/abs' );\n\n\n// MAIN //\n\n/**\n* Computes an element-wise absolute difference of two matrices and stores the results in a typed array.\n*\n* @param {Matrix} x - first input matrix\n* @param {Matrix} y - second input matrix\n* @returns {Matrix} matrix containing the absolute differences\n*/\nfunction absdiff( x, y ) {\n\tvar out;\n\tvar i;\n\tvar j;\n\tvar M;\n\tvar N;\n\tvar v;\n\n\tM = x.shape[ 0 ];\n\tN = x.shape[ 1 ];\n\tout = array( new Float64Array( M * N ), {\n\t\t'shape': [ M, N ]\n\t});\n\tfor ( i = 0; i < M; i++ ) {\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tv = abs( x.get( i, j ) - y.get( i, j ) );\n\t\t\tout.set( i, j, v );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = absdiff;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {boolean} [options.correct] - boolean indicating whether to use Yates' continuity correction when provided a 2x2 contingency table\n* @returns {(null|Error)} null or an error\n*\n* @example\n* var opts = {};\n* var options = {\n*     'alpha': 0.01,\n*     'correct': true\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t\tif ( opts.alpha < 0.0 || opts.alpha > 1.0 ) {\n\t\t\treturn new RangeError( format( 'invalid option. `%s` option must be a number on the interval: [0, 1]. Value: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'correct' ) ) {\n\t\topts.correct = options.correct;\n\t\tif ( !isBoolean( opts.correct ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'correct', opts.simulate ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar isNonNegativeIntegerArray = require( '@stdlib/assert/is-nonnegative-integer-array' );\nvar isMatrixLike = require( '@stdlib/assert/is-matrix-like' );\nvar isArrayArray = require( '@stdlib/assert/is-array-array' );\nvar array = require( '@stdlib/ndarray/array' );\nvar incrmin = require( './../../incr/min' );\nvar gsum = require( '@stdlib/blas/ext/base/gsum' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar format = require( '@stdlib/string/format' );\nvar copy = require( '@stdlib/utils/copy' );\nvar chisqCDF = require( './../../base/dists/chisquare/cdf' );\nvar prettyPrint = require( './print.js' );\nvar defaults = require( './defaults.json' );\nvar sumByDimension = require( './sum.js' );\nvar outer = require( './outer.js' );\nvar absdiff = require( './absdiff.js' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Performs a chi-square independence test.\n*\n* @param {(ndarray|ArrayArray)} x - two-way table of cell counts\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {boolean} [options.correct=true] - boolean indicating whether to use Yates' continuity correction when provided a 2x2 contingency table\n* @throws {TypeError} first argument must be an array of arrays or ndarray-like object with dimension two\n* @returns {Object} test results\n*\n* @example\n*\n* @example\n* var x = [ [ 20, 30 ], [ 30, 20 ] ];\n* var out = chi2test( x );\n* // returns { 'rejected': false, 'alpha': 0.05, 'pValue': ~0.072, ... }\n*/\nfunction chi2test( x, options ) {\n\tvar absDiff;\n\tvar colSums;\n\tvar rowSums;\n\tvar minAbs;\n\tvar yates;\n\tvar means;\n\tvar param;\n\tvar nrow;\n\tvar ncol;\n\tvar opts;\n\tvar pval;\n\tvar stat;\n\tvar err;\n\tvar out;\n\tvar N;\n\tvar e;\n\tvar i;\n\tvar j;\n\n\tif ( isArrayArray( x ) ) {\n\t\tx = array( x );\n\t}\n\tif ( !isMatrixLike( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array of arrays or a two-dimensional ndarray-like object. Value: `%s`.', x ) );\n\t}\n\tif ( !isNonNegativeIntegerArray( x.data ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must contain nonnegative integers. Value: `%s`.', x ) );\n\t}\n\topts = copy( defaults );\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tN = gsum( x.length, x.data, 1 );\n\tnrow = x.shape[ 0 ];\n\tncol = x.shape[ 1 ];\n\n\tcolSums = sumByDimension( x, 1 );\n\trowSums = sumByDimension( x, 2 );\n\tmeans = outer( rowSums, colSums );\n\tfor ( i = 0; i < means.length; i++ ) {\n\t\tmeans.data[ i ] /= N;\n\t}\n\tabsDiff = absdiff( x, means );\n\n\tif ( opts.correct && nrow === 2 && ncol === 2 ) {\n\t\t// Apply Yates' continuity correction:\n\t\tminAbs = incrmin();\n\t\tfor ( i = 0; i < absDiff._buffer.length; i++ ) {\n\t\t\tminAbs( absDiff._buffer[ i ] );\n\t\t}\n\t\tyates = min( 0.5, minAbs() );\n\t\tfor ( i = 0; i < absDiff._buffer.length; i++ ) {\n\t\t\tabsDiff._buffer[ i ] -= yates;\n\t\t}\n\t}\n\tfor ( i = 0; i < nrow; i++) {\n\t\tfor ( j = 0; j < ncol; j++ ) {\n\t\t\te = absDiff.get( i, j ) * absDiff.get( i, j ) / means.get( i, j );\n\t\t\tabsDiff.set( i, j, e );\n\t\t}\n\t}\n\tstat = gsum( absDiff.length, absDiff._buffer, 1 );\n\tparam = ( nrow - 1 ) * ( ncol - 1 );\n\tpval = 1 - chisqCDF( stat, param );\n\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= opts.alpha );\n\tsetReadOnly( out, 'alpha', opts.alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'df', param );\n\tsetReadOnly( out, 'expected', means );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'method', 'Chi-square independence test' );\n\tsetReadOnly( out, 'print', prettyPrint( out ) );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = chi2test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Chi-square independence test.\n*\n* @module @stdlib/stats/chi2test\n*\n* @example\n* var chi2test = require( '@stdlib/stats/chi2test' );\n*\n* var x = [ [ 20, 30 ], [ 30, 20 ] ];\n* var out = chi2test( x );\n* // returns { 'rejected': false, 'alpha': 0.05, 'pValue': ~0.072, ... }\n*\n* var table = out.print();\n* /*\n*     Chi-square independence test\n*\n*     Null hypothesis: the two variables are independent\n*\n*         pValue: 0.0719\n*         statistic: 3.24\n*         degrees of freedom: 1\n*\n*     Test Decision: Fail to reject null in favor of alternative at 5% significance level\n* /*\n*/\n\n// MODULES //\n\nvar chi2test = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = chi2test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.016743100507663373;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.016743100507663373 + (x * (-0.0011295143874558028 + (x * (0.001056288621524929 + (x * (0.00020938631748758808 + (x * (0.000014962478375834237 + (x * (4.4969678992770644e-7 + (x * (4.625961635228786e-9 + (x * (-2.811287356288318e-14 + (x * 9.905570997331033e-17))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (0.5914293448864175 + (x * (0.1381518657490833 + (x * (0.016074608709367652 + (x * (0.0009640118070051656 + (x * (0.000027533547476472603 + (x * (2.82243172016108e-7 + (x * (0.0 + (x * 0.0))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 9.905570997331033e-17 + (x * (-2.811287356288318e-14 + (x * (4.625961635228786e-9 + (x * (4.4969678992770644e-7 + (x * (0.000014962478375834237 + (x * (0.00020938631748758808 + (x * (0.001056288621524929 + (x * (-0.0011295143874558028 + (x * -0.016743100507663373))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.0 + (x * (0.0 + (x * (2.82243172016108e-7 + (x * (0.000027533547476472603 + (x * (0.0009640118070051656 + (x * (0.016074608709367652 + (x * (0.1381518657490833 + (x * (0.5914293448864175 + (x * 1.0))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_48_0/boost/math/special_functions/detail/erf_inv.hpp}. This implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar ln = require( './../../../../base/special/ln' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar rationalFcnR1 = require( './rational_p1q1.js' );\nvar rationalFcnR2 = require( './rational_p2q2.js' );\nvar rationalFcnR3 = require( './rational_p3q3.js' );\nvar rationalFcnR4 = require( './rational_p4q4.js' );\nvar rationalFcnR5 = require( './rational_p5q5.js' );\n\n\n// VARIABLES //\n\nvar Y1 = 8.91314744949340820313e-2;\nvar Y2 = 2.249481201171875;\nvar Y3 = 8.07220458984375e-1;\nvar Y4 = 9.3995571136474609375e-1;\nvar Y5 = 9.8362827301025390625e-1;\n\n\n// MAIN //\n\n/**\n* Evaluates the inverse error function.\n*\n* ## Method\n*\n* 1.  For \\\\(|x| \\leq 0.5\\\\), we evaluate the inverse error function using the rational approximation\n*\n*     ```tex\n*     \\operatorname{erf^{-1}}(x) = x(x+10)(\\mathrm{Y} + \\operatorname{R}(x))\n*     ```\n*\n*     where \\\\(Y\\\\) is a constant and \\\\(\\operatorname{R}(x)\\\\) is optimized for a low absolute error compared to \\\\(|Y|\\\\).\n*\n*     <!-- <note> -->\n*\n*     Max error \\\\(2.001849\\mbox{e-}18\\\\). Maximum deviation found (error term at infinite precision) \\\\(8.030\\mbox{e-}21\\\\).\n*\n*     <!-- </note> -->\n*\n* 2.  For \\\\(0.5 > 1-|x| \\geq 0\\\\), we evaluate the inverse error function using the rational approximation\n*\n*     ```tex\n*     \\operatorname{erf^{-1}} = \\frac{\\sqrt{-2 \\cdot \\ln(1-x)}}{\\mathrm{Y} + \\operatorname{R}(1-x)}\n*     ```\n*\n*     where \\\\(Y\\\\) is a constant, and \\\\(\\operatorname{R}(q)\\\\) is optimized for a low absolute error compared to \\\\(Y\\\\).\n*\n*     <!-- <note> -->\n*\n*     Max error \\\\(7.403372\\mbox{e-}17\\\\). Maximum deviation found (error term at infinite precision) \\\\(4.811\\mbox{e-}20\\\\).\n*\n*     <!-- </note> -->\n*\n* 3.  For \\\\(1-|x| < 0.25\\\\), we have a series of rational approximations all of the general form\n*\n*     ```tex\n*     p = \\sqrt{-\\ln(1-x)}\n*     ```\n*\n*     Accordingly, the result is given by\n*\n*     ```tex\n*     \\operatorname{erf^{-1}}(x) = p(\\mathrm{Y} + \\operatorname{R}(p-B))\n*     ```\n*\n*     where \\\\(Y\\\\) is a constant, \\\\(B\\\\) is the lowest value of \\\\(p\\\\) for which the approximation is valid, and \\\\(\\operatorname{R}(x-B)\\\\) is optimized for a low absolute error compared to \\\\(Y\\\\).\n*\n*     <!-- <note> -->\n*\n*     Almost all code will only go through the first or maybe second approximation.  After that we are dealing with very small input values.\n*\n*     -   If \\\\(p < 3\\\\), max error \\\\(1.089051\\mbox{e-}20\\\\).\n*     -   If \\\\(p < 6\\\\), max error \\\\(8.389174\\mbox{e-}21\\\\).\n*     -   If \\\\(p < 18\\\\), max error \\\\(1.481312\\mbox{e-}19\\\\).\n*     -   If \\\\(p < 44\\\\), max error \\\\(5.697761\\mbox{e-}20\\\\).\n*     -   If \\\\(p \\geq 44\\\\), max error \\\\(1.279746\\mbox{e-}20\\\\).\n*\n*     <!-- </note> -->\n*\n*     <!-- <note> -->\n*\n*     The Boost library can accommodate \\\\(80\\\\) and \\\\(128\\\\) bit long doubles. JavaScript only supports a \\\\(64\\\\) bit double (IEEE 754). Accordingly, the smallest \\\\(p\\\\) (in JavaScript at the time of this writing) is \\\\(\\sqrt{-\\ln(\\sim5\\mbox{e-}324)} = 27.284429111150214\\\\).\n*\n*     <!-- </note> -->\n*\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var y = erfinv( 0.5 );\n* // returns ~0.4769\n*\n* @example\n* var y = erfinv( 0.8 );\n* // returns ~0.9062\n*\n* @example\n* var y = erfinv( 0.0 );\n* // returns 0.0\n*\n* @example\n* var y = erfinv( -0.0 );\n* // returns -0.0\n*\n* @example\n* var y = erfinv( -1.0 );\n* // returns -Infinity\n*\n* @example\n* var y = erfinv( 1.0 );\n* // returns Infinity\n*\n* @example\n* var y = erfinv( NaN );\n* // returns NaN\n*/\nfunction erfinv( x ) {\n\tvar sign;\n\tvar ax;\n\tvar qs;\n\tvar q;\n\tvar g;\n\tvar r;\n\n\t// Special case: NaN\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\t// Special case: 1\n\tif ( x === 1.0 ) {\n\t\treturn PINF;\n\t}\n\t// Special case: -1\n\tif ( x === -1.0 ) {\n\t\treturn NINF;\n\t}\n\t// Special case: +-0\n\tif ( x === 0.0 ) {\n\t\treturn x;\n\t}\n\t// Special case: |x| > 1 (range error)\n\tif ( x > 1.0 || x < -1.0 ) {\n\t\treturn NaN;\n\t}\n\t// Argument reduction (reduce to interval [0,1]). If `x` is negative, we can safely negate the value, taking advantage of the error function being an odd function; i.e., `erf(-x) = -erf(x)`.\n\tif ( x < 0.0 ) {\n\t\tsign = -1.0;\n\t\tax = -x;\n\t} else {\n\t\tsign = 1.0;\n\t\tax = x;\n\t}\n\tq = 1.0 - ax;\n\n\t// |x| <= 0.5\n\tif ( ax <= 0.5 ) {\n\t\tg = ax * ( ax + 10.0 );\n\t\tr = rationalFcnR1( ax );\n\t\treturn sign * ( (g*Y1) + (g*r) );\n\t}\n\t// 1-|x| >= 0.25\n\tif ( q >= 0.25 ) {\n\t\tg = sqrt( -2.0 * ln(q) );\n\t\tq -= 0.25;\n\t\tr = rationalFcnR2( q );\n\t\treturn sign * ( g / (Y2+r) );\n\t}\n\tq = sqrt( -ln( q ) );\n\n\t// q < 3\n\tif ( q < 3.0 ) {\n\t\tqs = q - 1.125;\n\t\tr = rationalFcnR3( qs );\n\t\treturn sign * ( (Y3*q) + (r*q) );\n\t}\n\t// q < 6\n\tif ( q < 6.0 ) {\n\t\tqs = q - 3.0;\n\t\tr = rationalFcnR4( qs );\n\t\treturn sign * ( (Y4*q) + (r*q) );\n\t}\n\t// q < 18\n\tqs = q - 6.0;\n\tr = rationalFcnR5( qs );\n\treturn sign * ( (Y5*q) + (r*q) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = erfinv;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.0005087819496582806;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.0005087819496582806 + (x * (-0.008368748197417368 + (x * (0.03348066254097446 + (x * (-0.012692614766297404 + (x * (-0.03656379714117627 + (x * (0.02198786811111689 + (x * (0.008226878746769157 + (x * (-0.005387729650712429 + (x * (0.0 + (x * 0.0))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (-0.9700050433032906 + (x * (-1.5657455823417585 + (x * (1.5622155839842302 + (x * (0.662328840472003 + (x * (-0.7122890234154284 + (x * (-0.05273963823400997 + (x * (0.07952836873415717 + (x * (-0.0023339375937419 + (x * 0.0008862163904564247))))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.0 + (x * (0.0 + (x * (-0.005387729650712429 + (x * (0.008226878746769157 + (x * (0.02198786811111689 + (x * (-0.03656379714117627 + (x * (-0.012692614766297404 + (x * (0.03348066254097446 + (x * (-0.008368748197417368 + (x * -0.0005087819496582806))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.0008862163904564247 + (x * (-0.0023339375937419 + (x * (0.07952836873415717 + (x * (-0.05273963823400997 + (x * (-0.7122890234154284 + (x * (0.662328840472003 + (x * (1.5622155839842302 + (x * (-1.5657455823417585 + (x * (-0.9700050433032906 + (x * 1.0))))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.20243350835593876;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.20243350835593876 + (x * (0.10526468069939171 + (x * (8.3705032834312 + (x * (17.644729840837403 + (x * (-18.851064805871424 + (x * (-44.6382324441787 + (x * (17.445385985570866 + (x * (21.12946554483405 + (x * -3.6719225470772936))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (6.242641248542475 + (x * (3.971343795334387 + (x * (-28.66081804998 + (x * (-20.14326346804852 + (x * (48.560921310873994 + (x * (10.826866735546016 + (x * (-22.643693341313973 + (x * 1.7211476576120028))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = -3.6719225470772936 + (x * (21.12946554483405 + (x * (17.445385985570866 + (x * (-44.6382324441787 + (x * (-18.851064805871424 + (x * (17.644729840837403 + (x * (8.3705032834312 + (x * (0.10526468069939171 + (x * -0.20243350835593876))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.7211476576120028 + (x * (-22.643693341313973 + (x * (10.826866735546016 + (x * (48.560921310873994 + (x * (-20.14326346804852 + (x * (-28.66081804998 + (x * (3.971343795334387 + (x * (6.242641248542475 + (x * 1.0))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.1311027816799519;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.1311027816799519 + (x * (-0.16379404719331705 + (x * (0.11703015634199525 + (x * (0.38707973897260434 + (x * (0.3377855389120359 + (x * (0.14286953440815717 + (x * (0.029015791000532906 + (x * (0.0021455899538880526 + (x * (-6.794655751811263e-7 + (x * (2.8522533178221704e-8 + (x * -6.81149956853777e-10))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (3.4662540724256723 + (x * (5.381683457070069 + (x * (4.778465929458438 + (x * (2.5930192162362027 + (x * (0.848854343457902 + (x * (0.15226433829533179 + (x * (0.011059242293464892 + (x * (0.0 + (x * (0.0 + (x * 0.0))))))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = -6.81149956853777e-10 + (x * (2.8522533178221704e-8 + (x * (-6.794655751811263e-7 + (x * (0.0021455899538880526 + (x * (0.029015791000532906 + (x * (0.14286953440815717 + (x * (0.3377855389120359 + (x * (0.38707973897260434 + (x * (0.11703015634199525 + (x * (-0.16379404719331705 + (x * -0.1311027816799519))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.0 + (x * (0.0 + (x * (0.0 + (x * (0.011059242293464892 + (x * (0.15226433829533179 + (x * (0.848854343457902 + (x * (2.5930192162362027 + (x * (4.778465929458438 + (x * (5.381683457070069 + (x * (3.4662540724256723 + (x * 1.0))))))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.0350353787183178;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.0350353787183178 + (x * (-0.0022242652921344794 + (x * (0.018557330651423107 + (x * (0.009508047013259196 + (x * (0.0018712349281955923 + (x * (0.00015754461742496055 + (x * (0.00000460469890584318 + (x * (-2.304047769118826e-10 + (x * 2.6633922742578204e-12))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (1.3653349817554064 + (x * (0.7620591645536234 + (x * (0.22009110576413124 + (x * (0.03415891436709477 + (x * (0.00263861676657016 + (x * (0.00007646752923027944 + (x * (0.0 + (x * 0.0))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 2.6633922742578204e-12 + (x * (-2.304047769118826e-10 + (x * (0.00000460469890584318 + (x * (0.00015754461742496055 + (x * (0.0018712349281955923 + (x * (0.009508047013259196 + (x * (0.018557330651423107 + (x * (-0.0022242652921344794 + (x * -0.0350353787183178))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.0 + (x * (0.0 + (x * (0.00007646752923027944 + (x * (0.00263861676657016 + (x * (0.03415891436709477 + (x * (0.22009110576413124 + (x * (0.7620591645536234 + (x * (1.3653349817554064 + (x * 1.0))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the inverse error function.\n*\n* @module @stdlib/math/base/special/erfinv\n*\n* @example\n* var erfinv = require( '@stdlib/math/base/special/erfinv' );\n*\n* var y = erfinv( 0.5 );\n* // returns ~0.4769\n*\n* y = erfinv( 0.8 );\n* // returns ~0.9062\n*\n* y = erfinv( 0.0 );\n* // returns 0.0\n*\n* y = erfinv( -0.0 );\n* // returns -0.0\n*\n* y = erfinv( -1.0 );\n* // returns -Infinity\n*\n* y = erfinv( 1.0 );\n* // returns Infinity\n*\n* y = erfinv( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar erfinv = require( './erfinv.js' );\n\n\n// EXPORTS //\n\nmodule.exports = erfinv;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar erfinv = require( '@stdlib/math/base/special/erfinv' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\n\n\n// MAIN //\n\n/**\n* Evaluates the quantile function for a normal distribution with mean `mu` and standard deviation `sigma` at a probability `p`.\n*\n* @param {Probability} p - input value\n* @param {number} mu - mean\n* @param {NonNegativeNumber} sigma - standard deviation\n* @returns {number} evaluated quantile function\n*\n* @example\n* var y = quantile( 0.8, 0.0, 1.0 );\n* // returns ~0.842\n*\n* @example\n* var y = quantile( 0.5, 4.0, 2.0 );\n* // returns 4.0\n*\n* @example\n* var y = quantile( 1.1, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( -0.2, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative standard deviation:\n* var y = quantile( 0.5, 0.0, -1.0 );\n* // returns NaN\n*/\nfunction quantile( p, mu, sigma ) {\n\tvar A;\n\tvar B;\n\n\tif (\n\t\tisnan( mu ) ||\n\t\tisnan( sigma ) ||\n\t\tisnan( p ) ||\n\t\tsigma < 0.0 ||\n\t\tp < 0.0 ||\n\t\tp > 1.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( sigma === 0.0 ) {\n\t\treturn mu;\n\t}\n\tA = mu;\n\tB = sigma * sqrt( 2.0 );\n\treturn A + (B * erfinv( (2.0*p) - 1.0 ));\n}\n\n\n// EXPORTS //\n\nmodule.exports = quantile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Evaluates the quantile function for a degenerate distribution centered at `mu`.\n*\n* @param {Probability} p - input value\n* @param {number} mu - constant value of the distribution\n* @returns {number} evaluated quantile function\n*\n* @example\n* var y = quantile( 0.5, 2.0 );\n* // returns 2.0\n*\n* @example\n* var y = quantile( 0.9, 4.0 );\n* // returns 4.0\n*\n* @example\n* var y = quantile( 1.1, 0.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( -0.2, 0.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( NaN, 0.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.0, NaN );\n* // returns NaN\n*/\nfunction quantile( p, mu ) {\n\tif ( isnan( p ) || p < 0.0 || p > 1.0 ) {\n\t\treturn NaN;\n\t}\n\treturn mu;\n}\n\n\n// EXPORTS //\n\nmodule.exports = quantile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the quantile function of a degenerate distribution centered at a provided mean value.\n*\n* @param {number} mu - value at which to center the distribution\n* @returns {Function} function to evaluate the quantile function\n*\n* @example\n* var quantile = factory( 5.0 );\n*\n* var y = quantile( 0.3 );\n* // returns 5.0\n*\n* y = quantile( 0.1 );\n* // returns 5.0\n*\n* y = quantile( 1.1 );\n* // returns NaN\n*/\nfunction factory( mu ) {\n\tif ( isnan( mu ) ) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn quantile;\n\n\t/**\n\t* Evaluates the quantile function of a degenerate distribution.\n\t*\n\t* @private\n\t* @param {Probability} p - input value\n\t* @returns {number} evaluated quantile function\n\t*\n\t* @example\n\t* var y = quantile( 0.5 );\n\t* // returns <number>\n\t*/\n\tfunction quantile( p ) {\n\t\tif ( isnan( p ) || p < 0.0 || p > 1.0 ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn mu;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Degenerate distribution quantile function.\n*\n* @module @stdlib/stats/base/dists/degenerate/quantile\n*\n* @example\n* var quantile = require( '@stdlib/stats/base/dists/degenerate/quantile' );\n*\n* var y = quantile( 0.5, 2.0 );\n* // returns 2.0\n*\n* @example\n* var factory = require( '@stdlib/stats/base/dists/degenerate/quantile' ).factory;\n*\n* var quantile = factory( 10.0 );\n*\n* var y = quantile( 0.5 );\n* // returns 10.0\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar quantile = require( './quantile.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( quantile, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = quantile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar degenerate = require( './../../../../../base/dists/degenerate/quantile' ).factory;\nvar erfinv = require( '@stdlib/math/base/special/erfinv' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the quantile function of a normal distribution.\n*\n* @param {number} mu - mean\n* @param {NonNegativeNumber} sigma - standard deviation\n* @returns {Function} quantile function\n*\n* @example\n* var quantile = factory( 10.0, 2.0 );\n* var y = quantile( 0.5 );\n* // returns 10.0\n*\n* y = quantile( 0.8 );\n* // returns ~11.683\n*/\nfunction factory( mu, sigma ) {\n\tvar A;\n\tvar B;\n\tif ( isnan( mu ) || isnan( sigma ) || sigma < 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( sigma === 0.0 ) {\n\t\tdegenerate( mu );\n\t}\n\tA = mu;\n\tB = sigma * sqrt( 2.0 );\n\treturn quantile;\n\n\t/**\n\t* Evaluates the quantile function for a normal distribution.\n\t*\n\t* @private\n\t* @param {Probability} p - input value\n\t* @returns {number} evaluated quantile function\n\t*\n\t* @example\n\t* var y = quantile( 0.3 );\n\t* // returns <number>\n\t*/\n\tfunction quantile( p ) {\n\t\tif ( isnan( p ) || p < 0.0 || p > 1.0 ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn A + ( B * erfinv( (2.0*p) - 1.0 ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Normal distribution quantile function.\n*\n* @module @stdlib/stats/base/dists/normal/quantile\n*\n* @example\n* var quantile = require( '@stdlib/stats/base/dists/normal/quantile' );\n*\n* var y = quantile( 0.8, 0.0, 1.0 );\n* // returns ~0.842\n*\n* var myQuantile = quantile.factory( 10.0, 2.0 );\n* y = myQuantile( 0.5 );\n* // returns 10.0\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar quantile = require( './quantile.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( quantile, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = quantile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( './../../is-collection' );\nvar isInteger = require( './../../is-integer' ).isPrimitive;\nvar isString = require( './../../is-string' ).isPrimitive;\nvar isnan = require( './../../is-nan' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests if an array-like value contains a search value.\n*\n* @param {(Collection|string)} val - input value\n* @param {*} searchValue - search value\n* @param {integer} [position=0] - position at which to start searching for `searchValue`\n* @throws {TypeError} first argument must be array-like\n* @throws {Error} must provide a search value\n* @throws {TypeError} second argument must be a string when the first argument is a string\n* @throws {TypeError} third argument must be an integer\n* @returns {boolean} boolean indicating whether one value contains another\n*\n* @example\n* var bool = contains( 'last man standing', 'stand' );\n* // returns true\n*\n* @example\n* var bool = contains( [ 1, 2, 3, 4 ], 2 );\n* // returns true\n*\n* @example\n* var bool = contains( 'presidential election', 'president' );\n* // returns true\n*\n* @example\n* var bool = contains( [ NaN, 2, 3, 4 ], NaN );\n* // returns true\n*\n* @example\n* var bool = contains( 'javaScript', 'js' );\n* // returns false\n*\n* @example\n* var bool = contains( [ 1, 2, 3, {} ], {} );\n* // returns false\n*\n* @example\n* var bool = contains( 'Hidden Treasures', '' );\n* // returns true\n*/\nfunction contains( val, searchValue, position ) {\n\tvar len;\n\tvar pos;\n\tvar i;\n\tif ( !isCollection( val ) && !isString( val ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be array-like. Value: `%s`.', val ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide a search value.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isInteger( position ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', position ) );\n\t\t}\n\t\tpos = position;\n\t\tif ( pos < 0 ) {\n\t\t\tpos = 0;\n\t\t}\n\t} else {\n\t\tpos = 0;\n\t}\n\tif ( isString( val ) ) {\n\t\tif ( !isString( searchValue ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string. Value: `%s`.', searchValue ) );\n\t\t}\n\t\treturn val.indexOf( searchValue, pos ) !== -1;\n\t}\n\tlen = val.length;\n\tif ( isnan( searchValue ) ) {\n\t\tfor ( i = pos; i < len; i++ ) {\n\t\t\tif ( isnan( val[ i ] ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tfor ( i = pos; i < len; i++ ) {\n\t\tif ( val[ i ] === searchValue ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = contains;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if an array-like value contains another value.\n*\n* @module @stdlib/assert/contains\n*\n* @example\n* var contains = require( '@stdlib/assert/contains' );\n*\n* var bool = contains( 'Hello World', 'World' );\n* // returns true\n*\n* bool = contains( 'Hello World', 'world' );\n* // returns false\n*\n* bool = contains( [ 1, 2, 3, 4 ], 2 );\n* // returns true\n*\n* bool = contains( [ NaN, 2, 3, 4 ], NaN );\n* // returns true\n*/\n\n// MODULES //\n\nvar contains = require( './contains.js' );\n\n\n// EXPORTS //\n\nmodule.exports = contains;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Computes the sum of elements of an numeric array.\n*\n* @private\n* @param {NumericArray} arr - input array\n* @returns {number} sum\n*\n* @example\n* var arr = [ 2.0, 6.0, 10.0 ];\n* var out = sum( arr );\n* // returns 18.0\n*/\nfunction sum( arr ) {\n\tvar len;\n\tvar out;\n\tvar i;\n\n\tlen = arr.length;\n\tout = 0.0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout += arr[ i ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Returns a comparison result. If `-1`, `a` comes before `b`. If `1`, `b` comes before `a`. If `0`, the order stays the same.\n*\n* @private\n* @param {number} a - first number\n* @param {number} b - second number\n* @returns {boolean} comparison result\n*/\nfunction compareFunction( a, b ) {\n\tif ( a < b ) {\n\t\treturn -1;\n\t}\n\tif ( a > b ) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\n\n// MAIN //\n\n/**\n* Returns a permutation which rearranges input array.\n*\n* @private\n* @param {ArrayLike} x - input array-like object\n* @returns {Array} permutation array\n*/\nfunction order( x ) {\n\tvar arr;\n\tvar i;\n\n\tarr = new Array( x.length );\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tarr[ i ] = i;\n\t}\n\treturn arr.sort( compare );\n\n\t/**\n\t* Compare the elements of the input array.\n\t*\n\t* @private\n\t* @param {number} a - first number\n\t* @param {number} b - second number\n\t* @returns {boolean} comparison result\n\t*/\n\tfunction compare( a, b ) {\n\t\treturn compareFunction( x[a], x[b] );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = order;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\nvar contains = require( '@stdlib/assert/contains' );\n\n\n// MAIN //\n\n/**\n* Computes for each array element whether it is a missing value.\n*\n* @private\n* @param {Array} arr - input array\n* @param {Array} encoding - array whose elements encode missing values\n* @returns {BooleanArray} output array\n*/\nfunction isMissing( arr, encoding ) {\n\tvar len;\n\tvar out;\n\tvar i;\n\n\tlen = arr.length;\n\tout = new Array( len );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout[ i ] = contains( encoding, arr[ i ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isMissing;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar contains = require( '@stdlib/assert/contains' );\nvar isArray = require( '@stdlib/assert/is-array' );\nvar isObject = require( '@stdlib/assert/is-object' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar METHODS = [ 'min', 'max', 'average', 'dense', 'ordinal' ];\nvar MISSING = [ 'last', 'first', 'remove' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Object} options - function options\n* @param {string} [options.method] - method determining how ties are treated\n* @param {string} [opts.missing] - determines where missing values go (`first`,`last`, or `remove`)\n* @param {Array} [opts.encoding] - array of values encoding missing values\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'encoding' ) ) {\n\t\topts.encoding = options.encoding;\n\t\tif ( !isArray( opts.encoding ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an array. Option: `%s`.', 'encoding', opts.encoding ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'method' ) ) {\n\t\topts.method = options.method;\n\t\tif ( !isString( opts.method ) || !contains( METHODS, opts.method ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'method', METHODS.join( '\", \"' ), opts.method ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'missing' ) ) {\n\t\topts.missing = options.missing;\n\t\tif ( !isString( opts.missing ) || !contains( MISSING, opts.missing ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'missing', MISSING.join( '\", \"' ), opts.missing ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar contains = require( '@stdlib/assert/contains' );\nvar format = require( '@stdlib/string/format' );\nvar sum = require( './sum.js' );\nvar order = require( './order.js' );\nvar isMissing = require( './is_missing.js' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Computes the sample ranks for the values of an array-like object.\n*\n* @param {Collection} x - data array\n* @param {Object} [options] - options object\n* @param {string} [options.method='average'] - method name determining how ties are treated\n* @param {string} [options.missing='last'] - determines where missing values go (`first`,`last`, or `remove`)\n* @param {Array} [options.encoding=[null,NaN]] - array of values encoding missing values\n* @throws {TypeError} first argument has to be an array-like object\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Array} array containing the computed ranks for the elements of x\n*\n* @example\n* var arr = [ 1.1, 2.0, 3.5, 0.0, 2.4 ];\n* var out = ranks( arr );\n* // returns [ 2, 3, 5, 1, 4 ]\n*\n* @example\n* // Ties are averaged:\n* arr = [ 2, 2, 1, 4, 3 ];\n* out = ranks( arr );\n* // returns [ 2.5, 2.5, 1, 5, 4 ]\n*\n* @example\n* // Missing values are placed last:\n* arr = [ null, 2, 2, 1, 4, 3, NaN, NaN ];\n* out = ranks( arr );\n* // returns [ 6, 2.5, 2.5, 1, 5, 4, 7 ,8 ]\n*/\nfunction ranks( x, options ) {\n\tvar missingIndices;\n\tvar noDuplicates;\n\tvar countMissing;\n\tvar totalNoTies;\n\tvar finalRanks;\n\tvar encoding;\n\tvar iPlusOne;\n\tvar ordered;\n\tvar missing;\n\tvar tieRank;\n\tvar method;\n\tvar ranks;\n\tvar opts;\n\tvar xnew;\n\tvar err;\n\tvar n;\n\tvar i;\n\tvar j;\n\n\tif ( !isCollection( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', x ) );\n\t}\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tmethod = opts.method || 'average';\n\tencoding = opts.encoding || [ null, NaN ];\n\tmissing = opts.missing || 'last';\n\n\tn = x.length;\n\txnew = [];\n\tfor ( i = 0; i < n; i++ ) {\n\t\tif ( !contains( encoding, x[ i ] ) ) {\n\t\t\txnew.push( x[ i ] );\n\t\t}\n\t}\n\tmissingIndices = isMissing( x, encoding );\n\tn = xnew.length;\n\ttotalNoTies = 0;\n\tranks = new Array( n );\n\tordered = order( xnew );\n\n\tif ( method === 'ordinal' ) {\n\t\tfor ( i = 0; i < n; i++ ) {\n\t\t\tranks[ ordered[ i ] ] = i + 1;\n\t\t}\n\t} else {\n\t\tnoDuplicates = 0;\n\t\tfor ( i = 0; i < n; i++ ) {\n\t\t\tiPlusOne = i + 1;\n\t\t\tif (\n\t\t\t\t( i === n - 1 ) ||\n\t\t\t\t( xnew[ ordered[i] ] !== xnew[ ordered[ iPlusOne ] ] )\n\t\t\t) {\n\t\t\t\tswitch ( method ) {\n\t\t\t\tcase 'average':\n\t\t\t\tdefault:\n\t\t\t\t\ttieRank = iPlusOne - ( 0.5 * noDuplicates );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'min':\n\t\t\t\t\ttieRank = iPlusOne - noDuplicates;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'max':\n\t\t\t\t\ttieRank = iPlusOne;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'dense':\n\t\t\t\t\ttieRank = iPlusOne - noDuplicates - totalNoTies;\n\t\t\t\t\ttotalNoTies += noDuplicates;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tfor ( j = i - noDuplicates; j < iPlusOne; j++ ) {\n\t\t\t\t\tranks[ ordered[ j ] ] = tieRank;\n\t\t\t\t}\n\t\t\t\tnoDuplicates = 0;\n\t\t\t} else {\n\t\t\t\tnoDuplicates += 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( missing === 'first' ) {\n\t\tcountMissing = sum( missingIndices );\n\t\tj = 1;\n\t\tfinalRanks = new Array( missingIndices.length );\n\t\tfor ( i = 0; i < missingIndices.length; i++ ) {\n\t\t\tif ( missingIndices[ i ] ) {\n\t\t\t\tfinalRanks[ i ] = j;\n\t\t\t\tj += 1;\n\t\t\t} else {\n\t\t\t\tfinalRanks[ i ] = ranks.shift() + countMissing;\n\t\t\t}\n\t\t}\n\t\treturn finalRanks;\n\t}\n\tif ( missing === 'last' ) {\n\t\tfinalRanks = new Array( missingIndices.length );\n\t\tfor ( i = 0; i < missingIndices.length; i++ ) {\n\t\t\tif ( missingIndices[ i ] ) {\n\t\t\t\tfinalRanks[ i ] = i + ranks.length + 1;\n\t\t\t} else {\n\t\t\t\tfinalRanks[ i ] = ranks.shift();\n\t\t\t}\n\t\t}\n\t\treturn finalRanks;\n\t}\n\t// Case: missing = 'remove'\n\treturn ranks;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ranks;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute ranks for the values of an array-like object.\n*\n* @module @stdlib/stats/ranks\n*\n* @example\n* var ranks = require( '@stdlib/stats/ranks' );\n*\n* var arr = [ 1.1, 2.0, 3.5, 0.0, 2.4 ];\n* var out = ranks( arr );\n* // returns [ 2, 3, 5, 1, 4 ]\n*\n* // Ties are averaged:\n* arr = [ 2, 2, 1, 4, 3 ];\n* out = ranks ( arr );\n* // returns [ 2.5, 2.5, 1, 5, 4 ];\n*\n* // Missing values are placed last:\n* arr = [ null, 2, 2, 1, 4, 3, NaN, NaN ];\n* out = ranks( arr );\n* // returns [ 6, 2.5, 2.5, 1, 5, 4, 7 ,8 ]\n*/\n\n// MODULES //\n\nvar ranks = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ranks;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// FUNCTIONS //\n\n/**\n* Comparator function used to sort values in ascending order.\n*\n* @private\n* @param {number} a - first number\n* @param {number} b - second number\n* @returns {number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n}\n\n\n// MAIN //\n\n/**\n* Computes the median of an array.\n*\n* @param {Array} arr - input array\n* @returns {number} median value\n*/\nfunction median( arr ) {\n\tvar len = arr.length;\n\tvar id;\n\tvar d;\n\tvar i;\n\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\n\t// Copy and sort data in ascending order:\n\td = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\td.push( arr[ i ] );\n\t}\n\td.sort( ascending );\n\n\t// Get the middle index:\n\tid = floor( len / 2 );\n\n\tif ( len % 2 ) {\n\t\t// The number of elements is not evenly divisible by two, hence we have a middle index:\n\t\treturn d[ id ];\n\t}\n\t// Even number of elements, so must take the mean of the two middle values:\n\treturn ( d[ id-1 ] + d[ id ] ) / 2.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = median;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( '@stdlib/assert/is-array' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {Array} [options.groups] - array of group indicators\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'groups' ) ) {\n\t\topts.groups = options.groups;\n\t\tif ( !isArray( opts.groups ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an array. Option: `%s`.', 'groups', opts.groups ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar roundn = require( '@stdlib/math/base/special/roundn' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Null hypothesis: The variances in all groups are the same.';\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts ) + '\\n';\n\tstr += '    df: ' + roundn( this.df, -dgts );\n\tstr += '\\n\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar objectKeys = require( '@stdlib/utils/keys' );\nvar qnorm = require( './../../base/dists/normal/quantile' );\nvar chisqCDF = require( './../../base/dists/chisquare/cdf' );\nvar group = require( '@stdlib/utils/group' );\nvar ranks = require( './../../ranks' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar indexOf = require( '@stdlib/utils/index-of' );\nvar format = require( '@stdlib/string/format' );\nvar median = require( './median.js' );\nvar validate = require( './validate.js' );\nvar print = require( './print.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// FUNCTIONS //\n\n/**\n* Returns an array of a chosen length filled with the supplied value.\n*\n* @private\n* @param {*} val - value to repeat\n* @param {NonNegativeInteger} len - array length\n* @returns {Array} filled array\n*/\nfunction repeat( val, len ) {\n\tvar out = new Array( len );\n\tvar i;\n\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout[ i ] = val;\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Computes the Fligner-Killeen test for equal variances.\n*\n* @param {...NumericArray} arguments - either two or more number arrays or a single numeric array if an array of group indicators is supplied as an option\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {Array} [options.groups] - array of group indicators\n* @throws {TypeError} must provide array-like arguments\n* @throws {RangeError} alpha option has to be a number in the interval `[0,1]`\n* @throws {Error} must provide at least two array-like arguments if `groups` is not set\n* @throws {TypeError} options must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Object} test results\n*\n* @example\n* // Data from Hollander & Wolfe (1973), p. 116:\n* var x = [ 2.9, 3.0, 2.5, 2.6, 3.2 ];\n* var y = [ 3.8, 2.7, 4.0, 2.4 ];\n* var z = [ 2.8, 3.4, 3.7, 2.2, 2.0 ];\n*\n* var out = fligner( x, y, z );\n* // returns {...}\n*/\nfunction fligner() {\n\tvar variance;\n\tvar options;\n\tvar ngroups;\n\tvar levels;\n\tvar groups;\n\tvar scores;\n\tvar table;\n\tvar alpha;\n\tvar delta;\n\tvar args;\n\tvar mean;\n\tvar opts;\n\tvar pval;\n\tvar sums;\n\tvar xabs;\n\tvar stat;\n\tvar err;\n\tvar loc;\n\tvar out;\n\tvar df;\n\tvar M2;\n\tvar a;\n\tvar n;\n\tvar x;\n\tvar i;\n\tvar j;\n\n\targs = [];\n\tngroups = arguments.length;\n\topts = {};\n\tif ( isPlainObject( arguments[ ngroups - 1 ] ) ) {\n\t\toptions = arguments[ ngroups - 1 ];\n\t\tngroups -= 1;\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.groups ) {\n\t\tgroups = opts.groups;\n\t\ttable = group( arguments[ 0 ], groups );\n\t\tlevels = objectKeys( table );\n\t\tngroups = levels.length;\n\t\tif ( ngroups < 2 ) {\n\t\t\tthrow new Error( format( 'invalid option. `%s` option must be an array containing at least two unique elements. Option: `%s`.', 'groups', levels ) );\n\t\t}\n\t\tfor ( i = 0; i < ngroups; i++ ) {\n\t\t\targs.push( table[ levels[ i ] ] );\n\t\t}\n\t} else {\n\t\tgroups = [];\n\t\tfor ( i = 0; i < ngroups; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t\tgroups = groups.concat( repeat( i, arguments[ i ].length ) );\n\t\t}\n\t}\n\tif ( opts.alpha === void 0 ) {\n\t\talpha = 0.05;\n\t} else {\n\t\talpha = opts.alpha;\n\t}\n\tif ( alpha < 0.0 || alpha > 1.0 ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.', 'alpha', alpha ) );\n\t}\n\tx = [];\n\tfor ( i = 0; i < ngroups; i++ ) {\n\t\tif ( !isCollection( args[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide array-like arguments. Value: `%s`.', args[ i ] ) );\n\t\t}\n\t\tif ( args[ i ].length === 0 ) {\n\t\t\tthrow new Error( format( 'invalid argument. Supplied arrays cannot be empty. Value: `%s`.', args[ i ] ) );\n\t\t}\n\t\tloc = median( args[ i ] );\n\t\tfor ( j = 0; j < args[ i ].length; j++ ) {\n\t\t\targs[ i ][ j ] -= loc;\n\t\t}\n\t\tx = x.concat( args[ i ] );\n\t}\n\tn = x.length;\n\txabs = new Array( n );\n\tfor ( i = 0; i < n; i++ ) {\n\t\txabs[ i ] = abs( x[ i ] );\n\t}\n\tscores = ranks( xabs );\n\ta = new Array( n );\n\tmean = 0.0;\n\tM2 = 0.0;\n\tsums = repeat( 0.0, ngroups );\n\tfor ( i = 0; i < n; i++ ) {\n\t\ta[ i ] = qnorm( ( 1.0 + ( scores[ i ]/(n+1) ) ) / 2.0, 0.0, 1.0 );\n\t\tsums[ ( levels ) ? indexOf( levels, groups[i] ) : groups[i] ] += a[ i ];\n\t\tdelta = a[ i ] - mean;\n\t\tmean += delta / ( i+1 );\n\t\tM2 += delta * ( a[ i ] - mean );\n\t}\n\tvariance = M2 / ( n - 1 );\n\tstat = 0.0;\n\tfor ( i = 0; i < ngroups; i++ ) {\n\t\tstat += pow( sums[ i ], 2 ) / args[ i ].length;\n\t}\n\tstat = ( stat - ( n * pow( mean, 2 ) ) ) / variance;\n\tdf = ngroups - 1;\n\tpval = 1.0 - chisqCDF( stat, df );\n\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= alpha );\n\tsetReadOnly( out, 'alpha', alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'df', df );\n\tsetReadOnly( out, 'method', 'Fligner-Killeen test of homogeneity of variances' );\n\tsetReadOnly( out, 'print', print );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fligner;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the Fligner-Killeen test for equal variances.\n*\n* @module @stdlib/stats/fligner-test\n*\n* @example\n* var flignerTest = require( '@stdlib/stats/fligner-test' );\n*\n* // Data from Hollander & Wolfe (1973), p. 116:\n* var x = [ 2.9, 3.0, 2.5, 2.6, 3.2 ];\n* var y = [ 3.8, 2.7, 4.0, 2.4 ];\n* var z = [ 2.8, 3.4, 3.7, 2.2, 2.0 ];\n*\n* var out = flignerTest( x, y, z );\n* // returns {...}\n*/\n\n// MODULES //\n\nvar flignerTest = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = flignerTest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a sample Pearson product-moment correlation coefficient incrementally.\n*\n* @module @stdlib/stats/incr/pcorr\n*\n* @example\n* var incrpcorr = require( '@stdlib/stats/incr/pcorr' );\n*\n* var accumulator = incrpcorr();\n*\n* var r = accumulator();\n* // returns null\n*\n* r = accumulator( 2.0, 1.0 );\n* // returns 0.0\n*\n* r = accumulator( -5.0, 3.14 );\n* // returns ~-1.0\n*\n* r = accumulator();\n* // returns ~-1.0\n*/\n\n// MODULES //\n\nvar incrpcorr = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrpcorr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a sample Pearson product-moment correlation coefficient.\n*\n* ## Method\n*\n* -   We begin by defining the co-moment \\\\(C_n\\\\)\n*\n*     ```tex\n*     C_n = \\sum_{i=1}^{n} ( x_i - \\bar{x}_n ) ( y_i - \\bar{y}_n )\n*     ```\n*\n*     where \\\\(\\bar{x}_n\\\\) and \\\\(\\bar{y}_n\\\\) are the sample means for \\\\(x\\\\) and \\\\(y\\\\), respectively.\n*\n* -   Based on Welford's method, we know the update formulas for the sample means are given by\n*\n*     ```tex\n*     \\bar{x}_n = \\bar{x}_{n-1} + \\frac{x_n - \\bar{x}_{n-1}}{n}\n*     ```\n*\n*     and\n*\n*     ```tex\n*     \\bar{y}_n = \\bar{y}_{n-1} + \\frac{y_n - \\bar{y}_{n-1}}{n}\n*     ```\n*\n* -   Substituting into the equation for \\\\(C_n\\\\) and rearranging terms\n*\n*     ```tex\n*     C_n = C_{n-1} + (x_n - \\bar{x}_n) (y_n - \\bar{y}_{n-1})\n*     ```\n*\n*     where the apparent asymmetry arises from\n*\n*     ```tex\n*     x_n - \\bar{x}_n = \\frac{n-1}{n} (x_n - \\bar{x}_{n-1})\n*     ```\n*\n*     and, hence, the update term can be equivalently expressed\n*\n*     ```tex\n*     \\frac{n-1}{n} (x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})\n*     ```\n*\n* -   The covariance can be defined\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{cov}_n(x,y) &= \\frac{C_n}{n} \\\\\n*     &= \\frac{C_{n-1} + (x_n - \\bar{x}_n) (y_n - \\bar{y}_{n-1})}{n} \\\\\n*     &= \\frac{(n-1)\\operatorname{cov}_{n-1}(x,y) + (x_n - \\bar{x}_n) (y_n - \\bar{y}_{n-1})}{n}\n*     \\end{align*}\n*     ```\n*\n* -   Applying Bessel's correction, we arrive at an update formula for calculating an unbiased sample covariance\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{cov}_n(x,y) &= \\frac{n}{n-1}\\cdot\\frac{(n-1)\\operatorname{cov}_{n-1}(x,y) + (x_n - \\bar{x}_n) (y_n - \\bar{y}_{n-1})}{n} \\\\\n*     &= \\operatorname{cov}_{n-1}(x,y) + \\frac{(x_n - \\bar{x}_n) (y_n - \\bar{y}_{n-1})}{n-1} \\\\\n*     &= \\frac{C_{n-1} + (x_n - \\bar{x}_n) (y_n - \\bar{y}_{n-1})}{n-1}\n*     &= \\frac{C_{n-1} + (x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_n)}{n-1}\n*     \\end{align*}\n*     ```\n*\n* -   To calculate the corrected sample standard deviation, we can use Welford's method, which can be derived as follows. We can express the variance as\n*\n*     ```tex\n*     \\begin{align*}\n*     S_n &= n \\sigma_n^2 \\\\\n*         &= \\sum_{i=1}^{n} (x_i - \\mu_n)^2 \\\\\n*         &= \\biggl(\\sum_{i=1}^{n} x_i^2 \\biggr) - n\\mu_n^2\n*     \\end{align*}\n*     ```\n*\n*     Accordingly,\n*\n*     ```tex\n*     \\begin{align*}\n*     S_n - S_{n-1} &= \\sum_{i=1}^{n} x_i^2 - n\\mu_n^2 - \\sum_{i=1}^{n-1} x_i^2 + (n-1)\\mu_{n-1}^2 \\\\\n*                   &= x_n^2 - n\\mu_n^2 + (n-1)\\mu_{n-1}^2 \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + n(\\mu_{n-1}^2 - \\mu_n^2) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + n(\\mu_{n-1} - \\mu_n)(\\mu_{n-1} + \\mu_n) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + (\\mu_{n-1} - x_n)(\\mu_{n-1} + \\mu_n) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + \\mu_{n-1}^2 - x_n\\mu_n - x_n\\mu_{n-1} + \\mu_n\\mu_{n-1} \\\\\n*                   &= x_n^2 - x_n\\mu_n - x_n\\mu_{n-1} + \\mu_n\\mu_{n-1} \\\\\n*                   &= (x_n - \\mu_{n-1})(x_n - \\mu_n) \\\\\n*                   &= S_{n-1} + (x_n - \\mu_{n-1})(x_n - \\mu_n)\n*     \\end{align*}\n*     ```\n*\n*     where we use the identity\n*\n*     ```tex\n*     x_n - \\mu_{n-1} = n (\\mu_n - \\mu_{n-1})\n*     ```\n*\n* -   To compute the corrected sample standard deviation, we apply Bessel's correction and take the square root.\n*\n* -   The sample Pearson product-moment correlation coefficient can thus be calculated as\n*\n*     ```tex\n*     r = \\frac{\\operatorname{cov}_n(x,y)}{\\sigma_x \\sigma_y}\n*     ```\n*\n*     where \\\\(\\sigma_x\\\\) and \\\\(\\sigma_y\\\\) are the corrected sample standard deviations for \\\\(x\\\\) and \\\\(y\\\\), respectively.\n*\n* @param {number} [meanx] - mean value\n* @param {number} [meany] - mean value\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrpcorr();\n*\n* var r = accumulator();\n* // returns null\n*\n* r = accumulator( 2.0, 1.0 );\n* // returns 0.0\n*\n* r = accumulator( -5.0, 3.14 );\n* // returns ~-1.0\n*\n* r = accumulator();\n* // returns ~-1.0\n*\n* @example\n* var accumulator = incrpcorr( 2.0, -3.0 );\n*/\nfunction incrpcorr( meanx, meany ) {\n\tvar M2x;\n\tvar M2y;\n\tvar dy1;\n\tvar dy2;\n\tvar dy;\n\tvar dx;\n\tvar mx;\n\tvar my;\n\tvar sx;\n\tvar sy;\n\tvar C;\n\tvar N;\n\n\tM2x = 0.0;\n\tM2y = 0.0;\n\tC = 0.0;\n\tN = 0;\n\tif ( arguments.length ) {\n\t\tif ( !isNumber( meanx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', meanx ) );\n\t\t}\n\t\tif ( !isNumber( meany ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', meany ) );\n\t\t}\n\t\tmx = meanx;\n\t\tmy = meany;\n\t\treturn accumulator2;\n\t}\n\tmx = 0.0;\n\tmy = 0.0;\n\treturn accumulator1;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated sample correlation coefficient. If not provided input values, the accumulator function returns the current sample correlation coefficient.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @param {number} [y] - new value\n\t* @returns {(number|null)} sample correlation coefficient or null\n\t*/\n\tfunction accumulator1( x, y ) {\n\t\tvar n;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn ( isnan( M2x ) || isnan( M2y ) ) ? NaN : 0.0;\n\t\t\t}\n\t\t\treturn ( C/(N-1) ) / ( sx*sy );\n\t\t}\n\t\tN += 1;\n\n\t\tdx = x - mx;\n\t\tmx += dx / N;\n\t\tM2x += dx * ( x-mx );\n\n\t\tdy1 = y - my;\n\t\tmy += dy1 / N;\n\t\tdy2 = y - my;\n\t\tM2y += dy2 * dy1;\n\n\t\tC += dx * dy2;\n\t\tif ( N < 2 ) {\n\t\t\treturn ( isnan( M2x ) || isnan( M2y ) ) ? NaN : 0.0;\n\t\t}\n\t\tn = N - 1;\n\t\tsx = sqrt( M2x/n );\n\t\tsy = sqrt( M2y/n );\n\t\treturn ( C/n ) / ( sx*sy ); // Note: why all the dividing by `N`? To avoid overflow.\n\t}\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated sample correlation coefficient. If not provided input values, the accumulator function returns the current sample correlation coefficient.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @param {number} [y] - new value\n\t* @returns {(number|null)} sample correlation coefficient or null\n\t*/\n\tfunction accumulator2( x, y ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn ( C/N ) / ( sx*sy );\n\t\t}\n\t\tN += 1;\n\n\t\tdx = x - mx;\n\t\tM2x += dx * dx;\n\n\t\tdy = y - my;\n\t\tM2y += dy * dy;\n\n\t\tC += dx * dy;\n\t\tsx = sqrt( M2x/N );\n\t\tsy = sqrt( M2y/N );\n\t\treturn ( C/N ) / ( sx*sy ); // Note: why all the dividing by `N`? To avoid overflow.\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrpcorr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a count incrementally.\n*\n* @module @stdlib/stats/incr/count\n*\n* @example\n* var incrcount = require( '@stdlib/stats/incr/count' );\n*\n* var accumulator = incrcount();\n*\n* var count = accumulator();\n* // returns 0\n*\n* count = accumulator( 2.0 );\n* // returns 1\n*\n* count = accumulator( -5.0 );\n* // returns 2\n*\n* count = accumulator();\n* // returns 2\n*/\n\n// MODULES //\n\nvar incrcount = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrcount;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns an accumulator function which incrementally updates a count.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrcount();\n*\n* var count = accumulator();\n* // returns 0\n*\n* count = accumulator( 2.0 );\n* // returns 1\n*\n* count = accumulator( -5.0 );\n* // returns 2\n*\n* count = accumulator();\n* // returns 2\n*/\nfunction incrcount() {\n\tvar count = 0;\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated count. If not provided a value, the accumulator function returns the current count.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {number} count\n\t*/\n\tfunction accumulator() {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn count;\n\t\t}\n\t\tcount += 1;\n\t\treturn count;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrcount;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a 2-dimensional ndarray-like object having equal dimensions.\n*\n* @module @stdlib/assert/is-square-matrix\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var isSquareMatrix = require( '@stdlib/assert/is-square-matrix' );\n*\n* var arr = ndarray( 'generic', [ 0, 0, 0, 0 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n* var bool = isSquareMatrix( arr );\n* // returns true\n*\n* bool = isSquareMatrix( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isSquareMatrix = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isSquareMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isMatrixLike = require( './../../is-matrix-like' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a 2-dimensional ndarray-like object having equal dimensions.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a 2-dimensional ndarray-like object having equal dimensions\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var arr = ndarray( 'generic', [ 0, 0, 0, 0 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n* var bool = isSquareMatrix( arr );\n* // returns true\n*\n* bool = isSquareMatrix( [] );\n* // returns false\n*/\nfunction isSquareMatrix( v ) {\n\treturn (\n\t\tisMatrixLike( v ) &&\n\t\tv.shape[ 0 ] === v.shape[ 1 ]\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSquareMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a 1-dimensional ndarray-like object.\n*\n* @module @stdlib/assert/is-vector-like\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var isVectorLike = require( '@stdlib/assert/is-vector-like' );\n*\n* var arr = ndarray( 'generic', [ 0, 0, 0, 0 ], [ 4 ], [ 1 ], 0, 'row-major' );\n* var bool = isVectorLike( arr );\n* // returns true\n*\n* bool = isVectorLike( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isVectorLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isVectorLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isndarrayLike = require( './../../is-ndarray-like' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a 1-dimensional ndarray-like object.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a 1-dimensional ndarray-like object\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var arr = ndarray( 'generic', [ 0, 0, 0, 0 ], [ 4 ], [ 1 ], 0, 'row-major' );\n* var bool = isVectorLike( arr );\n* // returns true\n*\n* bool = isVectorLike( [] );\n* // returns false\n*/\nfunction isVectorLike( v ) {\n\treturn (\n\t\tisndarrayLike( v ) &&\n\t\tv.ndims === 1 &&\n\t\tv.shape.length === 1 &&\n\t\tv.strides.length === 1\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isVectorLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a nonnegative value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a nonnegative number value\n*\n* @example\n* var bool = isNonNegativeNumber( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeNumber( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isNonNegativeNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue >= 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a nonnegative value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a nonnegative number value\n*\n* @example\n* var bool = isNonNegativeNumber( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeNumber( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isNonNegativeNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue.valueOf() >= 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a nonnegative number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a nonnegative number\n*\n* @example\n* var bool = isNonNegativeNumber( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeNumber( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeNumber( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeNumber( null );\n* // returns false\n*/\nfunction isNonNegativeNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a nonnegative number.\n*\n* @module @stdlib/assert/is-nonnegative-number\n*\n* @example\n* var isNonNegativeNumber = require( '@stdlib/assert/is-nonnegative-number' );\n*\n* var bool = isNonNegativeNumber( 5.0 );\n* // returns true\n*\n* bool = isNonNegativeNumber( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isNonNegativeNumber( 3.14 );\n* // returns true\n*\n* bool = isNonNegativeNumber( -5.0 );\n* // returns false\n*\n* bool = isNonNegativeNumber( null );\n* // returns false\n*\n* @example\n* var isNonNegativeNumber = require( '@stdlib/assert/is-nonnegative-number' ).isPrimitive;\n*\n* var bool = isNonNegativeNumber( 3.0 );\n* // returns true\n*\n* bool = isNonNegativeNumber( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* var isNonNegativeNumber = require( '@stdlib/assert/is-nonnegative-number' ).isObject;\n*\n* var bool = isNonNegativeNumber( 3.0 );\n* // returns false\n*\n* bool = isNonNegativeNumber( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNonNegativeNumber = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isNonNegativeNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isNonNegativeNumber, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a geometric mean incrementally.\n*\n* @module @stdlib/stats/incr/gmean\n*\n* @example\n* var incrgmean = require( '@stdlib/stats/incr/gmean' );\n*\n* var accumulator = incrgmean();\n*\n* var v = accumulator();\n* // returns null\n*\n* v = accumulator( 2.0 );\n* // returns 2.0\n*\n* v = accumulator( 5.0 );\n* // returns ~3.16\n*\n* v = accumulator();\n* // returns ~3.16\n*/\n\n// MODULES //\n\nvar incrgmean = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrgmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar exp = require( '@stdlib/math/base/special/exp' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a geometric mean.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrgmean();\n*\n* var v = accumulator();\n* // returns null\n*\n* v = accumulator( 2.0 );\n* // returns 2.0\n*\n* v = accumulator( 5.0 );\n* // returns ~3.16\n*\n* v = accumulator();\n* // returns ~3.16\n*/\nfunction incrgmean() {\n\tvar sum;\n\tvar N;\n\tvar v;\n\n\tsum = 0.0;\n\tN = 0;\n\tv = 1;\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated geometric mean. If not provided a value, the accumulator function returns the current geometric mean.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} geometric mean or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn v;\n\t\t}\n\t\tN += 1;\n\t\tsum += ln( x );\n\t\tv = exp( sum/N );\n\t\treturn v;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrgmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a minimum and maximum incrementally.\n*\n* @module @stdlib/stats/incr/minmax\n*\n* @example\n* var incrminmax = require( '@stdlib/stats/incr/minmax' );\n*\n* var accumulator = incrminmax();\n*\n* var mm = accumulator();\n* // returns null\n*\n* mm = accumulator( 2.0 );\n* // returns [ 2.0, 2.0 ]\n*\n* mm = accumulator( -5.0 );\n* // returns [ -5.0, 2.0 ]\n*\n* mm = accumulator( 3.0 );\n* // returns [ -5.0, 3.0 ]\n*\n* mm = accumulator( 5.0 );\n* // returns [ -5.0, 5.0 ]\n*\n* mm = accumulator();\n* // returns [ -5.0, 5.0 ]\n*/\n\n// MODULES //\n\nvar incrminmax = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrminmax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLike = require( '@stdlib/assert/is-array-like-object' );\nvar isPositiveZero = require( '@stdlib/math/base/assert/is-positive-zero' );\nvar isNegativeZero = require( '@stdlib/math/base/assert/is-negative-zero' );\nvar format = require( '@stdlib/string/format' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes minimum and maximum values.\n*\n* @param {Collection} [out] - output array\n* @throws {TypeError} output argument must be array-like\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrminmax();\n*\n* var mm = accumulator();\n* // returns null\n*\n* mm = accumulator( 2.0 );\n* // returns [ 2.0, 2.0 ]\n*\n* mm = accumulator( -5.0 );\n* // returns [ -5.0, 2.0 ]\n*\n* mm = accumulator( 3.0 );\n* // returns [ -5.0, 3.0 ]\n*\n* mm = accumulator( 5.0 );\n* // returns [ -5.0, 5.0 ]\n*\n* mm = accumulator();\n* // returns [ -5.0, 5.0 ]\n*/\nfunction incrminmax( out ) {\n\tvar minmax;\n\tvar min;\n\tvar max;\n\tvar FLG;\n\tif ( arguments.length === 0 ) {\n\t\tminmax = [ 0.0, 0.0 ];\n\t} else {\n\t\tif ( !isArrayLike( out ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Output argument must be an array-like object. Value: `%s`.', out ) );\n\t\t}\n\t\tminmax = out;\n\t}\n\tmin = PINF;\n\tmax = NINF;\n\tFLG = false;\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns updated minimum and maximum values. If not provided a value, the accumulator function returns the current minimum and maximum values.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(ArrayLikeObject|null)} output array or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( FLG === false ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tminmax[ 0 ] = min; // Why? Because we cannot guarantee someone hasn't mutated the output array\n\t\t\tminmax[ 1 ] = max;\n\t\t\treturn minmax;\n\t\t}\n\t\tFLG = true;\n\t\tif ( isnan( x ) ) {\n\t\t\tmin = x;\n\t\t\tmax = x;\n\t\t} else {\n\t\t\tif ( x < min || ( x === min && isNegativeZero( x ) ) ) {\n\t\t\t\tmin = x;\n\t\t\t}\n\t\t\tif ( x > max || ( x === max && isPositiveZero( x ) ) ) {\n\t\t\t\tmax = x;\n\t\t\t}\n\t\t}\n\t\tminmax[ 0 ] = min;\n\t\tminmax[ 1 ] = max;\n\t\treturn minmax;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrminmax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an arithmetic mean and corrected sample standard deviation incrementally.\n*\n* @module @stdlib/stats/incr/meanstdev\n*\n* @example\n* var incrmeanstdev = require( '@stdlib/stats/incr/meanstdev' );\n*\n* var accumulator = incrmeanstdev();\n*\n* var ms = accumulator();\n* // returns null\n*\n* ms = accumulator( 2.0 );\n* // returns [ 2.0, 0.0 ]\n*\n* ms = accumulator( -5.0 );\n* // returns [ -1.5, ~4.95 ]\n*\n* ms = accumulator( 3.0 );\n* // returns [ 0.0, ~4.36 ]\n*\n* ms = accumulator( 5.0 );\n* // returns [ 1.25, ~4.35 ]\n*\n* ms = accumulator();\n* // returns [ 1.25, ~4.35 ]\n*/\n\n// MODULES //\n\nvar incrmeanstdev = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmeanstdev;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLike = require( '@stdlib/assert/is-array-like-object' );\nvar format = require( '@stdlib/string/format' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes an arithmetic mean and corrected sample standard deviation.\n*\n* ## Method\n*\n\n*\n* -   This implementation uses Welford's algorithm for efficient computation, which can be derived as follows. Let\n*\n*     ```tex\n*     \\begin{align*}\n*     S_n &= n \\sigma_n^2 \\\\\n*         &= \\sum_{i=1}^{n} (x_i - \\mu_n)^2 \\\\\n*         &= \\biggl(\\sum_{i=1}^{n} x_i^2 \\biggr) - n\\mu_n^2\n*     \\end{align*}\n*     ```\n*\n*     Accordingly,\n*\n*     ```tex\n*     \\begin{align*}\n*     S_n - S_{n-1} &= \\sum_{i=1}^{n} x_i^2 - n\\mu_n^2 - \\sum_{i=1}^{n-1} x_i^2 + (n-1)\\mu_{n-1}^2 \\\\\n*                   &= x_n^2 - n\\mu_n^2 + (n-1)\\mu_{n-1}^2 \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + n(\\mu_{n-1}^2 - \\mu_n^2) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + n(\\mu_{n-1} - \\mu_n)(\\mu_{n-1} + \\mu_n) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + (\\mu_{n-1} - x_n)(\\mu_{n-1} + \\mu_n) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + \\mu_{n-1}^2 - x_n\\mu_n - x_n\\mu_{n-1} + \\mu_n\\mu_{n-1} \\\\\n*                   &= x_n^2 - x_n\\mu_n - x_n\\mu_{n-1} + \\mu_n\\mu_{n-1} \\\\\n*                   &= (x_n - \\mu_{n-1})(x_n - \\mu_n) \\\\\n*                   &= S_{n-1} + (x_n - \\mu_{n-1})(x_n - \\mu_n)\n*     \\end{align*}\n*     ```\n*\n*     where we use the identity\n*\n*     ```tex\n*     x_n - \\mu_{n-1} = n (\\mu_n - \\mu_{n-1})\n*     ```\n*\n* ## References\n*\n* -   Welford, B. P. 1962. \"Note on a Method for Calculating Corrected Sums of Squares and Products.\" _Technometrics_ 4 (3). Taylor & Francis: 419–20. doi:[10.1080/00401706.1962.10490022](https://doi.org/10.1080/00401706.1962.10490022).\n* -   van Reeken, A. J. 1968. \"Letters to the Editor: Dealing with Neely's Algorithms.\" _Communications of the ACM_ 11 (3): 149–50. doi:[10.1145/362929.362961](https://doi.org/10.1145/362929.362961).\n*\n* @param {Collection} [out] - output array\n* @throws {TypeError} output argument must be array-like\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmeanstdev();\n*\n* var ms = accumulator();\n* // returns null\n*\n* ms = accumulator( 2.0 );\n* // returns [ 2.0, 0.0 ]\n*\n* ms = accumulator( -5.0 );\n* // returns [ -1.5, ~4.95 ]\n*\n* ms = accumulator( 3.0 );\n* // returns [ 0.0, ~4.36 ]\n*\n* ms = accumulator( 5.0 );\n* // returns [ 1.25, ~4.35 ]\n*\n* ms = accumulator();\n* // returns [ 1.25, ~4.35 ]\n*/\nfunction incrmeanstdev( out ) {\n\tvar meanstdev;\n\tvar delta;\n\tvar mu;\n\tvar M2;\n\tvar N;\n\tif ( arguments.length === 0 ) {\n\t\tmeanstdev = [ 0.0, 0.0 ];\n\t} else {\n\t\tif ( !isArrayLike( out ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Output argument must be an array-like object. Value: `%s`.', out ) );\n\t\t}\n\t\tmeanstdev = out;\n\t}\n\tM2 = 0.0;\n\tmu = 0.0;\n\tN = 0;\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns updated results. If not provided a value, the accumulator function returns the current results.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(ArrayLikeObject|null)} output array or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tmeanstdev[ 0 ] = mu; // Why? Because we cannot guarantee someone hasn't mutated the output array\n\t\t\tif ( N === 1 ) {\n\t\t\t\tif ( isnan( M2 ) ) {\n\t\t\t\t\tmeanstdev[ 1 ] = NaN;\n\t\t\t\t} else {\n\t\t\t\t\tmeanstdev[ 1 ] = 0.0;\n\t\t\t\t}\n\t\t\t\treturn meanstdev;\n\t\t\t}\n\t\t\tmeanstdev[ 1 ] = sqrt( M2/(N-1) );\n\t\t\treturn meanstdev;\n\t\t}\n\t\tN += 1;\n\t\tdelta = x - mu;\n\t\tmu += delta / N;\n\t\tM2 += delta * ( x - mu );\n\n\t\tmeanstdev[ 0 ] = mu;\n\t\tif ( N < 2 ) {\n\t\t\tif ( isnan( M2 ) ) {\n\t\t\t\tmeanstdev[ 1 ] = NaN;\n\t\t\t} else {\n\t\t\t\tmeanstdev[ 1 ] = 0.0;\n\t\t\t}\n\t\t\treturn meanstdev;\n\t\t}\n\t\tmeanstdev[ 1 ] = sqrt( M2/(N-1) );\n\t\treturn meanstdev;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmeanstdev;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define a read-only accessor.\n*\n* @module @stdlib/utils/define-read-only-accessor\n*\n* @example\n* var setReadOnlyAccessor = require( '@stdlib/utils/define-read-only-accessor' );\n*\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\n\n// MODULES //\n\nvar setReadOnlyAccessor = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = setReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './../../define-property' );\n\n\n// MAIN //\n\n/**\n* Defines a read-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - accessor\n*\n* @example\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setReadOnlyAccessor( obj, prop, getter ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': getter\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = setReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar kernelBetaincinv = require( '@stdlib/math/base/special/kernel-betaincinv' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar sign = require( '@stdlib/math/base/special/signum' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\n\n\n// MAIN //\n\n/**\n* Evaluates the quantile function for a Student's t distribution with degrees of freedom `v` at a probability `p`.\n*\n* @param {Probability} p - input value\n* @param {PositiveNumber} v - degrees of freedom\n* @returns {number} evaluated quantile function\n*\n* @example\n* var y = quantile( 0.8, 1.0 );\n* // returns ~1.376\n*\n* @example\n* var y = quantile( 0.1, 1.0 );\n* // returns ~-3.078\n*\n* @example\n* var y = quantile( 0.5, 0.1 );\n* // returns 0.0\n*\n* @example\n* var y = quantile( -0.2, 0.1 );\n* // returns NaN\n*\n* @example\n* var y = quantile( NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.5, -1.0 );\n* // returns NaN\n*/\nfunction quantile( p, v ) {\n\tvar prob;\n\tvar xs;\n\tif (\n\t\tisnan( v ) ||\n\t\tisnan( p ) ||\n\t\tv <= 0.0 ||\n\t\tp < 0.0 ||\n\t\tp > 1.0\n\t) {\n\t\treturn NaN;\n\t}\n\tprob = ( p > 0.5 ) ? 1.0 - p : p;\n\txs = kernelBetaincinv( v / 2.0, 0.5, 2.0 * prob, 1.0 - (2.0 * prob) );\n\treturn sign( p - 0.5 ) * sqrt( v * xs[ 1 ] / xs[ 0 ] );\n}\n\n\n// EXPORTS //\n\nmodule.exports = quantile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar kernelBetaincinv = require( '@stdlib/math/base/special/kernel-betaincinv' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar sign = require( '@stdlib/math/base/special/signum' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the quantile function for a Student's t distribution with degrees of freedom `v`.\n*\n* @param {PositiveNumber} v - degrees of freedom\n* @returns {Function} quantile function\n*\n* @example\n* var quantile = factory( 0.5 );\n* var y = quantile( 0.5 );\n* // returns 0.0\n*\n* y = quantile( 0.8 );\n* // returns ~2.513\n*\n* y = quantile( 1.0 );\n* // returns Infinity\n*/\nfunction factory( v ) {\n\tif ( isnan( v ) || v <= 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn quantile;\n\n\t/**\n\t* Evaluates the quantile function for a Student's t distribution.\n\t*\n\t* @private\n\t* @param {Probability} p - input value\n\t* @returns {number} evaluated quantile function\n\t*\n\t* @example\n\t* var y = quantile( 0.3 );\n\t* // returns <number>\n\t*/\n\tfunction quantile( p ) {\n\t\tvar prob;\n\t\tvar xs;\n\n\t\tif ( isnan( p ) || p < 0.0 || p > 1.0 ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tprob = ( p > 0.5 ) ? 1.0 - p : p;\n\t\txs = kernelBetaincinv( v / 2.0, 0.5, 2.0 * prob, 1.0 - (2.0 * prob) );\n\t\treturn sign( p - 0.5 ) * sqrt( v * xs[ 1 ] / xs[ 0 ] );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the quantile function for a Student's t distribution.\n*\n* @module @stdlib/stats/base/dists/t/quantile\n*\n* @example\n* var quantile = require( '@stdlib/stats/base/dists/t/quantile' );\n*\n* var y = quantile( 0.8, 1.0 );\n* // returns ~1.376\n*\n* y = quantile( 0.1, 1.0 );\n* // returns ~-3.078\n*\n* y = quantile( 0.5, 0.1 );\n* // returns 0.0\n*\n* var myquantile = quantile.factory( 4.0 );\n*\n* y = myquantile( 0.2 );\n* // returns ~-0.941\n*\n* y = myquantile( 0.9 );\n* // returns ~1.533\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar quantile = require( './quantile.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( quantile, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = quantile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar incrminmax = require( './../../../incr/minmax' );\nvar incrmeanstdev = require( './../../../incr/meanstdev' );\nvar copy = require( '@stdlib/utils/copy' );\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-read-only-accessor' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar roundn = require( '@stdlib/math/base/special/roundn' );\nvar tQuantile = require( './../../../base/dists/t/quantile' );\nvar format = require( '@stdlib/string/format' );\nvar validate = require( './validate.js' );\nvar defaults = require( './defaults.json' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally performs Grubbs' test for detecting outliers.\n*\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {string} [options.alternative='two-sided'] - alternative hypothesis ('two-sided', 'min', 'max')\n* @param {NonNegativeInteger} [options.init=100] - number of data points used to compute initial statistics\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} `alpha` option must be on the interval `[0,1]`\n* @returns {Function} accumulator function\n*\n* @example\n* var rnorm = require( '@stdlib/random/base/normal' );\n*\n* var accumulator;\n* var opts;\n* var res;\n* var i;\n*\n* opts = {\n*     'init': 100\n* };\n*\n* accumulator = incrgrubbs( opts );\n*\n* for ( i = 0; i < 200; i++ ) {\n*     res = accumulator( rnorm( 10.0, 5.0 ) );\n* }\n*/\nfunction incrgrubbs() {\n\tvar meanstdev;\n\tvar results;\n\tvar minmax;\n\tvar opts;\n\tvar err;\n\tvar mm;\n\tvar ms;\n\tvar gc;\n\tvar df;\n\tvar N;\n\tvar G;\n\n\topts = copy( defaults );\n\tif ( arguments.length ) {\n\t\terr = validate( opts, arguments[ 0 ] );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\t// Initialize the results object:\n\tresults = {};\n\tsetReadOnlyAccessor( results, 'rejected', getRejected );\n\tsetReadOnly( results, 'alpha', opts.alpha );\n\tsetReadOnlyAccessor( results, 'criticalValue', getCriticalValue );\n\tsetReadOnlyAccessor( results, 'statistic', getStatistic );\n\tsetReadOnlyAccessor( results, 'df', getDOF );\n\tsetReadOnlyAccessor( results, 'mean', getMean );\n\tsetReadOnlyAccessor( results, 'sd', getStDev );\n\tsetReadOnlyAccessor( results, 'min', getMin );\n\tsetReadOnlyAccessor( results, 'max', getMax );\n\tsetReadOnly( results, 'alt', opts.alternative );\n\tsetReadOnly( results, 'method', 'Grubbs\\' Test' );\n\tsetReadOnly( results, 'print', print );\n\n\tN = 0;\n\tdf = 0;\n\tG = 0.0;\n\tgc = 0.0;\n\n\t// Initialize statistics accumulators:\n\tmm = [ 0.0, 0.0 ];\n\tminmax = incrminmax( mm );\n\n\tms = [ 0.0, 0.0 ];\n\tmeanstdev = incrmeanstdev( ms );\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns updated Grubbs' test results. If not provided a value, the accumulator function returns the current Grubbs' test results.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(Object|null)} test results or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tvar sig;\n\t\tvar md;\n\t\tvar tc;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N < opts.init || df <= 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn results;\n\t\t}\n\t\tN += 1;\n\n\t\t// Update model statistics:\n\t\tmeanstdev( x );\n\t\tminmax( x );\n\n\t\t// Compute the degrees of freedom:\n\t\tdf = N - 2;\n\n\t\tif ( N < opts.init || df <= 0 ) {\n\t\t\treturn null;\n\t\t}\n\t\t// Compute the test statistic and significance level...\n\t\tif ( opts.alternative === 'min' ) {\n\t\t\tG = ( ms[0]-mm[0] ) / ms[ 1 ];\n\t\t\tsig = opts.alpha / N;\n\t\t} else if ( opts.alternative === 'max' ) {\n\t\t\tG = ( mm[1]-ms[0] ) / ms[ 1 ];\n\t\t\tsig = opts.alpha / N;\n\t\t} else { // two-sided\n\t\t\tmd = max( ms[0]-mm[0], mm[1]-ms[0] ); // maximum absolute deviation\n\t\t\tG = md / ms[ 1 ];\n\t\t\tsig = opts.alpha / (2*N);\n\t\t}\n\t\t// Compute the critical values:\n\t\ttc = tQuantile( 1.0-sig, df );\n\t\tgc = (N-1)*tc / sqrt( N*(df+(tc*tc)) );\n\n\t\treturn results;\n\t}\n\n\t/**\n\t* Returns a `boolean` indicating whether the null hypothesis should be rejected.\n\t*\n\t* @private\n\t* @returns {boolean} boolean indicating whether the null hypothesis should be rejected\n\t*/\n\tfunction getRejected() {\n\t\treturn ( G > gc );\n\t}\n\n\t/**\n\t* Returns the critical value.\n\t*\n\t* @private\n\t* @returns {number} critical value\n\t*/\n\tfunction getCriticalValue() {\n\t\treturn gc;\n\t}\n\n\t/**\n\t* Returns the test statistic.\n\t*\n\t* @private\n\t* @returns {number} test statistic\n\t*/\n\tfunction getStatistic() {\n\t\treturn G;\n\t}\n\n\t/**\n\t* Returns the degrees of freedom (DOF).\n\t*\n\t* @private\n\t* @returns {PositiveInteger} degrees of freedom\n\t*/\n\tfunction getDOF() {\n\t\treturn df;\n\t}\n\n\t/**\n\t* Returns the sample mean.\n\t*\n\t* @private\n\t* @returns {number} sample mean\n\t*/\n\tfunction getMean() {\n\t\treturn ms[ 0 ];\n\t}\n\n\t/**\n\t* Returns the corrected sample standard deviation.\n\t*\n\t* @private\n\t* @returns {number} corrected sample standard deviation\n\t*/\n\tfunction getStDev() {\n\t\treturn ms[ 1 ];\n\t}\n\n\t/**\n\t* Returns the sample minimum.\n\t*\n\t* @private\n\t* @returns {number} sample minimum\n\t*/\n\tfunction getMin() {\n\t\treturn mm[ 0 ];\n\t}\n\n\t/**\n\t* Returns the sample maximum.\n\t*\n\t* @private\n\t* @returns {number} sample maximum\n\t*/\n\tfunction getMax() {\n\t\treturn mm[ 1 ];\n\t}\n\n\t/**\n\t* Pretty-print test results.\n\t*\n\t* @private\n\t* @param {Object} [options] - options object\n\t* @param {PositiveInteger} [options.digits=4] - number of digits after the decimal point\n\t* @param {boolean} [options.decision=true] - boolean indicating whether to print the test decision\n\t* @throws {TypeError} options argument must be an object\n\t* @throws {TypeError} must provide valid options\n\t* @returns {string} formatted output\n\t*/\n\tfunction print( options ) {\n\t\tvar decision;\n\t\tvar digits;\n\t\tvar str;\n\n\t\tdigits = opts.digits;\n\t\tdecision = opts.decision;\n\t\tif ( arguments.length > 0 ) {\n\t\t\tif ( !isObject( options ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an object. Value: `%s`.', options ) );\n\t\t\t}\n\t\t\tif ( hasOwnProp( options, 'digits' ) ) {\n\t\t\t\tif ( !isPositiveInteger( options.digits ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', options.digits ) );\n\t\t\t\t}\n\t\t\t\tdigits = options.digits;\n\t\t\t}\n\t\t\tif ( hasOwnProp( options, 'decision' ) ) {\n\t\t\t\tif ( !isBoolean( options.decision ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', options.decision ) );\n\t\t\t\t}\n\t\t\t\tdecision = options.decision;\n\t\t\t}\n\t\t}\n\t\tstr = '';\n\t\tstr += results.method;\n\t\tstr += '\\n\\n';\n\t\tstr += 'Alternative hypothesis: ';\n\t\tif ( opts.alternative === 'max' ) {\n\t\t\tstr += 'The maximum value (' + mm[ 1 ] + ') is an outlier';\n\t\t} else if ( opts.alternative === 'min' ) {\n\t\t\tstr += 'The minimum value (' + mm[ 0 ] + ') is an outlier';\n\t\t} else { // two-sided\n\t\t\tstr += 'The ';\n\t\t\tif ( ms[0]-mm[0] > mm[1]-ms[0] ) {\n\t\t\t\tstr += 'minimum value (' + mm[ 0 ] + ')';\n\t\t\t} else {\n\t\t\t\tstr += 'maximum value (' + mm[ 1 ] + ')';\n\t\t\t}\n\t\t\tstr += ' is an outlier';\n\t\t}\n\t\tstr += '\\n\\n';\n\t\tstr += '    criticalValue: ' + roundn( gc, -digits ) + '\\n';\n\t\tstr += '    statistic: ' + roundn( G, -digits ) + '\\n';\n\t\tstr += '    df: ' + df + '\\n';\n\t\tstr += '\\n';\n\t\tif ( decision ) {\n\t\t\tstr += 'Test Decision: ';\n\t\t\tif ( G > gc ) {\n\t\t\t\tstr += 'Reject null in favor of alternative at ' + (opts.alpha*100.0) + '% significance level';\n\t\t\t} else {\n\t\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (opts.alpha*100.0) + '% significance level';\n\t\t\t}\n\t\t\tstr += '\\n';\n\t\t}\n\t\treturn str;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrgrubbs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar isnan = require( '@stdlib/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {string} [options.alternative] - alternative hypothesis\n* @param {NonNegativeInteger} [options.init] - number of data points used to compute initial statistics\n* @returns {(null|Error)} null or an error\n*\n* @example\n* var opts = {};\n*\n* var options = {\n*     'alpha': 0.05,\n*     'alernative': 'two-sided',\n*     'init': 100\n* };\n*\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t\tif ( opts.alpha < 0.0 || opts.alpha > 1.0 ) {\n\t\t\treturn new RangeError( format( 'invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'alternative' ) ) {\n\t\topts.alternative = options.alternative;\n\t\tif ( !isString( opts.alternative ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'alternative', opts.alternative ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'init' ) ) {\n\t\topts.init = options.init;\n\t\tif ( !isNonNegativeInteger( opts.init ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'init', opts.init ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an arithmetic mean incrementally.\n*\n* @module @stdlib/stats/incr/mean\n*\n* @example\n* var incrmean = require( '@stdlib/stats/incr/mean' );\n*\n* var accumulator = incrmean();\n*\n* var mu = accumulator();\n* // returns null\n*\n* mu = accumulator( 2.0 );\n* // returns 2.0\n*\n* mu = accumulator( -5.0 );\n* // returns -1.5\n*\n* mu = accumulator();\n* // returns -1.5\n*/\n\n// MODULES //\n\nvar incrmean = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns an accumulator function which incrementally computes an arithmetic mean.\n*\n* ## Method\n*\n* -   This implementation uses [Welford's method][algorithms-variance] for efficient computation, which can be derived as follows\n*\n*     ```tex\n*     \\begin{align*}\n*     \\mu_n &= \\frac{1}{n} \\sum_{i=0}^{n-1} x_i \\\\\n*           &= \\frac{1}{n} \\biggl(x_{n-1} + \\sum_{i=0}^{n-2} x_i \\biggr) \\\\\n*           &= \\frac{1}{n} (x_{n-1} + (n-1)\\mu_{n-1}) \\\\\n*           &= \\mu_{n-1} + \\frac{1}{n} (x_{n-1} - \\mu_{n-1})\n*     \\end{align*}\n*     ```\n*\n* [algorithms-variance]: https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmean();\n*\n* var mu = accumulator();\n* // returns null\n*\n* mu = accumulator( 2.0 );\n* // returns 2.0\n*\n* mu = accumulator( -5.0 );\n* // returns -1.5\n*\n* mu = accumulator();\n* // returns -1.5\n*/\nfunction incrmean() {\n\tvar mu;\n\tvar N;\n\n\tmu = 0.0;\n\tN = 0;\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated mean. If not provided a value, the accumulator function returns the current mean.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} mean value or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn mu;\n\t\t}\n\t\tN += 1;\n\t\tmu += (x-mu) / N;\n\t\treturn mu;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a harmonic mean incrementally.\n*\n* @module @stdlib/stats/incr/hmean\n*\n* @example\n* var incrhmean = require( '@stdlib/stats/incr/hmean' );\n*\n* var accumulator = incrhmean();\n*\n* var v = accumulator();\n* // returns null\n*\n* v = accumulator( 2.0 );\n* // returns 2.0\n*\n* v = accumulator( 5.0 );\n* // returns ~2.86\n*\n* v = accumulator();\n* // returns ~2.86\n*/\n\n// MODULES //\n\nvar incrhmean = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrhmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar incrmean = require( './../../../incr/mean' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a harmonic mean.\n*\n* ## Method\n*\n* -   The harmonic mean of positive real numbers \\\\(x_0, x_1, \\ldots, x_{n-1}\\\\) is defined as\n*\n*     ```tex\n*     \\begin{align*}\n*     H &= \\frac{n}{\\frac{1}{x_0} + \\frac{1}{x_1} + \\cdots + \\frac{1}{x_{n-1}}} \\\\\n*       &= \\frac{n}{\\sum_{i=0}^{n-1} \\frac{1}{x_i}}\n*     \\end{align*}\n*     ```\n*\n*     which may be expressed\n*\n*     ```tex\n*     H = \\biggl( \\frac{\\sum_{i=0}^{n-1} \\frac{1}{x_i}}{n} \\biggr)^{-1}\n*     ```\n*\n* -   Accordingly, to compute the harmonic mean incrementally, we can simply compute the arithmetic mean of reciprocal values and then compute the reciprocal of the result.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrhmean();\n*\n* var v = accumulator();\n* // returns null\n*\n* v = accumulator( 2.0 );\n* // returns 2.0\n*\n* v = accumulator( 5.0 );\n* // returns ~2.86\n*\n* v = accumulator();\n* // returns ~2.86\n*/\nfunction incrhmean() {\n\tvar mean = incrmean();\n\tvar v;\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated harmonic mean. If not provided a value, the accumulator function returns the current harmonic mean.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} harmonic mean or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn ( v === void 0 ) ? null : v;\n\t\t}\n\t\tv = 1.0 / mean( 1.0/x );\n\t\treturn v;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrhmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a corrected sample excess kurtosis incrementally.\n*\n* @module @stdlib/stats/incr/kurtosis\n*\n* @example\n* var incrkurtosis = require( '@stdlib/stats/incr/kurtosis' );\n*\n* var accumulator = incrkurtosis();\n*\n* var kurtosis = accumulator( 2.0 );\n* // returns null\n*\n* kurtosis = accumulator( 2.0 );\n* // returns null\n*\n* kurtosis = accumulator( -4.0 );\n* // returns null\n*\n* kurtosis = accumulator( -4.0 );\n* // returns -6.0\n*/\n\n// MODULES //\n\nvar incrkurtosis = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrkurtosis;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a corrected sample excess kurtosis.\n*\n* ## Method\n*\n* The algorithm computes the sample excess kurtosis using the formula for `G_2` in [Joanes and Gill 1998][@joanes:1998]. In contrast to alternatives for calculating a sample kurtosis, `G_2` is an unbiased estimator under normality.\n*\n* ## References\n*\n* -   Joanes, D. N., and C. A. Gill. 1998. \"Comparing measures of sample skewness and kurtosis.\" _Journal of the Royal Statistical Society: Series D (The Statistician)_ 47 (1). Blackwell Publishers Ltd: 183–89. doi:[10.1111/1467-9884.00122][@joanes:1998].\n*\n* [@joanes:1998]: http://dx.doi.org/10.1111/1467-9884.00122\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrkurtosis();\n*\n* var kurtosis = accumulator();\n* // returns null\n*\n* kurtosis = accumulator( 2.0 );\n* // returns null\n*\n* kurtosis = accumulator( 2.0 );\n* // returns null\n*\n* kurtosis = accumulator( -4.0 );\n* // returns null\n*\n* kurtosis = accumulator( -4.0 );\n* // returns -6.0\n*/\nfunction incrkurtosis() {\n\tvar deltaN2;\n\tvar deltaN;\n\tvar delta;\n\tvar term1;\n\tvar mean;\n\tvar tmp;\n\tvar g2;\n\tvar M2;\n\tvar M3;\n\tvar M4;\n\tvar N;\n\n\tdeltaN2 = 0.0;\n\tdeltaN = 0.0;\n\tdelta = 0.0;\n\tterm1 = 0.0;\n\tmean = 0.0;\n\tM2 = 0.0;\n\tM3 = 0.0;\n\tM4 = 0.0;\n\tN = 0;\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated corrected sample excess kurtosis. If not provided a value, the accumulator function returns the current corrected sample excess kurtosis.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} corrected sample excess kurtosis\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N < 4 ) {\n\t\t\t\treturn ( isnan( M4 ) ) ? NaN : null;\n\t\t\t}\n\t\t\t// Calculate the population excess kurtosis:\n\t\t\tg2 = (( N*M4 ) / ( M2*M2 )) - 3.0;\n\n\t\t\t// Return the corrected sample excess kurtosis:\n\t\t\treturn (N-1) / ( (N-2)*(N-3) ) * ( ((N+1)*g2) + 6.0 );\n\t\t}\n\t\tN += 1;\n\t\tdelta = x - mean;\n\t\tdeltaN = delta / N;\n\t\tdeltaN2 = deltaN * deltaN;\n\n\t\tterm1 = delta * deltaN * (N-1);\n\n\t\ttmp = term1 * deltaN2 * ((N*N) - (3*N) + 3);\n\t\ttmp += 6.0 * deltaN2 * M2;\n\t\ttmp -= 4.0 * deltaN * M3;\n\t\tM4 += tmp;\n\n\t\ttmp = term1 * deltaN * (N-2);\n\t\ttmp -= 3.0 * deltaN * M2;\n\t\tM3 += tmp;\n\n\t\tM2 += term1;\n\t\tmean += deltaN;\n\t\tif ( N < 4 ) {\n\t\t\treturn ( isnan( M4 ) ) ? NaN : null;\n\t\t}\n\t\t// Calculate the population excess kurtosis:\n\t\tg2 = (N*M4 / ( M2*M2 )) - 3.0;\n\n\t\t// Return the corrected sample excess kurtosis:\n\t\treturn (N-1) / ( (N-2)*(N-3) ) * ( ((N+1)*g2) + 6.0 );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrkurtosis;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C code, long comment, copyright, license, and constants are from [Cephes]{@link http://www.netlib.org/cephes}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright 1984, 1995, 2000 by Stephen L. Moshier\n*\n* Some software in this archive may be from the book _Methods and Programs for Mathematical Functions_ (Prentice-Hall or Simon & Schuster International, 1989) or from the Cephes Mathematical Library, a commercial product. In either event, it is copyrighted by the author. What you see here may be used freely but it comes with no support or guarantee.\n*\n* Stephen L. Moshier\n* moshier@na-net.ornl.gov\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar PIO2 = require( '@stdlib/constants/float64/half-pi' );\nvar PIO4 = require( '@stdlib/constants/float64/fourth-pi' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar polyvalP = require( './polyval_p.js' );\nvar polyvalQ = require( './polyval_q.js' );\n\n\n// VARIABLES //\n\nvar MOREBITS = 6.123233995736765886130e-17; // pi/2 = PIO2 + MOREBITS.\nvar T3P8 = 2.41421356237309504880; // tan( 3*pi/8 )\n\n\n// MAIN //\n\n/**\n* Computes the arctangent of a number.\n*\n* ## Method\n*\n* -   Range reduction is from three intervals into the interval from 0 to 0.66. The approximant uses a rational function of degree 4/5 of the form\n*\n*     ```tex\n*     x + x^3 \\frac{P(x)}{Q(x)}\n*     ```\n*\n* ## Notes\n*\n* -   Relative error:\n*\n*     | arithmetic | domain  | # trials | peak    | rms     |\n*     |:-----------|:--------|:---------|:--------|:--------|\n*     | DEC        | -10, 10 | 50000    | 2.4e-17 | 8.3e-18 |\n*     | IEEE       | -10, 10 | 10^6     | 1.8e-16 | 5.0e-17 |\n*\n* @param {number} x - input value\n* @returns {number} arctangent (in radians)\n*\n* @example\n* var v = atan( 0.0 );\n* // returns ~0.0\n*\n* @example\n* var PI = require( '@stdlib/constants/float64/pi' );\n*\n* var v = atan( -PI/4.0 );\n* // returns ~-0.666\n*\n* @example\n* var PI = require( '@stdlib/constants/float64/pi' );\n*\n* var v = atan( PI/4.0 );\n* // returns ~0.666\n*\n* @example\n* var v = atan( NaN );\n* // returns NaN\n*/\nfunction atan( x ) {\n\tvar flg;\n\tvar sgn;\n\tvar y;\n\tvar z;\n\tif ( isnan( x ) || x === 0.0 ) {\n\t\treturn x;\n\t}\n\tif ( x === PINF ) {\n\t\treturn PIO2;\n\t}\n\tif ( x === NINF ) {\n\t\treturn -PIO2;\n\t}\n\tif ( x < 0.0 ) {\n\t\tsgn = true;\n\t\tx = -x;\n\t}\n\t// Range reduction:\n\tflg = 0;\n\tif ( x > T3P8 ) {\n\t\ty = PIO2;\n\t\tflg = 1;\n\t\tx = -( 1.0/x );\n\t}\n\telse if ( x <= 0.66 ) {\n\t\ty = 0.0;\n\t}\n\telse {\n\t\ty = PIO4;\n\t\tflg = 2;\n\t\tx = (x-1.0) / (x+1.0);\n\t}\n\tz = x * x;\n\tz = z*polyvalP( z ) / polyvalQ( z );\n\tz = ( x*z ) + x;\n\tif ( flg === 2 ) {\n\t\tz += 0.5 * MOREBITS;\n\t}\n\telse if ( flg === 1 ) {\n\t\tz += MOREBITS;\n\t}\n\ty += z;\n\treturn ( sgn ) ? -y : y;\n}\n\n\n// EXPORTS //\n\nmodule.exports = atan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -64.85021904942025;\n\t}\n\treturn -64.85021904942025 + (x * (-122.88666844901361 + (x * (-75.00855792314705 + (x * (-16.157537187333652 + (x * -0.8750608600031904))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 194.5506571482614;\n\t}\n\treturn 194.5506571482614 + (x * (485.3903996359137 + (x * (432.88106049129027 + (x * (165.02700983169885 + (x * (24.858464901423062 + (x * 1.0))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the arctangent of a number.\n*\n* @module @stdlib/math/base/special/atan\n*\n* @example\n* var PI = require( '@stdlib/constants/float64/pi' );\n* var atan = require( '@stdlib/math/base/special/atan' );\n*\n* var v = atan( 0.0 );\n* // returns ~0.0\n*\n* v = atan( -PI/4.0 );\n* // returns ~-0.666\n*\n* v = atan( PI/4.0 );\n* // returns ~0.666\n*\n* v = atan( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar atan = require( './atan.js' );\n\n\n// EXPORTS //\n\nmodule.exports = atan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving sample Pearson product-moment correlation coefficient incrementally.\n*\n* @module @stdlib/stats/incr/mpcorr\n*\n* @example\n* var incrmpcorr = require( '@stdlib/stats/incr/mpcorr' );\n*\n* var accumulator = incrmpcorr( 3 );\n*\n* var r = accumulator();\n* // returns null\n*\n* r = accumulator( 2.0, 1.0 );\n* // returns 0.0\n*\n* r = accumulator( -5.0, 3.14 );\n* // returns ~-1.0\n*\n* r = accumulator( 3.0, -1.0 );\n* // returns ~-0.925\n*\n* r = accumulator( 5.0, -9.5 );\n* // returns ~-0.863\n*\n* r = accumulator();\n* // returns ~-0.863\n*/\n\n// MODULES //\n\nvar incrmpcorr = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmpcorr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving sample Pearson product-moment correlation coefficient.\n*\n* ## Method\n*\n* -   Let \\\\(W\\\\) be a window of \\\\(N\\\\) elements over which we want to compute a sample Pearson product-moment correlation coefficient.\n*\n* -   We begin by defining the covariance \\\\( \\operatorname{cov}_n(x,y) \\\\) for a window \\\\(n\\\\) as follows\n*\n*     ```tex\n*     \\operatorname{cov}_n(x,y) &= \\frac{C_n}{n}\n*     ```\n*\n*     where \\\\(C_n\\\\) is the co-moment, which is defined as\n*\n*     ```tex\n*     C_n = \\sum_{i=1}^{N} ( x_i - \\bar{x}_n ) ( y_i - \\bar{y}_n )\n*     ```\n*\n*     and where \\\\(\\bar{x}_n\\\\) and \\\\(\\bar{y}_n\\\\) are the sample means for \\\\(x\\\\) and \\\\(y\\\\), respectively, and \\\\(i=1\\\\) specifies the first element in a window.\n*\n* -   The sample mean is computed using the canonical formula\n*\n*     ```tex\n*     \\bar{x}_n = \\frac{1}{N} \\sum_{i=1}^{N} x_i\n*     ```\n*\n*     which, taking into account a previous window, can be expressed\n*\n*     ```tex\n*     \\begin{align*}\n*     \\bar{x}_n &= \\frac{1}{N} \\biggl( \\sum_{i=0}^{N-1} x_i - x_0 + x_N \\biggr) \\\\\n*               &= \\bar{x}_{n-1} + \\frac{x_N - x_0}{N}\n*     \\end{align*}\n*     ```\n*\n*     where \\\\(x_0\\\\) is the first value in the previous window.\n*\n* -   We can substitute into the co-moment equation\n*\n*     ```tex\n*     \\begin{align*}\n*     C_n &= \\sum_{i=1}^{N} ( x_i - \\bar{x}_n ) ( y_i - \\bar{y}_n ) \\\\\n*         &= \\sum_{i=1}^{N} \\biggl( x_i - \\bar{x}_{n-1} - \\frac{x_N - x_0}{N} \\biggr) \\biggl( y_i - \\bar{y}_{n-1} - \\frac{y_N - y_0}{N} \\biggr) \\\\\n*         &= \\sum_{i=1}^{N} \\biggl( \\Delta x_{i,n-1} - \\frac{x_N - x_0}{N} \\biggr) \\biggl( \\Delta y_{i,n-1} - \\frac{y_N - y_0}{N} \\biggr)\n*     \\end{align*}\n*     ```\n*\n*     where\n*\n*     ```tex\n*     \\Delta x_{i,k} = x_i - \\bar{x}_{k}\n*     ```\n*\n* -   We can subsequently expand terms and apply a summation identity\n*\n*     ```tex\n*     \\begin{align*}\n*     C_n &= \\sum_{i=1}^{N} \\Delta x_{i,n-1} \\Delta y_{i,n-1} - \\sum_{i=1}^{N} \\Delta x_{i,n-1} \\biggl( \\frac{y_N - y_0}{N} \\biggr) - \\sum_{i=1}^{N} \\Delta y_{i,n-1} \\biggl( \\frac{x_N - x_0}{N} \\biggr) + \\sum_{i=1}^{N} \\biggl( \\frac{x_N - x_0}{N} \\biggr) \\biggl( \\frac{y_N - y_0}{N} \\biggr) \\\\\n*         &= \\sum_{i=1}^{N} \\Delta x_{i,n-1} \\Delta y_{i,n-1} - \\biggl( \\frac{y_N - y_0}{N} \\biggr) \\sum_{i=1}^{N} \\Delta x_{i,n-1} - \\biggl( \\frac{x_N - x_0}{N} \\biggr) \\sum_{i=1}^{N} \\Delta y_{i,n-1} + \\frac{(x_N - x_0)(y_N - y_0)}{N}\n*     \\end{align*}\n*     ```\n*\n* -   Let us first consider the second term which we can reorganize as follows\n*\n*     ```tex\n*     \\begin{align*}\n*     \\biggl( \\frac{y_N - y_0}{N} \\biggr) \\sum_{i=1}^{N} \\Delta x_{i,n-1} &= \\biggl( \\frac{y_N - y_0}{N} \\biggr) \\sum_{i=1}{N} ( x_i - \\bar{x}_{n-1}) \\\\\n*         &= \\biggl( \\frac{y_N - y_0}{N} \\biggr) \\sum_{i=1}^{N} x_i - \\biggl( \\frac{y_N - y_0}{N} \\biggr) \\sum_{i=1}^{N} \\bar{x}_{n-1} \\\\\n*         &= (y_N - y_0) \\bar{x}_{n} - (y_N - y_0)\\bar{x}_{n-1} \\\\\n*         &= (y_N - y_0) (\\bar{x}_{n} - \\bar{x}_{n-1}) \\\\\n*         &= \\frac{(x_N - x_0)(y_N - y_0)}{N}\n*     \\end{align*}\n*     ```\n*\n* -   The third term can be reorganized in a manner similar to the second term such that\n*\n*     ```tex\n*     \\biggl( \\frac{x_N - x_0}{N} \\biggr) \\sum_{i=1}^{N} \\Delta y_{i,n-1} = \\frac{(x_N - x_0)(y_N - y_0)}{N}\n*     ```\n*\n* -   Substituting back into the equation for the co-moment\n*\n*     ```tex\n*     \\begin{align*}\n*     C_n &= \\sum_{i=1}^{N} \\Delta x_{i,n-1} \\Delta y_{i,n-1} - \\frac{(x_N - x_0)(y_N - y_0)}{N} - \\frac{(x_N - x_0)(y_N - y_0)}{N} + \\frac{(x_N - x_0)(y_N - y_0)}{N} \\\\\n*         &= \\sum_{i=1}^{N} \\Delta x_{i,n-1} \\Delta y_{i,n-1} - \\frac{(x_N - x_0)(y_N - y_0)}{N}\n*     \\end{align*}\n*     ```\n*\n* -   Let us now consider the first term which we can modify as follows\n*\n*     ```tex\n*     \\begin{align*}\n*     \\sum_{i=1}^{N} \\Delta x_{i,n-1} \\Delta y_{i,n-1} &= \\sum_{i=1}^{N} (x_i - \\bar{x}_{n-1})(y_i - \\bar{y}_{n-1}) \\\\\n*         &= \\sum_{i=1}^{N-1} (x_i - \\bar{x}_{n-1})(y_i - \\bar{y}_{n-1}) + (x_N - \\bar{x}_{n-1})(y_N - \\bar{y}_{n-1}) \\\\\n*         &= \\sum_{i=1}^{N-1} (x_i - \\bar{x}_{n-1})(y_i - \\bar{y}_{n-1}) + (x_N - \\bar{x}_{n-1})(y_N - \\bar{y}_{n-1}) + (x_0 - \\bar{x}_{n-1})(y_0 - \\bar{y}_{n-1}) - (x_0 - \\bar{x}_{n-1})(y_0 - \\bar{y}_{n-1}) \\\\\n*         &= \\sum_{i=0}^{N-1} (x_i - \\bar{x}_{n-1})(y_i - \\bar{y}_{n-1}) + (x_N - \\bar{x}_{n-1})(y_N - \\bar{y}_{n-1}) - (x_0 - \\bar{x}_{n-1})(y_0 - \\bar{y}_{n-1})\n*     \\end{align*}\n*     ```\n*\n*     where we recognize that the first term equals the co-moment for the previous window\n*\n*     ```tex\n*     C_{n-1} = \\sum_{i=0}^{N-1} (x_i - \\bar{x}_{n-1})(y_i - \\bar{y}_{n-1})\n*     ```\n*\n*     In which case,\n*\n*     ```tex\n*     \\begin{align*}\n*     \\sum_{i=1}^{N} \\Delta x_{i,n-1} \\Delta y_{i,n-1} &= C_{n-1} + (x_N - \\bar{x}_{n-1})(y_N - \\bar{y}_{n-1}) - (x_0 - \\bar{x}_{n-1})(y_0 - \\bar{y}_{n-1}) \\\\\n*         &= C_{n-1} + \\Delta x_{N,n-1} \\Delta y_{N,n-1} - \\Delta x_{0,n-1} \\Delta y_{0,n-1}\n*     \\end{align*}\n*     ```\n*\n* -   Substituting into the equation for the co-moment\n*\n*     ```tex\n*     C_n = C_{n-1} + \\Delta x_{N,n-1} \\Delta y_{N,n-1} - \\Delta x_{0,n-1} \\Delta y_{0,n-1} - \\frac{(x_N - x_0)(y_N - y_0)}{N}\n*     ```\n*\n* -   We can make one further modification to the last term\n*\n*     ```tex\n*     \\begin{align*}\n*     \\frac{(x_N - x_0)(y_N - y_0)}{N} &= \\frac{(x_N - \\bar{x}_{n-1} - x_0 + \\bar{x}_{n-1})(y_N - \\bar{y}_{n-1} - y_0 + \\bar{y}_{n-1})}{N} \\\\\n*         &= \\frac{(\\Delta x_{N,n-1} - \\Delta x_{0,n-1})(\\Delta y_{N,n-1} - \\Delta y_{0,n-1})}{N}\n*     \\end{align*}\n*     ```\n*\n*     which, upon substitution into the equation for the co-moment, yields\n*\n*     ```tex\n*     C_n = C_{n-1} + \\Delta x_{N,n-1} \\Delta y_{N,n-1} - \\Delta x_{0,n-1} \\Delta y_{0,n-1} - \\frac{(\\Delta x_{N,n-1} - \\Delta x_{0,n-1})(\\Delta y_{N,n-1} - \\Delta y_{0,n-1})}{N}\n*     ```\n*\n* -   To calculate corrected sample standard deviations, we first recognize that the corrected sample standard deviation is defined as the square root of the unbiased sample variance. Accordingly, in order to derive an update equation for the corrected sample standard deviation, deriving an update equation for the unbiased sample variance is sufficient.\n*\n* -   The difference between the unbiased sample variance in a window \\\\(W_{n-1}\\\\) and the unbiased sample variance in a window \\\\(W_{n})\\\\) is given by\n*\n*     ```tex\n*     \\Delta s^2 = s_n^2 - s_{n-1}^2\n*     ```\n*\n* -   If we multiply both sides by \\\\(N-1\\\\),\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = (N-1)s_{n}^2 - (N-1)s_{n-1}^2\n*     ```\n*\n* -   If we substitute the definition of the unbiased sample variance having the form\n*\n*     ```tex\n*     \\begin{align*}\n*     s^2 &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} (x_i - \\bar{x})^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} (x_i^2 - 2\\bar{x}x_i + \\bar{x}^2) \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - 2\\bar{x} \\sum_{i=1}^{N} x_i + \\sum_{i=1}^{N} \\bar{x}^2) \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - \\frac{2N\\bar{x}\\sum_{i=1}^{N} x_i}{N} + N\\bar{x}^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - 2N\\bar{x}^2 + N\\bar{x}^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - N\\bar{x}^2 \\biggr)\n*     \\end{align*}\n*     ```\n*\n*     we return\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = \\biggl(\\sum_{i=1}^N x_i^2 - N\\bar{x}_{n}^2 \\biggr) - \\biggl(\\sum_{i=0}^{N-1} x_i^2 - N\\bar{x}_{n-1}^2 \\biggr)\n*     ```\n*\n* -   This can be further simplified by recognizing that subtracting the sums reduces to \\\\(x_N^2 - x_0^2\\\\); in which case,\n*\n*     ```tex\n*     \\begin{align*}\n*     (N-1)(\\Delta s^2) &= x_N^2 - x_0^2 - N\\bar{x}_{n}^2 + N\\bar{x}_{n-1}^2 \\\\\n*     &= x_N^2 - x_0^2 - N(\\bar{x}_{n}^2 - \\bar{x}_{n-1}^2) \\\\\n*     &= x_N^2 - x_0^2 - N(\\bar{x}_{n} - \\bar{x}_{n-1})(\\bar{x}_{n} + \\bar{x}_{n-1})\n*     \\end{align*}\n*     ```\n*\n* -   Recognizing that the difference of means can be expressed\n*\n*     ```tex\n*     \\bar{x}_{n} - \\bar{x}_{n-1} = \\frac{1}{N} \\biggl( \\sum_{i=1}^N x_i - \\sum_{i=0}^{N-1} x_i \\biggr) = \\frac{x_N - x_0}{N}\n*     ```\n*\n*     and substituting into the equation above\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = x_N^2 - x_0^2 - (x_N - x_0)(\\bar{x}_{n} + \\bar{x}_{n-1})\n*     ```\n*\n* -   Rearranging terms gives us the update equation\n*\n*     ```tex\n*     \\begin{align*}\n*     (N-1)(\\Delta s^2) &= (x_N - x_0)(x_N + x_0) - (x_N - x_0)(\\bar{x}_{n} + \\bar{x}_{n-1})\n*     &= (x_N - x_0)(x_N + x_0 - \\bar{x}_{n} - \\bar{x}_{n-1}) \\\\\n*     &= (x_N - x_0)(x_N - \\bar{x}_{n} + x_0 - \\bar{x}_{n-1})\n*     \\end{align*}\n*     ```\n*\n* -   To compute the corrected sample standard deviation, we apply Bessel's correction and take the square root.\n*\n* -   The sample Pearson product-moment correlation coefficient can thus be calculated as\n*\n*     ```tex\n*     r_n(x,y) = \\frac{\\operatorname{cov}_n(x,y)}{\\sigma_{x,n} \\sigma_{y,n}}\n*     ```\n*\n*     where \\\\(\\sigma_{x,n}\\\\) and \\\\(\\sigma_{y,n}\\\\) are the corrected sample standard deviations for \\\\(x\\\\) and \\\\(y\\\\), respectively, for a window \\\\(n\\\\).\n*\n*\n* @param {PositiveInteger} W - window size\n* @param {number} [meanx] - mean value\n* @param {number} [meany] - mean value\n* @throws {TypeError} first argument must be a positive integer\n* @throws {TypeError} second argument must be a number\n* @throws {TypeError} third argument must be a number\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmpcorr( 3 );\n*\n* var r = accumulator();\n* // returns null\n*\n* r = accumulator( 2.0, 1.0 );\n* // returns 0.0\n*\n* r = accumulator( -5.0, 3.14 );\n* // returns ~-1.0\n*\n* r = accumulator( 3.0, -1.0 );\n* // returns ~-0.925\n*\n* r = accumulator( 5.0, -9.5 );\n* // returns ~-0.863\n*\n* r = accumulator();\n* // returns ~-0.863\n*\n* @example\n* var accumulator = incrmpcorr( 3, -2.0, 10.0 );\n*/\nfunction incrmpcorr( W, meanx, meany ) {\n\tvar buf;\n\tvar dx0;\n\tvar dxN;\n\tvar dy0;\n\tvar dyN;\n\tvar M2x;\n\tvar M2y;\n\tvar mx;\n\tvar my;\n\tvar sx;\n\tvar sy;\n\tvar dx;\n\tvar dy;\n\tvar wi;\n\tvar C;\n\tvar N;\n\tvar n;\n\tvar i;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tbuf = new Float64Array( 2*W ); // strided array\n\tn = W - 1;\n\tM2x = 0.0;\n\tM2y = 0.0;\n\tC = 0.0;\n\twi = -1;\n\tN = 0;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNumber( meanx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', meanx ) );\n\t\t}\n\t\tif ( !isNumber( meany ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a number. Value: `%s`.', meany ) );\n\t\t}\n\t\tmx = meanx;\n\t\tmy = meany;\n\t\treturn accumulator2;\n\t}\n\tmx = 0.0;\n\tmy = 0.0;\n\treturn accumulator1;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated sample correlation coefficient. If not provided a value, the accumulator function returns the current sample correlation coefficient.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @param {number} [y] - input value\n\t* @returns {(number|null)} sample correlation coefficient or null\n\t*/\n\tfunction accumulator1( x, y ) {\n\t\tvar v1;\n\t\tvar v2;\n\t\tvar n1;\n\t\tvar k;\n\t\tvar j;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn 0.0;\n\t\t\t}\n\t\t\tif ( N < W ) {\n\t\t\t\treturn ( C/(N-1) ) / ( sx*sy );\n\t\t\t}\n\t\t\treturn ( C/n ) / ( sx*sy );\n\t\t}\n\t\t// Update the window and strided array indices for managing the circular buffer:\n\t\twi = (wi+1) % W;\n\t\ti = 2 * wi;\n\n\t\t// Case: an incoming value is NaN, the sliding co-moment is automatically NaN...\n\t\tif ( isnan( x ) || isnan( y ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tC = NaN;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tbuf[ i ] = x; // update buffer\n\t\t\tbuf[ i+1 ] = y;\n\n\t\t\tN += 1;\n\n\t\t\tdx = x - mx;\n\t\t\tmx += dx / N;\n\t\t\tM2x += dx * ( x-mx );\n\n\t\t\tdy = y - my;\n\t\t\tmy += dy / N;\n\t\t\tdyN = y - my;\n\t\t\tM2y += dy * dyN;\n\n\t\t\tC += dx * dyN;\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn 0.0;\n\t\t\t}\n\t\t\tn1 = N - 1;\n\t\t\tsx = sqrt( M2x/n1 );\n\t\t\tsy = sqrt( M2y/n1 );\n\t\t\treturn ( C/n1 ) / ( sx*sy ); // Note: why all the dividing by `N`? To avoid overflow.\n\t\t}\n\t\t// Case: N = W = 1\n\t\telse if ( N === 1 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\t// Case: an outgoing value is NaN, and, thus, we need to compute the accumulated values...\n\t\telse if ( isnan( buf[ i ] ) || isnan( buf[ i+1 ] ) ) {\n\t\t\tN = 1;\n\t\t\tmx = x;\n\t\t\tmy = y;\n\t\t\tM2x = 0.0;\n\t\t\tM2y = 0.0;\n\t\t\tC = 0.0;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tj = 2 * k; // convert to a strided array index\n\t\t\t\tif ( j !== i ) {\n\t\t\t\t\tv1 = buf[ j ];\n\t\t\t\t\tv2 = buf[ j+1 ];\n\t\t\t\t\tif ( isnan( v1 ) || isnan( v2 ) ) {\n\t\t\t\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\t\t\t\tC = NaN;\n\t\t\t\t\t\tbreak; // co-moment is automatically NaN, so no need to continue\n\t\t\t\t\t}\n\t\t\t\t\tN += 1;\n\n\t\t\t\t\tdx = v1 - mx;\n\t\t\t\t\tmx += dx / N;\n\t\t\t\t\tM2x += dx * ( v1-mx );\n\n\t\t\t\t\tdy = v2 - my;\n\t\t\t\t\tmy += dy / N;\n\t\t\t\t\tdyN = v2 - my;\n\t\t\t\t\tM2y += dy * dyN;\n\n\t\t\t\t\tC += dx * dyN;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: neither the current co-moment nor the incoming values are NaN, so we need to update the accumulated values...\n\t\telse if ( isnan( C ) === false ) {\n\t\t\tdx0 = buf[ i ] - mx;\n\t\t\tdy0 = buf[ i+1 ] - my;\n\t\t\tdxN = x - mx;\n\t\t\tdyN = y - my;\n\t\t\tdx = dxN - dx0;\n\t\t\tdy = dyN - dy0;\n\t\t\tmx += dx / W;\n\t\t\tmy += dy / W;\n\t\t\tM2x += dx * ( dx0+(x-mx) );\n\t\t\tM2y += dy * ( dy0+(y-my) );\n\t\t\tC += (dxN*dyN) - (dx0*dy0) - ( dx*dy/W );\n\t\t}\n\t\t// Case: the current co-moment is NaN, so nothing to do until the buffer no longer contains NaN values...\n\t\tbuf[ i ] = x;\n\t\tbuf[ i+1 ] = y;\n\n\t\tsx = sqrt( M2x/n );\n\t\tsy = sqrt( M2y/n );\n\t\treturn ( C/n ) / ( sx*sy ); // Note: why all the dividing by `n`? To avoid overflow.\n\t}\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated sample correlation coefficient. If not provided a value, the accumulator function returns the current sample correlation coefficient.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @param {number} [y] - input value\n\t* @returns {(number|null)} sample correlation coefficient or null\n\t*/\n\tfunction accumulator2( x, y ) {\n\t\tvar k;\n\t\tvar j;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( N < W ) {\n\t\t\t\treturn ( C/N ) / ( sx*sy );\n\t\t\t}\n\t\t\treturn ( C/W ) / ( sx*sy );\n\t\t}\n\t\t// Update the window and strided array indices for managing the circular buffer:\n\t\twi = (wi+1) % W;\n\t\ti = 2 * wi;\n\n\t\t// Case: an incoming value is NaN, the sliding co-moment is automatically NaN...\n\t\tif ( isnan( x ) || isnan( y ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tC = NaN;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tbuf[ i ] = x; // update buffer\n\t\t\tbuf[ i+1 ] = y;\n\n\t\t\tN += 1;\n\t\t\tdx = x - mx;\n\t\t\tM2x += dx * dx;\n\t\t\tdy = y - my;\n\t\t\tM2y += dy * dy;\n\n\t\t\tC += dx * dy;\n\t\t\tsx = sqrt( M2x/N );\n\t\t\tsy = sqrt( M2y/N );\n\t\t\treturn ( C/N ) / ( sx*sy ); // Note: why all the dividing by `N`? To avoid overflow.\n\t\t}\n\t\t// Case: an outgoing value is NaN, and, thus, we need to compute the accumulated values...\n\t\telse if ( isnan( buf[ i ] ) || isnan( buf[ i+1 ] ) ) {\n\t\t\tM2x = 0.0;\n\t\t\tM2y = 0.0;\n\t\t\tC = 0.0;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tj = 2 * k; // convert to a strided array index\n\t\t\t\tif ( j !== i ) {\n\t\t\t\t\tif ( isnan( buf[ j ] ) || isnan( buf[ j+1 ] ) ) {\n\t\t\t\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\t\t\t\tC = NaN;\n\t\t\t\t\t\tbreak; // co-moment is automatically NaN, so no need to continue\n\t\t\t\t\t}\n\t\t\t\t\tdx = buf[j] - mx;\n\t\t\t\t\tM2x += dx * dx;\n\t\t\t\t\tdy = buf[j+1] - my;\n\t\t\t\t\tM2y += dy * dy;\n\t\t\t\t\tC += dx * dy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: neither the current co-moment nor the incoming values are NaN, so we need to update the accumulated values...\n\t\telse if ( isnan( C ) === false ) {\n\t\t\t// Use textbook formulas along with simplification arising from difference of sums:\n\t\t\tdx0 = buf[ i ] - mx;\n\t\t\tdxN = x - mx;\n\t\t\tdy0 = buf[ i+1 ] - my;\n\t\t\tdyN = y - my;\n\t\t\tM2x += ( dxN-dx0 ) * ( dxN+dx0 );\n\t\t\tM2y += ( dyN-dy0 ) * ( dyN+dy0 );\n\t\t\tC += ( dxN*dyN ) - ( dx0*dy0 );\n\t\t}\n\t\t// Case: the current co-moment is NaN, so nothing to do until the buffer no longer contains NaN values...\n\t\tbuf[ i ] = x;\n\t\tbuf[ i+1 ] = y;\n\n\t\tsx = sqrt( M2x/W );\n\t\tsy = sqrt( M2y/W );\n\t\treturn ( C/W ) / ( sx*sy ); // Note: why all the dividing by `W`? To avoid overflow.\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmpcorr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a maximum value incrementally.\n*\n* @module @stdlib/stats/incr/max\n*\n* @example\n* var incrmax = require( '@stdlib/stats/incr/max' );\n*\n* var accumulator = incrmax();\n*\n* var max = accumulator();\n* // returns null\n*\n* max = accumulator( 3.14 );\n* // returns 3.14\n*\n* max = accumulator( -5.0 );\n* // returns 3.14\n*\n* max = accumulator( 10.1 );\n* // returns 10.1\n*\n* max = accumulator();\n* // returns 10.1\n*/\n\n// MODULES //\n\nvar incrmax = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isPositiveZero = require( '@stdlib/math/base/assert/is-positive-zero' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a maximum value.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmax();\n*\n* var max = accumulator();\n* // returns null\n*\n* max = accumulator( 3.14 );\n* // returns 3.14\n*\n* max = accumulator( -5.0 );\n* // returns 3.14\n*\n* max = accumulator( 10.1 );\n* // returns 10.1\n*\n* max = accumulator();\n* // returns 10.1\n*/\nfunction incrmax() {\n\tvar max;\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated maximum value. If not provided a value, the accumulator function returns the current max.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} max value or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn ( max === void 0 ) ? null : max;\n\t\t}\n\t\tif (\n\t\t\tmax === void 0 ||\n\t\t\tx > max ||\n\t\t\tisnan( x ) ||\n\t\t\t( x === max && isPositiveZero( x ) )\n\t\t) {\n\t\t\tmax = x;\n\t\t}\n\t\treturn max;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a maximum absolute value incrementally.\n*\n* @module @stdlib/stats/incr/maxabs\n*\n* @example\n* var incrmaxabs = require( '@stdlib/stats/incr/maxabs' );\n*\n* var accumulator = incrmaxabs();\n*\n* var max = accumulator();\n* // returns null\n*\n* max = accumulator( 3.14 );\n* // returns 3.14\n*\n* max = accumulator( -5.0 );\n* // returns 5.0\n*\n* max = accumulator( 10.1 );\n* // returns 10.1\n*\n* max = accumulator();\n* // returns 10.1\n*/\n\n// MODULES //\n\nvar incrmaxabs = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmaxabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar incrmax = require( './../../../incr/max' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a maximum absolute value.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmaxabs();\n*\n* var max = accumulator();\n* // returns null\n*\n* max = accumulator( 3.14 );\n* // returns 3.14\n*\n* max = accumulator( -5.0 );\n* // returns 5.0\n*\n* max = accumulator( 10.1 );\n* // returns 10.1\n*\n* max = accumulator();\n* // returns 10.1\n*/\nfunction incrmaxabs() {\n\tvar max = incrmax();\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated maximum absolute value. If not provided a value, the accumulator function returns the current maximum absolute value.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} maximum absolute value or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn max();\n\t\t}\n\t\treturn max( abs( x ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmaxabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the Kronecker delta.\n*\n* @module @stdlib/math/base/special/kronecker-delta\n*\n* @example\n* var kroneckerDelta = require( '@stdlib/math/base/special/kronecker-delta' );\n*\n* var v = kroneckerDelta( 3.14, 3.14 );\n* // returns 1.0\n*\n* v = kroneckerDelta( 3.14, 0.0 );\n* // returns 0.0\n*\n* v = kroneckerDelta( NaN, 3.14 );\n* // returns NaN\n*\n* v = kroneckerDelta( 3.14, NaN );\n* // returns NaN\n*\n* v = kroneckerDelta( NaN, NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar kroneckerDelta = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = kroneckerDelta;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Evaluates the Kronecker delta.\n*\n* @param {number} i - input value\n* @param {number} j - input value\n* @returns {number} function value\n*\n* @example\n* var v = kroneckerDelta( 3.14, 3.14 );\n* // returns 1.0\n*\n* @example\n* var v = kroneckerDelta( 3.14, 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = kroneckerDelta( NaN, 3.14 );\n* // returns NaN\n*\n* @example\n* var v = kroneckerDelta( 3.14, NaN );\n* // returns NaN\n*\n* @example\n* var v = kroneckerDelta( NaN, NaN );\n* // returns NaN\n*/\nfunction kroneckerDelta( i, j ) {\n\tif ( isnan( i ) || isnan( j ) ) {\n\t\treturn NaN;\n\t}\n\tif ( i === j ) {\n\t\treturn 1.0;\n\t}\n\treturn 0.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = kroneckerDelta;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an arithmetic mean of absolute values incrementally.\n*\n* @module @stdlib/stats/incr/meanabs\n*\n* @example\n* var incrmeanabs = require( '@stdlib/stats/incr/meanabs' );\n*\n* var accumulator = incrmeanabs();\n*\n* var mu = accumulator();\n* // returns null\n*\n* mu = accumulator( 2.0 );\n* // returns 2.0\n*\n* mu = accumulator( -5.0 );\n* // returns 3.5\n*\n* mu = accumulator();\n* // returns 3.5\n*/\n\n// MODULES //\n\nvar incrmeanabs = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmeanabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar incrmean = require( './../../../incr/mean' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes an arithmetic mean of absolute values.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmeanabs();\n*\n* var mu = accumulator();\n* // returns null\n*\n* mu = accumulator( 2.0 );\n* // returns 2.0\n*\n* mu = accumulator( -5.0 );\n* // returns 3.5\n*\n* mu = accumulator();\n* // returns 3.5\n*/\nfunction incrmeanabs() {\n\tvar mean = incrmean();\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated mean. If not provided a value, the accumulator function returns the current mean.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} mean value or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn mean();\n\t\t}\n\t\treturn mean( abs( x ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmeanabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an arithmetic mean of squared absolute values incrementally.\n*\n* @module @stdlib/stats/incr/meanabs2\n*\n* @example\n* var incrmeanabs2 = require( '@stdlib/stats/incr/meanabs2' );\n*\n* var accumulator = incrmeanabs2();\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0 );\n* // returns 4.0\n*\n* m = accumulator( -5.0 );\n* // returns 14.5\n*\n* m = accumulator();\n* // returns 14.5\n*/\n\n// MODULES //\n\nvar incrmeanabs2 = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmeanabs2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar incrmean = require( './../../../incr/mean' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes an arithmetic mean of squared absolute values.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmeanabs2();\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0 );\n* // returns 4.0\n*\n* m = accumulator( -5.0 );\n* // returns 14.5\n*\n* m = accumulator();\n* // returns 14.5\n*/\nfunction incrmeanabs2() {\n\tvar mean = incrmean();\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated mean. If not provided a value, the accumulator function returns the current mean.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} mean value or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn mean();\n\t\t}\n\t\treturn mean( x*x );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmeanabs2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar copy = require( '@stdlib/utils/copy' );\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-read-only-accessor' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar roundn = require( '@stdlib/math/base/special/roundn' );\nvar format = require( '@stdlib/string/format' );\nvar tQuantile = require( './../../../base/dists/t/quantile' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar validate = require( './validate.js' );\nvar defaults = require( './defaults.json' );\nvar incrmminmax = require( './minmax.js' );\nvar incrmmeanstdev = require( './meanstdev.js' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally performs a moving Grubbs' test for detecting outliers.\n*\n* @param {PositiveInteger} W - window size\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {string} [options.alternative='two-sided'] - alternative hypothesis ('two-sided', 'min', 'max')\n* @throws {TypeError} first argument must be a positive integer\n* @throws {RangeError} first argument must be greater than or equal to 3\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} `alpha` option must be on the interval `[0,1]`\n* @returns {Function} accumulator function\n*\n* @example\n* var rnorm = require( '@stdlib/random/base/normal' );\n*\n* var accumulator;\n* var opts;\n* var i;\n*\n* accumulator = incrmgrubbs( 20, opts );\n*\n* for ( i = 0; i < 200; i++ ) {\n*     res = accumulator( rnorm( 10.0, 5.0 ) );\n* }\n*/\nfunction incrmgrubbs( W ) {\n\tvar meanstdev;\n\tvar results;\n\tvar minmax;\n\tvar opts;\n\tvar err;\n\tvar buf;\n\tvar sig;\n\tvar mm;\n\tvar ms;\n\tvar tc;\n\tvar gc;\n\tvar df;\n\tvar N;\n\tvar G;\n\tvar i;\n\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Window size must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tif ( W < 3 ) {\n\t\tthrow new RangeError( format( 'invalid argument. Window size must be greater than or equal to 3. Value: `%s`.', W ) );\n\t}\n\topts = copy( defaults );\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, arguments[ 1 ] );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tbuf = new Float64Array( W );\n\tdf = W - 2;\n\tgc = 0.0;\n\tG = 0.0;\n\tN = 0;\n\ti = -1;\n\n\t// Compute the critical values:\n\tif ( opts.alternative === 'min' ) {\n\t\tsig = opts.alpha / W;\n\t} else if ( opts.alternative === 'max' ) {\n\t\tsig = opts.alpha / W;\n\t} else { // two-sided\n\t\tsig = opts.alpha / (2*W);\n\t}\n\ttc = tQuantile( 1.0-sig, df );\n\tgc = (W-1)*tc / sqrt( W*(df+(tc*tc)) );\n\n\t// Initialize statistics accumulators:\n\tmm = [ 0.0, 0.0 ];\n\tminmax = incrmminmax( mm, W, buf );\n\n\tms = [ 0.0, 0.0 ];\n\tmeanstdev = incrmmeanstdev( ms, W, buf );\n\n\t// Initialize the results object:\n\tresults = {};\n\tsetReadOnlyAccessor( results, 'rejected', getRejected );\n\tsetReadOnly( results, 'alpha', opts.alpha );\n\tsetReadOnly( results, 'criticalValue', gc );\n\tsetReadOnlyAccessor( results, 'statistic', getStatistic );\n\tsetReadOnly( results, 'df', df );\n\tsetReadOnlyAccessor( results, 'mean', getMean );\n\tsetReadOnlyAccessor( results, 'sd', getStDev );\n\tsetReadOnlyAccessor( results, 'min', getMin );\n\tsetReadOnlyAccessor( results, 'max', getMax );\n\tsetReadOnly( results, 'alt', opts.alternative );\n\tsetReadOnly( results, 'method', 'Grubbs\\' Test' );\n\tsetReadOnly( results, 'print', print );\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns updated Grubbs' test results. If not provided a value, the accumulator function returns the current Grubbs' test results.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(Object|null)} test results or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tvar md;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N < W ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn results;\n\t\t}\n\t\tN += 1;\n\n\t\t// Update the index for managing the circular buffer:\n\t\ti = (i+1) % W;\n\n\t\t// Update model statistics:\n\t\tmeanstdev( x, i );\n\t\tminmax( x, i );\n\n\t\t// Insert the value into the buffer:\n\t\tbuf[ i ] = x;\n\n\t\tif ( N < W ) {\n\t\t\treturn null;\n\t\t}\n\t\t// Compute the test statistic...\n\t\tif ( opts.alternative === 'min' ) {\n\t\t\tG = ( ms[0]-mm[0] ) / ms[ 1 ];\n\t\t} else if ( opts.alternative === 'max' ) {\n\t\t\tG = ( mm[1]-ms[0] ) / ms[ 1 ];\n\t\t} else { // two-sided\n\t\t\tmd = max( ms[0]-mm[0], mm[1]-ms[0] ); // maximum absolute deviation\n\t\t\tG = md / ms[ 1 ];\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t* Returns a `boolean` indicating whether the null hypothesis should be rejected.\n\t*\n\t* @private\n\t* @returns {boolean} boolean indicating whether the null hypothesis should be rejected\n\t*/\n\tfunction getRejected() {\n\t\treturn ( G > gc );\n\t}\n\n\t/**\n\t* Returns the test statistic.\n\t*\n\t* @private\n\t* @returns {number} test statistic\n\t*/\n\tfunction getStatistic() {\n\t\treturn G;\n\t}\n\n\t/**\n\t* Returns the sample mean.\n\t*\n\t* @private\n\t* @returns {number} sample mean\n\t*/\n\tfunction getMean() {\n\t\treturn ms[ 0 ];\n\t}\n\n\t/**\n\t* Returns the corrected sample standard deviation.\n\t*\n\t* @private\n\t* @returns {number} corrected sample standard deviation\n\t*/\n\tfunction getStDev() {\n\t\treturn ms[ 1 ];\n\t}\n\n\t/**\n\t* Returns the sample minimum.\n\t*\n\t* @private\n\t* @returns {number} sample minimum\n\t*/\n\tfunction getMin() {\n\t\treturn mm[ 0 ];\n\t}\n\n\t/**\n\t* Returns the sample maximum.\n\t*\n\t* @private\n\t* @returns {number} sample maximum\n\t*/\n\tfunction getMax() {\n\t\treturn mm[ 1 ];\n\t}\n\n\t/**\n\t* Pretty-print test results.\n\t*\n\t* @private\n\t* @param {Object} [options] - options object\n\t* @param {PositiveInteger} [options.digits=4] - number of digits after the decimal point\n\t* @param {boolean} [options.decision=true] - boolean indicating whether to print the test decision\n\t* @throws {TypeError} options argument must be an object\n\t* @throws {TypeError} must provide valid options\n\t* @returns {string} formatted output\n\t*/\n\tfunction print( options ) {\n\t\tvar decision;\n\t\tvar digits;\n\t\tvar str;\n\n\t\tdigits = opts.digits;\n\t\tdecision = opts.decision;\n\t\tif ( arguments.length > 0 ) {\n\t\t\tif ( !isObject( options ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an object. Value: `%s`.', options ) );\n\t\t\t}\n\t\t\tif ( hasOwnProp( options, 'digits' ) ) {\n\t\t\t\tif ( !isPositiveInteger( options.digits ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', options.digits ) );\n\t\t\t\t}\n\t\t\t\tdigits = options.digits;\n\t\t\t}\n\t\t\tif ( hasOwnProp( options, 'decision' ) ) {\n\t\t\t\tif ( !isBoolean( options.decision ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', options.decision ) );\n\t\t\t\t}\n\t\t\t\tdecision = options.decision;\n\t\t\t}\n\t\t}\n\t\tstr = '';\n\t\tstr += results.method;\n\t\tstr += '\\n\\n';\n\t\tstr += 'Alternative hypothesis: ';\n\t\tif ( opts.alternative === 'max' ) {\n\t\t\tstr += 'The maximum value (' + mm[ 1 ] + ') is an outlier';\n\t\t} else if ( opts.alternative === 'min' ) {\n\t\t\tstr += 'The minimum value (' + mm[ 0 ] + ') is an outlier';\n\t\t} else { // two-sided\n\t\t\tstr += 'The ';\n\t\t\tif ( ms[0]-mm[0] > mm[1]-ms[0] ) {\n\t\t\t\tstr += 'minimum value (' + mm[ 0 ] + ')';\n\t\t\t} else {\n\t\t\t\tstr += 'maximum value (' + mm[ 1 ] + ')';\n\t\t\t}\n\t\t\tstr += ' is an outlier';\n\t\t}\n\t\tstr += '\\n\\n';\n\t\tstr += '    criticalValue: ' + roundn( gc, -digits ) + '\\n';\n\t\tstr += '    statistic: ' + roundn( G, -digits ) + '\\n';\n\t\tstr += '    df: ' + df + '\\n';\n\t\tstr += '\\n';\n\t\tif ( decision ) {\n\t\t\tstr += 'Test Decision: ';\n\t\t\tif ( G > gc ) {\n\t\t\t\tstr += 'Reject null in favor of alternative at ' + (opts.alpha*100.0) + '% significance level';\n\t\t\t} else {\n\t\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (opts.alpha*100.0) + '% significance level';\n\t\t\t}\n\t\t\tstr += '\\n';\n\t\t}\n\t\treturn str;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmgrubbs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar isnan = require( '@stdlib/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {string} [options.alternative] - alternative hypothesis\n* @returns {(null|Error)} null or an error\n*\n* @example\n* var opts = {};\n*\n* var options = {\n*     'alpha': 0.05,\n*     'alernative': 'two-sided'\n* };\n*\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t\tif ( opts.alpha < 0.0 || opts.alpha > 1.0 ) {\n\t\t\treturn new RangeError( format( 'invalid option. `%s` option must be on the interval: [0, 1]. Option: `%f`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'alternative' ) ) {\n\t\topts.alternative = options.alternative;\n\t\tif ( !isString( opts.alternative ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'alternative', opts.alternative ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveZero = require( '@stdlib/math/base/assert/is-positive-zero' );\nvar isNegativeZero = require( '@stdlib/math/base/assert/is-negative-zero' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes moving minimum and maximum values.\n*\n* @private\n* @param {Collection} out - output array\n* @param {PositiveInteger} W - window size\n* @param {Collection} buf - data buffer\n* @returns {Function} accumulator function\n*\n* @example\n* var buf = [ 0.0, 0.0, 0.0 ];\n*\n* var accumulator = incrmminmax( [ 0.0, 0.0 ], 3, buf );\n*\n* var mm = accumulator( 2.0, 0 );\n* // returns [ 2.0, 2.0 ]\n*\n* buf[ 0 ] = 2.0;\n*\n* mm = accumulator( -5.0, 1 );\n* // returns [ -5.0, 2.0 ]\n*\n* buf[ 1 ] = -5.0;\n*\n* mm = accumulator( 3.0, 2 );\n* // returns [ -5.0, 3.0 ]\n*\n* buf[ 2 ] = 3.0;\n*\n* mm = accumulator( 5.0, 0 );\n* // returns [ -5.0, 5.0 ]\n*\n* buf[ 0 ] = 5.0;\n*/\nfunction incrmminmax( out, W, buf ) {\n\tvar min;\n\tvar max;\n\tvar N;\n\n\tmin = PINF;\n\tmax = NINF;\n\tN = 0;\n\n\treturn accumulator;\n\n\t/**\n\t* Updates accumulator state.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @param {NonNegativeInteger} i - buffer index\n\t* @returns {Collection} output array\n\t*/\n\tfunction accumulator( x, i ) {\n\t\tvar sgn;\n\t\tvar v;\n\t\tvar k;\n\n\t\t// Case: incoming value is NaN...\n\t\tif ( isnan( x ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tmin = x;\n\t\t\tmax = x;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tN += 1;\n\t\t\tif ( x < min || ( x === min && isNegativeZero( x ) ) ) {\n\t\t\t\tmin = x;\n\t\t\t}\n\t\t\tif ( x > max || ( x === max && isPositiveZero( x ) ) ) {\n\t\t\t\tmax = x;\n\t\t\t}\n\t\t}\n\t\t// Case: outgoing value is the current minimum or maximum and the new value is either greater than the minimum or less than the maximum, and, thus, we need to find new accumulated values among the current buffer values...\n\t\telse if (\n\t\t\t( buf[ i ] === min && x > min ) ||\n\t\t\t( buf[ i ] === max && x < max ) ||\n\t\t\tisnan( buf[ i ] )\n\t\t) {\n\t\t\tmin = x;\n\t\t\tmax = x;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tv = buf[ k ];\n\t\t\t\t\tif ( isnan( v ) ) {\n\t\t\t\t\t\tmin = v;\n\t\t\t\t\t\tmax = v;\n\t\t\t\t\t\tbreak; // no need to continue searching\n\t\t\t\t\t}\n\t\t\t\t\tif ( v < min || ( v === min && isNegativeZero( v ) ) ) {\n\t\t\t\t\t\tmin = v;\n\t\t\t\t\t}\n\t\t\t\t\tif ( v > max || ( v === max && isPositiveZero( v ) ) ) {\n\t\t\t\t\t\tmax = v;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: incoming value is less than current minimum value...\n\t\telse if ( x < min ) {\n\t\t\tmin = x;\n\t\t}\n\t\t// Case: incoming value is greater than current maximum value...\n\t\telse if ( x > max ) {\n\t\t\tmax = x;\n\t\t}\n\t\t// Case: incoming value is zero, which means we need to be careful and correctly handle signed zeros...\n\t\telse if ( x === 0.0 ) {\n\t\t\tsgn = isNegativeZero( x );\n\t\t\tif ( x === min ) {\n\t\t\t\t// Case: outgoing value is the current minimum...\n\t\t\t\tif (\n\t\t\t\t\tbuf[ i ] === min &&\n\t\t\t\t\tisNegativeZero( buf[ i ] ) &&\n\t\t\t\t\tsgn === false\n\t\t\t\t) {\n\t\t\t\t\t// Because the outgoing and incoming are different signs (-,+), we need to search the buffer to see if it contains a negative zero. If so, the minimum value remains negative zero; otherwise, the minimum value is incoming value...\n\t\t\t\t\tmin = x;\n\t\t\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\t\t\tif ( k !== i && isNegativeZero( buf[ k ] ) ) {\n\t\t\t\t\t\t\tmin = buf[ k ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if ( sgn ) {\n\t\t\t\t\t// Ensure minimum value has the correct sign:\n\t\t\t\t\tmin = x;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( x === max ) {\n\t\t\t\t// Case: outgoing value is the current maximum...\n\t\t\t\tif (\n\t\t\t\t\tbuf[ i ] === max &&\n\t\t\t\t\tisPositiveZero( buf[ i ] ) &&\n\t\t\t\t\tsgn\n\t\t\t\t) {\n\t\t\t\t\t// Because the outgoing and incoming are different signs (+,-), we need to search the buffer to see if it contains a positive zero. If so, the maximum value remains positive zero; otherwise, the maximum value is incoming value...\n\t\t\t\t\tmax = x;\n\t\t\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\t\t\tif ( k !== i && isPositiveZero( buf[ k ] ) ) {\n\t\t\t\t\t\t\tmax = buf[ k ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if ( sgn === false ) {\n\t\t\t\t\t// Ensure maximum value has the correct sign:\n\t\t\t\t\tmax = x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: updating existing window; however, the minimum and maximum values do not change so nothing to do...\n\n\t\tout[ 0 ] = min;\n\t\tout[ 1 ] = max;\n\t\treturn out;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmminmax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving arithmetic mean and corrected sample standard deviation.\n*\n* ## Method\n*\n* -   Let \\\\(W\\\\) be a window of \\\\(N\\\\) elements over which we want to compute a corrected sample standard deviation.\n*\n* -   We first recognize that the corrected sample standard deviation is defined as the square root of the unbiased sample variance. Accordingly, in order to derive an update equation for the corrected sample standard deviation, deriving an update equation for the unbiased sample variance is sufficient.\n*\n* -   The difference between the unbiased sample variance in a window \\\\(W_i\\\\) and the unbiased sample variance in a window \\\\(W_{i+1})\\\\) is given by\n*\n*     ```tex\n*     \\Delta s^2 = s_{i+1}^2 - s_{i}^2\n*     ```\n*\n* -   If we multiply both sides by \\\\(N-1\\\\),\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = (N-1)s_{i+1}^2 - (N-1)s_{i}^2\n*     ```\n*\n* -   If we substitute the definition of the unbiased sample variance having the form\n*\n*     ```tex\n*     \\begin{align*}\n*     s^2 &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} (x_i - \\bar{x})^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} (x_i^2 - 2\\bar{x}x_i + \\bar{x}^2) \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - 2\\bar{x} \\sum_{i=1}^{N} x_i + \\sum_{i=1}^{N} \\bar{x}^2) \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - \\frac{2N\\bar{x}\\sum_{i=1}^{N} x_i}{N} + N\\bar{x}^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - 2N\\bar{x}^2 + N\\bar{x}^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - N\\bar{x}^2 \\biggr)\n*     \\end{align*}\n*     ```\n*\n*     we return\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = \\biggl(\\sum_{k=1}^N x_k^2 - N\\bar{x}_{i+1}^2 \\biggr) - \\biggl(\\sum_{k=0}^{N-1} x_k^2 - N\\bar{x}_{i}^2 \\biggr)\n*     ```\n*\n* -   This can be further simplified by recognizing that subtracting the sums reduces to \\\\(x_N^2 - x_0^2\\\\); in which case,\n*\n*     ```tex\n*     \\begin{align*}\n*     (N-1)(\\Delta s^2) &= x_N^2 - x_0^2 - N\\bar{x}_{i+1}^2 + N\\bar{x}_{i}^2 \\\\\n*     &= x_N^2 - x_0^2 - N(\\bar{x}_{i+1}^2 - \\bar{x}_{i}^2) \\\\\n*     &= x_N^2 - x_0^2 - N(\\bar{x}_{i+1} - \\bar{x}_{i})(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     \\end{align*}\n*     ```\n*\n* -   Recognizing that the difference of means can be expressed\n*\n*     ```tex\n*     \\bar{x}_{i+1} - \\bar{x}_i = \\frac{1}{N} \\biggl( \\sum_{k=1}^N x_k - \\sum_{k=0}^{N-1} x_k \\biggr) = \\frac{x_N - x_0}{N}\n*     ```\n*\n*     and substituting into the equation above\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = x_N^2 - x_0^2 - (x_N - x_0)(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     ```\n*\n* -   Rearranging terms gives us the update equation\n*\n*     ```tex\n*     \\begin{align*}\n*     (N-1)(\\Delta s^2) &= (x_N - x_0)(x_N + x_0) - (x_N - x_0)(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     &= (x_N - x_0)(x_N + x_0 - \\bar{x}_{i+1} - \\bar{x}_{i}) \\\\\n*     &= (x_N - x_0)(x_N - \\bar{x}_{i+1} + x_0 - \\bar{x}_{i})\n*     \\end{align*}\n*     ```\n*\n* @private\n* @param {Collection} out - output array\n* @param {PositiveInteger} W - window size\n* @param {Collection} buf - data buffer\n* @returns {Function} accumulator function\n*\n* @example\n* var buf = [ 0.0, 0.0, 0.0 ];\n* var accumulator = incrmmeanstdev( [ 0.0, 0.0 ], 3, buf );\n*\n* var v = accumulator( 2.0, 0 );\n* // returns [ 2.0, 0.0 ]\n*\n* buf[ 0 ] = 2.0;\n*\n* v = accumulator( -5.0, 1 );\n* // returns [ -1.5, ~4.95 ]\n*\n* buf[ 1 ] = -5.0;\n*\n* v = accumulator( 3.0, 2 );\n* // returns [ 0.0, ~4.36 ]\n*\n* buf[ 2 ] = 3.0;\n*\n* v = accumulator( 5.0, 0 );\n* // returns [ 1.0, ~5.29 ]\n*\n* buf[ 0 ] = 5.0;\n*/\nfunction incrmmeanstdev( out, W, buf ) {\n\tvar delta;\n\tvar tmp;\n\tvar M2;\n\tvar mu;\n\tvar d1;\n\tvar d2;\n\tvar N;\n\tvar n;\n\n\tn = W - 1;\n\tM2 = 0.0;\n\tmu = 0.0;\n\tN = 0;\n\n\treturn accumulator;\n\n\t/**\n\t* Updates accumulator state.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @param {NonNegativeInteger} i - buffer index\n\t* @returns {ArrayLike} output array\n\t*/\n\tfunction accumulator( x, i ) {\n\t\tvar k;\n\t\tvar v;\n\n\t\t// Case: incoming value is NaN, the sliding second moment is automatically NaN...\n\t\tif ( isnan( x ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tmu = NaN;\n\t\t\tM2 = NaN;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tN += 1;\n\t\t\tdelta = x - mu;\n\t\t\tmu += delta / N;\n\t\t\tM2 += delta * (x - mu);\n\n\t\t\tout[ 0 ] = mu;\n\t\t\tif ( N === 1 ) {\n\t\t\t\tout[ 1 ] = 0.0;\n\t\t\t} else {\n\t\t\t\tout[ 1 ] = sqrt( M2/(N-1) );\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\t// Case: N = W = 1\n\t\telse if ( N === 1 ) {\n\t\t\tmu = x;\n\t\t\tM2 = 0.0;\n\t\t\tout[ 0 ] = x;\n\t\t\tout[ 1 ] = 0.0;\n\t\t\treturn out;\n\t\t}\n\t\t// Case: outgoing value is NaN, and, thus, we need to compute the accumulated values...\n\t\telse if ( isnan( buf[ i ] ) ) {\n\t\t\tN = 1;\n\t\t\tmu = x;\n\t\t\tM2 = 0.0;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tv = buf[ k ];\n\t\t\t\t\tif ( isnan( v ) ) {\n\t\t\t\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\t\t\t\tmu = NaN;\n\t\t\t\t\t\tM2 = NaN;\n\t\t\t\t\t\tbreak; // second moment is automatically NaN, so no need to continue\n\t\t\t\t\t}\n\t\t\t\t\tN += 1;\n\t\t\t\t\tdelta = v - mu;\n\t\t\t\t\tmu += delta / N;\n\t\t\t\t\tM2 += delta * (v - mu);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: neither the current second moment nor the incoming value are NaN, so we need to update the accumulated values...\n\t\telse if ( isnan( M2 ) === false ) {\n\t\t\ttmp = buf[ i ];\n\t\t\tdelta = x - tmp;\n\t\t\td1 = tmp - mu;\n\t\t\tmu += delta / W;\n\t\t\td2 = x - mu;\n\t\t\tM2 += delta * (d1 + d2);\n\t\t}\n\t\t// Case: the current second moment is NaN, so nothing to do until the buffer no longer contains NaN values...\n\n\t\tout[ 0 ] = mu;\n\t\tout[ 1 ] = sqrt( M2/n );\n\t\treturn out;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmmeanstdev;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving arithmetic mean incrementally.\n*\n* @module @stdlib/stats/incr/mmean\n*\n* @example\n* var incrmmean = require( '@stdlib/stats/incr/mmean' );\n*\n* var accumulator = incrmmean( 3 );\n*\n* var mu = accumulator();\n* // returns null\n*\n* mu = accumulator( 2.0 );\n* // returns 2.0\n*\n* mu = accumulator( -5.0 );\n* // returns -1.5\n*\n* mu = accumulator( 3.0 );\n* // returns 0.0\n*\n* mu = accumulator( 5.0 );\n* // returns 1.0\n*\n* mu = accumulator();\n* // returns 1.0\n*/\n\n// MODULES //\n\nvar incrmmean = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving arithmetic mean.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmmean( 3 );\n*\n* var mu = accumulator();\n* // returns null\n*\n* mu = accumulator( 2.0 );\n* // returns 2.0\n*\n* mu = accumulator( -5.0 );\n* // returns -1.5\n*\n* mu = accumulator( 3.0 );\n* // returns 0.0\n*\n* mu = accumulator( 5.0 );\n* // returns 1.0\n*\n* mu = accumulator();\n* // returns 1.0\n*/\nfunction incrmmean( W ) {\n\tvar delta;\n\tvar buf;\n\tvar mu;\n\tvar N;\n\tvar i;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tbuf = new Float64Array( W );\n\tmu = 0.0;\n\ti = -1;\n\tN = 0;\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated mean. If not provided a value, the accumulator function returns the current mean.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} mean or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tvar k;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn mu;\n\t\t}\n\t\t// Update the index for managing the circular buffer:\n\t\ti = (i+1) % W;\n\n\t\t// Case: incoming value is NaN, the sliding mean is automatically NaN...\n\t\tif ( isnan( x ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tmu = NaN;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tN += 1;\n\t\t\tdelta = x - mu;\n\t\t\tmu += delta / N;\n\t\t}\n\t\t// Case: outgoing value is NaN, and, thus, we need to compute the sample mean...\n\t\telse if ( isnan( buf[ i ] ) ) {\n\t\t\tN = 1;\n\t\t\tmu = x;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tif ( isnan( buf[ k ] ) ) {\n\t\t\t\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\t\t\t\tmu = NaN;\n\t\t\t\t\t\tbreak; // mean is automatically NaN, so no need to continue\n\t\t\t\t\t}\n\t\t\t\t\tN += 1;\n\t\t\t\t\tdelta = buf[ k ] - mu;\n\t\t\t\t\tmu += delta / N;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: neither the current mean nor the incoming value are NaN, so we need to update the sample mean...\n\t\telse if ( isnan( mu ) === false ) {\n\t\t\tdelta = x - buf[ i ];\n\t\t\tmu += delta / W;\n\t\t}\n\t\t// Case: the current mean is NaN, so nothing to do until the buffer no longer contains NaN values...\n\n\t\tbuf[ i ] = x;\n\t\treturn mu;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a mid-range incrementally.\n*\n* @module @stdlib/stats/incr/midrange\n*\n* @example\n* var incrmidrange = require( '@stdlib/stats/incr/midrange' );\n*\n* var accumulator = incrmidrange();\n*\n* var midrange = accumulator();\n* // returns null\n*\n* midrange = accumulator( 3.14 );\n* // returns 3.14\n*\n* midrange = accumulator( -5.0 );\n* // returns ~-0.93\n*\n* midrange = accumulator( 10.1 );\n* // returns 2.55\n*\n* midrange = accumulator();\n* // returns 2.55\n*/\n\n// MODULES //\n\nvar incrmidrange = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmidrange;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a mid-range.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmidrange();\n*\n* var midrange = accumulator();\n* // returns null\n*\n* midrange = accumulator( 3.14 );\n* // returns 3.14\n*\n* midrange = accumulator( -5.0 );\n* // returns ~-0.93\n*\n* midrange = accumulator( 10.1 );\n* // returns 2.55\n*\n* midrange = accumulator();\n* // returns 2.55\n*/\nfunction incrmidrange() {\n\tvar max = NINF;\n\tvar min = PINF;\n\tvar sum;\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated mid-range. If not provided a value, the accumulator function returns the current mid-range.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {number} mid-range\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( sum === void 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn sum / 2.0;\n\t\t}\n\t\tif ( isnan( x ) ) {\n\t\t\tmin = x;\n\t\t\tmax = x;\n\t\t}\n\t\tif ( x > max ) {\n\t\t\tmax = x;\n\t\t}\n\t\tif ( x < min ) {\n\t\t\tmin = x;\n\t\t}\n\t\tsum = max + min;\n\t\treturn sum / 2.0;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmidrange;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a minimum absolute value incrementally.\n*\n* @module @stdlib/stats/incr/minabs\n*\n* @example\n* var incrminabs = require( '@stdlib/stats/incr/minabs' );\n*\n* var accumulator = incrminabs();\n*\n* var min = accumulator();\n* // returns null\n*\n* min = accumulator( 3.14 );\n* // returns 3.14\n*\n* min = accumulator( -5.0 );\n* // returns 3.14\n*\n* min = accumulator( 10.1 );\n* // returns 3.14\n*\n* min = accumulator();\n* // returns 3.14\n*/\n\n// MODULES //\n\nvar incrminabs = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrminabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar incrmin = require( './../../../incr/min' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a minimum absolute value.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrminabs();\n*\n* var min = accumulator();\n* // returns null\n*\n* min = accumulator( 3.14 );\n* // returns 3.14\n*\n* min = accumulator( -5.0 );\n* // returns 3.14\n*\n* min = accumulator( 10.1 );\n* // returns 3.14\n*\n* min = accumulator();\n* // returns 3.14\n*/\nfunction incrminabs() {\n\tvar min = incrmin();\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated minimum absolute value. If not provided a value, the accumulator function returns the current minimum absolute value.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} minimum absolute value or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn min();\n\t\t}\n\t\treturn min( abs( x ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrminabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving maximum incrementally.\n*\n* @module @stdlib/stats/incr/mmax\n*\n* @example\n* var incrmmax = require( '@stdlib/stats/incr/mmax' );\n*\n* var accumulator = incrmmax( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0 );\n* // returns 2.0\n*\n* m = accumulator( -5.0 );\n* // returns 2.0\n*\n* m = accumulator( 3.0 );\n* // returns 3.0\n*\n* m = accumulator( 5.0 );\n* // returns 5.0\n*\n* m = accumulator();\n* // returns 5.0\n*/\n\n// MODULES //\n\nvar incrmmax = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmmax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isPositiveZero = require( '@stdlib/math/base/assert/is-positive-zero' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving maximum value.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmmax( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0 );\n* // returns 2.0\n*\n* m = accumulator( -5.0 );\n* // returns 2.0\n*\n* m = accumulator( 3.0 );\n* // returns 3.0\n*\n* m = accumulator( 5.0 );\n* // returns 5.0\n*\n* m = accumulator();\n* // returns 5.0\n*/\nfunction incrmmax( W ) {\n\tvar buf;\n\tvar max;\n\tvar N;\n\tvar i;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tbuf = new Float64Array( W );\n\tmax = NINF;\n\ti = -1;\n\tN = 0;\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated maximum. If not provided a value, the accumulator function returns the current maximum.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} maximum value or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tvar v;\n\t\tvar k;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t\t// Update the index for managing the circular buffer:\n\t\ti = (i+1) % W;\n\n\t\t// Case: update initial window...\n\t\tif ( N < W ) {\n\t\t\tN += 1;\n\t\t\tif (\n\t\t\t\tisnan( x ) ||\n\t\t\t\tx > max ||\n\t\t\t\t( x === max && isPositiveZero( x ) )\n\t\t\t) {\n\t\t\t\tmax = x;\n\t\t\t}\n\t\t}\n\t\t// Case: incoming value is NaN or greater than current maximum value...\n\t\telse if ( isnan( x ) || x > max ) {\n\t\t\tmax = x;\n\t\t}\n\t\t// Case: outgoing value is the current maximum and the new value is less than the maximum, and, thus, we need to find a new maximum among the current values...\n\t\telse if ( ( buf[ i ] === max && x < max ) || isnan( buf[ i ] ) ) {\n\t\t\tmax = x;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tv = buf[ k ];\n\t\t\t\t\tif ( isnan( v ) ) {\n\t\t\t\t\t\tmax = v;\n\t\t\t\t\t\tbreak; // no need to continue searching\n\t\t\t\t\t}\n\t\t\t\t\tif ( v > max || ( v === max && isPositiveZero( v ) ) ) {\n\t\t\t\t\t\tmax = v;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: outgoing value is the current maximum, which is zero, and the new value is also zero, and, thus, we need to correctly handle signed zeros...\n\t\telse if ( buf[ i ] === max && x === max && x === 0.0 ) {\n\t\t\tif ( isPositiveZero( x ) ) {\n\t\t\t\tmax = x;\n\t\t\t} else if ( isPositiveZero( buf[ i ] ) ) {\n\t\t\t\t// Because the outgoing and incoming are different signs (+,-), we need to search the buffer to see if it contains a positive zero. If so, the maximum value remains positive zero; otherwise, the maximum value is incoming value...\n\t\t\t\tmax = x;\n\t\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\t\tif ( k !== i && isPositiveZero( buf[ k ] ) ) {\n\t\t\t\t\t\tmax = buf[ k ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Case: the outgoing and incoming values are both negative zero, so nothing changes\n\t\t}\n\t\t// Case: updating existing window; however, the maximum value does not change so nothing to do but update our buffer...\n\n\t\tbuf[ i ] = x;\n\t\treturn max;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmmax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving maximum absolute value incrementally.\n*\n* @module @stdlib/stats/incr/mmaxabs\n*\n* @example\n* var incrmmaxabs = require( '@stdlib/stats/incr/mmaxabs' );\n*\n* var accumulator = incrmmaxabs( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0 );\n* // returns 2.0\n*\n* m = accumulator( -5.0 );\n* // returns 5.0\n*\n* m = accumulator( 3.0 );\n* // returns 5.0\n*\n* m = accumulator( 5.0 );\n* // returns 5.0\n*\n* m = accumulator();\n* // returns 5.0\n*/\n\n// MODULES //\n\nvar incrmmaxabs = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmmaxabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar incrmmax = require( './../../../incr/mmax' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving maximum absolute value.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmmaxabs( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0 );\n* // returns 2.0\n*\n* m = accumulator( -5.0 );\n* // returns 5.0\n*\n* m = accumulator( 3.0 );\n* // returns 5.0\n*\n* m = accumulator( 5.0 );\n* // returns 5.0\n*\n* m = accumulator();\n* // returns 5.0\n*/\nfunction incrmmaxabs( W ) {\n\tvar max;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tmax = incrmmax( W );\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated maximum absolute value. If not provided a value, the accumulator function returns the current maximum absolute value.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} maximum absolute value or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn max();\n\t\t}\n\t\treturn max( abs( x ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmmaxabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving arithmetic mean of absolute values incrementally.\n*\n* @module @stdlib/stats/incr/mmeanabs\n*\n* @example\n* var incrmmeanabs = require( '@stdlib/stats/incr/mmeanabs' );\n*\n* var accumulator = incrmmeanabs( 3 );\n*\n* var mu = accumulator();\n* // returns null\n*\n* mu = accumulator( 2.0 );\n* // returns 2.0\n*\n* mu = accumulator( -5.0 );\n* // returns 3.5\n*\n* mu = accumulator( 3.0 );\n* // returns ~3.33\n*\n* mu = accumulator( 5.0 );\n* // returns ~4.33\n*\n* mu = accumulator();\n* // returns ~4.33\n*/\n\n// MODULES //\n\nvar incrmmeanabs = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmmeanabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar incrmmean = require( './../../../incr/mmean' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving arithmetic mean of absolute values.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmmeanabs( 3 );\n*\n* var mu = accumulator();\n* // returns null\n*\n* mu = accumulator( 2.0 );\n* // returns 2.0\n*\n* mu = accumulator( -5.0 );\n* // returns 3.5\n*\n* mu = accumulator( 3.0 );\n* // returns ~3.33\n*\n* mu = accumulator( 5.0 );\n* // returns ~4.33\n*\n* mu = accumulator();\n* // returns ~4.33\n*/\nfunction incrmmeanabs( W ) {\n\tvar mean;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tmean = incrmmean( W );\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated mean. If not provided a value, the accumulator function returns the current mean.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} mean or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn mean();\n\t\t}\n\t\treturn mean( abs( x ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmmeanabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving arithmetic mean of squared absolute values incrementally.\n*\n* @module @stdlib/stats/incr/mmeanabs2\n*\n* @example\n* var incrmmeanabs2 = require( '@stdlib/stats/incr/mmeanabs2' );\n*\n* var accumulator = incrmmeanabs2( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0 );\n* // returns 4.0\n*\n* m = accumulator( -5.0 );\n* // returns 14.5\n*\n* m = accumulator( 3.0 );\n* // returns ~12.67\n*\n* m = accumulator( 5.0 );\n* // returns ~19.67\n*\n* m = accumulator();\n* // returns ~19.67\n*/\n\n// MODULES //\n\nvar incrmmeanabs2 = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmmeanabs2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar incrmmean = require( './../../../incr/mmean' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving arithmetic mean of squared absolute values.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmmeanabs2( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0 );\n* // returns 4.0\n*\n* m = accumulator( -5.0 );\n* // returns 14.5\n*\n* m = accumulator( 3.0 );\n* // returns ~12.67\n*\n* m = accumulator( 5.0 );\n* // returns ~19.67\n*\n* m = accumulator();\n* // returns ~19.67\n*/\nfunction incrmmeanabs2( W ) {\n\tvar mean;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tmean = incrmmean( W );\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated mean. If not provided a value, the accumulator function returns the current mean.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} mean or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn mean();\n\t\t}\n\t\treturn mean( x*x );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmmeanabs2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving mid-range incrementally.\n*\n* @module @stdlib/stats/incr/mmidrange\n*\n* @example\n* var incrmmidrange = require( '@stdlib/stats/incr/mmidrange' );\n*\n* var accumulator = incrmmidrange( 3 );\n*\n* var mr = accumulator();\n* // returns null\n*\n* mr = accumulator( 2.0 );\n* // returns 2.0\n*\n* mr = accumulator( -5.0 );\n* // returns -1.5\n*\n* mr = accumulator( 3.0 );\n* // returns -1.0\n*\n* mr = accumulator( 5.0 );\n* // returns 0.0\n*\n* mr = accumulator();\n* // returns 0.0\n*/\n\n// MODULES //\n\nvar incrmmidrange = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmmidrange;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving mid-range.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmmidrange( 3 );\n*\n* var mr = accumulator();\n* // returns null\n*\n* mr = accumulator( 2.0 );\n* // returns 2.0\n*\n* mr = accumulator( -5.0 );\n* // returns -1.5\n*\n* mr = accumulator( 3.0 );\n* // returns -1.0\n*\n* mr = accumulator( 5.0 );\n* // returns 0.0\n*\n* mr = accumulator();\n* // returns 0.0\n*/\nfunction incrmmidrange( W ) {\n\tvar buf;\n\tvar min;\n\tvar max;\n\tvar N;\n\tvar i;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tbuf = new Float64Array( W );\n\tmin = PINF;\n\tmax = NINF;\n\ti = -1;\n\tN = 0;\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated mid-range. If not provided a value, the accumulator function returns the current mid-range.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} mid-range or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tvar v;\n\t\tvar k;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn ( max+min ) / 2.0;\n\t\t}\n\t\t// Update the index for managing the circular buffer:\n\t\ti = (i+1) % W;\n\n\t\tif ( x === 0.0 ) {\n\t\t\tx = 0.0; // normalizes +-0\n\t\t}\n\t\t// Case: incoming value is NaN...\n\t\tif ( isnan( x ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tmin = x;\n\t\t\tmax = x;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tN += 1;\n\t\t\tif ( x < min ) {\n\t\t\t\tmin = x;\n\t\t\t}\n\t\t\tif ( x > max ) {\n\t\t\t\tmax = x;\n\t\t\t}\n\t\t}\n\t\t// Case: outgoing value is the current minimum or maximum and the new value is either greater than the minimum or less than the maximum, and, thus, we need to find new accumulated values among the current buffer values...\n\t\telse if (\n\t\t\t( buf[ i ] === min && x > min ) ||\n\t\t\t( buf[ i ] === max && x < max ) ||\n\t\t\tisnan( buf[ i ] )\n\t\t) {\n\t\t\tmin = x;\n\t\t\tmax = x;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tv = buf[ k ];\n\t\t\t\t\tif ( isnan( v ) ) {\n\t\t\t\t\t\tmin = v;\n\t\t\t\t\t\tmax = v;\n\t\t\t\t\t\tbreak; // no need to continue searching\n\t\t\t\t\t}\n\t\t\t\t\tif ( v < min ) {\n\t\t\t\t\t\tmin = v;\n\t\t\t\t\t}\n\t\t\t\t\tif ( v > max ) {\n\t\t\t\t\t\tmax = v;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: incoming value is less than current minimum value...\n\t\telse if ( x < min ) {\n\t\t\tmin = x;\n\t\t}\n\t\t// Case: incoming value is greater than current maximum value...\n\t\telse if ( x > max ) {\n\t\t\tmax = x;\n\t\t}\n\t\t// Case: updating existing window; however, the minimum and maximum values do not change so nothing to do but update our buffer...\n\t\tbuf[ i ] = x;\n\n\t\treturn ( max+min ) / 2.0;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmmidrange;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving minimum incrementally.\n*\n* @module @stdlib/stats/incr/mmin\n*\n* @example\n* var incrmmin = require( '@stdlib/stats/incr/mmin' );\n*\n* var accumulator = incrmmin( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0 );\n* // returns 2.0\n*\n* m = accumulator( -5.0 );\n* // returns -5.0\n*\n* m = accumulator( 3.0 );\n* // returns -5.0\n*\n* m = accumulator( 5.0 );\n* // returns -5.0\n*\n* m = accumulator();\n* // returns -5.0\n*/\n\n// MODULES //\n\nvar incrmmin = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmmin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isNegativeZero = require( '@stdlib/math/base/assert/is-negative-zero' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving minimum value.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmmin( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0 );\n* // returns 2.0\n*\n* m = accumulator( -5.0 );\n* // returns -5.0\n*\n* m = accumulator( 3.0 );\n* // returns -5.0\n*\n* m = accumulator( 5.0 );\n* // returns -5.0\n*\n* m = accumulator();\n* // returns -5.0\n*/\nfunction incrmmin( W ) {\n\tvar buf;\n\tvar min;\n\tvar N;\n\tvar i;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tbuf = new Float64Array( W );\n\tmin = PINF;\n\ti = -1;\n\tN = 0;\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated minimum. If not provided a value, the accumulator function returns the current minimum.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} minimum value or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tvar v;\n\t\tvar k;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn min;\n\t\t}\n\t\t// Update the index for managing the circular buffer:\n\t\ti = (i+1) % W;\n\n\t\t// Case: update initial window...\n\t\tif ( N < W ) {\n\t\t\tN += 1;\n\t\t\tif (\n\t\t\t\tisnan( x ) ||\n\t\t\t\tx < min ||\n\t\t\t\t( x === min && isNegativeZero( x ) )\n\t\t\t) {\n\t\t\t\tmin = x;\n\t\t\t}\n\t\t}\n\t\t// Case: incoming value is NaN or less than current minimum value...\n\t\telse if ( isnan( x ) || x < min ) {\n\t\t\tmin = x;\n\t\t}\n\t\t// Case: outgoing value is the current minimum and the new value is greater than the minimum, and, thus, we need to find a new minimum among the current values...\n\t\telse if ( ( buf[ i ] === min && x > min ) || isnan( buf[ i ] ) ) {\n\t\t\tmin = x;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tv = buf[ k ];\n\t\t\t\t\tif ( isnan( v ) ) {\n\t\t\t\t\t\tmin = v;\n\t\t\t\t\t\tbreak; // no need to continue searching\n\t\t\t\t\t}\n\t\t\t\t\tif ( v < min || ( v === min && isNegativeZero( v ) ) ) {\n\t\t\t\t\t\tmin = v;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: outgoing value is the current minimum, which is zero, and the new value is also zero, and, thus, we need to correctly handle signed zeros...\n\t\telse if ( buf[ i ] === min && x === min && x === 0.0 ) {\n\t\t\tif ( isNegativeZero( x ) ) {\n\t\t\t\tmin = x;\n\t\t\t} else if ( isNegativeZero( buf[ i ] ) ) {\n\t\t\t\t// Because the outgoing and incoming are different signs (-,+), we need to search the buffer to see if it contains a negative zero. If so, the minimum value remains negative zero; otherwise, the minimum value is incoming value...\n\t\t\t\tmin = x;\n\t\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\t\tif ( k !== i && isNegativeZero( buf[ k ] ) ) {\n\t\t\t\t\t\tmin = buf[ k ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Case: the outgoing and incoming values are both positive zero, so nothing changes\n\t\t}\n\t\t// Case: updating existing window; however, the minimum value does not change so nothing to do but update our buffer...\n\n\t\tbuf[ i ] = x;\n\t\treturn min;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmmin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving minimum absolute value incrementally.\n*\n* @module @stdlib/stats/incr/mminabs\n*\n* @example\n* var incrmminabs = require( '@stdlib/stats/incr/mminabs' );\n*\n* var accumulator = incrmminabs( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0 );\n* // returns 2.0\n*\n* m = accumulator( -5.0 );\n* // returns 2.0\n*\n* m = accumulator( 3.0 );\n* // returns 2.0\n*\n* m = accumulator( 5.0 );\n* // returns 2.0\n*\n* m = accumulator();\n* // returns 2.0\n*/\n\n// MODULES //\n\nvar incrmminabs = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmminabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar incrmmin = require( './../../../incr/mmin' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving minimum absolute value.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmminabs( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0 );\n* // returns 2.0\n*\n* m = accumulator( -5.0 );\n* // returns 2.0\n*\n* m = accumulator( 3.0 );\n* // returns 2.0\n*\n* m = accumulator( 5.0 );\n* // returns 3.0\n*\n* m = accumulator();\n* // returns 3.0\n*/\nfunction incrmminabs( W ) {\n\tvar min;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tmin = incrmmin( W );\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated minimum absolute value. If not provided a value, the accumulator function returns the current minimum absolute value.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} minimum absolute value or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn min();\n\t\t}\n\t\treturn min( abs( x ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmminabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving minimum and maximum incrementally.\n*\n* @module @stdlib/stats/incr/mminmax\n*\n* @example\n* var incrmminmax = require( '@stdlib/stats/incr/mminmax' );\n*\n* var accumulator = incrmminmax( 3 );\n*\n* var mm = accumulator();\n* // returns null\n*\n* mm = accumulator( 2.0 );\n* // returns [ 2.0, 2.0 ]\n*\n* mm = accumulator( -5.0 );\n* // returns [ -5.0, 2.0 ]\n*\n* mm = accumulator( 3.0 );\n* // returns [ -5.0, 3.0 ]\n*\n* mm = accumulator( 5.0 );\n* // returns [ -5.0, 5.0 ]\n*\n* mm = accumulator();\n* // returns [ -5.0, 5.0 ]\n*/\n\n// MODULES //\n\nvar incrmminmax = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmminmax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isArrayLike = require( '@stdlib/assert/is-array-like-object' );\nvar isPositiveZero = require( '@stdlib/math/base/assert/is-positive-zero' );\nvar isNegativeZero = require( '@stdlib/math/base/assert/is-negative-zero' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes moving minimum and maximum values.\n*\n* @param {Collection} [out] - output array\n* @param {PositiveInteger} window - window size\n* @throws {TypeError} output argument must be array-like\n* @throws {TypeError} window size must be a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmminmax( 3 );\n*\n* var mm = accumulator();\n* // returns null\n*\n* mm = accumulator( 2.0 );\n* // returns [ 2.0, 2.0 ]\n*\n* mm = accumulator( -5.0 );\n* // returns [ -5.0, 2.0 ]\n*\n* mm = accumulator( 3.0 );\n* // returns [ -5.0, 3.0 ]\n*\n* mm = accumulator( 5.0 );\n* // returns [ -5.0, 5.0 ]\n*\n* mm = accumulator();\n* // returns [ -5.0, 5.0 ]\n*/\nfunction incrmminmax( out, window ) {\n\tvar minmax;\n\tvar buf;\n\tvar min;\n\tvar max;\n\tvar W;\n\tvar N;\n\tvar i;\n\tif ( arguments.length === 1 ) {\n\t\tminmax = [ 0.0, 0.0 ];\n\t\tW = out;\n\t} else {\n\t\tif ( !isArrayLike( out ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Output argument must be an array-like object. Value: `%s`.', out ) );\n\t\t}\n\t\tminmax = out;\n\t\tW = window;\n\t}\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Window size must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tbuf = new Float64Array( W );\n\tmin = PINF;\n\tmax = NINF;\n\ti = -1;\n\tN = 0;\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns updated minimum and maximum values. If not provided a value, the accumulator function returns the current minimum and maximum values.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(ArrayLikeObject|null)} output array or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tvar sgn;\n\t\tvar v;\n\t\tvar k;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn minmax;\n\t\t}\n\t\t// Update the index for managing the circular buffer:\n\t\ti = (i+1) % W;\n\n\t\t// Case: incoming value is NaN...\n\t\tif ( isnan( x ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tmin = x;\n\t\t\tmax = x;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tN += 1;\n\t\t\tif ( x < min || ( x === min && isNegativeZero( x ) ) ) {\n\t\t\t\tmin = x;\n\t\t\t}\n\t\t\tif ( x > max || ( x === max && isPositiveZero( x ) ) ) {\n\t\t\t\tmax = x;\n\t\t\t}\n\t\t}\n\t\t// Case: outgoing value is the current minimum or maximum and the new value is either greater than the minimum or less than the maximum, and, thus, we need to find new accumulated values among the current buffer values...\n\t\telse if (\n\t\t\t( buf[ i ] === min && x > min ) ||\n\t\t\t( buf[ i ] === max && x < max ) ||\n\t\t\tisnan( buf[ i ] )\n\t\t) {\n\t\t\tmin = x;\n\t\t\tmax = x;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tv = buf[ k ];\n\t\t\t\t\tif ( isnan( v ) ) {\n\t\t\t\t\t\tmin = v;\n\t\t\t\t\t\tmax = v;\n\t\t\t\t\t\tbreak; // no need to continue searching\n\t\t\t\t\t}\n\t\t\t\t\tif ( v < min || ( v === min && isNegativeZero( v ) ) ) {\n\t\t\t\t\t\tmin = v;\n\t\t\t\t\t}\n\t\t\t\t\tif ( v > max || ( v === max && isPositiveZero( v ) ) ) {\n\t\t\t\t\t\tmax = v;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: incoming value is less than current minimum value...\n\t\telse if ( x < min ) {\n\t\t\tmin = x;\n\t\t}\n\t\t// Case: incoming value is greater than current maximum value...\n\t\telse if ( x > max ) {\n\t\t\tmax = x;\n\t\t}\n\t\t// Case: incoming value is zero, which means we need to be careful and correctly handle signed zeros...\n\t\telse if ( x === 0.0 ) {\n\t\t\tsgn = isNegativeZero( x );\n\t\t\tif ( x === min ) {\n\t\t\t\t// Case: outgoing value is the current minimum...\n\t\t\t\tif (\n\t\t\t\t\tbuf[ i ] === min &&\n\t\t\t\t\tisNegativeZero( buf[ i ] ) &&\n\t\t\t\t\tsgn === false\n\t\t\t\t) {\n\t\t\t\t\t// Because the outgoing and incoming are different signs (-,+), we need to search the buffer to see if it contains a negative zero. If so, the minimum value remains negative zero; otherwise, the minimum value is incoming value...\n\t\t\t\t\tmin = x;\n\t\t\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\t\t\tif ( k !== i && isNegativeZero( buf[ k ] ) ) {\n\t\t\t\t\t\t\tmin = buf[ k ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if ( sgn ) {\n\t\t\t\t\t// Ensure minimum value has the correct sign:\n\t\t\t\t\tmin = x;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( x === max ) {\n\t\t\t\t// Case: outgoing value is the current maximum...\n\t\t\t\tif (\n\t\t\t\t\tbuf[ i ] === max &&\n\t\t\t\t\tisPositiveZero( buf[ i ] ) &&\n\t\t\t\t\tsgn\n\t\t\t\t) {\n\t\t\t\t\t// Because the outgoing and incoming are different signs (+,-), we need to search the buffer to see if it contains a positive zero. If so, the maximum value remains positive zero; otherwise, the maximum value is incoming value...\n\t\t\t\t\tmax = x;\n\t\t\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\t\t\tif ( k !== i && isPositiveZero( buf[ k ] ) ) {\n\t\t\t\t\t\t\tmax = buf[ k ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if ( sgn === false ) {\n\t\t\t\t\t// Ensure maximum value has the correct sign:\n\t\t\t\t\tmax = x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: updating existing window; however, the minimum and maximum values do not change so nothing to do but update our buffer...\n\t\tbuf[ i ] = x;\n\n\t\tminmax[ 0 ] = min;\n\t\tminmax[ 1 ] = max;\n\t\treturn minmax;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmminmax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar fcn = require( './frexp.js' );\n\n\n// MAIN //\n\n/**\n* Splits a double-precision floating-point number into a normalized fraction and an integer power of two.\n*\n* @param {(Array|TypedArray|Object)} [out] - output array\n* @param {number} x - input value\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var out = frexp( 4.0 );\n* // returns [ 0.5, 3 ]\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var out = new Float64Array( 2 );\n*\n* var y = frexp( out, 4.0 );\n* // returns <Float64Array>[ 0.5, 3 ]\n*\n* var bool = ( y === out );\n* // returns true\n*\n* @example\n* var out = frexp( 0.0 );\n* // returns [ 0.0, 0 ]\n*\n* @example\n* var out = frexp( -0.0 );\n* // returns [ -0.0, 0 ]\n*\n* @example\n* var out = frexp( NaN );\n* // returns [ NaN, 0 ]\n*\n* @example\n* var out = frexp( Infinity );\n* // returns [ Infinity , 0 ]\n*\n* @example\n* var out = frexp( -Infinity );\n* // returns [ -Infinity , 0 ]\n*/\nfunction frexp( out, x ) {\n\tif ( arguments.length === 1 ) {\n\t\treturn fcn( [ 0.0, 0 ], out );\n\t}\n\treturn fcn( out, x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = frexp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar isInfinite = require( './../../../../base/assert/is-infinite' );\nvar normalize = require( '@stdlib/number/float64/base/normalize' );\nvar floatExp = require( '@stdlib/number/float64/base/exponent' );\nvar toWords = require( '@stdlib/number/float64/base/to-words' );\nvar fromWords = require( '@stdlib/number/float64/base/from-words' );\n\n\n// VARIABLES //\n\n// Exponent all 0s: 1 00000000000 11111111111111111111 => 2148532223\nvar CLEAR_EXP_MASK = 0x800fffff>>>0; // asm type annotation\n\n// Exponent equal to 1022 (BIAS-1): 0 01111111110 00000000000000000000 => 1071644672\nvar SET_EXP_MASK = 0x3fe00000|0; // asm type annotation\n\n// Normalization workspace:\nvar X = [ 0.0, 0.0 ]; // WARNING: not thread safe\n\n// High/low words workspace:\nvar WORDS = [ 0, 0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Splits a double-precision floating-point number into a normalized fraction and an integer power of two.\n*\n* @private\n* @param {(Array|TypedArray|Object)} out - output array\n* @param {number} x - input value\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var out = frexp( new Array( 2 ), 4.0 );\n* // returns [ 0.5, 3 ]\n*\n* @example\n* var out = frexp( new Array( 2 ), 0.0 );\n* // returns [ 0.0, 0 ]\n*\n* @example\n* var out = frexp( new Array( 2 ), -0.0 );\n* // returns [ -0.0, 0 ]\n*\n* @example\n* var out = frexp( new Array( 2 ), NaN );\n* // returns [ NaN, 0 ]\n*\n* @example\n* var out = frexp( new Array( 2 ), Infinity );\n* // returns [ Infinity , 0 ]\n*\n* @example\n* var out = frexp( new Array( 2 ), -Infinity );\n* // returns [ -Infinity , 0 ]\n*/\nfunction frexp( out, x ) {\n\tvar high;\n\tvar exp;\n\tif (\n\t\tx === 0.0 || // handles -0\n\t\tisnan( x ) ||\n\t\tisInfinite( x )\n\t) {\n\t\tout[ 0 ] = x;\n\t\tout[ 1 ] = 0;\n\t\treturn out;\n\t}\n\t// If `x` is subnormal, normalize it...\n\tnormalize( X, x );\n\n\t// Extract the exponent from `x` and add the normalization exponent:\n\texp = floatExp( X[0] ) + X[ 1 ] + 1;\n\n\t// Break `x` into two unsigned 32-bit integers (higher and lower order words):\n\ttoWords( WORDS, X[ 0 ] );\n\thigh = WORDS[ 0 ];\n\n\t// Clear the exponent bits within the higher order word:\n\thigh &= CLEAR_EXP_MASK;\n\n\t// Set the exponent bits within the higher order word to BIAS-1 (1023-1=1022):\n\thigh |= SET_EXP_MASK;\n\n\t// Create a new floating-point number:\n\tx = fromWords( high, WORDS[ 1 ] );\n\n\tout[ 0 ] = x;\n\tout[ 1 ] = exp;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = frexp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Split a double-precision floating-point number into a normalized fraction and an integer power of two.\n*\n* @module @stdlib/math/base/special/frexp\n*\n* @example\n* var frexp = require( '@stdlib/math/base/special/frexp' );\n*\n* var out = frexp( 4.0 );\n* // returns [ 0.5, 3 ]\n*\n* out = frexp( 0.0 );\n* // returns [ 0.0, 0 ]\n*\n* out = frexp( -0.0 );\n* // returns [ -0.0, 0 ]\n*\n* out = frexp( NaN );\n* // returns [ NaN, 0 ]\n*\n* out = frexp( Infinity );\n* // returns [ Infinity , 0 ]\n*\n* out = frexp( -Infinity );\n* // returns [ -Infinity , 0 ]\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var frexp = require( '@stdlib/math/base/special/frexp' );\n*\n* var out = new Float64Array( 2 );\n*\n* var y = frexp( out, 4.0 );\n* // returns <Float64Array>[ 0.5, 3 ]\n*\n* var bool = ( y === out );\n* // returns true\n*/\n\n// MODULES //\n\nvar frexp = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = frexp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving product incrementally.\n*\n* @module @stdlib/stats/incr/mprod\n*\n* @example\n* var incrmprod = require( '@stdlib/stats/incr/mprod' );\n*\n* var accumulator = incrmprod( 3 );\n*\n* var p = accumulator();\n* // returns null\n*\n* p = accumulator( 2.0 );\n* // returns 2.0\n*\n* p = accumulator( -5.0 );\n* // returns -10.0\n*\n* p = accumulator( 3.0 );\n* // returns -30.0\n*\n* p = accumulator( 5.0 );\n* // returns -75.0\n*\n* p = accumulator();\n* // returns -75.0\n*/\n\n// MODULES //\n\nvar incrmprod = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmprod;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isInfinite = require( '@stdlib/math/base/assert/is-infinite' );\nvar frexp = require( '@stdlib/math/base/special/frexp' );\nvar ldexp = require( '@stdlib/math/base/special/ldexp' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar format = require( '@stdlib/string/format' );\n\n\n// FUNCTIONS //\n\n/**\n* Computes an updated product.\n*\n* @private\n* @param {Array} workspace - workspace array\n* @param {Object} acc - accumulated fractional and exponent parts\n* @param {number} x - multiplicative factor\n* @returns {number} product\n*/\nfunction product( workspace, acc, x ) {\n\t// Split the incoming value into a normalized fraction and exponent:\n\tfrexp( workspace, x );\n\n\t// Update the accumulated fraction:\n\tacc.frac *= workspace[ 0 ];\n\n\t// Update the accumulated exponent:\n\tacc.exp += workspace[ 1 ];\n\n\t// Ensure fraction remains normalized to avoid overflow/underflow...\n\tif ( acc.frac > -0.5 && acc.frac < 0.5 ) {\n\t\tfrexp( workspace, acc.frac );\n\t\tacc.frac = workspace[ 0 ];\n\t\tacc.exp += workspace[ 1 ];\n\t}\n\treturn ldexp( acc.frac, acc.exp );\n}\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving product.\n*\n* ## Method\n*\n* To avoid overflow/underflow, we store the fractional and exponent parts of intermediate results separately. By keeping a normalized fraction, we prevent underflow/overflow of the fraction. Underflow of the exponent is impossible, as IEEE 754 floating-point exponents are integer values. Overflow of the exponent is possible, but highly unlikely. In the worst case, an intermediate exponent is greater than the minimum safe integer, and adding the exponent of an incoming value does not change the intermediate result. While incorrect, such behavior does not lead to exponent overflow.\n*\n* While intermediate results are largely immune to overflow and not subject to underflow, this does not mean that returned results will never be zero or infinite. In fact, zero (underflow) and infinite (overflow) results may be transient (i.e., infinity followed by a finite number).\n*\n*\n* ## References\n*\n* -   Ueberhuber, Christoph W. 1997. _Numerical Computation 1: Methods, Software, and Analysis_. Springer-Verlag Berlin Heidelberg. doi:[10.1007/978-3-642-59118-1](https://doi.org/10.1007/978-3-642-59118-1).\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmprod( 3 );\n*\n* var p = accumulator();\n* // returns null\n*\n* p = accumulator( 2.0 );\n* // returns 2.0\n*\n* p = accumulator( -5.0 );\n* // returns -10.0\n*\n* p = accumulator( 3.0 );\n* // returns -30.0\n*\n* p = accumulator( 5.0 );\n* // returns -75.0\n*\n* p = accumulator();\n* // returns -75.0\n*/\nfunction incrmprod( W ) {\n\tvar parts;\n\tvar prod;\n\tvar buf;\n\tvar acc;\n\tvar N;\n\tvar i;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tbuf = new Float64Array( W );\n\ti = -1;\n\tN = 0;\n\n\t// Initialize a workspace for `frexp`:\n\tparts = [ 0.0, 0 ];\n\n\t// Initial product is 1.0, which may be split into its fractional and exponent parts (0.5 x 2.0**1 = 1.0):\n\tprod = 1.0;\n\tacc = {};\n\tacc.frac = 0.5;\n\tacc.exp = 1.0;\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated prodct. If not provided a value, the accumulator function returns the current prodct.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} product or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tvar k;\n\t\tvar v;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn prod;\n\t\t}\n\t\t// Update the index for managing the circular buffer:\n\t\ti = (i+1) % W;\n\n\t\t// Case: incoming value is NaN, the accumulated value is automatically NaN...\n\t\tif ( isnan( x ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tprod = NaN;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tN += 1;\n\t\t\tprod = product( parts, acc, x );\n\t\t}\n\t\t// Case: outgoing value is a \"special\" value, and, thus, we need to compute the accumulated value...\n\t\telse if (\n\t\t\tbuf[ i ] === 0.0 ||\n\t\t\tisnan( buf[ i ] ) ||\n\t\t\tisInfinite( buf[ i ] )\n\t\t) {\n\t\t\tN = 1;\n\t\t\tacc.frac = 0.5;\n\t\t\tacc.exp = 1.0;\n\t\t\tproduct( parts, acc, x );\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tv = buf[ k ];\n\t\t\t\t\tif ( isnan( v ) ) {\n\t\t\t\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\t\t\t\tprod = NaN;\n\t\t\t\t\t\tbreak; // product is automatically NaN, so no need to continue\n\t\t\t\t\t}\n\t\t\t\t\tN += 1;\n\t\t\t\t\tprod = product( parts, acc, v );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: neither the current accumulated value nor the incoming value are NaN, so we need to update the accumulated value...\n\t\telse if ( isnan( prod ) === false ) {\n\t\t\tv = x / buf[ i ];\n\t\t\tprod = product( parts, acc, v );\n\t\t}\n\t\t// Case: the current accumulated value is NaN, so nothing to do until the buffer no longer contains NaN values...\n\t\tbuf[ i ] = x;\n\n\t\treturn prod;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmprod;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving range incrementally.\n*\n* @module @stdlib/stats/incr/mrange\n*\n* @example\n* var incrmrange = require( '@stdlib/stats/incr/mrange' );\n*\n* var accumulator = incrmrange( 3 );\n*\n* var r = accumulator();\n* // returns null\n*\n* r = accumulator( 2.0 );\n* // returns 0.0\n*\n* r = accumulator( -5.0 );\n* // returns 7.0\n*\n* r = accumulator( 3.0 );\n* // returns 8.0\n*\n* r = accumulator( 5.0 );\n* // returns 10.0\n*\n* r = accumulator();\n* // returns 10.0\n*/\n\n// MODULES //\n\nvar incrmrange = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmrange;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving range.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmrange( 3 );\n*\n* var r = accumulator();\n* // returns null\n*\n* r = accumulator( 2.0 );\n* // returns 0.0\n*\n* r = accumulator( -5.0 );\n* // returns 7.0\n*\n* r = accumulator( 3.0 );\n* // returns 8.0\n*\n* r = accumulator( 5.0 );\n* // returns 10.0\n*\n* r = accumulator();\n* // returns 10.0\n*/\nfunction incrmrange( W ) {\n\tvar buf;\n\tvar min;\n\tvar max;\n\tvar N;\n\tvar i;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tbuf = new Float64Array( W );\n\tmin = PINF;\n\tmax = NINF;\n\ti = -1;\n\tN = 0;\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated range. If not provided a value, the accumulator function returns the current range.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} range or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tvar v;\n\t\tvar k;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn max - min;\n\t\t}\n\t\t// Update the index for managing the circular buffer:\n\t\ti = (i+1) % W;\n\n\t\tif ( x === 0.0 ) {\n\t\t\tx = 0.0; // normalizes +-0\n\t\t}\n\t\t// Case: incoming value is NaN...\n\t\tif ( isnan( x ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tmin = x;\n\t\t\tmax = x;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tN += 1;\n\t\t\tif ( x < min ) {\n\t\t\t\tmin = x;\n\t\t\t}\n\t\t\tif ( x > max ) {\n\t\t\t\tmax = x;\n\t\t\t}\n\t\t}\n\t\t// Case: outgoing value is the current minimum or maximum and the new value is either greater than the minimum or less than the maximum, and, thus, we need to find a new accumulated values among the current buffer values...\n\t\telse if (\n\t\t\t( buf[ i ] === min && x > min ) ||\n\t\t\t( buf[ i ] === max && x < max ) ||\n\t\t\tisnan( buf[ i ] )\n\t\t) {\n\t\t\tmin = x;\n\t\t\tmax = x;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tv = buf[ k ];\n\t\t\t\t\tif ( isnan( v ) ) {\n\t\t\t\t\t\tmin = v;\n\t\t\t\t\t\tmax = v;\n\t\t\t\t\t\tbreak; // no need to continue searching\n\t\t\t\t\t}\n\t\t\t\t\tif ( v < min ) {\n\t\t\t\t\t\tmin = v;\n\t\t\t\t\t}\n\t\t\t\t\tif ( v > max ) {\n\t\t\t\t\t\tmax = v;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: incoming value is less than current minimum value...\n\t\telse if ( x < min ) {\n\t\t\tmin = x;\n\t\t}\n\t\t// Case: incoming value is greater than current maximum value...\n\t\telse if ( x > max ) {\n\t\t\tmax = x;\n\t\t}\n\t\t// Case: updating existing window; however, the minimum and maximum values do not change so nothing to do but update our buffer...\n\t\tbuf[ i ] = x;\n\n\t\treturn max - min;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmrange;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving sum incrementally.\n*\n* @module @stdlib/stats/incr/msum\n*\n* @example\n* var incrmsum = require( '@stdlib/stats/incr/msum' );\n*\n* var accumulator = incrmsum( 3 );\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0 );\n* // returns 2.0\n*\n* sum = accumulator( -5.0 );\n* // returns -3.0\n*\n* sum = accumulator( 3.0 );\n* // returns 0.0\n*\n* sum = accumulator( 5.0 );\n* // returns 3.0\n*\n* sum = accumulator();\n* // returns 3.0\n*/\n\n// MODULES //\n\nvar incrmsum = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmsum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving sum.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmsum( 3 );\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0 );\n* // returns 2.0\n*\n* sum = accumulator( -5.0 );\n* // returns -3.0\n*\n* sum = accumulator( 3.0 );\n* // returns 0.0\n*\n* sum = accumulator( 5.0 );\n* // returns 3.0\n*\n* sum = accumulator();\n* // returns 3.0\n*/\nfunction incrmsum( W ) {\n\tvar buf;\n\tvar sum;\n\tvar N;\n\tvar i;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tbuf = new Float64Array( W );\n\tsum = 0.0;\n\ti = -1;\n\tN = 0;\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated sum. If not provided a value, the accumulator function returns the current sum.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} sum or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tvar k;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn sum;\n\t\t}\n\t\t// Update the index for managing the circular buffer:\n\t\ti = (i+1) % W;\n\n\t\t// Case: incoming value is NaN, the accumulated value is automatically NaN...\n\t\tif ( isnan( x ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tsum = NaN;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tN += 1;\n\t\t\tsum += x;\n\t\t}\n\t\t// Case: outgoing value is NaN, and, thus, we need to compute the accumulated value...\n\t\telse if ( isnan( buf[ i ] ) ) {\n\t\t\tN = 1;\n\t\t\tsum = x;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tif ( isnan( buf[ k ] ) ) {\n\t\t\t\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\t\t\t\tsum = NaN;\n\t\t\t\t\t\tbreak; // sum is automatically NaN, so no need to continue\n\t\t\t\t\t}\n\t\t\t\t\tN += 1;\n\t\t\t\t\tsum += buf[ k ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: neither the current accumulated value nor the incoming value are NaN, so we need to update the accumulated value...\n\t\telse if ( isnan( sum ) === false ) {\n\t\t\tsum += x - buf[ i ];\n\t\t}\n\t\t// Case: the current accumulated value is NaN, so nothing to do until the buffer no longer contains NaN values...\n\n\t\tbuf[ i ] = x;\n\t\treturn sum;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmsum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving corrected sample standard deviation incrementally.\n*\n* @module @stdlib/stats/incr/mstdev\n*\n* @example\n* var incrmstdev = require( '@stdlib/stats/incr/mstdev' );\n*\n* var accumulator = incrmstdev( 3 );\n*\n* var s = accumulator();\n* // returns null\n*\n* s = accumulator( 2.0 );\n* // returns 0.0\n*\n* s = accumulator( -5.0 );\n* // returns ~4.95\n*\n* s = accumulator( 3.0 );\n* // returns ~4.36\n*\n* s = accumulator( 5.0 );\n* // returns ~5.29\n*\n* s = accumulator();\n* // returns ~5.29\n*/\n\n// MODULES //\n\nvar incrmstdev = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmstdev;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving corrected sample standard deviation.\n*\n* ## Method\n*\n* -   Let \\\\(W\\\\) be a window of \\\\(N\\\\) elements over which we want to compute an corrected sample standard deviation.\n*\n* -   We first recognize that the corrected sample standard deviation is defined as the square root of the unbiased sample variance. Accordingly, in order to derive an update equation for the corrected sample standard deviation, deriving an update equation for the unbiased sample variance is sufficient.\n*\n* -   The difference between the unbiased sample variance in a window \\\\(W_i\\\\) and the unbiased sample variance in a window \\\\(W_{i+1})\\\\) is given by\n*\n*     ```tex\n*     \\Delta s^2 = s_{i+1}^2 - s_{i}^2\n*     ```\n*\n* -   If we multiply both sides by \\\\(N-1\\\\),\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = (N-1)s_{i+1}^2 - (N-1)s_{i}^2\n*     ```\n*\n* -   If we substitute the definition of the unbiased sample variance having the form\n*\n*     ```tex\n*     \\begin{align*}\n*     s^2 &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} (x_i - \\bar{x})^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} (x_i^2 - 2\\bar{x}x_i + \\bar{x}^2) \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - 2\\bar{x} \\sum_{i=1}^{N} x_i + \\sum_{i=1}^{N} \\bar{x}^2) \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - \\frac{2N\\bar{x}\\sum_{i=1}^{N} x_i}{N} + N\\bar{x}^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - 2N\\bar{x}^2 + N\\bar{x}^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - N\\bar{x}^2 \\biggr)\n*     \\end{align*}\n*     ```\n*\n*     we return\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = \\biggl(\\sum_{k=1}^N x_k^2 - N\\bar{x}_{i+1}^2 \\biggr) - \\biggl(\\sum_{k=0}^{N-1} x_k^2 - N\\bar{x}_{i}^2 \\biggr)\n*     ```\n*\n* -   This can be further simplified by recognizing that subtracting the sums reduces to \\\\(x_N^2 - x_0^2\\\\); in which case,\n*\n*     ```tex\n*     \\begin{align*}\n*     (N-1)(\\Delta s^2) &= x_N^2 - x_0^2 - N\\bar{x}_{i+1}^2 + N\\bar{x}_{i}^2 \\\\\n*     &= x_N^2 - x_0^2 - N(\\bar{x}_{i+1}^2 - \\bar{x}_{i}^2) \\\\\n*     &= x_N^2 - x_0^2 - N(\\bar{x}_{i+1} - \\bar{x}_{i})(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     \\end{align*}\n*     ```\n*\n* -   Recognizing that the difference of means can be expressed\n*\n*     ```tex\n*     \\bar{x}_{i+1} - \\bar{x}_i = \\frac{1}{N} \\biggl( \\sum_{k=1}^N x_k - \\sum_{k=0}^{N-1} x_k \\biggr) = \\frac{x_N - x_0}{N}\n*     ```\n*\n*     and substituting into the equation above\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = x_N^2 - x_0^2 - (x_N - x_0)(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     ```\n*\n* -   Rearranging terms gives us the update equation\n*\n*     ```tex\n*     \\begin{align*}\n*     (N-1)(\\Delta s^2) &= (x_N - x_0)(x_N + x_0) - (x_N - x_0)(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     &= (x_N - x_0)(x_N + x_0 - \\bar{x}_{i+1} - \\bar{x}_{i}) \\\\\n*     &= (x_N - x_0)(x_N - \\bar{x}_{i+1} + x_0 - \\bar{x}_{i})\n*     \\end{align*}\n*     ```\n*\n* @param {PositiveInteger} W - window size\n* @param {number} [mean] - mean value\n* @throws {TypeError} first argument must be a positive integer\n* @throws {TypeError} second argument must be a number\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmstdev( 3 );\n*\n* var s = accumulator();\n* // returns null\n*\n* s = accumulator( 2.0 );\n* // returns 0.0\n*\n* s = accumulator( -5.0 );\n* // returns ~4.95\n*\n* s = accumulator( 3.0 );\n* // returns ~4.36\n*\n* s = accumulator( 5.0 );\n* // returns ~5.29\n*\n* s = accumulator();\n* // returns ~5.29\n*\n* @example\n* var accumulator = incrmstdev( 3, 5.0 );\n*/\nfunction incrmstdev( W, mean ) {\n\tvar delta;\n\tvar buf;\n\tvar tmp;\n\tvar M2;\n\tvar mu;\n\tvar d1;\n\tvar d2;\n\tvar N;\n\tvar n;\n\tvar i;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tbuf = new Float64Array( W );\n\tn = W - 1;\n\tM2 = 0.0;\n\ti = -1;\n\tN = 0;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNumber( mean ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a number. Value: `%s`.', mean ) );\n\t\t}\n\t\tmu = mean;\n\t\treturn accumulator2;\n\t}\n\tmu = 0.0;\n\treturn accumulator1;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated corrected sample standard deviation. If not provided a value, the accumulator function returns the current corrected sample standard deviation.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} corrected sample standard deviation or null\n\t*/\n\tfunction accumulator1( x ) {\n\t\tvar k;\n\t\tvar v;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn ( isnan( M2 ) ) ? NaN : 0.0;\n\t\t\t}\n\t\t\tif ( N < W ) {\n\t\t\t\treturn sqrt( M2 / (N-1) );\n\t\t\t}\n\t\t\treturn sqrt( M2 / n );\n\t\t}\n\t\t// Update the index for managing the circular buffer:\n\t\ti = (i+1) % W;\n\n\t\t// Case: incoming value is NaN, the sliding second moment is automatically NaN...\n\t\tif ( isnan( x ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tM2 = NaN;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tbuf[ i ] = x; // update buffer\n\t\t\tN += 1;\n\t\t\tdelta = x - mu;\n\t\t\tmu += delta / N;\n\t\t\tM2 += delta * (x - mu);\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn 0.0;\n\t\t\t}\n\t\t\treturn sqrt( M2 / (N-1) );\n\t\t}\n\t\t// Case: N = W = 1\n\t\telse if ( N === 1 ) {\n\t\t\tM2 = 0.0;\n\t\t\treturn M2;\n\t\t}\n\t\t// Case: outgoing value is NaN, and, thus, we need to compute the accumulated values...\n\t\telse if ( isnan( buf[ i ] ) ) {\n\t\t\tN = 1;\n\t\t\tmu = x;\n\t\t\tM2 = 0.0;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tv = buf[ k ];\n\t\t\t\t\tif ( isnan( v ) ) {\n\t\t\t\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\t\t\t\tM2 = NaN;\n\t\t\t\t\t\tbreak; // second moment is automatically NaN, so no need to continue\n\t\t\t\t\t}\n\t\t\t\t\tN += 1;\n\t\t\t\t\tdelta = v - mu;\n\t\t\t\t\tmu += delta / N;\n\t\t\t\t\tM2 += delta * (v - mu);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: neither the current second moment nor the incoming value are NaN, so we need to update the accumulated values...\n\t\telse if ( isnan( M2 ) === false ) {\n\t\t\ttmp = buf[ i ];\n\t\t\tdelta = x - tmp;\n\t\t\td1 = tmp - mu;\n\t\t\tmu += delta / W;\n\t\t\td2 = x - mu;\n\t\t\tM2 += delta * (d1 + d2);\n\t\t}\n\t\t// Case: the current second moment is NaN, so nothing to do until the buffer no longer contains NaN values...\n\n\t\tbuf[ i ] = x;\n\t\treturn sqrt( M2 / n );\n\t}\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated corrected sample standard deviation. If not provided a value, the accumulator function returns the current corrected sample standard deviation.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} corrected sample standard deviation or null\n\t*/\n\tfunction accumulator2( x ) {\n\t\tvar k;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( N < W ) {\n\t\t\t\treturn sqrt( M2 / N );\n\t\t\t}\n\t\t\treturn sqrt( M2 / W );\n\t\t}\n\t\t// Update the index for managing the circular buffer:\n\t\ti = (i+1) % W;\n\n\t\t// Case: incoming value is NaN, the sliding second moment is automatically NaN...\n\t\tif ( isnan( x ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tM2 = NaN;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tbuf[ i ] = x; // update buffer\n\t\t\tN += 1;\n\t\t\tdelta = x - mu;\n\t\t\tM2 += delta * delta;\n\t\t\treturn sqrt( M2 / N );\n\t\t}\n\t\t// Case: outgoing value is NaN, and, thus, we need to compute the accumulated values...\n\t\telse if ( isnan( buf[ i ] ) ) {\n\t\t\tM2 = 0.0;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tif ( isnan( buf[ k ] ) ) {\n\t\t\t\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\t\t\t\tM2 = NaN;\n\t\t\t\t\t\tbreak; // second moment is automatically NaN, so no need to continue\n\t\t\t\t\t}\n\t\t\t\t\tdelta = buf[ k ] - mu;\n\t\t\t\t\tM2 += delta * delta;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: neither the current second moment nor the incoming value are NaN, so we need to update the accumulated values...\n\t\telse if ( isnan( M2 ) === false ) {\n\t\t\ttmp = buf[ i ];\n\t\t\tM2 += ( x-tmp ) * ( x-mu + tmp-mu );\n\t\t}\n\t\t// Case: the current second moment is NaN, so nothing to do until the buffer no longer contains NaN values...\n\n\t\tbuf[ i ] = x;\n\t\treturn sqrt( M2 / W );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmstdev;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving sum of absolute values incrementally.\n*\n* @module @stdlib/stats/incr/msumabs\n*\n* @example\n* var incrmsumabs = require( '@stdlib/stats/incr/msumabs' );\n*\n* var accumulator = incrmsumabs( 3 );\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0 );\n* // returns 2.0\n*\n* sum = accumulator( -5.0 );\n* // returns 7.0\n*\n* sum = accumulator( 3.0 );\n* // returns 10.0\n*\n* sum = accumulator( -5.0 );\n* // returns 13.0\n*\n* sum = accumulator();\n* // returns 13.0\n*/\n\n// MODULES //\n\nvar incrmsumabs = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmsumabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar incrmsum = require( './../../../incr/msum' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving sum of absolute values.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmsumabs( 3 );\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0 );\n* // returns 2.0\n*\n* sum = accumulator( -5.0 );\n* // returns 7.0\n*\n* sum = accumulator( 3.0 );\n* // returns 10.0\n*\n* sum = accumulator( 5.0 );\n* // returns 13.0\n*\n* sum = accumulator();\n* // returns 13.0\n*/\nfunction incrmsumabs( W ) {\n\tvar sum;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tsum = incrmsum( W );\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated sum. If not provided a value, the accumulator function returns the current sum.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} sum or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn sum();\n\t\t}\n\t\treturn sum( abs( x ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmsumabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving sum of squared absolute values incrementally.\n*\n* @module @stdlib/stats/incr/msumabs2\n*\n* @example\n* var incrmsumabs2 = require( '@stdlib/stats/incr/msumabs2' );\n*\n* var accumulator = incrmsumabs2( 3 );\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0 );\n* // returns 4.0\n*\n* sum = accumulator( -5.0 );\n* // returns 29.0\n*\n* sum = accumulator( 3.0 );\n* // returns 38.0\n*\n* sum = accumulator( -5.0 );\n* // returns 59.0\n*\n* sum = accumulator();\n* // returns 59.0\n*/\n\n// MODULES //\n\nvar incrmsumabs2 = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmsumabs2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar incrmsum = require( './../../../incr/msum' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving sum of squared absolute values.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmsumabs2( 3 );\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0 );\n* // returns 4.0\n*\n* sum = accumulator( -5.0 );\n* // returns 29.0\n*\n* sum = accumulator( 3.0 );\n* // returns 38.0\n*\n* sum = accumulator( 5.0 );\n* // returns 59.0\n*\n* sum = accumulator();\n* // returns 59.0\n*/\nfunction incrmsumabs2( W ) {\n\tvar sum;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tsum = incrmsum( W );\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated sum. If not provided a value, the accumulator function returns the current sum.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} sum or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn sum();\n\t\t}\n\t\treturn sum( x*x );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmsumabs2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving unbiased sample variance incrementally.\n*\n* @module @stdlib/stats/incr/mvariance\n*\n* @example\n* var incrmvariance = require( '@stdlib/stats/incr/mvariance' );\n*\n* var accumulator = incrmvariance( 3 );\n*\n* var s2 = accumulator();\n* // returns null\n*\n* s2 = accumulator( 2.0 );\n* // returns 0.0\n*\n* s2 = accumulator( -5.0 );\n* // returns 24.5\n*\n* s2 = accumulator( 3.0 );\n* // returns 19.0\n*\n* s2 = accumulator( 5.0 );\n* // returns 28.0\n*\n* s2 = accumulator();\n* // returns 28.0\n*/\n\n// MODULES //\n\nvar incrmvariance = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmvariance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving unbiased sample variance.\n*\n* ## Method\n*\n* -   Let \\\\(W\\\\) be a window of \\\\(N\\\\) elements over which we want to compute an unbiased sample variance.\n*\n* -   The difference between the unbiased sample variance in a window \\\\(W_i\\\\) and the unbiased sample variance in a window \\\\(W_{i+1})\\\\) is given by\n*\n*     ```tex\n*     \\Delta s^2 = s_{i+1}^2 - s_{i}^2\n*     ```\n*\n* -   If we multiply both sides by \\\\(N-1\\\\),\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = (N-1)s_{i+1}^2 - (N-1)s_{i}^2\n*     ```\n*\n* -   If we substitute the definition of the unbiased sample variance having the form\n*\n*     ```tex\n*     \\begin{align*}\n*     s^2 &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} (x_i - \\bar{x})^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} (x_i^2 - 2\\bar{x}x_i + \\bar{x}^2) \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - 2\\bar{x} \\sum_{i=1}^{N} x_i + \\sum_{i=1}^{N} \\bar{x}^2) \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - \\frac{2N\\bar{x}\\sum_{i=1}^{N} x_i}{N} + N\\bar{x}^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - 2N\\bar{x}^2 + N\\bar{x}^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - N\\bar{x}^2 \\biggr)\n*     \\end{align*}\n*     ```\n*\n*     we return\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = \\biggl(\\sum_{k=1}^N x_k^2 - N\\bar{x}_{i+1}^2 \\biggr) - \\biggl(\\sum_{k=0}^{N-1} x_k^2 - N\\bar{x}_{i}^2 \\biggr)\n*     ```\n*\n* -   This can be further simplified by recognizing that subtracting the sums reduces to \\\\(x_N^2 - x_0^2\\\\); in which case,\n*\n*     ```tex\n*     \\begin{align*}\n*     (N-1)(\\Delta s^2) &= x_N^2 - x_0^2 - N\\bar{x}_{i+1}^2 + N\\bar{x}_{i}^2 \\\\\n*     &= x_N^2 - x_0^2 - N(\\bar{x}_{i+1}^2 - \\bar{x}_{i}^2) \\\\\n*     &= x_N^2 - x_0^2 - N(\\bar{x}_{i+1} - \\bar{x}_{i})(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     \\end{align*}\n*     ```\n*\n* -   Recognizing that the difference of means can be expressed\n*\n*     ```tex\n*     \\bar{x}_{i+1} - \\bar{x}_i = \\frac{1}{N} \\biggl( \\sum_{k=1}^N x_k - \\sum_{k=0}^{N-1} x_k \\biggr) = \\frac{x_N - x_0}{N}\n*     ```\n*\n*     and substituting into the equation above\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = x_N^2 - x_0^2 - (x_N - x_0)(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     ```\n*\n* -   Rearranging terms gives us the update equation\n*\n*     ```tex\n*     \\begin{align*}\n*     (N-1)(\\Delta s^2) &= (x_N - x_0)(x_N + x_0) - (x_N - x_0)(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     &= (x_N - x_0)(x_N + x_0 - \\bar{x}_{i+1} - \\bar{x}_{i}) \\\\\n*     &= (x_N - x_0)(x_N - \\bar{x}_{i+1} + x_0 - \\bar{x}_{i})\n*     \\end{align*}\n*     ```\n*\n* @param {PositiveInteger} W - window size\n* @param {number} [mean] - mean value\n* @throws {TypeError} first argument must be a positive integer\n* @throws {TypeError} second argument must be a number\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmvariance( 3 );\n*\n* var s2 = accumulator();\n* // returns null\n*\n* s2 = accumulator( 2.0 );\n* // returns 0.0\n*\n* s2 = accumulator( -5.0 );\n* // returns 24.5\n*\n* s2 = accumulator( 3.0 );\n* // returns 19.0\n*\n* s2 = accumulator( 5.0 );\n* // returns 28.0\n*\n* s2 = accumulator();\n* // returns 28.0\n*\n* @example\n* var accumulator = incrmvariance( 3, -2.0 );\n*/\nfunction incrmvariance( W, mean ) {\n\tvar delta;\n\tvar buf;\n\tvar tmp;\n\tvar M2;\n\tvar mu;\n\tvar d1;\n\tvar d2;\n\tvar N;\n\tvar n;\n\tvar i;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tbuf = new Array( W );\n\tn = W - 1;\n\tM2 = 0.0;\n\ti = -1;\n\tN = 0;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNumber( mean ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a number. Value: `%s`.', mean ) );\n\t\t}\n\t\tmu = mean;\n\t\treturn accumulator2;\n\t}\n\tmu = 0.0;\n\treturn accumulator1;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated unbiased sample variance. If not provided a value, the accumulator function returns the current unbiased sample variance.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} unbiased sample variance or null\n\t*/\n\tfunction accumulator1( x ) {\n\t\tvar k;\n\t\tvar v;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn ( isnan( M2 ) ) ? NaN : 0.0;\n\t\t\t}\n\t\t\tif ( N < W ) {\n\t\t\t\treturn M2 / (N-1);\n\t\t\t}\n\t\t\treturn M2 / n;\n\t\t}\n\t\t// Update the index for managing the circular buffer:\n\t\ti = (i+1) % W;\n\n\t\t// Case: incoming value is NaN, the sliding second moment is automatically NaN...\n\t\tif ( isnan( x ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tM2 = NaN;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tbuf[ i ] = x; // update buffer\n\t\t\tN += 1;\n\t\t\tdelta = x - mu;\n\t\t\tmu += delta / N;\n\t\t\tM2 += delta * (x - mu);\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn 0.0;\n\t\t\t}\n\t\t\treturn M2 / (N-1);\n\t\t}\n\t\t// Case: N = W = 1\n\t\telse if ( N === 1 ) {\n\t\t\tM2 = 0.0;\n\t\t\treturn M2;\n\t\t}\n\t\t// Case: outgoing value is NaN, and, thus, we need to compute the accumulated values...\n\t\telse if ( isnan( buf[ i ] ) ) {\n\t\t\tN = 1;\n\t\t\tmu = x;\n\t\t\tM2 = 0.0;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tv = buf[ k ];\n\t\t\t\t\tif ( isnan( v ) ) {\n\t\t\t\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\t\t\t\tM2 = NaN;\n\t\t\t\t\t\tbreak; // second moment is automatically NaN, so no need to continue\n\t\t\t\t\t}\n\t\t\t\t\tN += 1;\n\t\t\t\t\tdelta = v - mu;\n\t\t\t\t\tmu += delta / N;\n\t\t\t\t\tM2 += delta * (v - mu);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: neither the current second moment nor the incoming value are NaN, so we need to update the accumulated values...\n\t\telse if ( isnan( M2 ) === false ) {\n\t\t\ttmp = buf[ i ];\n\t\t\tdelta = x - tmp;\n\t\t\td1 = tmp - mu;\n\t\t\tmu += delta / W;\n\t\t\td2 = x - mu;\n\t\t\tM2 += delta * (d1 + d2);\n\t\t}\n\t\t// Case: the current second moment is NaN, so nothing to do until the buffer no longer contains NaN values...\n\n\t\tbuf[ i ] = x;\n\t\treturn M2 / n;\n\t}\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated unbiased sample variance. If not provided a value, the accumulator function returns the current unbiased sample variance.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} unbiased sample variance or null\n\t*/\n\tfunction accumulator2( x ) {\n\t\tvar k;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( N < W ) {\n\t\t\t\treturn M2 / N;\n\t\t\t}\n\t\t\treturn M2 / W;\n\t\t}\n\t\t// Update the index for managing the circular buffer:\n\t\ti = (i+1) % W;\n\n\t\t// Case: incoming value is NaN, the sliding second moment is automatically NaN...\n\t\tif ( isnan( x ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tM2 = NaN;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tbuf[ i ] = x; // update buffer\n\t\t\tN += 1;\n\t\t\tdelta = x - mu;\n\t\t\tM2 += delta * delta;\n\t\t\treturn M2 / N;\n\t\t}\n\t\t// Case: outgoing value is NaN, and, thus, we need to compute the accumulated values...\n\t\telse if ( isnan( buf[ i ] ) ) {\n\t\t\tM2 = 0.0;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tif ( isnan( buf[ k ] ) ) {\n\t\t\t\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\t\t\t\tM2 = NaN;\n\t\t\t\t\t\tbreak; // second moment is automatically NaN, so no need to continue\n\t\t\t\t\t}\n\t\t\t\t\tdelta = buf[ k ] - mu;\n\t\t\t\t\tM2 += delta * delta;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: neither the current second moment nor the incoming value are NaN, so we need to update the accumulated values...\n\t\telse if ( isnan( M2 ) === false ) {\n\t\t\ttmp = buf[ i ];\n\t\t\tM2 += ( x-tmp ) * ( x-mu + tmp-mu );\n\t\t}\n\t\t// Case: the current second moment is NaN, so nothing to do until the buffer no longer contains NaN values...\n\n\t\tbuf[ i ] = x;\n\t\treturn M2 / W;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmvariance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a sum incrementally.\n*\n* @module @stdlib/stats/incr/sum\n*\n* @example\n* var incrsum = require( '@stdlib/stats/incr/sum' );\n*\n* var accumulator = incrsum();\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0 );\n* // returns 2.0\n*\n* sum = accumulator( -5.0 );\n* // returns -3.0\n*\n* sum = accumulator();\n* // returns -3.0\n*/\n\n// MODULES //\n\nvar incrsum = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrsum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a sum.\n*\n* ## Method\n*\n* -   This implementation uses a second-order \"iterative Kahan–Babuška algorithm\", as proposed by Klein (2005).\n*\n* ## References\n*\n* -   Klein, Andreas. 2005. \"A Generalized Kahan-Babuška-Summation-Algorithm.\" _Computing_ 76 (3): 279–93. doi:[10.1007/s00607-005-0139-x](https://doi.org/10.1007/s00607-005-0139-x).\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrsum();\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0 );\n* // returns 2.0\n*\n* sum = accumulator( -5.0 );\n* // returns -3.0\n*\n* sum = accumulator();\n* // returns -3.0\n*/\nfunction incrsum() {\n\tvar sum;\n\tvar ccs;\n\tvar FLG;\n\tvar cs;\n\tvar cc;\n\tvar t;\n\tvar c;\n\n\tsum = 0.0;\n\tccs = 0.0; // second order correction term for lost low order bits\n\tcs = 0.0; // first order correction term for lost low order bits\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated sum. If not provided a value, the accumulator function returns the current sum.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} sum or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn ( FLG ) ? sum+cs+ccs : null;\n\t\t}\n\t\tFLG = true;\n\t\tt = sum + x;\n\t\tif ( abs( sum ) >= abs( x ) ) {\n\t\t\tc = (sum-t) + x;\n\t\t} else {\n\t\t\tc = (x-t) + sum;\n\t\t}\n\t\tsum = t;\n\t\tt = cs + c;\n\t\tif ( abs( cs ) >= abs( c ) ) {\n\t\t\tcc = (cs-t) + c;\n\t\t} else {\n\t\t\tcc = (c-t) + cs;\n\t\t}\n\t\tcs = t;\n\t\tccs += cc;\n\t\treturn sum + cs + ccs;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrsum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a sum of absolute values incrementally.\n*\n* @module @stdlib/stats/incr/sumabs\n*\n* @example\n* var incrsumabs = require( '@stdlib/stats/incr/sumabs' );\n*\n* var accumulator = incrsumabs();\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0 );\n* // returns 2.0\n*\n* sum = accumulator( -5.0 );\n* // returns 7.0\n*\n* sum = accumulator();\n* // returns 7.0\n*/\n\n// MODULES //\n\nvar incrsumabs = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrsumabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a sum of absolute values.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrsumabs();\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0 );\n* // returns 2.0\n*\n* sum = accumulator( -5.0 );\n* // returns 7.0\n*\n* sum = accumulator();\n* // returns 7.0\n*/\nfunction incrsumabs() {\n\tvar sum = 0.0;\n\tvar FLG;\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated sum. If not provided a value, the accumulator function returns the current sum.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} sum or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn ( FLG ) ? sum : null;\n\t\t}\n\t\tFLG = true;\n\t\tsum += abs( x );\n\t\treturn sum;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrsumabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a sum of squared absolute values incrementally.\n*\n* @module @stdlib/stats/incr/sumabs2\n*\n* @example\n* var incrsumabs2 = require( '@stdlib/stats/incr/sumabs2' );\n*\n* var accumulator = incrsumabs2();\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0 );\n* // returns 4.0\n*\n* sum = accumulator( -5.0 );\n* // returns 29.0\n*\n* sum = accumulator();\n* // returns 29.0\n*/\n\n// MODULES //\n\nvar incrsumabs2 = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrsumabs2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a sum of squared absolute values.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrsumabs2();\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0 );\n* // returns 4.0\n*\n* sum = accumulator( -5.0 );\n* // returns 29.0\n*\n* sum = accumulator();\n* // returns 29.0\n*/\nfunction incrsumabs2() {\n\tvar sum = 0.0;\n\tvar FLG;\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated sum. If not provided a value, the accumulator function returns the current sum.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} sum or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn ( FLG ) ? sum : null;\n\t\t}\n\t\tFLG = true;\n\t\tsum += x * x;\n\t\treturn sum;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrsumabs2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a product incrementally.\n*\n* @module @stdlib/stats/incr/prod\n*\n* @example\n* var incrprod = require( '@stdlib/stats/incr/prod' );\n*\n* var accumulator = incrprod();\n*\n* var prod = accumulator();\n* // returns null\n*\n* prod = accumulator( 2.0 );\n* // returns 2.0\n*\n* prod = accumulator( -5.0 );\n* // returns -10.0\n*\n* prod = accumulator();\n* // returns -10.0\n*/\n\n// MODULES //\n\nvar incrprod = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrprod;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar frexp = require( '@stdlib/math/base/special/frexp' );\nvar ldexp = require( '@stdlib/math/base/special/ldexp' );\n\n\n// VARIABLES //\n\n// `frexp` workspace:\nvar PARTS = [ 0.0, 0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a product.\n*\n* ## Method\n*\n* To avoid overflow/underflow, we store the fractional and exponent parts of intermediate results separately. By keeping a normalized fraction, we prevent underflow/overflow of the fraction. Underflow of the exponent is impossible, as IEEE 754 floating-point exponents are integer values. Overflow of the exponent is possible, but highly unlikely. In the worst case, an intermediate exponent is greater than the minimum safe integer, and adding the exponent of an incoming value does not change the intermediate result. While incorrect, such behavior does not lead to exponent overflow.\n*\n* While intermediate results are largely immune to overflow and not subject to underflow, this does not mean that returned results will never be zero or infinite. In fact, zero (underflow) and infinite (overflow) results may be transient (i.e., infinity followed by a finite number).\n*\n*\n* ## References\n*\n* -   Ueberhuber, Christoph W. 1997. _Numerical Computation 1: Methods, Software, and Analysis_. Springer-Verlag Berlin Heidelberg. doi:[10.1007/978-3-642-59118-1](https://doi.org/10.1007/978-3-642-59118-1).\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrprod();\n*\n* var prod = accumulator();\n* // returns null\n*\n* prod = accumulator( 2.0 );\n* // returns 2.0\n*\n* prod = accumulator( -5.0 );\n* // returns -10.0\n*\n* prod = accumulator();\n* // returns -10.0\n*/\nfunction incrprod() {\n\tvar frac;\n\tvar prod;\n\tvar exp;\n\n\t// Initial product is 1.0, which may be split into its fractional and exponent parts (0.5 x 2.0**1 = 1.0):\n\tfrac = 0.5;\n\texp = 1.0;\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated product. If not provided a value, the accumulator function returns the current product.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} product or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn ( prod === void 0 ) ? null : prod;\n\t\t}\n\t\t// Split the incoming value into a normalized fraction and exponent:\n\t\tfrexp( PARTS, x );\n\n\t\t// Update the accumulated fraction:\n\t\tfrac *= PARTS[ 0 ];\n\n\t\t// Update the accumulated exponent:\n\t\texp += PARTS[ 1 ];\n\n\t\t// Ensure fraction remains normalized to avoid overflow/underflow...\n\t\tif ( frac > -0.5 && frac < 0.5 ) {\n\t\t\tfrexp( PARTS, frac );\n\t\t\tfrac = PARTS[ 0 ];\n\t\t\texp += PARTS[ 1 ];\n\t\t}\n\t\tprod = ldexp( frac, exp );\n\t\treturn prod;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrprod;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a range incrementally.\n*\n* @module @stdlib/stats/incr/range\n*\n* @example\n* var incrrange = require( '@stdlib/stats/incr/range' );\n*\n* var accumulator = incrrange();\n*\n* var range = accumulator();\n* // returns null\n*\n* range = accumulator( 3.14 );\n* // returns 0.0\n*\n* range = accumulator( -5.0 );\n* // returns 8.14\n*\n* range = accumulator( 10.1 );\n* // returns 15.1\n*\n* range = accumulator();\n* // returns 15.1\n*/\n\n// MODULES //\n\nvar incrrange = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrrange;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a range.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrrange();\n*\n* var range = accumulator();\n* // returns null\n*\n* range = accumulator( 3.14 );\n* // returns 0.0\n*\n* range = accumulator( -5.0 );\n* // returns 8.14\n*\n* range = accumulator( 10.1 );\n* // returns 15.1\n*\n* range = accumulator();\n* // returns 15.1\n*/\nfunction incrrange() {\n\tvar range;\n\tvar max = NINF;\n\tvar min = PINF;\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated range. If not provided a value, the accumulator function returns the current range.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} range or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn ( range === void 0 ) ? null : range;\n\t\t}\n\t\tif ( isnan( x ) ) {\n\t\t\tmin = x;\n\t\t\tmax = x;\n\t\t}\n\t\tif ( x > max ) {\n\t\t\tmax = x;\n\t\t}\n\t\tif ( x < min ) {\n\t\t\tmin = x;\n\t\t}\n\t\trange = max - min;\n\t\treturn range;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrrange;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a corrected sample skewness incrementally.\n*\n* @module @stdlib/stats/incr/skewness\n*\n* @example\n* var incrskewness = require( '@stdlib/stats/incr/skewness' );\n*\n* var accumulator = incrskewness();\n*\n* var skewness = accumulator();\n* // returns null\n*\n* skewness = accumulator( 2.0 );\n* // returns null\n*\n* skewness = accumulator( -5.0 );\n* // returns null\n*\n* skewness = accumulator( -10.0 );\n* // returns ~0.492\n*\n* skewness = accumulator();\n* // returns ~0.492\n*/\n\n// MODULES //\n\nvar incrskewness = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrskewness;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a corrected sample skewness.\n*\n* ## Method\n*\n* The algorithm computes the corrected sample skewness using the formula for `G_1` in [Joanes and Gill 1998][@joanes:1998].\n*\n* ## References\n*\n* -   Joanes, D. N., and C. A. Gill. 1998. \"Comparing measures of sample skewness and kurtosis.\" _Journal of the Royal Statistical Society: Series D (The Statistician)_ 47 (1). Blackwell Publishers Ltd: 183–89. doi:[10.1111/1467-9884.00122][@joanes:1998].\n*\n* [@joanes:1998]: http://dx.doi.org/10.1111/1467-9884.00122\n*\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrskewness();\n*\n* var skewness = accumulator();\n* // returns null\n*\n* skewness = accumulator( 2.0 );\n* // returns null\n*\n* skewness = accumulator( -5.0 );\n* // returns null\n*\n* skewness = accumulator( -10.0 );\n* // returns ~0.492\n*\n* skewness = accumulator();\n* // returns ~0.492\n*/\nfunction incrskewness() {\n\tvar deltaN;\n\tvar delta;\n\tvar term1;\n\tvar mean;\n\tvar tmp;\n\tvar g1;\n\tvar M2;\n\tvar M3;\n\tvar N;\n\n\tdeltaN = 0.0;\n\tdelta = 0.0;\n\tterm1 = 0.0;\n\tmean = 0.0;\n\tM2 = 0.0;\n\tM3 = 0.0;\n\tN = 0;\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated corrected sample skewness. If not provided a value, the accumulator function returns the current corrected sample skewness.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} corrected sample skewness or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N < 3 ) {\n\t\t\t\treturn ( isnan( M3 ) ) ? NaN : null;\n\t\t\t}\n\t\t\t// Calculate the population skewness:\n\t\t\tg1 = sqrt( N )*M3 / pow( M2, 1.5 );\n\n\t\t\t// Return the corrected sample skewness:\n\t\t\treturn sqrt( N*(N-1) )*g1 / (N-2);\n\t\t}\n\t\tN += 1;\n\t\tdelta = x - mean;\n\t\tdeltaN = delta / N;\n\t\tterm1 = delta * deltaN * (N-1);\n\n\t\ttmp = term1 * deltaN * (N-2);\n\t\ttmp -= 3.0 * deltaN * M2;\n\t\tM3 += tmp;\n\n\t\tM2 += term1;\n\t\tmean += deltaN;\n\t\tif ( N < 3 ) {\n\t\t\treturn ( isnan( M3 ) ) ? NaN : null;\n\t\t}\n\t\t// Calculate the population skewness:\n\t\tg1 = sqrt( N )*M3 / pow( M2, 1.5 );\n\n\t\t// Return the corrected sample skewness:\n\t\treturn sqrt( N*(N-1) )*g1 / (N-2);\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrskewness;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an unbiased sample variance incrementally.\n*\n* @module @stdlib/stats/incr/variance\n*\n* @example\n* var incrvariance = require( '@stdlib/stats/incr/variance' );\n*\n* var accumulator = incrvariance();\n*\n* var s2 = accumulator();\n* // returns null\n*\n* s2 = accumulator( 2.0 );\n* // returns 0.0\n*\n* s2 = accumulator( -5.0 );\n* // returns 24.5\n*\n* s2 = accumulator();\n* // returns 24.5\n*/\n\n// MODULES //\n\nvar incrvariance = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrvariance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes an unbiased sample variance.\n*\n* ## Method\n*\n* -   This implementation uses Welford's algorithm for efficient computation, which can be derived as follows. Let\n*\n*     ```tex\n*     \\begin{align*}\n*     S_n &= n \\sigma_n^2 \\\\\n*         &= \\sum_{i=1}^{n} (x_i - \\mu_n)^2 \\\\\n*         &= \\biggl(\\sum_{i=1}^{n} x_i^2 \\biggr) - n\\mu_n^2\n*     \\end{align*}\n*     ```\n*\n*     Accordingly,\n*\n*     ```tex\n*     \\begin{align*}\n*     S_n - S_{n-1} &= \\sum_{i=1}^{n} x_i^2 - n\\mu_n^2 - \\sum_{i=1}^{n-1} x_i^2 + (n-1)\\mu_{n-1}^2 \\\\\n*                   &= x_n^2 - n\\mu_n^2 + (n-1)\\mu_{n-1}^2 \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + n(\\mu_{n-1}^2 - \\mu_n^2) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + n(\\mu_{n-1} - \\mu_n)(\\mu_{n-1} + \\mu_n) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + (\\mu_{n-1} - x_n)(\\mu_{n-1} + \\mu_n) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + \\mu_{n-1}^2 - x_n\\mu_n - x_n\\mu_{n-1} + \\mu_n\\mu_{n-1} \\\\\n*                   &= x_n^2 - x_n\\mu_n - x_n\\mu_{n-1} + \\mu_n\\mu_{n-1} \\\\\n*                   &= (x_n - \\mu_{n-1})(x_n - \\mu_n) \\\\\n*                   &= S_{n-1} + (x_n - \\mu_{n-1})(x_n - \\mu_n)\n*     \\end{align*}\n*     ```\n*\n*     where we use the identity\n*\n*     ```tex\n*     x_n - \\mu_{n-1} = n (\\mu_n - \\mu_{n-1})\n*     ```\n*\n* ## References\n*\n* -   Welford, B. P. 1962. \"Note on a Method for Calculating Corrected Sums of Squares and Products.\" _Technometrics_ 4 (3). Taylor & Francis: 419–20. doi:[10.1080/00401706.1962.10490022](https://doi.org/10.1080/00401706.1962.10490022).\n* -   van Reeken, A. J. 1968. \"Letters to the Editor: Dealing with Neely's Algorithms.\" _Communications of the ACM_ 11 (3): 149–50. doi:[10.1145/362929.362961](https://doi.org/10.1145/362929.362961).\n*\n* @param {number} [mean] - mean value\n* @throws {TypeError} must provide a number primitive\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrvariance();\n*\n* var s2 = accumulator();\n* // returns null\n*\n* s2 = accumulator( 2.0 );\n* // returns 0.0\n*\n* s2 = accumulator( -5.0 );\n* // returns 24.5\n*\n* s2 = accumulator();\n* // returns 24.5\n*\n* @example\n* var accumulator = incrvariance( 3.14 );\n*/\nfunction incrvariance( mean ) {\n\tvar delta;\n\tvar mu;\n\tvar M2;\n\tvar N;\n\n\tM2 = 0.0;\n\tN = 0;\n\tif ( arguments.length ) {\n\t\tif ( !isNumber( mean ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a number. Value: `%s`.', mean ) );\n\t\t}\n\t\tmu = mean;\n\t\treturn accumulator2;\n\t}\n\tmu = 0.0;\n\treturn accumulator1;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated unbiased sample variance. If not provided a value, the accumulator function returns the current unbiased sample variance.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} unbiased sample variance or null\n\t*/\n\tfunction accumulator1( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn ( isnan( M2 ) ) ? NaN : 0.0;\n\t\t\t}\n\t\t\treturn M2 / (N-1);\n\t\t}\n\t\tN += 1;\n\t\tdelta = x - mu;\n\t\tmu += delta / N;\n\t\tM2 += delta * ( x - mu );\n\t\tif ( N < 2 ) {\n\t\t\treturn ( isnan( M2 ) ) ? NaN : 0.0;\n\t\t}\n\t\treturn M2 / (N-1);\n\t}\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated unbiased sample variance. If not provided a value, the accumulator function returns the current unbiased sample variance.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} unbiased sample variance or null\n\t*/\n\tfunction accumulator2( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn M2 / N;\n\t\t}\n\t\tN += 1;\n\t\tdelta = x - mu;\n\t\tM2 += delta * delta;\n\t\treturn M2 / N;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrvariance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name incrapcorr\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/apcorr}\n*/\nsetReadOnly( ns, 'incrapcorr', require( './../../incr/apcorr' ) );\n\n/**\n* @name incrcount\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/count}\n*/\nsetReadOnly( ns, 'incrcount', require( './../../incr/count' ) );\n\n/**\n* @name incrcovariance\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/covariance}\n*/\nsetReadOnly( ns, 'incrcovariance', require( './../../incr/covariance' ) );\n\n/**\n* @name incrcovmat\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/covmat}\n*/\nsetReadOnly( ns, 'incrcovmat', require( './../../incr/covmat' ) );\n\n/**\n* @name incrcv\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/cv}\n*/\nsetReadOnly( ns, 'incrcv', require( './../../incr/cv' ) );\n\n/**\n* @name increwmean\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/ewmean}\n*/\nsetReadOnly( ns, 'increwmean', require( './../../incr/ewmean' ) );\n\n/**\n* @name increwstdev\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/ewstdev}\n*/\nsetReadOnly( ns, 'increwstdev', require( './../../incr/ewstdev' ) );\n\n/**\n* @name increwvariance\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/ewvariance}\n*/\nsetReadOnly( ns, 'increwvariance', require( './../../incr/ewvariance' ) );\n\n/**\n* @name incrgmean\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/gmean}\n*/\nsetReadOnly( ns, 'incrgmean', require( './../../incr/gmean' ) );\n\n/**\n* @name incrgrubbs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/grubbs}\n*/\nsetReadOnly( ns, 'incrgrubbs', require( './../../incr/grubbs' ) );\n\n/**\n* @name incrhmean\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/hmean}\n*/\nsetReadOnly( ns, 'incrhmean', require( './../../incr/hmean' ) );\n\n/**\n* @name incrkurtosis\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/kurtosis}\n*/\nsetReadOnly( ns, 'incrkurtosis', require( './../../incr/kurtosis' ) );\n\n/**\n* @name incrmaape\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/maape}\n*/\nsetReadOnly( ns, 'incrmaape', require( './../../incr/maape' ) );\n\n/**\n* @name incrmae\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mae}\n*/\nsetReadOnly( ns, 'incrmae', require( './../../incr/mae' ) );\n\n/**\n* @name incrmapcorr\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mapcorr}\n*/\nsetReadOnly( ns, 'incrmapcorr', require( './../../incr/mapcorr' ) );\n\n/**\n* @name incrmape\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mape}\n*/\nsetReadOnly( ns, 'incrmape', require( './../../incr/mape' ) );\n\n/**\n* @name incrmax\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/max}\n*/\nsetReadOnly( ns, 'incrmax', require( './../../incr/max' ) );\n\n/**\n* @name incrmaxabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/maxabs}\n*/\nsetReadOnly( ns, 'incrmaxabs', require( './../../incr/maxabs' ) );\n\n/**\n* @name incrmcovariance\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mcovariance}\n*/\nsetReadOnly( ns, 'incrmcovariance', require( './../../incr/mcovariance' ) );\n\n/**\n* @name incrmcv\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mcv}\n*/\nsetReadOnly( ns, 'incrmcv', require( './../../incr/mcv' ) );\n\n/**\n* @name incrmda\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mda}\n*/\nsetReadOnly( ns, 'incrmda', require( './../../incr/mda' ) );\n\n/**\n* @name incrme\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/me}\n*/\nsetReadOnly( ns, 'incrme', require( './../../incr/me' ) );\n\n/**\n* @name incrmean\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mean}\n*/\nsetReadOnly( ns, 'incrmean', require( './../../incr/mean' ) );\n\n/**\n* @name incrmeanabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/meanabs}\n*/\nsetReadOnly( ns, 'incrmeanabs', require( './../../incr/meanabs' ) );\n\n/**\n* @name incrmeanabs2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/meanabs2}\n*/\nsetReadOnly( ns, 'incrmeanabs2', require( './../../incr/meanabs2' ) );\n\n/**\n* @name incrmeanstdev\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/meanstdev}\n*/\nsetReadOnly( ns, 'incrmeanstdev', require( './../../incr/meanstdev' ) );\n\n/**\n* @name incrmeanvar\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/meanvar}\n*/\nsetReadOnly( ns, 'incrmeanvar', require( './../../incr/meanvar' ) );\n\n/**\n* @name incrmgmean\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mgmean}\n*/\nsetReadOnly( ns, 'incrmgmean', require( './../../incr/mgmean' ) );\n\n/**\n* @name incrmgrubbs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mgrubbs}\n*/\nsetReadOnly( ns, 'incrmgrubbs', require( './../../incr/mgrubbs' ) );\n\n/**\n* @name incrmhmean\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mhmean}\n*/\nsetReadOnly( ns, 'incrmhmean', require( './../../incr/mhmean' ) );\n\n/**\n* @name incrmidrange\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/midrange}\n*/\nsetReadOnly( ns, 'incrmidrange', require( './../../incr/midrange' ) );\n\n/**\n* @name incrmin\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/min}\n*/\nsetReadOnly( ns, 'incrmin', require( './../../incr/min' ) );\n\n/**\n* @name incrminabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/minabs}\n*/\nsetReadOnly( ns, 'incrminabs', require( './../../incr/minabs' ) );\n\n/**\n* @name incrminmax\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/minmax}\n*/\nsetReadOnly( ns, 'incrminmax', require( './../../incr/minmax' ) );\n\n/**\n* @name incrminmaxabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/minmaxabs}\n*/\nsetReadOnly( ns, 'incrminmaxabs', require( './../../incr/minmaxabs' ) );\n\n/**\n* @name incrmmaape\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mmaape}\n*/\nsetReadOnly( ns, 'incrmmaape', require( './../../incr/mmaape' ) );\n\n/**\n* @name incrmmae\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mmae}\n*/\nsetReadOnly( ns, 'incrmmae', require( './../../incr/mmae' ) );\n\n/**\n* @name incrmmape\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mmape}\n*/\nsetReadOnly( ns, 'incrmmape', require( './../../incr/mmape' ) );\n\n/**\n* @name incrmmax\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mmax}\n*/\nsetReadOnly( ns, 'incrmmax', require( './../../incr/mmax' ) );\n\n/**\n* @name incrmmaxabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mmaxabs}\n*/\nsetReadOnly( ns, 'incrmmaxabs', require( './../../incr/mmaxabs' ) );\n\n/**\n* @name incrmmda\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mmda}\n*/\nsetReadOnly( ns, 'incrmmda', require( './../../incr/mmda' ) );\n\n/**\n* @name incrmme\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mme}\n*/\nsetReadOnly( ns, 'incrmme', require( './../../incr/mme' ) );\n\n/**\n* @name incrmmean\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mmean}\n*/\nsetReadOnly( ns, 'incrmmean', require( './../../incr/mmean' ) );\n\n/**\n* @name incrmmeanabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mmeanabs}\n*/\nsetReadOnly( ns, 'incrmmeanabs', require( './../../incr/mmeanabs' ) );\n\n/**\n* @name incrmmeanabs2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mmeanabs2}\n*/\nsetReadOnly( ns, 'incrmmeanabs2', require( './../../incr/mmeanabs2' ) );\n\n/**\n* @name incrmmeanstdev\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mmeanstdev}\n*/\nsetReadOnly( ns, 'incrmmeanstdev', require( './../../incr/mmeanstdev' ) );\n\n/**\n* @name incrmmeanvar\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mmeanvar}\n*/\nsetReadOnly( ns, 'incrmmeanvar', require( './../../incr/mmeanvar' ) );\n\n/**\n* @name incrmmidrange\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mmidrange}\n*/\nsetReadOnly( ns, 'incrmmidrange', require( './../../incr/mmidrange' ) );\n\n/**\n* @name incrmmin\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mmin}\n*/\nsetReadOnly( ns, 'incrmmin', require( './../../incr/mmin' ) );\n\n/**\n* @name incrmminabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mminabs}\n*/\nsetReadOnly( ns, 'incrmminabs', require( './../../incr/mminabs' ) );\n\n/**\n* @name incrmminmax\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mminmax}\n*/\nsetReadOnly( ns, 'incrmminmax', require( './../../incr/mminmax' ) );\n\n/**\n* @name incrmminmaxabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mminmaxabs}\n*/\nsetReadOnly( ns, 'incrmminmaxabs', require( './../../incr/mminmaxabs' ) );\n\n/**\n* @name incrmmpe\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mmpe}\n*/\nsetReadOnly( ns, 'incrmmpe', require( './../../incr/mmpe' ) );\n\n/**\n* @name incrmmse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mmse}\n*/\nsetReadOnly( ns, 'incrmmse', require( './../../incr/mmse' ) );\n\n/**\n* @name incrmpcorr\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mpcorr}\n*/\nsetReadOnly( ns, 'incrmpcorr', require( './../../incr/mpcorr' ) );\n\n/**\n* @name incrmpcorr2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mpcorr2}\n*/\nsetReadOnly( ns, 'incrmpcorr2', require( './../../incr/mpcorr2' ) );\n\n/**\n* @name incrmpcorrdist\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mpcorrdist}\n*/\nsetReadOnly( ns, 'incrmpcorrdist', require( './../../incr/mpcorrdist' ) );\n\n/**\n* @name incrmpe\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mpe}\n*/\nsetReadOnly( ns, 'incrmpe', require( './../../incr/mpe' ) );\n\n/**\n* @name incrmprod\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mprod}\n*/\nsetReadOnly( ns, 'incrmprod', require( './../../incr/mprod' ) );\n\n/**\n* @name incrmrange\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mrange}\n*/\nsetReadOnly( ns, 'incrmrange', require( './../../incr/mrange' ) );\n\n/**\n* @name incrmrmse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mrmse}\n*/\nsetReadOnly( ns, 'incrmrmse', require( './../../incr/mrmse' ) );\n\n/**\n* @name incrmrss\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mrss}\n*/\nsetReadOnly( ns, 'incrmrss', require( './../../incr/mrss' ) );\n\n/**\n* @name incrmse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mse}\n*/\nsetReadOnly( ns, 'incrmse', require( './../../incr/mse' ) );\n\n/**\n* @name incrmstdev\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mstdev}\n*/\nsetReadOnly( ns, 'incrmstdev', require( './../../incr/mstdev' ) );\n\n/**\n* @name incrmsum\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/msum}\n*/\nsetReadOnly( ns, 'incrmsum', require( './../../incr/msum' ) );\n\n/**\n* @name incrmsumabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/msumabs}\n*/\nsetReadOnly( ns, 'incrmsumabs', require( './../../incr/msumabs' ) );\n\n/**\n* @name incrmsumabs2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/msumabs2}\n*/\nsetReadOnly( ns, 'incrmsumabs2', require( './../../incr/msumabs2' ) );\n\n/**\n* @name incrmsummary\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/msummary}\n*/\nsetReadOnly( ns, 'incrmsummary', require( './../../incr/msummary' ) );\n\n/**\n* @name incrmsumprod\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/msumprod}\n*/\nsetReadOnly( ns, 'incrmsumprod', require( './../../incr/msumprod' ) );\n\n/**\n* @name incrmvariance\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mvariance}\n*/\nsetReadOnly( ns, 'incrmvariance', require( './../../incr/mvariance' ) );\n\n/**\n* @name incrmvmr\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/mvmr}\n*/\nsetReadOnly( ns, 'incrmvmr', require( './../../incr/mvmr' ) );\n\n/**\n* @name incrnancount\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/nancount}\n*/\nsetReadOnly( ns, 'incrnancount', require( './../../incr/nancount' ) );\n\n/**\n* @name incrnansum\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/nansum}\n*/\nsetReadOnly( ns, 'incrnansum', require( './../../incr/nansum' ) );\n\n/**\n* @name incrnansumabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/nansumabs}\n*/\nsetReadOnly( ns, 'incrnansumabs', require( './../../incr/nansumabs' ) );\n\n/**\n* @name incrnansumabs2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/nansumabs2}\n*/\nsetReadOnly( ns, 'incrnansumabs2', require( './../../incr/nansumabs2' ) );\n\n/**\n* @name incrpcorr\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/pcorr}\n*/\nsetReadOnly( ns, 'incrpcorr', require( './../../incr/pcorr' ) );\n\n/**\n* @name incrpcorr2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/pcorr2}\n*/\nsetReadOnly( ns, 'incrpcorr2', require( './../../incr/pcorr2' ) );\n\n/**\n* @name incrpcorrdist\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/pcorrdist}\n*/\nsetReadOnly( ns, 'incrpcorrdist', require( './../../incr/pcorrdist' ) );\n\n/**\n* @name incrpcorrdistmat\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/pcorrdistmat}\n*/\nsetReadOnly( ns, 'incrpcorrdistmat', require( './../../incr/pcorrdistmat' ) );\n\n/**\n* @name incrpcorrmat\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/pcorrmat}\n*/\nsetReadOnly( ns, 'incrpcorrmat', require( './../../incr/pcorrmat' ) );\n\n/**\n* @name incrprod\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/prod}\n*/\nsetReadOnly( ns, 'incrprod', require( './../../incr/prod' ) );\n\n/**\n* @name incrrange\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/range}\n*/\nsetReadOnly( ns, 'incrrange', require( './../../incr/range' ) );\n\n/**\n* @name incrrmse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/rmse}\n*/\nsetReadOnly( ns, 'incrrmse', require( './../../incr/rmse' ) );\n\n/**\n* @name incrrss\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/rss}\n*/\nsetReadOnly( ns, 'incrrss', require( './../../incr/rss' ) );\n\n/**\n* @name incrskewness\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/skewness}\n*/\nsetReadOnly( ns, 'incrskewness', require( './../../incr/skewness' ) );\n\n/**\n* @name incrstdev\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/stdev}\n*/\nsetReadOnly( ns, 'incrstdev', require( './../../incr/stdev' ) );\n\n/**\n* @name incrsum\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/sum}\n*/\nsetReadOnly( ns, 'incrsum', require( './../../incr/sum' ) );\n\n/**\n* @name incrsumabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/sumabs}\n*/\nsetReadOnly( ns, 'incrsumabs', require( './../../incr/sumabs' ) );\n\n/**\n* @name incrsumabs2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/sumabs2}\n*/\nsetReadOnly( ns, 'incrsumabs2', require( './../../incr/sumabs2' ) );\n\n/**\n* @name incrsummary\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/summary}\n*/\nsetReadOnly( ns, 'incrsummary', require( './../../incr/summary' ) );\n\n/**\n* @name incrsumprod\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/sumprod}\n*/\nsetReadOnly( ns, 'incrsumprod', require( './../../incr/sumprod' ) );\n\n/**\n* @name incrvariance\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/variance}\n*/\nsetReadOnly( ns, 'incrvariance', require( './../../incr/variance' ) );\n\n/**\n* @name incrvmr\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/vmr}\n*/\nsetReadOnly( ns, 'incrvmr', require( './../../incr/vmr' ) );\n\n/**\n* @name incrwmean\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/incr/wmean}\n*/\nsetReadOnly( ns, 'incrwmean', require( './../../incr/wmean' ) );\n\n\n// EXPORTS //\n\nmodule.exports = ns;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a sample absolute Pearson product-moment correlation coefficient incrementally.\n*\n* @module @stdlib/stats/incr/apcorr\n*\n* @example\n* var incrapcorr = require( '@stdlib/stats/incr/apcorr' );\n*\n* var accumulator = incrapcorr();\n*\n* var ar = accumulator();\n* // returns null\n*\n* ar = accumulator( 2.0, 1.0 );\n* // returns 0.0\n*\n* ar = accumulator( -5.0, 3.14 );\n* // returns ~1.0\n*\n* ar = accumulator();\n* // returns ~1.0\n*/\n\n// MODULES //\n\nvar incrapcorr = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrapcorr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar incrpcorr = require( './../../../incr/pcorr' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a sample absolute Pearson product-moment correlation coefficient.\n*\n* @param {number} [meanx] - mean value\n* @param {number} [meany] - mean value\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrapcorr();\n*\n* var ar = accumulator();\n* // returns null\n*\n* ar = accumulator( 2.0, 1.0 );\n* // returns 0.0\n*\n* ar = accumulator( -5.0, 3.14 );\n* // returns ~1.0\n*\n* ar = accumulator();\n* // returns ~1.0\n*\n* @example\n* var accumulator = incrapcorr( 2.0, -3.0 );\n*/\nfunction incrapcorr( meanx, meany ) {\n\tvar acc;\n\tvar N;\n\tif ( arguments.length ) {\n\t\tif ( !isNumber( meanx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', meanx ) );\n\t\t}\n\t\tif ( !isNumber( meany ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', meany ) );\n\t\t}\n\t\tacc = incrpcorr( meanx, meany );\n\t} else {\n\t\tacc = incrpcorr();\n\t}\n\tN = 0;\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated sample correlation coefficient. If not provided input values, the accumulator function returns the current sample correlation coefficient.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @param {number} [y] - new value\n\t* @returns {(number|null)} sample absolute correlation coefficient or null\n\t*/\n\tfunction accumulator( x, y ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn abs( acc() );\n\t\t}\n\t\tN += 1;\n\t\treturn abs( acc( x, y ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrapcorr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an unbiased sample covariance incrementally.\n*\n* @module @stdlib/stats/incr/covariance\n*\n* @example\n* var incrcovariance = require( '@stdlib/stats/incr/covariance' );\n*\n* var accumulator = incrcovariance();\n*\n* var v = accumulator();\n* // returns null\n*\n* v = accumulator( 2.0, 1.0 );\n* // returns 0.0\n*\n* v = accumulator( -5.0, 3.14 );\n* // returns ~-7.49\n*\n* v = accumulator();\n* // returns ~-7.49\n*/\n\n// MODULES //\n\nvar incrcovariance = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrcovariance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes an unbiased sample covariance.\n*\n* ## Method\n*\n* -   We begin by defining the co-moment \\\\(C_n\\\\)\n*\n*     ```tex\n*     C_n = \\sum_{i=1}^{N} ( x_i - \\bar{x}_n ) ( y_i - \\bar{y}_n )\n*     ```\n*\n*     where \\\\(\\bar{x}_n\\\\) and \\\\(\\bar{y}_n\\\\) are the sample means for \\\\(x\\\\) and \\\\(y\\\\), respectively.\n*\n* -   Based on Welford's method, we know the update formulas for the sample means are given by\n*\n*     ```tex\n*     \\bar{x}_n = \\bar{x}_{n-1} + \\frac{x_n - \\bar{x}_{n-1}}{n}\n*     ```\n*\n*     and\n*\n*     ```tex\n*     \\bar{y}_n = \\bar{y}_{n-1} + \\frac{y_n - \\bar{y}_{n-1}}{n}\n*     ```\n*\n* -   Substituting into the equation for \\\\(C_n\\\\) and rearranging terms\n*\n*     ```tex\n*     C_n = C_{n-1} + (x_n - \\bar{x}_n) (y_n - \\bar{y}_{n-1})\n*     ```\n*\n*     where the apparent asymmetry arises from\n*\n*     ```tex\n*     x_n - \\bar{x}_n = \\frac{n-1}{n} (x_n - \\bar{x}_{n-1})\n*     ```\n*\n*     and, hence, the update term can be equivalently expressed\n*\n*     ```tex\n*     \\frac{n-1}{n} (x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})\n*     ```\n*\n* -   The covariance can be defined\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{cov}_n(x,y) &= \\frac{C_n}{n} \\\\\n*     &= \\frac{C_{n-1} + (x_n - \\bar{x}_n) (y_n - \\bar{y}_{n-1})}{n} \\\\\n*     &= \\frac{(n-1)\\operatorname{cov}_{n-1}(x,y) + (x_n - \\bar{x}_n) (y_n - \\bar{y}_{n-1})}{n}\n*     \\end{align*}\n*     ```\n*\n* -   Applying Bessel's correction, we arrive at an update formula for calculating an unbiased sample covariance\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{cov}_n(x,y) &= \\frac{n}{n-1}\\cdot\\frac{(n-1)\\operatorname{cov}_{n-1}(x,y) + (x_n - \\bar{x}_n) (y_n - \\bar{y}_{n-1})}{n} \\\\\n*     &= \\operatorname{cov}_{n-1}(x,y) + \\frac{(x_n - \\bar{x}_n) (y_n - \\bar{y}_{n-1})}{n-1} \\\\\n*     &= \\frac{C_{n-1} + (x_n - \\bar{x}_n) (y_n - \\bar{y}_{n-1})}{n-1}\n*     &= \\frac{C_{n-1} + (x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_n)}{n-1}\n*     \\end{align*}\n*     ```\n*\n* @param {number} [meanx] - mean value\n* @param {number} [meany] - mean value\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrcovariance();\n*\n* var v = accumulator();\n* // returns null\n*\n* v = accumulator( 2.0, 1.0 );\n* // returns 0.0\n*\n* v = accumulator( -5.0, 3.14 );\n* // returns ~-7.49\n*\n* v = accumulator();\n* // returns ~-7.49\n*\n* @example\n* var accumulator = incrcovariance( 2.0, -3.0 );\n*/\nfunction incrcovariance( meanx, meany ) {\n\tvar dx;\n\tvar mx;\n\tvar my;\n\tvar C;\n\tvar N;\n\n\tC = 0.0;\n\tN = 0;\n\tif ( arguments.length ) {\n\t\tif ( !isNumber( meanx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', meanx ) );\n\t\t}\n\t\tif ( !isNumber( meany ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', meany ) );\n\t\t}\n\t\tmx = meanx;\n\t\tmy = meany;\n\t\treturn accumulator2;\n\t}\n\tmx = 0.0;\n\tmy = 0.0;\n\treturn accumulator1;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated unbiased sample covariance. If not provided input values, the accumulator function returns the current unbiased sample covariance.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @param {number} [y] - new value\n\t* @returns {(number|null)} unbiased sample covariance or null\n\t*/\n\tfunction accumulator1( x, y ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn ( isnan( C ) ) ? NaN : 0.0;\n\t\t\t}\n\t\t\treturn C / (N-1);\n\t\t}\n\t\tN += 1;\n\t\tdx = x - mx;\n\t\tmx += dx / N;\n\t\tmy += ( y-my ) / N;\n\t\tC += dx * ( y-my ); // Note: repeated `y-my` is intentional, as `my` is updated when used here\n\t\tif ( N < 2 ) {\n\t\t\treturn ( isnan( C ) ) ? NaN : 0.0;\n\t\t}\n\t\treturn C / (N-1);\n\t}\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated unbiased sample covariance. If not provided input values, the accumulator function returns the current unbiased sample covariance.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @param {number} [y] - new value\n\t* @returns {(number|null)} unbiased sample covariance or null\n\t*/\n\tfunction accumulator2( x, y ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn C / N;\n\t\t}\n\t\tN += 1;\n\t\tC += ( x-mx ) * ( y-my );\n\t\treturn C / N;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrcovariance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an unbiased sample covariance matrix incrementally.\n*\n* @module @stdlib/stats/incr/covmat\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var incrcovmat = require( '@stdlib/stats/incr/covmat' );\n*\n* // Create an output covariance matrix:\n* var buffer = new Float64Array( 4 );\n* var shape = [ 2, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n* var order = 'row-major';\n*\n* var cov = ndarray( 'float64', buffer, shape, strides, offset, order );\n*\n* // Create a covariance matrix accumulator:\n* var accumulator = incrcovmat( cov );\n*\n* var out = accumulator();\n* // returns null\n*\n* // Create a data vector:\n* buffer = new Float64Array( 2 );\n* shape = [ 2 ];\n* strides = [ 1 ];\n*\n* var vec = ndarray( 'float64', buffer, shape, strides, offset, order );\n*\n* // Provide data to the accumulator:\n* vec.set( 0, 2.0 );\n* vec.set( 1, 1.0 );\n*\n* out = accumulator( vec );\n* // returns <ndarray>\n*\n* var bool = ( out === cov );\n* // returns true\n*\n* vec.set( 0, -5.0 );\n* vec.set( 1, 3.14 );\n*\n* out = accumulator( vec );\n* // returns <ndarray>\n*\n* // Retrieve the covariance matrix:\n* out = accumulator();\n* // returns <ndarray>\n*/\n\n// MODULES //\n\nvar incrcovmat = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrcovmat;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isSquareMatrix = require( '@stdlib/assert/is-square-matrix' );\nvar isVectorLike = require( '@stdlib/assert/is-vector-like' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar ctor = require( '@stdlib/ndarray/ctor' );\nvar bctor = require( '@stdlib/ndarray/base/ctor' );\nvar numel = require( '@stdlib/ndarray/base/numel' );\nvar format = require( '@stdlib/string/format' );\n\n\n// FUNCTIONS //\n\n/**\n* Returns a matrix.\n*\n* @private\n* @param {PositiveInteger} n - matrix order\n* @param {boolean} bool - boolean indicating whether to create a low-level ndarray\n* @returns {ndarray} matrix\n*/\nfunction createMatrix( n, bool ) {\n\tvar strides;\n\tvar buffer;\n\tvar shape;\n\tvar f;\n\n\tif ( bool ) {\n\t\tf = bctor;\n\t} else {\n\t\tf = ctor;\n\t}\n\tbuffer = new Float64Array( n*n );\n\tshape = [ n, n ];\n\tstrides = [ n, 1 ];\n\treturn f( 'float64', buffer, shape, strides, 0, 'row-major' );\n}\n\n/**\n* Returns a vector.\n*\n* @private\n* @param {PositiveInteger} N - number of elements\n* @returns {ndarray} vector\n*/\nfunction createVector( N ) {\n\tvar strides;\n\tvar buffer;\n\tvar shape;\n\n\tbuffer = new Float64Array( N );\n\tshape = [ N ];\n\tstrides = [ 1 ];\n\n\treturn bctor( 'float64', buffer, shape, strides, 0, 'row-major' );\n}\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes an unbiased sample covariance matrix.\n*\n* ## Method\n*\n* -   For each unbiased sample covariance, we begin by defining the co-moment \\\\(C_{jn}\\\\)\n*\n*     ```tex\n*     C_n = \\sum_{i=1}^{n} ( x_i - \\bar{x}_n ) ( y_i - \\bar{y}_n )\n*     ```\n*\n*     where \\\\(\\bar{x}_n\\\\) and \\\\(\\bar{y}_n\\\\) are the sample means for \\\\(x\\\\) and \\\\(y\\\\), respectively.\n*\n* -   Based on Welford's method, we know the update formulas for the sample means are given by\n*\n*     ```tex\n*     \\bar{x}_n = \\bar{x}_{n-1} + \\frac{x_n - \\bar{x}_{n-1}}{n}\n*     ```\n*\n*     and\n*\n*     ```tex\n*     \\bar{y}_n = \\bar{y}_{n-1} + \\frac{y_n - \\bar{y}_{n-1}}{n}\n*     ```\n*\n* -   Substituting into the equation for \\\\(C_n\\\\) and rearranging terms\n*\n*     ```tex\n*     C_n = C_{n-1} + (x_n - \\bar{x}_n) (y_n - \\bar{y}_{n-1})\n*     ```\n*\n*     where the apparent asymmetry arises from\n*\n*     ```tex\n*     x_n - \\bar{x}_n = \\frac{n-1}{n} (x_n - \\bar{x}_{n-1})\n*     ```\n*\n*     and, hence, the update term can be equivalently expressed\n*\n*     ```tex\n*     \\frac{n-1}{n} (x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})\n*     ```\n*\n* -   The covariance can be defined\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{cov}_n(x,y) &= \\frac{C_n}{n} \\\\\n*     &= \\frac{C_{n-1} + \\frac{n-1}{n} (x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})}{n} \\\\\n*     &= \\frac{(n-1)\\operatorname{cov}_{n-1}(x,y) + \\frac{n-1}{n} (x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})}{n}\n*     \\end{align*}\n*     ```\n*\n* -   Applying Bessel's correction, we arrive at an update formula for calculating an unbiased sample covariance\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{cov}_n(x,y) &= \\frac{n}{n-1}\\cdot\\frac{(n-1)\\operatorname{cov}_{n-1}(x,y) + \\frac{n-1}{n} (x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})}{n} \\\\\n*     &= \\operatorname{cov}_{n-1}(x,y) + \\frac{(x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})}{n} \\\\\n*     &= \\frac{C_{n-1}}{n-1} + \\frac{(x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})}{n}\n*     &= \\frac{C_{n-1} + \\frac{n-1}{n} (x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})}{n-1}\n*     \\end{align*}\n*     ```\n*\n* @param {(PositiveInteger|ndarray)} out - order of the covariance matrix or a square 2-dimensional output ndarray for storing the covariance matrix\n* @param {ndarray} [means] - mean values\n* @throws {TypeError} first argument must be either a positive integer or a 2-dimensional ndarray having equal dimensions\n* @throws {TypeError} second argument must be a 1-dimensional ndarray\n* @throws {Error} number of means must match covariance matrix dimensions\n* @returns {Function} accumulator function\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* // Create an output covariance matrix:\n* var buffer = new Float64Array( 4 );\n* var shape = [ 2, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n* var order = 'row-major';\n*\n* var cov = ndarray( 'float64', buffer, shape, strides, offset, order );\n*\n* // Create a covariance matrix accumulator:\n* var accumulator = incrcovmat( cov );\n*\n* var out = accumulator();\n* // returns null\n*\n* // Create a data vector:\n* buffer = new Float64Array( 2 );\n* shape = [ 2 ];\n* strides = [ 1 ];\n*\n* var vec = ndarray( 'float64', buffer, shape, strides, offset, order );\n*\n* // Provide data to the accumulator:\n* vec.set( 0, 2.0 );\n* vec.set( 1, 1.0 );\n*\n* out = accumulator( vec );\n* // returns <ndarray>\n*\n* var bool = ( out === cov );\n* // returns true\n*\n* vec.set( 0, -5.0 );\n* vec.set( 1, 3.14 );\n*\n* out = accumulator( vec );\n* // returns <ndarray>\n*\n* // Retrieve the covariance matrix:\n* out = accumulator();\n* // returns <ndarray>\n*/\nfunction incrcovmat( out, means ) {\n\tvar order;\n\tvar cov;\n\tvar mu;\n\tvar C;\n\tvar d;\n\tvar N;\n\n\tN = 0;\n\tif ( isPositiveInteger( out ) ) {\n\t\torder = out;\n\t\tcov = createMatrix( order, false );\n\t} else if ( isSquareMatrix( out ) ) {\n\t\torder = out.shape[ 0 ];\n\t\tcov = out;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must either specify the order of the covariance matrix or be a square two-dimensional ndarray for storing the covariance matrix. Value: `%s`.', out ) );\n\t}\n\t// Create a scratch array for storing residuals (i.e., `x_i - xbar_{i-1}`):\n\td = new Float64Array( order );\n\n\t// Create a low-level scratch matrix for storing co-moments:\n\tC = createMatrix( order, true );\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isVectorLike( means ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a one-dimensional ndarray. Value: `%s`.', means ) );\n\t\t}\n\t\tif ( numel( means.shape ) !== order ) {\n\t\t\tthrow new Error( format( 'invalid argument. The number of elements (means) in the second argument must match covariance matrix dimensions. Expected: `%u`. Actual: `%u`.', order, numel( means.shape ) ) );\n\t\t}\n\t\tmu = means; // TODO: should we copy this? Otherwise, internal state could be \"corrupted\" due to mutation outside the accumulator\n\t\treturn accumulator2;\n\t}\n\t// Create an ndarray vector for storing sample means (note: an ndarray interface is not necessary, but it reduces implementation complexity by ensuring a consistent abstraction for accessing and updating sample means):\n\tmu = createVector( order );\n\n\treturn accumulator1;\n\n\t/**\n\t* If provided a data vector, the accumulator function returns an updated unbiased sample covariance matrix. If not provided a data vector, the accumulator function returns the current unbiased sample covariance matrix.\n\t*\n\t* @private\n\t* @param {ndarray} [v] - data vector\n\t* @throws {TypeError} must provide a 1-dimensional ndarray\n\t* @throws {Error} vector length must match covariance matrix dimensions\n\t* @returns {(ndarray|null)} unbiased sample covariance matrix or null\n\t*/\n\tfunction accumulator1( v ) {\n\t\tvar covij;\n\t\tvar denom;\n\t\tvar rdx;\n\t\tvar cij;\n\t\tvar m;\n\t\tvar n;\n\t\tvar r;\n\t\tvar i;\n\t\tvar j;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn cov;\n\t\t}\n\t\tif ( !isVectorLike( v ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a one-dimensional ndarray. Value: `%s`.', v ) );\n\t\t}\n\t\tif ( v.shape[ 0 ] !== order ) {\n\t\t\tthrow new Error( format( 'invalid argument. Vector length must match covariance matrix dimensions. Expected: `%u`. Actual: `%u`.', order, v.shape[ 0 ] ) );\n\t\t}\n\t\tn = N;\n\t\tN += 1;\n\t\tr = n / N;\n\n\t\tdenom = n || 1; // Bessel's correction (avoiding divide-by-zero below)\n\n\t\tfor ( i = 0; i < order; i++ ) {\n\t\t\tm = mu.get( i );\n\n\t\t\t// Compute the residual:\n\t\t\td[ i ] = v.get( i ) - m;\n\n\t\t\t// Update the sample mean:\n\t\t\tm += d[ i ] / N;\n\t\t\tmu.set( i, m );\n\n\t\t\t// Update the co-moments and covariance matrix, recognizing that the covariance matrix is symmetric...\n\t\t\trdx = r * d[ i ]; // if `n=0`, `r=0.0`\n\t\t\tfor ( j = 0; j <= i; j++ ) {\n\t\t\t\tcij = C.get( i, j ) + ( rdx*d[j] );\n\t\t\t\tC.set( i, j, cij );\n\t\t\t\tC.set( j, i, cij ); // via symmetry\n\n\t\t\t\tcovij = cij / denom;\n\t\t\t\tcov.set( i, j, covij );\n\t\t\t\tcov.set( j, i, covij ); // via symmetry\n\t\t\t}\n\t\t}\n\t\treturn cov;\n\t}\n\n\t/**\n\t* If provided a data vector, the accumulator function returns an updated unbiased sample covariance matrix. If not provided a data vector, the accumulator function returns the current unbiased sample covariance matrix.\n\t*\n\t* @private\n\t* @param {ndarray} [v] - data vector\n\t* @throws {TypeError} must provide a 1-dimensional ndarray\n\t* @throws {Error} vector length must match covariance matrix dimensions\n\t* @returns {(ndarray|null)} unbiased sample covariance matrix or null\n\t*/\n\tfunction accumulator2( v ) {\n\t\tvar covij;\n\t\tvar cij;\n\t\tvar di;\n\t\tvar i;\n\t\tvar j;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn cov;\n\t\t}\n\t\tif ( !isVectorLike( v ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a one-dimensional ndarray. Value: `%s`.', v ) );\n\t\t}\n\t\tif ( v.shape[ 0 ] !== order ) {\n\t\t\tthrow new Error( format( 'invalid argument. Vector length must match covariance matrix dimensions. Expected: `%u`. Actual: `%u`.', order, v.shape[ 0 ] ) );\n\t\t}\n\t\tN += 1;\n\t\tfor ( i = 0; i < order; i++ ) {\n\t\t\t// Compute the residual:\n\t\t\td[ i ] = v.get( i ) - mu.get( i );\n\n\t\t\t// Update the co-moments and covariance matrix, recognizing that the covariance matrix is symmetric...\n\t\t\tdi = d[ i ];\n\t\t\tfor ( j = 0; j <= i; j++ ) {\n\t\t\t\tcij = C.get( i, j ) + ( di*d[j] );\n\t\t\t\tC.set( i, j, cij );\n\t\t\t\tC.set( j, i, cij ); // via symmetry\n\n\t\t\t\tcovij = cij / N;\n\t\t\t\tcov.set( i, j, covij );\n\t\t\t\tcov.set( j, i, covij ); // via symmetry\n\t\t\t}\n\t\t}\n\t\treturn cov;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrcovmat;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the coefficient of variation (CV) incrementally.\n*\n* @module @stdlib/stats/incr/cv\n*\n* @example\n* var incrcv = require( '@stdlib/stats/incr/cv' );\n*\n* var accumulator = incrcv();\n*\n* var cv = accumulator();\n* // returns null\n*\n* cv = accumulator( 2.0 );\n* // returns 0.0\n*\n* cv = accumulator( 1.0 );\n* // returns ~0.47\n*\n* cv = accumulator();\n* // returns ~0.47\n*/\n\n// MODULES //\n\nvar incrcv = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrcv;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar format = require( '@stdlib/string/format' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes the coefficient of variation (CV).\n*\n* ## Method\n*\n* -   This implementation uses [Welford's method][algorithms-variance] for efficient computation, which can be derived as follows. Let\n*\n*     ```tex\n*     \\begin{align*}\n*     S_n &= n \\sigma_n^2 \\\\\n*         &= \\sum_{i=1}^{n} (x_i - \\mu_n)^2 \\\\\n*         &= \\biggl(\\sum_{i=1}^{n} x_i^2 \\biggr) - n\\mu_n^2\n*     \\end{align*}\n*     ```\n*\n*     Accordingly,\n*\n*     ```tex\n*     \\begin{align*}\n*     S_n - S_{n-1} &= \\sum_{i=1}^{n} x_i^2 - n\\mu_n^2 - \\sum_{i=1}^{n-1} x_i^2 + (n-1)\\mu_{n-1}^2 \\\\\n*                   &= x_n^2 - n\\mu_n^2 + (n-1)\\mu_{n-1}^2 \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + n(\\mu_{n-1}^2 - \\mu_n^2) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + n(\\mu_{n-1} - \\mu_n)(\\mu_{n-1} + \\mu_n) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + (\\mu_{n-1} - x_n)(\\mu_{n-1} + \\mu_n) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + \\mu_{n-1}^2 - x_n\\mu_n - x_n\\mu_{n-1} + \\mu_n\\mu_{n-1} \\\\\n*                   &= x_n^2 - x_n\\mu_n - x_n\\mu_{n-1} + \\mu_n\\mu_{n-1} \\\\\n*                   &= (x_n - \\mu_{n-1})(x_n - \\mu_n) \\\\\n*                   &= S_{n-1} + (x_n - \\mu_{n-1})(x_n - \\mu_n)\n*     \\end{align*}\n*     ```\n*\n*     where we use the identity\n*\n*     ```tex\n*     x_n - \\mu_{n-1} = n (\\mu_n - \\mu_{n-1})\n*     ```\n*\n* [algorithms-variance]: https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance\n*\n* @param {number} [mean] - mean value\n* @throws {TypeError} must provide a number primitive\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrcv();\n*\n* var cv = accumulator();\n* // returns null\n*\n* cv = accumulator( 2.0 );\n* // returns 0.0\n*\n* cv = accumulator( 1.0 );\n* // returns ~0.47\n*\n* cv = accumulator();\n* // returns ~0.47\n*\n* @example\n* var accumulator = incrcv( 3.14 );\n*/\nfunction incrcv( mean ) {\n\tvar delta;\n\tvar mu;\n\tvar M2;\n\tvar N;\n\n\tM2 = 0.0;\n\tN = 0;\n\tif ( arguments.length ) {\n\t\tif ( !isNumber( mean ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a number. Value: `%s`.', mean ) );\n\t\t}\n\t\tmu = mean;\n\t\treturn accumulator2;\n\t}\n\tmu = 0.0;\n\treturn accumulator1;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated accumulated value. If not provided a value, the accumulator function returns the current accumulated value.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} accumulated value or null\n\t*/\n\tfunction accumulator1( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn ( isnan( M2 ) ) ? NaN : 0.0/mu;\n\t\t\t}\n\t\t\treturn sqrt( M2/(N-1) ) / mu;\n\t\t}\n\t\tN += 1;\n\t\tdelta = x - mu;\n\t\tmu += delta / N;\n\t\tM2 += delta * ( x - mu );\n\t\tif ( N < 2 ) {\n\t\t\treturn ( isnan( M2 ) ) ? NaN : 0.0/mu;\n\t\t}\n\t\treturn sqrt( M2/(N-1) ) / mu;\n\t}\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated accumulated value. If not provided a value, the accumulator function returns the current accumulated value.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} accumulated value or null\n\t*/\n\tfunction accumulator2( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn sqrt( M2/N ) / mu;\n\t\t}\n\t\tN += 1;\n\t\tdelta = x - mu;\n\t\tM2 += delta * delta;\n\t\treturn sqrt( M2/N ) / mu;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrcv;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an exponentially weighted mean incrementally.\n*\n* @module @stdlib/stats/incr/ewmean\n*\n* @example\n* var increwmean = require( '@stdlib/stats/incr/ewmean' );\n*\n* var accumulator = increwmean();\n*\n* var v = accumulator();\n* // returns null\n*\n* v = accumulator( 2.0 );\n* // returns 2.0\n*\n* v = accumulator( -5.0 );\n* // returns -1.5\n*\n* v = accumulator();\n* // returns -1.5\n*/\n\n// MODULES //\n\nvar increwmean = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = increwmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeNumber = require( '@stdlib/assert/is-nonnegative-number' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes an exponentially weighted mean.\n*\n* @param {NonNegativeNumber} alpha - smoothing factor\n* @throws {TypeError} must provide a nonnegative number\n* @throws {RangeError} must be on the interval `[0,1]`\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = increwmean( 0.5 );\n*\n* var v = accumulator();\n* // returns null\n*\n* v = accumulator( 2.0 );\n* // returns 2.0\n*\n* v = accumulator( -5.0 );\n* // returns -1.5\n*\n* v = accumulator();\n* // returns -1.5\n*/\nfunction increwmean( alpha ) {\n\tvar m;\n\tif ( !isNonNegativeNumber( alpha ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative number. Value: `%s`.', alpha ) );\n\t}\n\tif ( alpha < 0.0 || alpha > 1.0 ) {\n\t\tthrow new RangeError( format( 'invalid argument. Must provide a nonnegative number on the interval: [0, 1]. Value: `%f`.', alpha ) );\n\t}\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated mean. If not provided a value, the accumulator function returns the current mean.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} mean value or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn ( m === void 0 ) ? null : m;\n\t\t}\n\t\tif ( m === void 0 ) {\n\t\t\tm = x;\n\t\t} else {\n\t\t\tm += alpha * ( x-m );\n\t\t}\n\t\treturn m;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = increwmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an exponentially weighted standard deviation incrementally.\n*\n* @module @stdlib/stats/incr/ewstdev\n*\n* @example\n* var increwstdev = require( '@stdlib/stats/incr/ewstdev' );\n*\n* var accumulator = increwstdev();\n*\n* var s = accumulator();\n* // returns null\n*\n* s = accumulator( 2.0 );\n* // returns 0.0\n*\n* s = accumulator( -5.0 );\n* // returns 3.5\n*\n* s = accumulator();\n* // returns 3.5\n*/\n\n// MODULES //\n\nvar increwstdev = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = increwstdev;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeNumber = require( '@stdlib/assert/is-nonnegative-number' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes an exponentially weighted standard deviation.\n*\n* @param {NonNegativeNumber} alpha - smoothing factor\n* @throws {TypeError} must provide a nonnegative number\n* @throws {RangeError} must be on the interval `[0,1]`\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = increwstdev( 0.5 );\n*\n* var s = accumulator();\n* // returns null\n*\n* s = accumulator( 2.0 );\n* // returns 0.0\n*\n* s = accumulator( -5.0 );\n* // returns 3.5\n*\n* s = accumulator();\n* // returns 3.5\n*/\nfunction increwstdev( alpha ) {\n\tvar incr;\n\tvar s2;\n\tvar s;\n\tvar r;\n\tvar m;\n\tvar c;\n\tif ( !isNonNegativeNumber( alpha ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative number. Value: `%s`.', alpha ) );\n\t}\n\tif ( alpha < 0.0 || alpha > 1.0 ) {\n\t\tthrow new RangeError( format( 'invalid argument. Must provide a nonnegative number on the interval: [0, 1]. Value: `%f`.', alpha ) );\n\t}\n\tc = 1.0 - alpha;\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated standard deviation. If not provided a value, the accumulator function returns the current standard deviation.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} standard deviation or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn ( s === void 0 ) ? null : s;\n\t\t}\n\t\tif ( s === void 0 ) {\n\t\t\tm = x;\n\t\t\ts2 = 0.0;\n\t\t} else {\n\t\t\tr = x - m;\n\t\t\tincr = alpha * r;\n\t\t\tm += incr;\n\t\t\ts2 = c * ( s2+(r*incr) );\n\t\t}\n\t\ts = sqrt( s2 );\n\t\treturn s;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = increwstdev;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an exponentially weighted variance incrementally.\n*\n* @module @stdlib/stats/incr/ewvariance\n*\n* @example\n* var increwvariance = require( '@stdlib/stats/incr/ewvariance' );\n*\n* var accumulator = increwvariance();\n*\n* var v = accumulator();\n* // returns null\n*\n* v = accumulator( 2.0 );\n* // returns 0.0\n*\n* v = accumulator( -5.0 );\n* // returns 12.25\n*\n* v = accumulator();\n* // returns 12.25\n*/\n\n// MODULES //\n\nvar increwvariance = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = increwvariance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeNumber = require( '@stdlib/assert/is-nonnegative-number' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes an exponentially weighted variance.\n*\n* @param {NonNegativeNumber} alpha - smoothing factor\n* @throws {TypeError} must provide a nonnegative number\n* @throws {RangeError} must be on the interval `[0,1]`\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = increwvariance( 0.5 );\n*\n* var v = accumulator();\n* // returns null\n*\n* v = accumulator( 2.0 );\n* // returns 0.0\n*\n* v = accumulator( -5.0 );\n* // returns 12.25\n*\n* v = accumulator();\n* // returns 12.25\n*/\nfunction increwvariance( alpha ) {\n\tvar incr;\n\tvar s2;\n\tvar r;\n\tvar m;\n\tvar c;\n\tif ( !isNonNegativeNumber( alpha ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative number. Value: `%s`.', alpha ) );\n\t}\n\tif ( alpha < 0.0 || alpha > 1.0 ) {\n\t\tthrow new RangeError( format( 'invalid argument. Must provide a nonnegative number on the interval: [0, 1]. Value: `%f`.', alpha ) );\n\t}\n\tc = 1.0 - alpha;\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated variance. If not provided a value, the accumulator function returns the current variance.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} variance or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn ( s2 === void 0 ) ? null : s2;\n\t\t}\n\t\tif ( s2 === void 0 ) {\n\t\t\tm = x;\n\t\t\ts2 = 0.0;\n\t\t} else {\n\t\t\tr = x - m;\n\t\t\tincr = alpha * r;\n\t\t\tm += incr;\n\t\t\ts2 = c * ( s2+(r*incr) );\n\t\t}\n\t\treturn s2;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = increwvariance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Grubbs' test for outliers.\n*\n* @module @stdlib/stats/incr/grubbs\n*\n* @example\n* var rnorm = require( '@stdlib/random/base/normal' );\n* var incrgrubbs = require( '@stdlib/stats/incr/grubbs' );\n*\n* var accumulator;\n* var opts;\n* var res;\n* var i;\n*\n* opts = {\n*     'init': 100\n* };\n*\n* accumulator = incrgrubbs( opts );\n*\n* for ( i = 0; i < 200; i++ ) {\n*     res = accumulator( rnorm( 10.0, 5.0 ) );\n* }\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the mean arctangent absolute percentage error incrementally.\n*\n* @module @stdlib/stats/incr/maape\n*\n* @example\n* var incrmaape = require( '@stdlib/stats/incr/maape' );\n*\n* var accumulator = incrmaape();\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns ~0.3218\n*\n* m = accumulator( 5.0, 2.0 );\n* // returns ~0.6523\n*\n* m = accumulator();\n* // returns ~0.6523\n*/\n\n// MODULES //\n\nvar incrmaape = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmaape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar incrmean = require( './../../../incr/mean' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar atan = require( '@stdlib/math/base/special/atan' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes the mean arctangent absolute percentage error.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmaape();\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns ~0.3218\n*\n* m = accumulator( 5.0, 2.0 );\n* // returns ~0.6523\n*\n* m = accumulator();\n* // returns ~0.6523\n*/\nfunction incrmaape() {\n\tvar mean = incrmean();\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated mean arctangent absolute percentage error. If not provided input values, the accumulator function returns the current mean arctangent absolute percentage error.\n\t*\n\t* @private\n\t* @param {number} [f] - input value\n\t* @param {number} [a] - input value\n\t* @returns {(number|null)} mean arctangent absolute percentage error or null\n\t*/\n\tfunction accumulator( f, a ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn mean();\n\t\t}\n\t\treturn mean( atan( abs( (a-f)/a ) ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmaape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the mean absolute error incrementally.\n*\n* @module @stdlib/stats/incr/mae\n*\n* @example\n* var incrmae = require( '@stdlib/stats/incr/mae' );\n*\n* var accumulator = incrmae();\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* m = accumulator( -5.0, 2.0 );\n* // returns 4.0\n*\n* m = accumulator();\n* // returns 4.0\n*/\n\n// MODULES //\n\nvar incrmae = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmae;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar incrmean = require( './../../../incr/mean' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes the mean absolute error.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmae();\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* m = accumulator( -5.0, 2.0 );\n* // returns 4.0\n*\n* m = accumulator();\n* // returns 4.0\n*/\nfunction incrmae() {\n\tvar mean = incrmean();\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated mean absolute error. If not provided input values, the accumulator function returns the current mean absolute error.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @param {number} [y] - input value\n\t* @returns {(number|null)} mean absolute error or null\n\t*/\n\tfunction accumulator( x, y ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn mean();\n\t\t}\n\t\treturn mean( abs( y-x ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmae;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving sample absolute Pearson product-moment correlation coefficient incrementally.\n*\n* @module @stdlib/stats/incr/mapcorr\n*\n* @example\n* var incrmapcorr = require( '@stdlib/stats/incr/mapcorr' );\n*\n* var accumulator = incrmapcorr( 3 );\n*\n* var ar = accumulator();\n* // returns null\n*\n* ar = accumulator( 2.0, 1.0 );\n* // returns 0.0\n*\n* ar = accumulator( -5.0, 3.14 );\n* // returns ~1.0\n*\n* ar = accumulator( 3.0, -1.0 );\n* // returns ~0.925\n*\n* ar = accumulator( 5.0, -9.5 );\n* // returns ~0.863\n*\n* ar = accumulator();\n* // returns ~0.863\n*/\n\n// MODULES //\n\nvar incrmapcorr = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmapcorr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar incrmpcorr = require( './../../../incr/mpcorr' );\nvar format = require( '@stdlib/string/format' );\nvar abs = require( '@stdlib/math/base/special/abs' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving sample absolute Pearson product-moment correlation coefficient.\n*\n* @param {PositiveInteger} W - window size\n* @param {number} [meanx] - mean value\n* @param {number} [meany] - mean value\n* @throws {TypeError} first argument must be a positive integer\n* @throws {TypeError} second argument must be a number\n* @throws {TypeError} third argument must be a number\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmapcorr( 3 );\n*\n* var ar = accumulator();\n* // returns null\n*\n* ar = accumulator( 2.0, 1.0 );\n* // returns 0.0\n*\n* ar = accumulator( -5.0, 3.14 );\n* // returns ~1.0\n*\n* ar = accumulator( 3.0, -1.0 );\n* // returns ~0.925\n*\n* ar = accumulator( 5.0, -9.5 );\n* // returns ~0.863\n*\n* ar = accumulator();\n* // returns ~0.863\n*\n* @example\n* var accumulator = incrmapcorr( 3, -2.0, 10.0 );\n*/\nfunction incrmapcorr( W, meanx, meany ) {\n\tvar acc;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNumber( meanx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', meanx ) );\n\t\t}\n\t\tif ( !isNumber( meany ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a number. Value: `%s`.', meany ) );\n\t\t}\n\t\tacc = incrmpcorr( W, meanx, meany );\n\t} else {\n\t\tacc = incrmpcorr( W );\n\t}\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated accumulated value. If not provided a value, the accumulator function returns the current accumulated value.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @param {number} [y] - input value\n\t* @returns {(number|null)} sample absolute correlation coefficient or null\n\t*/\n\tfunction accumulator( x, y ) {\n\t\tvar r;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tr = acc();\n\t\t\tif ( r === null ) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\treturn abs( r );\n\t\t}\n\t\treturn abs( acc( x, y ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmapcorr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the mean absolute percentage error incrementally.\n*\n* @module @stdlib/stats/incr/mape\n*\n* @example\n* var incrmape = require( '@stdlib/stats/incr/mape' );\n*\n* var accumulator = incrmape();\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns ~33.33\n*\n* m = accumulator( 5.0, 2.0 );\n* // returns ~91.67\n*\n* m = accumulator();\n* // returns ~91.67\n*/\n\n// MODULES //\n\nvar incrmape = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar incrmean = require( './../../../incr/mean' );\nvar abs = require( '@stdlib/math/base/special/abs' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes the mean absolute percentage error.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmape();\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns ~33.33\n*\n* m = accumulator( 5.0, 2.0 );\n* // returns ~91.67\n*\n* m = accumulator();\n* // returns ~91.67\n*/\nfunction incrmape() {\n\tvar mean = incrmean();\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated mean absolute percentage error. If not provided input values, the accumulator function returns the current mean absolute percentage error.\n\t*\n\t* @private\n\t* @param {number} [f] - input value\n\t* @param {number} [a] - input value\n\t* @returns {(number|null)} mean absolute percentage error or null\n\t*/\n\tfunction accumulator( f, a ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn mean();\n\t\t}\n\t\treturn mean( 100.0 * abs( (a-f)/a ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving unbiased sample covariance incrementally.\n*\n* @module @stdlib/stats/incr/mcovariance\n*\n* @example\n* var incrmcovariance = require( '@stdlib/stats/incr/mcovariance' );\n*\n* var accumulator = incrmcovariance( 3 );\n*\n* var v = accumulator();\n* // returns null\n*\n* v = accumulator( 2.0, 1.0 );\n* // returns 0.0\n*\n* v = accumulator( -5.0, 3.14 );\n* // returns ~-7.49\n*\n* v = accumulator( 3.0, -1.0 );\n* // returns -8.35\n*\n* v = accumulator( 5.0, -9.5 );\n* // returns -29.42\n*\n* v = accumulator();\n* // returns -29.42\n*/\n\n// MODULES //\n\nvar incrmcovariance = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmcovariance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving unbiased sample covariance.\n*\n* ## Method\n*\n* -   Let \\\\(W\\\\) be a window of \\\\(N\\\\) elements over which we want to compute an unbiased sample covariance.\n*\n* -   We begin by defining the covariance \\\\( \\operatorname{cov}_n(x,y) \\\\) for a window \\\\(n\\\\) as follows\n*\n*     ```tex\n*     \\operatorname{cov}_n(x,y) &= \\frac{C_n}{n}\n*     ```\n*\n*     where \\\\(C_n\\\\) is the co-moment, which is defined as\n*\n*     ```tex\n*     C_n = \\sum_{i=1}^{N} ( x_i - \\bar{x}_n ) ( y_i - \\bar{y}_n )\n*     ```\n*\n*     and where \\\\(\\bar{x}_n\\\\) and \\\\(\\bar{y}_n\\\\) are the sample means for \\\\(x\\\\) and \\\\(y\\\\), respectively, and \\\\(i=1\\\\) specifies the first element in a window.\n*\n* -   The sample mean is computed using the canonical formula\n*\n*     ```tex\n*     \\bar{x}_n = \\frac{1}{N} \\sum_{i=1}^{N} x_i\n*     ```\n*\n*     which, taking into account a previous window, can be expressed\n*\n*     ```tex\n*     \\begin{align*}\n*     \\bar{x}_n &= \\frac{1}{N} \\biggl( \\sum_{i=0}^{N-1} x_i - x_0 + x_N \\biggr) \\\\\n*               &= \\bar{x}_{n-1} + \\frac{x_N - x_0}{N}\n*     \\end{align*}\n*     ```\n*\n*     where \\\\(x_0\\\\) is the first value in the previous window.\n*\n* -   We can substitute into the co-moment equation\n*\n*     ```tex\n*     \\begin{align*}\n*     C_n &= \\sum_{i=1}^{N} ( x_i - \\bar{x}_n ) ( y_i - \\bar{y}_n ) \\\\\n*         &= \\sum_{i=1}^{N} \\biggl( x_i - \\bar{x}_{n-1} - \\frac{x_N - x_0}{N} \\biggr) \\biggl( y_i - \\bar{y}_{n-1} - \\frac{y_N - y_0}{N} \\biggr) \\\\\n*         &= \\sum_{i=1}^{N} \\biggl( \\Delta x_{i,n-1} - \\frac{x_N - x_0}{N} \\biggr) \\biggl( \\Delta y_{i,n-1} - \\frac{y_N - y_0}{N} \\biggr)\n*     \\end{align*}\n*     ```\n*\n*     where\n*\n*     ```tex\n*     \\Delta x_{i,k} = x_i - \\bar{x}_{k}\n*     ```\n*\n* -   We can subsequently expand terms and apply a summation identity\n*\n*     ```tex\n*     \\begin{align*}\n*     C_n &= \\sum_{i=1}^{N} \\Delta x_{i,n-1} \\Delta y_{i,n-1} - \\sum_{i=1}^{N} \\Delta x_{i,n-1} \\biggl( \\frac{y_N - y_0}{N} \\biggr) - \\sum_{i=1}^{N} \\Delta y_{i,n-1} \\biggl( \\frac{x_N - x_0}{N} \\biggr) + \\sum_{i=1}^{N} \\biggl( \\frac{x_N - x_0}{N} \\biggr) \\biggl( \\frac{y_N - y_0}{N} \\biggr) \\\\\n*         &= \\sum_{i=1}^{N} \\Delta x_{i,n-1} \\Delta y_{i,n-1} - \\biggl( \\frac{y_N - y_0}{N} \\biggr) \\sum_{i=1}^{N} \\Delta x_{i,n-1} - \\biggl( \\frac{x_N - x_0}{N} \\biggr) \\sum_{i=1}^{N} \\Delta y_{i,n-1} + \\frac{(x_N - x_0)(y_N - y_0)}{N}\n*     \\end{align*}\n*     ```\n*\n* -   Let us first consider the second term which we can reorganize as follows\n*\n*     ```tex\n*     \\begin{align*}\n*     \\biggl( \\frac{y_N - y_0}{N} \\biggr) \\sum_{i=1}^{N} \\Delta x_{i,n-1} &= \\biggl( \\frac{y_N - y_0}{N} \\biggr) \\sum_{i=1}{N} ( x_i - \\bar{x}_{n-1}) \\\\\n*         &= \\biggl( \\frac{y_N - y_0}{N} \\biggr) \\sum_{i=1}^{N} x_i - \\biggl( \\frac{y_N - y_0}{N} \\biggr) \\sum_{i=1}^{N} \\bar{x}_{n-1} \\\\\n*         &= (y_N - y_0) \\bar{x}_{n} - (y_N - y_0)\\bar{x}_{n-1} \\\\\n*         &= (y_N - y_0) (\\bar{x}_{n} - \\bar{x}_{n-1}) \\\\\n*         &= \\frac{(x_N - x_0)(y_N - y_0)}{N}\n*     \\end{align*}\n*     ```\n*\n* -   The third term can be reorganized in a manner similar to the second term such that\n*\n*     ```tex\n*     \\biggl( \\frac{x_N - x_0}{N} \\biggr) \\sum_{i=1}^{N} \\Delta y_{i,n-1} = \\frac{(x_N - x_0)(y_N - y_0)}{N}\n*     ```\n*\n* -   Substituting back into the equation for the co-moment\n*\n*     ```tex\n*     \\begin{align*}\n*     C_n &= \\sum_{i=1}^{N} \\Delta x_{i,n-1} \\Delta y_{i,n-1} - \\frac{(x_N - x_0)(y_N - y_0)}{N} - \\frac{(x_N - x_0)(y_N - y_0)}{N} + \\frac{(x_N - x_0)(y_N - y_0)}{N} \\\\\n*         &= \\sum_{i=1}^{N} \\Delta x_{i,n-1} \\Delta y_{i,n-1} - \\frac{(x_N - x_0)(y_N - y_0)}{N}\n*     \\end{align*}\n*     ```\n*\n* -   Let us now consider the first term which we can modify as follows\n*\n*     ```tex\n*     \\begin{align*}\n*     \\sum_{i=1}^{N} \\Delta x_{i,n-1} \\Delta y_{i,n-1} &= \\sum_{i=1}^{N} (x_i - \\bar{x}_{n-1})(y_i - \\bar{y}_{n-1}) \\\\\n*         &= \\sum_{i=1}^{N-1} (x_i - \\bar{x}_{n-1})(y_i - \\bar{y}_{n-1}) + (x_N - \\bar{x}_{n-1})(y_N - \\bar{y}_{n-1}) \\\\\n*         &= \\sum_{i=1}^{N-1} (x_i - \\bar{x}_{n-1})(y_i - \\bar{y}_{n-1}) + (x_N - \\bar{x}_{n-1})(y_N - \\bar{y}_{n-1}) + (x_0 - \\bar{x}_{n-1})(y_0 - \\bar{y}_{n-1}) - (x_0 - \\bar{x}_{n-1})(y_0 - \\bar{y}_{n-1}) \\\\\n*         &= \\sum_{i=0}^{N-1} (x_i - \\bar{x}_{n-1})(y_i - \\bar{y}_{n-1}) + (x_N - \\bar{x}_{n-1})(y_N - \\bar{y}_{n-1}) - (x_0 - \\bar{x}_{n-1})(y_0 - \\bar{y}_{n-1})\n*     \\end{align*}\n*     ```\n*\n*     where we recognize that the first term equals the co-moment for the previous window\n*\n*     ```tex\n*     C_{n-1} = \\sum_{i=0}^{N-1} (x_i - \\bar{x}_{n-1})(y_i - \\bar{y}_{n-1})\n*     ```\n*\n*     In which case,\n*\n*     ```tex\n*     \\begin{align*}\n*     \\sum_{i=1}^{N} \\Delta x_{i,n-1} \\Delta y_{i,n-1} &= C_{n-1} + (x_N - \\bar{x}_{n-1})(y_N - \\bar{y}_{n-1}) - (x_0 - \\bar{x}_{n-1})(y_0 - \\bar{y}_{n-1}) \\\\\n*         &= C_{n-1} + \\Delta x_{N,n-1} \\Delta y_{N,n-1} - \\Delta x_{0,n-1} \\Delta y_{0,n-1}\n*     \\end{align*}\n*     ```\n*\n* -   Substituting into the equation for the co-moment\n*\n*     ```tex\n*     C_n = C_{n-1} + \\Delta x_{N,n-1} \\Delta y_{N,n-1} - \\Delta x_{0,n-1} \\Delta y_{0,n-1} - \\frac{(x_N - x_0)(y_N - y_0)}{N}\n*     ```\n*\n* -   We can make one further modification to the last term\n*\n*     ```tex\n*     \\begin{align*}\n*     \\frac{(x_N - x_0)(y_N - y_0)}{N} &= \\frac{(x_N - \\bar{x}_{n-1} - x_0 + \\bar{x}_{n-1})(y_N - \\bar{y}_{n-1} - y_0 + \\bar{y}_{n-1})}{N} \\\\\n*         &= \\frac{(\\Delta x_{N,n-1} - \\Delta x_{0,n-1})(\\Delta y_{N,n-1} - \\Delta y_{0,n-1})}{N}\n*     \\end{align*}\n*     ```\n*\n*     which, upon substitution into the equation for the co-moment, yields\n*\n*     ```tex\n*     C_n = C_{n-1} + \\Delta x_{N,n-1} \\Delta y_{N,n-1} - \\Delta x_{0,n-1} \\Delta y_{0,n-1} - \\frac{(\\Delta x_{N,n-1} - \\Delta x_{0,n-1})(\\Delta y_{N,n-1} - \\Delta y_{0,n-1})}{N}\n*     ```\n*\n*\n* @param {PositiveInteger} W - window size\n* @param {number} [meanx] - mean value\n* @param {number} [meany] - mean value\n* @throws {TypeError} first argument must be a positive integer\n* @throws {TypeError} second argument must be a number\n* @throws {TypeError} third argument must be a number\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmcovariance( 3 );\n*\n* var v = accumulator();\n* // returns null\n*\n* v = accumulator( 2.0, 1.0 );\n* // returns 0.0\n*\n* v = accumulator( -5.0, 3.14 );\n* // returns ~-7.49\n*\n* v = accumulator( 3.0, -1.0 );\n* // returns -8.35\n*\n* v = accumulator( 5.0, -9.5 );\n* // returns -29.42\n*\n* v = accumulator();\n* // returns -29.42\n*\n* @example\n* var accumulator = incrmcovariance( 3, -2.0, 10.0 );\n*/\nfunction incrmcovariance( W, meanx, meany ) {\n\tvar buf;\n\tvar dx0;\n\tvar dxN;\n\tvar dy0;\n\tvar dyN;\n\tvar mx;\n\tvar my;\n\tvar wi;\n\tvar C;\n\tvar N;\n\tvar n;\n\tvar i;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tbuf = new Float64Array( 2*W ); // strided array\n\tn = W - 1;\n\tC = 0.0;\n\twi = -1;\n\tN = 0;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNumber( meanx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', meanx ) );\n\t\t}\n\t\tif ( !isNumber( meany ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a number. Value: `%s`.', meany ) );\n\t\t}\n\t\tmx = meanx;\n\t\tmy = meany;\n\t\treturn accumulator2;\n\t}\n\tmx = 0.0;\n\tmy = 0.0;\n\treturn accumulator1;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated unbiased sample covariance. If not provided a value, the accumulator function returns the current unbiased sample covariance.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @param {number} [y] - input value\n\t* @returns {(number|null)} unbiased sample covariance or null\n\t*/\n\tfunction accumulator1( x, y ) {\n\t\tvar v1;\n\t\tvar v2;\n\t\tvar k;\n\t\tvar j;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn 0.0;\n\t\t\t}\n\t\t\tif ( N < W ) {\n\t\t\t\treturn C / (N-1);\n\t\t\t}\n\t\t\treturn C / n;\n\t\t}\n\t\t// Update the window and strided array indices for managing the circular buffer:\n\t\twi = (wi+1) % W;\n\t\ti = 2 * wi;\n\n\t\t// Case: an incoming value is NaN, the sliding co-moment is automatically NaN...\n\t\tif ( isnan( x ) || isnan( y ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tC = NaN;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tbuf[ i ] = x; // update buffer\n\t\t\tbuf[ i+1 ] = y;\n\n\t\t\tN += 1;\n\t\t\tdxN = x - mx;\n\t\t\tmx += dxN / N;\n\t\t\tmy += ( y-my ) / N;\n\t\t\tC += dxN * ( y-my ); // Note: repeated `y-my` is intentional, as `my` is updated when used here\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn 0.0;\n\t\t\t}\n\t\t\treturn C / (N-1);\n\t\t}\n\t\t// Case: N = W = 1\n\t\telse if ( N === 1 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\t// Case: an outgoing value is NaN, and, thus, we need to compute the accumulated values...\n\t\telse if ( isnan( buf[ i ] ) || isnan( buf[ i+1 ] ) ) {\n\t\t\tN = 1;\n\t\t\tmx = x;\n\t\t\tmy = y;\n\t\t\tC = 0.0;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tj = 2 * k; // convert to a strided array index\n\t\t\t\tif ( j !== i ) {\n\t\t\t\t\tv1 = buf[ j ];\n\t\t\t\t\tv2 = buf[ j+1 ];\n\t\t\t\t\tif ( isnan( v1 ) || isnan( v2 ) ) {\n\t\t\t\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\t\t\t\tC = NaN;\n\t\t\t\t\t\tbreak; // co-moment is automatically NaN, so no need to continue\n\t\t\t\t\t}\n\t\t\t\t\tN += 1;\n\t\t\t\t\tdxN = v1 - mx;\n\t\t\t\t\tmx += dxN / N;\n\t\t\t\t\tmy += ( v2-my ) / N;\n\t\t\t\t\tC += dxN * ( v2-my ); // Note: repeated `y-my` is intentional, as `my` is updated when used here\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: neither the current co-moment nor the incoming values are NaN, so we need to update the accumulated values...\n\t\telse if ( isnan( C ) === false ) {\n\t\t\tdx0 = buf[ i ] - mx;\n\t\t\tdy0 = buf[ i+1 ] - my;\n\t\t\tdxN = x - mx;\n\t\t\tdyN = y - my;\n\t\t\tC += (dxN*dyN) - (dx0*dy0) - ( (dxN-dx0)*(dyN-dy0)/W );\n\t\t\tmx += ( dxN-dx0 ) / W;\n\t\t\tmy += ( dyN-dy0 ) / W;\n\t\t}\n\t\t// Case: the current co-moment is NaN, so nothing to do until the buffer no longer contains NaN values...\n\t\tbuf[ i ] = x;\n\t\tbuf[ i+1 ] = y;\n\n\t\treturn C / n;\n\t}\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated unbiased sample covariance. If not provided a value, the accumulator function returns the current unbiased sample covariance.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @param {number} [y] - input value\n\t* @returns {(number|null)} unbiased sample covariance or null\n\t*/\n\tfunction accumulator2( x, y ) {\n\t\tvar k;\n\t\tvar j;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( N < W ) {\n\t\t\t\treturn C / N;\n\t\t\t}\n\t\t\treturn C / W;\n\t\t}\n\t\t// Update the window and strided array indices for managing the circular buffer:\n\t\twi = (wi+1) % W;\n\t\ti = 2 * wi;\n\n\t\t// Case: an incoming value is NaN, the sliding co-moment is automatically NaN...\n\t\tif ( isnan( x ) || isnan( y ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tC = NaN;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tbuf[ i ] = x; // update buffer\n\t\t\tbuf[ i+1 ] = y;\n\n\t\t\tN += 1;\n\t\t\tC += ( x-mx ) * ( y-my );\n\t\t\treturn C / N;\n\t\t}\n\t\t// Case: an outgoing value is NaN, and, thus, we need to compute the accumulated values...\n\t\telse if ( isnan( buf[ i ] ) || isnan( buf[ i+1 ] ) ) {\n\t\t\tC = 0.0;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tj = 2 * k; // convert to a strided array index\n\t\t\t\tif ( j !== i ) {\n\t\t\t\t\tif ( isnan( buf[ j ] ) || isnan( buf[ j+1 ] ) ) {\n\t\t\t\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\t\t\t\tC = NaN;\n\t\t\t\t\t\tbreak; // co-moment is automatically NaN, so no need to continue\n\t\t\t\t\t}\n\t\t\t\t\tC += ( buf[j]-mx ) * ( buf[j+1]-my );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: neither the current co-moment nor the incoming values are NaN, so we need to update the accumulated values...\n\t\telse if ( isnan( C ) === false ) {\n\t\t\t// Use textbook formula along with simplification arising from difference of sums:\n\t\t\tC += ( (x-mx)*(y-my) ) - ( (buf[i]-mx)*(buf[i+1]-my) );\n\t\t}\n\t\t// Case: the current co-moment is NaN, so nothing to do until the buffer no longer contains NaN values...\n\t\tbuf[ i ] = x;\n\t\tbuf[ i+1 ] = y;\n\n\t\treturn C / W;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmcovariance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving coefficient of variation (CV) incrementally.\n*\n* @module @stdlib/stats/incr/mcv\n*\n* @example\n* var incrmcv = require( '@stdlib/stats/incr/mcv' );\n*\n* var accumulator = incrmcv( 3 );\n*\n* var cv = accumulator();\n* // returns null\n*\n* cv = accumulator( 2.0 );\n* // returns 0.0\n*\n* cv = accumulator( 1.0 );\n* // returns ~0.47\n*\n* cv = accumulator( 3.0 );\n* // returns 0.5\n*\n* cv = accumulator( 7.0 );\n* // returns ~0.83\n*\n* cv = accumulator();\n* // returns ~0.83\n*/\n\n// MODULES //\n\nvar incrmcv = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmcv;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving coefficient of variation (CV).\n*\n* ## Method\n*\n* -   Let \\\\(W\\\\) be a window of \\\\(N\\\\) elements over which we want to compute the coefficient of variation (CV), which is defined as the sample standard deviation divided by the sample mean.\n*\n* -   We first recognize that the corrected sample standard deviation is defined as the square root of the unbiased sample variance. Accordingly, in order to derive an update equation for the corrected sample standard deviation, deriving an update equation for the unbiased sample variance is sufficient.\n*\n* -   The difference between the unbiased sample variance in a window \\\\(W_i\\\\) and the unbiased sample variance in a window \\\\(W_{i+1})\\\\) is given by\n*\n*     ```tex\n*     \\Delta s^2 = s_{i+1}^2 - s_{i}^2\n*     ```\n*\n* -   If we multiply both sides by \\\\(N-1\\\\),\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = (N-1)s_{i+1}^2 - (N-1)s_{i}^2\n*     ```\n*\n* -   If we substitute the definition of the unbiased sample variance having the form\n*\n*     ```tex\n*     \\begin{align*}\n*     s^2 &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} (x_i - \\bar{x})^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} (x_i^2 - 2\\bar{x}x_i + \\bar{x}^2) \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - 2\\bar{x} \\sum_{i=1}^{N} x_i + \\sum_{i=1}^{N} \\bar{x}^2) \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - \\frac{2N\\bar{x}\\sum_{i=1}^{N} x_i}{N} + N\\bar{x}^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - 2N\\bar{x}^2 + N\\bar{x}^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - N\\bar{x}^2 \\biggr)\n*     \\end{align*}\n*     ```\n*\n*     we return\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = \\biggl(\\sum_{k=1}^N x_k^2 - N\\bar{x}_{i+1}^2 \\biggr) - \\biggl(\\sum_{k=0}^{N-1} x_k^2 - N\\bar{x}_{i}^2 \\biggr)\n*     ```\n*\n* -   This can be further simplified by recognizing that subtracting the sums reduces to \\\\(x_N^2 - x_0^2\\\\); in which case,\n*\n*     ```tex\n*     \\begin{align*}\n*     (N-1)(\\Delta s^2) &= x_N^2 - x_0^2 - N\\bar{x}_{i+1}^2 + N\\bar{x}_{i}^2 \\\\\n*     &= x_N^2 - x_0^2 - N(\\bar{x}_{i+1}^2 - \\bar{x}_{i}^2) \\\\\n*     &= x_N^2 - x_0^2 - N(\\bar{x}_{i+1} - \\bar{x}_{i})(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     \\end{align*}\n*     ```\n*\n* -   Recognizing that the difference of means can be expressed\n*\n*     ```tex\n*     \\bar{x}_{i+1} - \\bar{x}_i = \\frac{1}{N} \\biggl( \\sum_{k=1}^N x_k - \\sum_{k=0}^{N-1} x_k \\biggr) = \\frac{x_N - x_0}{N}\n*     ```\n*\n*     and substituting into the equation above\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = x_N^2 - x_0^2 - (x_N - x_0)(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     ```\n*\n* -   Rearranging terms gives us the update equation for the unbiased sample variance\n*\n*     ```tex\n*     \\begin{align*}\n*     (N-1)(\\Delta s^2) &= (x_N - x_0)(x_N + x_0) - (x_N - x_0)(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     &= (x_N - x_0)(x_N + x_0 - \\bar{x}_{i+1} - \\bar{x}_{i}) \\\\\n*     &= (x_N - x_0)(x_N - \\bar{x}_{i+1} + x_0 - \\bar{x}_{i})\n*     \\end{align*}\n*     ```\n*\n* @param {PositiveInteger} W - window size\n* @param {number} [mean] - mean value\n* @throws {TypeError} first argument must be a positive integer\n* @throws {TypeError} second argument must be a number\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmcv( 3 );\n*\n* var cv = accumulator();\n* // returns null\n*\n* cv = accumulator( 2.0 );\n* // returns 0.0\n*\n* cv = accumulator( 1.0 );\n* // returns ~0.47\n*\n* cv = accumulator( 3.0 );\n* // returns 0.5\n*\n* cv = accumulator( 7.0 );\n* // returns ~0.83\n*\n* cv = accumulator();\n* // returns ~0.83\n*\n* @example\n* var accumulator = incrmcv( 3, 2.0 );\n*/\nfunction incrmcv( W, mean ) {\n\tvar delta;\n\tvar buf;\n\tvar tmp;\n\tvar M2;\n\tvar mu;\n\tvar d1;\n\tvar d2;\n\tvar N;\n\tvar n;\n\tvar i;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tbuf = new Float64Array( W );\n\tn = W - 1;\n\tM2 = 0.0;\n\ti = -1;\n\tN = 0;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNumber( mean ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a number. Value: `%s`.', mean ) );\n\t\t}\n\t\tmu = mean;\n\t\treturn accumulator2;\n\t}\n\tmu = 0.0;\n\treturn accumulator1;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated accumulated value. If not provided a value, the accumulator function returns the current accumulated value.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} accumulated value or null\n\t*/\n\tfunction accumulator1( x ) {\n\t\tvar k;\n\t\tvar v;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn ( isnan( M2 ) ) ? NaN : 0.0/mu;\n\t\t\t}\n\t\t\tif ( N < W ) {\n\t\t\t\treturn sqrt( M2/(N-1) ) / mu;\n\t\t\t}\n\t\t\treturn sqrt( M2/n ) / mu;\n\t\t}\n\t\t// Update the index for managing the circular buffer:\n\t\ti = (i+1) % W;\n\n\t\t// Case: incoming value is NaN, the sliding second moment is automatically NaN...\n\t\tif ( isnan( x ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tmu = NaN;\n\t\t\tM2 = NaN;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tbuf[ i ] = x; // update buffer\n\t\t\tN += 1;\n\t\t\tdelta = x - mu;\n\t\t\tmu += delta / N;\n\t\t\tM2 += delta * (x - mu);\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn 0.0 / mu;\n\t\t\t}\n\t\t\treturn sqrt( M2/(N-1) ) / mu;\n\t\t}\n\t\t// Case: N = W = 1\n\t\telse if ( N === 1 ) {\n\t\t\tmu = x;\n\t\t\tM2 = 0.0;\n\t\t\treturn M2 / mu;\n\t\t}\n\t\t// Case: outgoing value is NaN, and, thus, we need to compute the accumulated values...\n\t\telse if ( isnan( buf[ i ] ) ) {\n\t\t\tN = 1;\n\t\t\tmu = x;\n\t\t\tM2 = 0.0;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tv = buf[ k ];\n\t\t\t\t\tif ( isnan( v ) ) {\n\t\t\t\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\t\t\t\tmu = NaN;\n\t\t\t\t\t\tM2 = NaN;\n\t\t\t\t\t\tbreak; // second moment is automatically NaN, so no need to continue\n\t\t\t\t\t}\n\t\t\t\t\tN += 1;\n\t\t\t\t\tdelta = v - mu;\n\t\t\t\t\tmu += delta / N;\n\t\t\t\t\tM2 += delta * (v - mu);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: neither the current second moment nor the incoming value are NaN, so we need to update the accumulated values...\n\t\telse if ( isnan( M2 ) === false ) {\n\t\t\ttmp = buf[ i ];\n\t\t\tdelta = x - tmp;\n\t\t\td1 = tmp - mu;\n\t\t\tmu += delta / W;\n\t\t\td2 = x - mu;\n\t\t\tM2 += delta * (d1 + d2);\n\t\t}\n\t\t// Case: the current second moment is NaN, so nothing to do until the buffer no longer contains NaN values...\n\t\tbuf[ i ] = x;\n\n\t\treturn sqrt( M2/n ) / mu;\n\t}\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated accumulated value. If not provided a value, the accumulator function returns the current accumulated value.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} accumulated value or null\n\t*/\n\tfunction accumulator2( x ) {\n\t\tvar k;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( N < W ) {\n\t\t\t\treturn sqrt( M2/N ) / mu;\n\t\t\t}\n\t\t\treturn sqrt( M2/W ) / mu;\n\t\t}\n\t\t// Update the index for managing the circular buffer:\n\t\ti = (i+1) % W;\n\n\t\t// Case: incoming value is NaN, the sliding second moment is automatically NaN...\n\t\tif ( isnan( x ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tM2 = NaN;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tbuf[ i ] = x; // update buffer\n\t\t\tN += 1;\n\t\t\tdelta = x - mu;\n\t\t\tM2 += delta * delta;\n\t\t\treturn sqrt( M2/N ) / mu;\n\t\t}\n\t\t// Case: outgoing value is NaN, and, thus, we need to compute the accumulated values...\n\t\telse if ( isnan( buf[ i ] ) ) {\n\t\t\tM2 = 0.0;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tif ( isnan( buf[ k ] ) ) {\n\t\t\t\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\t\t\t\tM2 = NaN;\n\t\t\t\t\t\tbreak; // second moment is automatically NaN, so no need to continue\n\t\t\t\t\t}\n\t\t\t\t\tdelta = buf[ k ] - mu;\n\t\t\t\t\tM2 += delta * delta;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: neither the current second moment nor the incoming value are NaN, so we need to update the accumulated values...\n\t\telse if ( isnan( M2 ) === false ) {\n\t\t\ttmp = buf[ i ];\n\t\t\tM2 += ( x-tmp ) * ( x-mu + tmp-mu );\n\t\t}\n\t\t// Case: the current second moment is NaN, so nothing to do until the buffer no longer contains NaN values...\n\t\tbuf[ i ] = x;\n\n\t\treturn sqrt( M2/W ) / mu;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmcv;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the mean directional accuracy (MDA) incrementally.\n*\n* @module @stdlib/stats/incr/mda\n*\n* @example\n* var incrmda = require( '@stdlib/stats/incr/mda' );\n*\n* var accumulator = incrmda();\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* m = accumulator( -5.0, 4.0 );\n* // returns 0.5\n*\n* m = accumulator();\n* // returns 0.5\n*/\n\n// MODULES //\n\nvar incrmda = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmda;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar incrmean = require( './../../../incr/mean' );\nvar signum = require( '@stdlib/math/base/special/signum' );\nvar kroneckerDelta = require( '@stdlib/math/base/special/kronecker-delta' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes the mean directional accuracy.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmda();\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* m = accumulator( -5.0, 4.0 );\n* // returns 0.5\n*\n* m = accumulator();\n* // returns 0.5\n*/\nfunction incrmda() {\n\tvar mean;\n\tvar FLG;\n\tvar f0;\n\tvar a0;\n\n\tmean = incrmean();\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated mean directional accuracy. If not provided a value, the accumulator function returns the current mean directional accuracy.\n\t*\n\t* @private\n\t* @param {number} [f] - forecast value\n\t* @param {number} [a] - actual value\n\t* @returns {(number|null)} mean directional accuracy or null\n\t*/\n\tfunction accumulator( f, a ) {\n\t\tvar sf;\n\t\tvar sa;\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn mean();\n\t\t}\n\t\tif ( FLG === void 0 ) {\n\t\t\tFLG = true;\n\t\t\tf0 = f;\n\t\t\ta0 = a;\n\t\t}\n\t\tsf = signum( f-f0 );\n\t\tsa = signum( a-a0 );\n\t\tf0 = f;\n\t\ta0 = a;\n\t\treturn mean( kroneckerDelta( sf, sa ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmda;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the mean error incrementally.\n*\n* @module @stdlib/stats/incr/me\n*\n* @example\n* var incrme = require( '@stdlib/stats/incr/me' );\n*\n* var accumulator = incrme();\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* m = accumulator( -5.0, 2.0 );\n* // returns 4.0\n*\n* m = accumulator();\n* // returns 4.0\n*/\n\n// MODULES //\n\nvar incrme = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrme;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar incrmean = require( './../../../incr/mean' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes the mean error.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrme();\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* m = accumulator( -5.0, 2.0 );\n* // returns 4.0\n*\n* m = accumulator();\n* // returns 4.0\n*/\nfunction incrme() {\n\tvar mean = incrmean();\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated mean error. If not provided input values, the accumulator function returns the current mean error.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @param {number} [y] - input value\n\t* @returns {(number|null)} mean error or null\n\t*/\n\tfunction accumulator( x, y ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn mean();\n\t\t}\n\t\treturn mean( y-x );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrme;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an arithmetic mean and unbiased sample variance incrementally.\n*\n* @module @stdlib/stats/incr/meanvar\n*\n* @example\n* var incrmeanvar = require( '@stdlib/stats/incr/meanvar' );\n*\n* var accumulator = incrmeanvar();\n*\n* var mv = accumulator();\n* // returns null\n*\n* mv = accumulator( 2.0 );\n* // returns [ 2.0, 0.0 ]\n*\n* mv = accumulator( -5.0 );\n* // returns [ -1.5, 24.5 ]\n*\n* mv = accumulator( 3.0 );\n* // returns [ 0.0, 19.0 ]\n*\n* mv = accumulator( 5.0 );\n* // returns [ 1.25, ~18.92 ]\n*\n* mv = accumulator();\n* // returns [ 1.25, ~18.92 ]\n*/\n\n// MODULES //\n\nvar incrmeanvar = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmeanvar;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLike = require( '@stdlib/assert/is-array-like-object' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes an arithmetic mean and unbiased sample variance.\n*\n* ## Method\n*\n*\n* -   This implementation uses Welford's algorithm for efficient computation, which can be derived as follows. Let\n*\n*     ```tex\n*     \\begin{align*}\n*     S_n &= n \\sigma_n^2 \\\\\n*         &= \\sum_{i=1}^{n} (x_i - \\mu_n)^2 \\\\\n*         &= \\biggl(\\sum_{i=1}^{n} x_i^2 \\biggr) - n\\mu_n^2\n*     \\end{align*}\n*     ```\n*\n*     Accordingly,\n*\n*     ```tex\n*     \\begin{align*}\n*     S_n - S_{n-1} &= \\sum_{i=1}^{n} x_i^2 - n\\mu_n^2 - \\sum_{i=1}^{n-1} x_i^2 + (n-1)\\mu_{n-1}^2 \\\\\n*                   &= x_n^2 - n\\mu_n^2 + (n-1)\\mu_{n-1}^2 \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + n(\\mu_{n-1}^2 - \\mu_n^2) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + n(\\mu_{n-1} - \\mu_n)(\\mu_{n-1} + \\mu_n) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + (\\mu_{n-1} - x_n)(\\mu_{n-1} + \\mu_n) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + \\mu_{n-1}^2 - x_n\\mu_n - x_n\\mu_{n-1} + \\mu_n\\mu_{n-1} \\\\\n*                   &= x_n^2 - x_n\\mu_n - x_n\\mu_{n-1} + \\mu_n\\mu_{n-1} \\\\\n*                   &= (x_n - \\mu_{n-1})(x_n - \\mu_n) \\\\\n*                   &= S_{n-1} + (x_n - \\mu_{n-1})(x_n - \\mu_n)\n*     \\end{align*}\n*     ```\n*\n*     where we use the identity\n*\n*     ```tex\n*     x_n - \\mu_{n-1} = n (\\mu_n - \\mu_{n-1})\n*     ```\n*\n* ## References\n*\n* -   Welford, B. P. 1962. \"Note on a Method for Calculating Corrected Sums of Squares and Products.\" _Technometrics_ 4 (3). Taylor & Francis: 419–20. doi:[10.1080/00401706.1962.10490022](https://doi.org/10.1080/00401706.1962.10490022).\n* -   van Reeken, A. J. 1968. \"Letters to the Editor: Dealing with Neely's Algorithms.\" _Communications of the ACM_ 11 (3): 149–50. doi:[10.1145/362929.362961](https://doi.org/10.1145/362929.362961).\n*\n* @param {Collection} [out] - output array\n* @throws {TypeError} output argument must be array-like\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmeanvar();\n*\n* var mv = accumulator();\n* // returns null\n*\n* mv = accumulator( 2.0 );\n* // returns [ 2.0, 0.0 ]\n*\n* mv = accumulator( -5.0 );\n* // returns [ -1.5, 24.5 ]\n*\n* mv = accumulator( 3.0 );\n* // returns [ 0.0, 19.0 ]\n*\n* mv = accumulator( 5.0 );\n* // returns [ 1.25, ~18.92 ]\n*\n* mv = accumulator();\n* // returns [ 1.25, ~18.92 ]\n*/\nfunction incrmeanvar( out ) {\n\tvar meanvar;\n\tvar delta;\n\tvar mu;\n\tvar M2;\n\tvar N;\n\tif ( arguments.length === 0 ) {\n\t\tmeanvar = [ 0.0, 0.0 ];\n\t} else {\n\t\tif ( !isArrayLike( out ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Output argument must be an array-like object. Value: `%s`.', out ) );\n\t\t}\n\t\tmeanvar = out;\n\t}\n\tM2 = 0.0;\n\tmu = 0.0;\n\tN = 0;\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns updated results. If not provided a value, the accumulator function returns the current results.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(ArrayLikeObject|null)} output array or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tmeanvar[ 0 ] = mu; // Why? Because we cannot guarantee someone hasn't mutated the output array\n\t\t\tif ( N === 1 ) {\n\t\t\t\tif ( isnan( M2 ) ) {\n\t\t\t\t\tmeanvar[ 1 ] = NaN;\n\t\t\t\t} else {\n\t\t\t\t\tmeanvar[ 1 ] = 0.0;\n\t\t\t\t}\n\t\t\t\treturn meanvar;\n\t\t\t}\n\t\t\tmeanvar[ 1 ] = M2 / (N-1);\n\t\t\treturn meanvar;\n\t\t}\n\t\tN += 1;\n\t\tdelta = x - mu;\n\t\tmu += delta / N;\n\t\tM2 += delta * ( x - mu );\n\n\t\tmeanvar[ 0 ] = mu;\n\t\tif ( N < 2 ) {\n\t\t\tif ( isnan( M2 ) ) {\n\t\t\t\tmeanvar[ 1 ] = NaN;\n\t\t\t} else {\n\t\t\t\tmeanvar[ 1 ] = 0.0;\n\t\t\t}\n\t\t\treturn meanvar;\n\t\t}\n\t\tmeanvar[ 1 ] = M2 / (N-1);\n\t\treturn meanvar;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmeanvar;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving geometric mean incrementally.\n*\n* @module @stdlib/stats/incr/mgmean\n*\n* @example\n* var incrmgmean = require( '@stdlib/stats/incr/mgmean' );\n*\n* var accumulator = incrmgmean( 3 );\n*\n* var v = accumulator();\n* // returns null\n*\n* v = accumulator( 2.0 );\n* // returns 2.0\n*\n* v = accumulator( 5.0 );\n* // returns ~3.16\n*\n* v = accumulator( 3.0 );\n* // returns ~3.11\n*\n* v = accumulator( 5.0 );\n* // returns ~4.22\n*\n* v = accumulator();\n* // returns ~4.22\n*/\n\n// MODULES //\n\nvar incrmgmean = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmgmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving geometric mean.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmgmean( 3 );\n*\n* var v = accumulator();\n* // returns null\n*\n* v = accumulator( 2.0 );\n* // returns 2.0\n*\n* v = accumulator( 5.0 );\n* // returns ~3.16\n*\n* v = accumulator( 3.0 );\n* // returns ~3.11\n*\n* v = accumulator( 5.0 );\n* // returns ~4.22\n*\n* v = accumulator();\n* // returns ~4.22\n*/\nfunction incrmgmean( W ) {\n\tvar buf;\n\tvar sum;\n\tvar gm;\n\tvar N;\n\tvar i;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tbuf = new Float64Array( W );\n\tsum = 0.0;\n\ti = -1;\n\tN = 0;\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated geometric mean. If not provided a value, the accumulator function returns the current geometric mean.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} geometric mean or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tvar lnx;\n\t\tvar k;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn gm;\n\t\t}\n\t\t// Update the index for managing the circular buffer:\n\t\ti = (i+1) % W;\n\n\t\t// Compute the natural log:\n\t\tlnx = ln( x );\n\n\t\t// Case: incoming value is NaN, the accumulated value is automatically NaN...\n\t\tif ( isnan( x ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tsum = NaN;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tN += 1;\n\t\t\tsum += lnx;\n\t\t}\n\t\t// Case: outgoing value is NaN, and, thus, we need to compute the accumulated value...\n\t\telse if ( isnan( buf[ i ] ) ) {\n\t\t\tN = 1;\n\t\t\tsum = lnx;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tif ( isnan( buf[ k ] ) ) {\n\t\t\t\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\t\t\t\tsum = NaN;\n\t\t\t\t\t\tbreak; // sum is automatically NaN, so no need to continue\n\t\t\t\t\t}\n\t\t\t\t\tN += 1;\n\t\t\t\t\tsum += buf[ k ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: neither the current accumulated value nor the incoming value are NaN, so we need to update the accumulated value...\n\t\telse if ( isnan( sum ) === false ) {\n\t\t\tsum += lnx - buf[ i ];\n\t\t}\n\t\t// Case: the current accumulated value is NaN, so nothing to do until the buffer no longer contains NaN values...\n\t\tbuf[ i ] = lnx;\n\n\t\tgm = exp( sum/N );\n\t\treturn gm;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmgmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Moving Grubbs' test for outliers.\n*\n* @module @stdlib/stats/incr/mgrubbs\n*\n* @example\n* var rnorm = require( '@stdlib/random/base/normal' );\n* var incrmgrubbs = require( '@stdlib/stats/incr/mgrubbs' );\n*\n* var accumulator;\n* var res;\n* var i;\n*\n* accumulator = incrmgrubbs( 20 );\n*\n* for ( i = 0; i < 200; i++ ) {\n*     res = accumulator( rnorm( 10.0, 5.0 ) );\n* }\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving harmonic mean incrementally.\n*\n* @module @stdlib/stats/incr/mhmean\n*\n* @example\n* var incrmhmean = require( '@stdlib/stats/incr/mhmean' );\n*\n* var accumulator = incrmhmean( 3 );\n*\n* var v = accumulator();\n* // returns null\n*\n* v = accumulator( 2.0 );\n* // returns 2.0\n*\n* v = accumulator( 5.0 );\n* // returns ~2.86\n*\n* v = accumulator( 3.0 );\n* // returns ~2.90\n*\n* v = accumulator( 5.0 );\n* // returns ~4.09\n*\n* v = accumulator();\n* // returns ~4.09\n*/\n\n// MODULES //\n\nvar incrmhmean = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmhmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar incrmmean = require( './../../../incr/mmean' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving harmonic mean.\n*\n* ## Method\n*\n* -   The harmonic mean of positive real numbers \\\\(x_0, x_1, \\ldots, x_{n-1}\\\\) is defined as\n*\n*     ```tex\n*     \\begin{align*}\n*     H &= \\frac{n}{\\frac{1}{x_0} + \\frac{1}{x_1} + \\cdots + \\frac{1}{x_{n-1}}} \\\\\n*       &= \\frac{n}{\\sum_{i=0}^{n-1} \\frac{1}{x_i}}\n*     \\end{align*}\n*     ```\n*\n*     which may be expressed\n*\n*     ```tex\n*     H = \\biggl( \\frac{\\sum_{i=0}^{n-1} \\frac{1}{x_i}}{n} \\biggr)^{-1}\n*     ```\n*\n* -   Accordingly, to compute the harmonic mean for each window incrementally, we can simply compute the arithmetic mean of reciprocal values and then compute the reciprocal of the result.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmhmean( 3 );\n*\n* var v = accumulator();\n* // returns null\n*\n* v = accumulator( 2.0 );\n* // returns 2.0\n*\n* v = accumulator( 5.0 );\n* // returns ~2.86\n*\n* v = accumulator( 3.0 );\n* // returns ~2.90\n*\n* v = accumulator( 5.0 );\n* // returns ~4.09\n*\n* v = accumulator();\n* // returns ~4.09\n*/\nfunction incrmhmean( W ) {\n\tvar mmean;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tmmean = incrmmean( W );\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated harmonic mean. If not provided a value, the accumulator function returns the current harmonic mean.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} harmonic mean or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tvar v;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tv = mmean();\n\t\t\tif ( v === null ) {\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\treturn 1.0 / v;\n\t\t}\n\t\treturn 1.0 / mmean( 1.0/x );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmhmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute minimum and maximum absolute values incrementally.\n*\n* @module @stdlib/stats/incr/minmaxabs\n*\n* @example\n* var incrminmaxabs = require( '@stdlib/stats/incr/minmaxabs' );\n*\n* var accumulator = incrminmaxabs();\n*\n* var mm = accumulator();\n* // returns null\n*\n* mm = accumulator( 2.0 );\n* // returns [ 2.0, 2.0 ]\n*\n* mm = accumulator( -5.0 );\n* // returns [ 2.0, 5.0 ]\n*\n* mm = accumulator( 3.0 );\n* // returns [ 2.0, 5.0 ]\n*\n* mm = accumulator( 5.0 );\n* // returns [ 2.0, 5.0 ]\n*\n* mm = accumulator();\n* // returns [ 2.0, 5.0 ]\n*/\n\n// MODULES //\n\nvar incrminmaxabs = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrminmaxabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLike = require( '@stdlib/assert/is-array-like-object' );\nvar format = require( '@stdlib/string/format' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar abs = require( '@stdlib/math/base/special/abs' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes minimum and maximum absolute values.\n*\n* @param {Collection} [out] - output array\n* @throws {TypeError} output argument must be array-like\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrminmaxabs();\n*\n* var mm = accumulator();\n* // returns null\n*\n* mm = accumulator( 2.0 );\n* // returns [ 2.0, 2.0 ]\n*\n* mm = accumulator( -5.0 );\n* // returns [ 2.0, 5.0 ]\n*\n* mm = accumulator( 3.0 );\n* // returns [ 2.0, 5.0 ]\n*\n* mm = accumulator( 5.0 );\n* // returns [ 2.0, 5.0 ]\n*\n* mm = accumulator();\n* // returns [ 2.0, 5.0 ]\n*/\nfunction incrminmaxabs( out ) {\n\tvar minmax;\n\tvar min;\n\tvar max;\n\tvar FLG;\n\tif ( arguments.length === 0 ) {\n\t\tminmax = [ 0.0, 0.0 ];\n\t} else {\n\t\tif ( !isArrayLike( out ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Output argument must be an array-like object. Value: `%s`.', out ) );\n\t\t}\n\t\tminmax = out;\n\t}\n\tmin = PINF;\n\tmax = 0.0;\n\tFLG = false;\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns updated minimum and maximum absolute values. If not provided a value, the accumulator function returns the current minimum and maximum absolute values.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(ArrayLikeObject|null)} output array or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tvar ax;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( FLG === false ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tminmax[ 0 ] = min; // Why? Because we cannot guarantee someone hasn't mutated the output array\n\t\t\tminmax[ 1 ] = max;\n\t\t\treturn minmax;\n\t\t}\n\t\tFLG = true;\n\t\tif ( isnan( x ) ) {\n\t\t\tmin = x;\n\t\t\tmax = x;\n\t\t} else {\n\t\t\tax = abs( x );\n\t\t\tif ( ax < min ) {\n\t\t\t\tmin = ax;\n\t\t\t}\n\t\t\tif ( ax > max ) {\n\t\t\t\tmax = ax;\n\t\t\t}\n\t\t}\n\t\tminmax[ 0 ] = min;\n\t\tminmax[ 1 ] = max;\n\t\treturn minmax;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrminmaxabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving mean arctangent absolute percentage error incrementally.\n*\n* @module @stdlib/stats/incr/mmaape\n*\n* @example\n* var incrmmaape = require( '@stdlib/stats/incr/mmaape' );\n*\n* var accumulator = incrmmaape( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns ~0.32\n*\n* m = accumulator( 5.0, 2.0 );\n* // returns ~0.65\n*\n* m = accumulator( 3.0, 2.0 );\n* // returns ~0.59\n*\n* m = accumulator( 2.0, 5.0 );\n* // returns ~0.66\n*\n* m = accumulator();\n* // returns ~0.66\n*/\n\n// MODULES //\n\nvar incrmmaape = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmmaape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar incrmmean = require( './../../../incr/mmean' );\nvar format = require( '@stdlib/string/format' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar atan = require( '@stdlib/math/base/special/atan' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving mean arctangent absolute percentage error.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmmaape( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns ~0.32\n*\n* m = accumulator( 5.0, 2.0 );\n* // returns ~0.65\n*\n* m = accumulator( 3.0, 2.0 );\n* // returns ~0.59\n*\n* m = accumulator( 2.0, 5.0 );\n* // returns ~0.66\n*\n* m = accumulator();\n* // returns ~0.66\n*/\nfunction incrmmaape( W ) {\n\tvar mean;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tmean = incrmmean( W );\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated mean arctangent absolute percentage error. If not provided input values, the accumulator function returns the current mean arctangent absolute percentage error.\n\t*\n\t* @private\n\t* @param {number} [f] - input value\n\t* @param {number} [a] - input value\n\t* @returns {(number|null)} mean arctangent absolute percentage error or null\n\t*/\n\tfunction accumulator( f, a ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn mean();\n\t\t}\n\t\treturn mean( atan( abs( (a-f)/a ) ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmmaape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving mean absolute error incrementally.\n*\n* @module @stdlib/stats/incr/mmae\n*\n* @example\n* var incrmmae = require( '@stdlib/stats/incr/mmae' );\n*\n* var accumulator = incrmmae( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* m = accumulator( -5.0, 2.0 );\n* // returns 4.0\n*\n* m = accumulator( 3.0, 2.0 );\n* // returns 3.0\n*\n* m = accumulator( 5.0, -2.0 );\n* // returns 5.0\n*\n* m = accumulator();\n* // returns 5.0\n*/\n\n// MODULES //\n\nvar incrmmae = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmmae;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar incrmmean = require( './../../../incr/mmean' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving mean absolute error.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmmae( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* m = accumulator( -5.0, 2.0 );\n* // returns 4.0\n*\n* m = accumulator( 3.0, 2.0 );\n* // returns 3.0\n*\n* m = accumulator( 5.0, -2.0 );\n* // returns 5.0\n*\n* m = accumulator();\n* // returns 5.0\n*/\nfunction incrmmae( W ) {\n\tvar mean;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tmean = incrmmean( W );\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated mean absolute error. If not provided input values, the accumulator function returns the current mean absolute error.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @param {number} [y] - input value\n\t* @returns {(number|null)} mean absolute error or null\n\t*/\n\tfunction accumulator( x, y ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn mean();\n\t\t}\n\t\treturn mean( abs( y-x ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmmae;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving mean absolute percentage error incrementally.\n*\n* @module @stdlib/stats/incr/mmape\n*\n* @example\n* var incrmmape = require( '@stdlib/stats/incr/mmape' );\n*\n* var accumulator = incrmmape( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns ~33.33\n*\n* m = accumulator( 5.0, 2.0 );\n* // returns ~91.67\n*\n* m = accumulator( 3.0, 2.0 );\n* // returns ~77.78\n*\n* m = accumulator( 2.0, 5.0 );\n* // returns ~86.67\n*\n* m = accumulator();\n* // returns ~86.67\n*/\n\n// MODULES //\n\nvar incrmmape = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmmape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar incrmmean = require( './../../../incr/mmean' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving mean absolute percentage error.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmmape( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns ~33.33\n*\n* m = accumulator( 5.0, 2.0 );\n* // returns ~91.67\n*\n* m = accumulator( 3.0, 2.0 );\n* // returns ~77.78\n*\n* m = accumulator( 2.0, 5.0 );\n* // returns ~86.67\n*\n* m = accumulator();\n* // returns ~86.67\n*/\nfunction incrmmape( W ) {\n\tvar mean;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tmean = incrmmean( W );\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated mean absolute percentage error. If not provided input values, the accumulator function returns the current mean absolute percentage error.\n\t*\n\t* @private\n\t* @param {number} [f] - input value\n\t* @param {number} [a] - input value\n\t* @returns {(number|null)} mean absolute percentage error or null\n\t*/\n\tfunction accumulator( f, a ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn mean();\n\t\t}\n\t\treturn mean( 100.0 * abs( (a-f)/a ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmmape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving mean directional accuracy incrementally.\n*\n* @module @stdlib/stats/incr/mmda\n*\n* @example\n* var incrmmda = require( '@stdlib/stats/incr/mmda' );\n*\n* var accumulator = incrmmda( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* m = accumulator( 5.0, 2.0 );\n* // returns 0.5\n*\n* m = accumulator( 3.0, 2.0 );\n* // returns ~0.33\n*\n* m = accumulator( 4.0, 5.0 );\n* // returns ~0.33\n*\n* m = accumulator();\n* // returns ~0.33\n*/\n\n// MODULES //\n\nvar incrmmda = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmmda;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar incrmmean = require( './../../../incr/mmean' );\nvar signum = require( '@stdlib/math/base/special/signum' );\nvar kroneckerDelta = require( '@stdlib/math/base/special/kronecker-delta' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving mean directional accuracy.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmmda( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* m = accumulator( 5.0, 2.0 );\n* // returns 0.5\n*\n* m = accumulator( 3.0, 2.0 );\n* // returns ~0.33\n*\n* m = accumulator( 4.0, 5.0 );\n* // returns ~0.33\n*\n* m = accumulator();\n* // returns ~0.33\n*/\nfunction incrmmda( W ) {\n\tvar mean;\n\tvar FLG;\n\tvar f0;\n\tvar a0;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tmean = incrmmean( W );\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated mean directional accuracy. If not provided input values, the accumulator function returns the current mean directional.\n\t*\n\t* @private\n\t* @param {number} [f] - forecast value\n\t* @param {number} [a] - actual value\n\t* @returns {(number|null)} mean directional accuracy or null\n\t*/\n\tfunction accumulator( f, a ) {\n\t\tvar sf;\n\t\tvar sa;\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn mean();\n\t\t}\n\t\tif ( FLG === void 0 ) {\n\t\t\tFLG = true;\n\t\t\tf0 = f;\n\t\t\ta0 = a;\n\t\t}\n\t\tsf = signum( f-f0 );\n\t\tsa = signum( a-a0 );\n\t\tf0 = f;\n\t\ta0 = a;\n\t\treturn mean( kroneckerDelta( sf, sa ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmmda;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving mean error incrementally.\n*\n* @module @stdlib/stats/incr/mme\n*\n* @example\n* var incrmme = require( '@stdlib/stats/incr/mme' );\n*\n* var accumulator = incrmme( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* m = accumulator( -5.0, 2.0 );\n* // returns 4.0\n*\n* m = accumulator( 3.0, 2.0 );\n* // returns ~2.33\n*\n* m = accumulator( 5.0, -2.0 );\n* // returns ~-0.33\n*\n* m = accumulator();\n* // returns ~-0.33\n*/\n\n// MODULES //\n\nvar incrmme = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmme;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar incrmmean = require( './../../../incr/mmean' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving mean error.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmme( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* m = accumulator( -5.0, 2.0 );\n* // returns 4.0\n*\n* m = accumulator( 3.0, 2.0 );\n* // returns ~2.33\n*\n* m = accumulator( 5.0, -2.0 );\n* // returns ~-0.33\n*\n* m = accumulator();\n* // returns ~-0.33\n*/\nfunction incrmme( W ) {\n\tvar mean;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tmean = incrmmean( W );\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated mean error. If not provided input values, the accumulator function returns the current mean error.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @param {number} [y] - input value\n\t* @returns {(number|null)} mean error or null\n\t*/\n\tfunction accumulator( x, y ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn mean();\n\t\t}\n\t\treturn mean( y-x );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmme;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving arithmetic mean and corrected sample standard deviation incrementally.\n*\n* @module @stdlib/stats/incr/mmeanstdev\n*\n* @example\n* var incrmmeanstdev = require( '@stdlib/stats/incr/mmeanstdev' );\n*\n* var accumulator = incrmmeanstdev( 3 );\n*\n* var v = accumulator();\n* // returns null\n*\n* v = accumulator( 2.0 );\n* // returns [ 2.0, 0.0 ]\n*\n* v = accumulator( -5.0 );\n* // returns [ -1.5, ~4.95 ]\n*\n* v = accumulator( 3.0 );\n* // returns [ 0.0, ~4.36 ]\n*\n* v = accumulator( 5.0 );\n* // returns [ 1.0, ~5.29 ]\n*\n* v = accumulator();\n* // returns [ 1.0, ~5.29 ]\n*/\n\n// MODULES //\n\nvar incrmmeanstdev = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmmeanstdev;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isArrayLike = require( '@stdlib/assert/is-array-like-object' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving arithmetic mean and corrected sample standard deviation.\n*\n* ## Method\n*\n* -   Let \\\\(W\\\\) be a window of \\\\(N\\\\) elements over which we want to compute a corrected sample standard deviation.\n*\n* -   We first recognize that the corrected sample standard deviation is defined as the square root of the unbiased sample variance. Accordingly, in order to derive an update equation for the corrected sample standard deviation, deriving an update equation for the unbiased sample variance is sufficient.\n*\n* -   The difference between the unbiased sample variance in a window \\\\(W_i\\\\) and the unbiased sample variance in a window \\\\(W_{i+1})\\\\) is given by\n*\n*     ```tex\n*     \\Delta s^2 = s_{i+1}^2 - s_{i}^2\n*     ```\n*\n* -   If we multiply both sides by \\\\(N-1\\\\),\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = (N-1)s_{i+1}^2 - (N-1)s_{i}^2\n*     ```\n*\n* -   If we substitute the definition of the unbiased sample variance having the form\n*\n*     ```tex\n*     \\begin{align*}\n*     s^2 &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} (x_i - \\bar{x})^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} (x_i^2 - 2\\bar{x}x_i + \\bar{x}^2) \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - 2\\bar{x} \\sum_{i=1}^{N} x_i + \\sum_{i=1}^{N} \\bar{x}^2) \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - \\frac{2N\\bar{x}\\sum_{i=1}^{N} x_i}{N} + N\\bar{x}^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - 2N\\bar{x}^2 + N\\bar{x}^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - N\\bar{x}^2 \\biggr)\n*     \\end{align*}\n*     ```\n*\n*     we return\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = \\biggl(\\sum_{k=1}^N x_k^2 - N\\bar{x}_{i+1}^2 \\biggr) - \\biggl(\\sum_{k=0}^{N-1} x_k^2 - N\\bar{x}_{i}^2 \\biggr)\n*     ```\n*\n* -   This can be further simplified by recognizing that subtracting the sums reduces to \\\\(x_N^2 - x_0^2\\\\); in which case,\n*\n*     ```tex\n*     \\begin{align*}\n*     (N-1)(\\Delta s^2) &= x_N^2 - x_0^2 - N\\bar{x}_{i+1}^2 + N\\bar{x}_{i}^2 \\\\\n*     &= x_N^2 - x_0^2 - N(\\bar{x}_{i+1}^2 - \\bar{x}_{i}^2) \\\\\n*     &= x_N^2 - x_0^2 - N(\\bar{x}_{i+1} - \\bar{x}_{i})(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     \\end{align*}\n*     ```\n*\n* -   Recognizing that the difference of means can be expressed\n*\n*     ```tex\n*     \\bar{x}_{i+1} - \\bar{x}_i = \\frac{1}{N} \\biggl( \\sum_{k=1}^N x_k - \\sum_{k=0}^{N-1} x_k \\biggr) = \\frac{x_N - x_0}{N}\n*     ```\n*\n*     and substituting into the equation above\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = x_N^2 - x_0^2 - (x_N - x_0)(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     ```\n*\n* -   Rearranging terms gives us the update equation\n*\n*     ```tex\n*     \\begin{align*}\n*     (N-1)(\\Delta s^2) &= (x_N - x_0)(x_N + x_0) - (x_N - x_0)(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     &= (x_N - x_0)(x_N + x_0 - \\bar{x}_{i+1} - \\bar{x}_{i}) \\\\\n*     &= (x_N - x_0)(x_N - \\bar{x}_{i+1} + x_0 - \\bar{x}_{i})\n*     \\end{align*}\n*     ```\n*\n* @param {Collection} [out] - output array\n* @param {PositiveInteger} window - window size\n* @throws {TypeError} output argument must be array-like\n* @throws {TypeError} window size must be a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmmeanstdev( 3 );\n*\n* var v = accumulator();\n* // returns null\n*\n* v = accumulator( 2.0 );\n* // returns [ 2.0, 0.0 ]\n*\n* v = accumulator( -5.0 );\n* // returns [ -1.5, ~4.95 ]\n*\n* v = accumulator( 3.0 );\n* // returns [ 0.0, ~4.36 ]\n*\n* v = accumulator( 5.0 );\n* // returns [ 1.0, ~5.29 ]\n*\n* v = accumulator();\n* // returns [ 1.0, ~5.29 ]\n*/\nfunction incrmmeanstdev( out, window ) {\n\tvar meanstdev;\n\tvar delta;\n\tvar buf;\n\tvar tmp;\n\tvar M2;\n\tvar mu;\n\tvar d1;\n\tvar d2;\n\tvar W;\n\tvar N;\n\tvar n;\n\tvar i;\n\tif ( arguments.length === 1 ) {\n\t\tmeanstdev = [ 0.0, 0.0 ];\n\t\tW = out;\n\t} else {\n\t\tif ( !isArrayLike( out ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Output argument must be an array-like object. Value: `%s`.', out ) );\n\t\t}\n\t\tmeanstdev = out;\n\t\tW = window;\n\t}\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Window size must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tbuf = new Float64Array( W );\n\tn = W - 1;\n\tM2 = 0.0;\n\tmu = 0.0;\n\ti = -1;\n\tN = 0;\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns updated accumulated values. If not provided a value, the accumulator function returns the current accumulated values.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(ArrayLikeObject|null)} output array or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tvar k;\n\t\tvar v;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tmeanstdev[ 0 ] = mu;\n\t\t\tif ( N === 1 ) {\n\t\t\t\tif ( isnan( M2 ) ) {\n\t\t\t\t\tmeanstdev[ 1 ] = NaN;\n\t\t\t\t} else {\n\t\t\t\t\tmeanstdev[ 1 ] = 0.0;\n\t\t\t\t}\n\t\t\t} else if ( N < W ) {\n\t\t\t\tmeanstdev[ 1 ] = sqrt( M2/(N-1) );\n\t\t\t} else {\n\t\t\t\tmeanstdev[ 1 ] = sqrt( M2/n );\n\t\t\t}\n\t\t\treturn meanstdev;\n\t\t}\n\t\t// Update the index for managing the circular buffer:\n\t\ti = (i+1) % W;\n\n\t\t// Case: incoming value is NaN, the sliding second moment is automatically NaN...\n\t\tif ( isnan( x ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tmu = NaN;\n\t\t\tM2 = NaN;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tbuf[ i ] = x; // update buffer\n\t\t\tN += 1;\n\t\t\tdelta = x - mu;\n\t\t\tmu += delta / N;\n\t\t\tM2 += delta * (x - mu);\n\n\t\t\tmeanstdev[ 0 ] = mu;\n\t\t\tif ( N === 1 ) {\n\t\t\t\tmeanstdev[ 1 ] = 0.0;\n\t\t\t} else {\n\t\t\t\tmeanstdev[ 1 ] = sqrt( M2/(N-1) );\n\t\t\t}\n\t\t\treturn meanstdev;\n\t\t}\n\t\t// Case: N = W = 1\n\t\telse if ( N === 1 ) {\n\t\t\tmu = x;\n\t\t\tM2 = 0.0;\n\t\t\tmeanstdev[ 0 ] = x;\n\t\t\tmeanstdev[ 1 ] = 0.0;\n\t\t\treturn meanstdev;\n\t\t}\n\t\t// Case: outgoing value is NaN, and, thus, we need to compute the accumulated values...\n\t\telse if ( isnan( buf[ i ] ) ) {\n\t\t\tN = 1;\n\t\t\tmu = x;\n\t\t\tM2 = 0.0;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tv = buf[ k ];\n\t\t\t\t\tif ( isnan( v ) ) {\n\t\t\t\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\t\t\t\tmu = NaN;\n\t\t\t\t\t\tM2 = NaN;\n\t\t\t\t\t\tbreak; // second moment is automatically NaN, so no need to continue\n\t\t\t\t\t}\n\t\t\t\t\tN += 1;\n\t\t\t\t\tdelta = v - mu;\n\t\t\t\t\tmu += delta / N;\n\t\t\t\t\tM2 += delta * (v - mu);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: neither the current second moment nor the incoming value are NaN, so we need to update the accumulated values...\n\t\telse if ( isnan( M2 ) === false ) {\n\t\t\ttmp = buf[ i ];\n\t\t\tdelta = x - tmp;\n\t\t\td1 = tmp - mu;\n\t\t\tmu += delta / W;\n\t\t\td2 = x - mu;\n\t\t\tM2 += delta * (d1 + d2);\n\t\t}\n\t\t// Case: the current second moment is NaN, so nothing to do until the buffer no longer contains NaN values...\n\t\tbuf[ i ] = x;\n\n\t\tmeanstdev[ 0 ] = mu;\n\t\tmeanstdev[ 1 ] = sqrt( M2/n );\n\t\treturn meanstdev;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmmeanstdev;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving arithmetic mean and unbiased sample variance incrementally.\n*\n* @module @stdlib/stats/incr/mmeanvar\n*\n* @example\n* var incrmmeanvar = require( '@stdlib/stats/incr/mmeanvar' );\n*\n* var accumulator = incrmmeanvar( 3 );\n*\n* var v = accumulator();\n* // returns null\n*\n* v = accumulator( 2.0 );\n* // returns [ 2.0, 0.0 ]\n*\n* v = accumulator( -5.0 );\n* // returns [ -1.5, 24.5 ]\n*\n* v = accumulator( 3.0 );\n* // returns [ 0.0, 19.0 ]\n*\n* v = accumulator( 5.0 );\n* // returns [ 1.0, 28.0 ]\n*\n* v = accumulator();\n* // returns [ 1.0, 28.0 ]\n*/\n\n// MODULES //\n\nvar incrmmeanvar = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmmeanvar;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isArrayLike = require( '@stdlib/assert/is-array-like-object' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving arithmetic mean and unbiased sample variance.\n*\n* ## Method\n*\n* -   Let \\\\(W\\\\) be a window of \\\\(N\\\\) elements over which we want to compute an unbiased sample variance.\n*\n* -   The difference between the unbiased sample variance in a window \\\\(W_i\\\\) and the unbiased sample variance in a window \\\\(W_{i+1})\\\\) is given by\n*\n*     ```tex\n*     \\Delta s^2 = s_{i+1}^2 - s_{i}^2\n*     ```\n*\n* -   If we multiply both sides by \\\\(N-1\\\\),\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = (N-1)s_{i+1}^2 - (N-1)s_{i}^2\n*     ```\n*\n* -   If we substitute the definition of the unbiased sample variance having the form\n*\n*     ```tex\n*     \\begin{align*}\n*     s^2 &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} (x_i - \\bar{x})^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} (x_i^2 - 2\\bar{x}x_i + \\bar{x}^2) \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - 2\\bar{x} \\sum_{i=1}^{N} x_i + \\sum_{i=1}^{N} \\bar{x}^2) \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - \\frac{2N\\bar{x}\\sum_{i=1}^{N} x_i}{N} + N\\bar{x}^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - 2N\\bar{x}^2 + N\\bar{x}^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - N\\bar{x}^2 \\biggr)\n*     \\end{align*}\n*     ```\n*\n*     we return\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = \\biggl(\\sum_{k=1}^N x_k^2 - N\\bar{x}_{i+1}^2 \\biggr) - \\biggl(\\sum_{k=0}^{N-1} x_k^2 - N\\bar{x}_{i}^2 \\biggr)\n*     ```\n*\n* -   This can be further simplified by recognizing that subtracting the sums reduces to \\\\(x_N^2 - x_0^2\\\\); in which case,\n*\n*     ```tex\n*     \\begin{align*}\n*     (N-1)(\\Delta s^2) &= x_N^2 - x_0^2 - N\\bar{x}_{i+1}^2 + N\\bar{x}_{i}^2 \\\\\n*     &= x_N^2 - x_0^2 - N(\\bar{x}_{i+1}^2 - \\bar{x}_{i}^2) \\\\\n*     &= x_N^2 - x_0^2 - N(\\bar{x}_{i+1} - \\bar{x}_{i})(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     \\end{align*}\n*     ```\n*\n* -   Recognizing that the difference of means can be expressed\n*\n*     ```tex\n*     \\bar{x}_{i+1} - \\bar{x}_i = \\frac{1}{N} \\biggl( \\sum_{k=1}^N x_k - \\sum_{k=0}^{N-1} x_k \\biggr) = \\frac{x_N - x_0}{N}\n*     ```\n*\n*     and substituting into the equation above\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = x_N^2 - x_0^2 - (x_N - x_0)(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     ```\n*\n* -   Rearranging terms gives us the update equation\n*\n*     ```tex\n*     \\begin{align*}\n*     (N-1)(\\Delta s^2) &= (x_N - x_0)(x_N + x_0) - (x_N - x_0)(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     &= (x_N - x_0)(x_N + x_0 - \\bar{x}_{i+1} - \\bar{x}_{i}) \\\\\n*     &= (x_N - x_0)(x_N - \\bar{x}_{i+1} + x_0 - \\bar{x}_{i})\n*     \\end{align*}\n*     ```\n*\n* @param {Collection} [out] - output array\n* @param {PositiveInteger} window - window size\n* @throws {TypeError} output argument must be array-like\n* @throws {TypeError} window size must be a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmmeanvar( 3 );\n*\n* var v = accumulator();\n* // returns null\n*\n* v = accumulator( 2.0 );\n* // returns [ 2.0, 0.0 ]\n*\n* v = accumulator( -5.0 );\n* // returns [ -1.5, 24.5 ]\n*\n* v = accumulator( 3.0 );\n* // returns [ 0.0, 19.0 ]\n*\n* v = accumulator( 5.0 );\n* // returns [ 1.0, 28.0 ]\n*\n* v = accumulator();\n* // returns [ 1.0, 28.0 ]\n*/\nfunction incrmmeanvar( out, window ) {\n\tvar meanvar;\n\tvar delta;\n\tvar buf;\n\tvar tmp;\n\tvar M2;\n\tvar mu;\n\tvar d1;\n\tvar d2;\n\tvar W;\n\tvar N;\n\tvar n;\n\tvar i;\n\tif ( arguments.length === 1 ) {\n\t\tmeanvar = [ 0.0, 0.0 ];\n\t\tW = out;\n\t} else {\n\t\tif ( !isArrayLike( out ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Output argument must be an array-like object. Value: `%s`.', out ) );\n\t\t}\n\t\tmeanvar = out;\n\t\tW = window;\n\t}\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Window size must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tbuf = new Float64Array( W );\n\tn = W - 1;\n\tM2 = 0.0;\n\tmu = 0.0;\n\ti = -1;\n\tN = 0;\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns updated accumulated values. If not provided a value, the accumulator function returns the current accumulated values.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(ArrayLikeObject|null)} output array or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tvar k;\n\t\tvar v;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tmeanvar[ 0 ] = mu;\n\t\t\tif ( N === 1 ) {\n\t\t\t\tif ( isnan( M2 ) ) {\n\t\t\t\t\tmeanvar[ 1 ] = NaN;\n\t\t\t\t} else {\n\t\t\t\t\tmeanvar[ 1 ] = 0.0;\n\t\t\t\t}\n\t\t\t} else if ( N < W ) {\n\t\t\t\tmeanvar[ 1 ] = M2 / (N-1);\n\t\t\t} else {\n\t\t\t\tmeanvar[ 1 ] = M2 / n;\n\t\t\t}\n\t\t\treturn meanvar;\n\t\t}\n\t\t// Update the index for managing the circular buffer:\n\t\ti = (i+1) % W;\n\n\t\t// Case: incoming value is NaN, the sliding second moment is automatically NaN...\n\t\tif ( isnan( x ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tmu = NaN;\n\t\t\tM2 = NaN;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tbuf[ i ] = x; // update buffer\n\t\t\tN += 1;\n\t\t\tdelta = x - mu;\n\t\t\tmu += delta / N;\n\t\t\tM2 += delta * (x - mu);\n\n\t\t\tmeanvar[ 0 ] = mu;\n\t\t\tif ( N === 1 ) {\n\t\t\t\tmeanvar[ 1 ] = 0.0;\n\t\t\t} else {\n\t\t\t\tmeanvar[ 1 ] = M2 / (N-1);\n\t\t\t}\n\t\t\treturn meanvar;\n\t\t}\n\t\t// Case: N = W = 1\n\t\telse if ( N === 1 ) {\n\t\t\tmu = x;\n\t\t\tM2 = 0.0;\n\t\t\tmeanvar[ 0 ] = x;\n\t\t\tmeanvar[ 1 ] = 0.0;\n\t\t\treturn meanvar;\n\t\t}\n\t\t// Case: outgoing value is NaN, and, thus, we need to compute the accumulated values...\n\t\telse if ( isnan( buf[ i ] ) ) {\n\t\t\tN = 1;\n\t\t\tmu = x;\n\t\t\tM2 = 0.0;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tv = buf[ k ];\n\t\t\t\t\tif ( isnan( v ) ) {\n\t\t\t\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\t\t\t\tmu = NaN;\n\t\t\t\t\t\tM2 = NaN;\n\t\t\t\t\t\tbreak; // second moment is automatically NaN, so no need to continue\n\t\t\t\t\t}\n\t\t\t\t\tN += 1;\n\t\t\t\t\tdelta = v - mu;\n\t\t\t\t\tmu += delta / N;\n\t\t\t\t\tM2 += delta * (v - mu);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: neither the current second moment nor the incoming value are NaN, so we need to update the accumulated values...\n\t\telse if ( isnan( M2 ) === false ) {\n\t\t\ttmp = buf[ i ];\n\t\t\tdelta = x - tmp;\n\t\t\td1 = tmp - mu;\n\t\t\tmu += delta / W;\n\t\t\td2 = x - mu;\n\t\t\tM2 += delta * (d1 + d2);\n\t\t}\n\t\t// Case: the current second moment is NaN, so nothing to do until the buffer no longer contains NaN values...\n\t\tbuf[ i ] = x;\n\n\t\tmeanvar[ 0 ] = mu;\n\t\tmeanvar[ 1 ] = M2 / n;\n\t\treturn meanvar;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmmeanvar;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute moving minimum and maximum absolute values incrementally.\n*\n* @module @stdlib/stats/incr/mminmaxabs\n*\n* @example\n* var incrmminmaxabs = require( '@stdlib/stats/incr/mminmaxabs' );\n*\n* var accumulator = incrmminmaxabs( 3 );\n*\n* var mm = accumulator();\n* // returns null\n*\n* mm = accumulator( 2.0 );\n* // returns [ 2.0, 2.0 ]\n*\n* mm = accumulator( -5.0 );\n* // returns [ 2.0, 5.0 ]\n*\n* mm = accumulator( 3.0 );\n* // returns [ 2.0, 5.0 ]\n*\n* mm = accumulator( 5.0 );\n* // returns [ 3.0, 5.0 ]\n*\n* mm = accumulator();\n* // returns [ 3.0, 5.0 ]\n*/\n\n// MODULES //\n\nvar incrmminmaxabs = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmminmaxabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isArrayLike = require( '@stdlib/assert/is-array-like-object' );\nvar incrmminmax = require( './../../../incr/mminmax' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes moving minimum and maximum absolute values.\n*\n* @param {Collection} [out] - output array\n* @param {PositiveInteger} window - window size\n* @throws {TypeError} output argument must be array-like\n* @throws {TypeError} window size must be a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmminmaxabs( 3 );\n*\n* var mm = accumulator();\n* // returns null\n*\n* mm = accumulator( 2.0 );\n* // returns [ 2.0, 2.0 ]\n*\n* mm = accumulator( -5.0 );\n* // returns [ 2.0, 5.0 ]\n*\n* mm = accumulator( 3.0 );\n* // returns [ 2.0, 5.0 ]\n*\n* mm = accumulator( 5.0 );\n* // returns [ 3.0, 5.0 ]\n*\n* mm = accumulator();\n* // returns [ 3.0, 5.0 ]\n*/\nfunction incrmminmaxabs( out, window ) {\n\tvar minmax;\n\tvar o;\n\tvar W;\n\tif ( arguments.length === 1 ) {\n\t\to = [ 0.0, 0.0 ];\n\t\tW = out;\n\t} else {\n\t\tif ( !isArrayLike( out ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Output argument must be an array-like object. Value: `%s`.', out ) );\n\t\t}\n\t\to = out;\n\t\tW = window;\n\t}\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Window size must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tminmax = incrmminmax( o, W );\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns updated minimum and maximum absolute values. If not provided a value, the accumulator function returns the current minimum and maximum absolute values.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(ArrayLikeObject|null)} output array or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn minmax();\n\t\t}\n\t\treturn minmax( abs( x ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmminmaxabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving mean percentage error incrementally.\n*\n* @module @stdlib/stats/incr/mmpe\n*\n* @example\n* var incrmmpe = require( '@stdlib/stats/incr/mmpe' );\n*\n* var accumulator = incrmmpe( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns ~33.33\n*\n* m = accumulator( 5.0, 2.0 );\n* // returns ~-58.33\n*\n* m = accumulator( 3.0, 2.0 );\n* // returns ~-55.56\n*\n* m = accumulator( 2.0, 5.0 );\n* // returns ~-46.67\n*\n* m = accumulator();\n* // returns ~-46.67\n*/\n\n// MODULES //\n\nvar incrmmpe = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmmpe;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar incrmmean = require( './../../../incr/mmean' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving mean percentage error.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmmpe( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns ~33.33\n*\n* m = accumulator( 5.0, 2.0 );\n* // returns ~-58.33\n*\n* m = accumulator( 3.0, 2.0 );\n* // returns ~-55.56\n*\n* m = accumulator( 2.0, 5.0 );\n* // returns ~-46.67\n*\n* m = accumulator();\n* // returns ~-46.67\n*/\nfunction incrmmpe( W ) {\n\tvar mean;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tmean = incrmmean( W );\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated mean percentage error. If not provided input values, the accumulator function returns the current mean percentage error.\n\t*\n\t* @private\n\t* @param {number} [f] - input value\n\t* @param {number} [a] - input value\n\t* @returns {(number|null)} mean percentage error or null\n\t*/\n\tfunction accumulator( f, a ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn mean();\n\t\t}\n\t\treturn mean( 100.0 * ((a-f)/a) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmmpe;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving mean squared error (MSE) incrementally.\n*\n* @module @stdlib/stats/incr/mmse\n*\n* @example\n* var incrmmse = require( '@stdlib/stats/incr/mmse' );\n*\n* var accumulator = incrmmse( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* m = accumulator( -5.0, 2.0 );\n* // returns 25.0\n*\n* m = accumulator( 3.0, 2.0 );\n* // returns 17.0\n*\n* m = accumulator( 5.0, -2.0 );\n* // returns 33.0\n*\n* m = accumulator();\n* // returns 33.0\n*/\n\n// MODULES //\n\nvar incrmmse = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmmse;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar incrmmean = require( './../../../incr/mmean' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving mean squared error.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmmse( 3 );\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* m = accumulator( -5.0, 2.0 );\n* // returns 25.0\n*\n* m = accumulator( 3.0, 2.0 );\n* // returns 17.0\n*\n* m = accumulator( 5.0, -2.0 );\n* // returns 33.0\n*\n* m = accumulator();\n* // returns 33.0\n*/\nfunction incrmmse( W ) {\n\tvar mean;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tmean = incrmmean( W );\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated mean squared error. If not provided input values, the accumulator function returns the current mean squared error.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @param {number} [y] - input value\n\t* @returns {(number|null)} mean squared error or null\n\t*/\n\tfunction accumulator( x, y ) {\n\t\tvar r;\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn mean();\n\t\t}\n\t\tr = y - x;\n\t\treturn mean( r*r );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmmse;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving squared sample Pearson product-moment correlation coefficient incrementally.\n*\n* @module @stdlib/stats/incr/mpcorr2\n*\n* @example\n* var incrmpcorr2 = require( '@stdlib/stats/incr/mpcorr2' );\n*\n* var accumulator = incrmpcorr2( 3 );\n*\n* var r2 = accumulator();\n* // returns null\n*\n* r2 = accumulator( 2.0, 1.0 );\n* // returns 0.0\n*\n* r2 = accumulator( -5.0, 3.14 );\n* // returns ~1.0\n*\n* r2 = accumulator( 3.0, -1.0 );\n* // returns ~0.86\n*\n* r2 = accumulator( 5.0, -9.5 );\n* // returns ~0.74\n*\n* r2 = accumulator();\n* // returns ~0.74\n*/\n\n// MODULES //\n\nvar incrmpcorr2 = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmpcorr2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar incrmpcorr = require( './../../../incr/mpcorr' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving squared sample Pearson product-moment correlation coefficient.\n*\n* @param {PositiveInteger} W - window size\n* @param {number} [meanx] - mean value\n* @param {number} [meany] - mean value\n* @throws {TypeError} first argument must be a positive integer\n* @throws {TypeError} second argument must be a number\n* @throws {TypeError} third argument must be a number\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmpcorr2( 3 );\n*\n* var r2 = accumulator();\n* // returns null\n*\n* r2 = accumulator( 2.0, 1.0 );\n* // returns 0.0\n*\n* r2 = accumulator( -5.0, 3.14 );\n* // returns ~1.0\n*\n* r2 = accumulator( 3.0, -1.0 );\n* // returns ~0.86\n*\n* r2 = accumulator( 5.0, -9.5 );\n* // returns ~0.74\n*\n* r2 = accumulator();\n* // returns ~0.74\n*\n* @example\n* var accumulator = incrmpcorr2( 3, -2.0, 10.0 );\n*/\nfunction incrmpcorr2( W, meanx, meany ) {\n\tvar acc;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNumber( meanx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', meanx ) );\n\t\t}\n\t\tif ( !isNumber( meany ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a number. Value: `%s`.', meany ) );\n\t\t}\n\t\tacc = incrmpcorr( W, meanx, meany );\n\t} else {\n\t\tacc = incrmpcorr( W );\n\t}\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated accumulated value. If not provided a value, the accumulator function returns the current accumulated value.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @param {number} [y] - input value\n\t* @returns {(number|null)} squared sample correlation coefficient or null\n\t*/\n\tfunction accumulator( x, y ) {\n\t\tvar r;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tr = acc();\n\t\t\tif ( r === null ) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\treturn r * r;\n\t\t}\n\t\tr = acc( x, y );\n\t\treturn r * r;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmpcorr2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving sample Pearson product-moment correlation distance incrementally.\n*\n* @module @stdlib/stats/incr/mpcorrdist\n*\n* @example\n* var incrmpcorrdist = require( '@stdlib/stats/incr/mpcorrdist' );\n*\n* var accumulator = incrmpcorrdist( 3 );\n*\n* var d = accumulator();\n* // returns null\n*\n* d = accumulator( 2.0, 1.0 );\n* // returns 1.0\n*\n* d = accumulator( -5.0, 3.14 );\n* // returns ~2.0\n*\n* d = accumulator( 3.0, -1.0 );\n* // returns ~1.925\n*\n* d = accumulator( 5.0, -9.5 );\n* // returns ~1.863\n*\n* d = accumulator();\n* // returns ~1.863\n*/\n\n// MODULES //\n\nvar incrmpcorrdist = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmpcorrdist;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar incrmpcorr = require( './../../../incr/mpcorr' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving sample Pearson product-moment correlation distance.\n*\n* ## Method\n*\n* -   The sample Pearson product-moment correlation distance is defined as\n*\n*     ```tex\n*     d_{n} = 1 - r_{n} = 1 - \\frac{\\operatorname{cov}_n(x,y)}{\\sigma_{x,n} \\sigma_{y,n}}\n*     ```\n*\n* -   The implementation thus computes the sample Pearson product-moment correlation coefficient \\\\(r_n\\\\) for each window \\\\(n\\\\) and subtracts the coefficient from 1.\n*\n*\n* @param {PositiveInteger} W - window size\n* @param {number} [meanx] - mean value\n* @param {number} [meany] - mean value\n* @throws {TypeError} first argument must be a positive integer\n* @throws {TypeError} second argument must be a number\n* @throws {TypeError} third argument must be a number\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmpcorrdist( 3 );\n*\n* var d = accumulator();\n* // returns null\n*\n* d = accumulator( 2.0, 1.0 );\n* // returns 1.0\n*\n* d = accumulator( -5.0, 3.14 );\n* // returns ~2.0\n*\n* d = accumulator( 3.0, -1.0 );\n* // returns ~1.925\n*\n* d = accumulator( 5.0, -9.5 );\n* // returns ~1.863\n*\n* d = accumulator();\n* // returns ~1.863\n*\n* @example\n* var accumulator = incrmpcorrdist( 3, -2.0, 10.0 );\n*/\nfunction incrmpcorrdist( W, meanx, meany ) {\n\tvar pcorr;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNumber( meanx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', meanx ) );\n\t\t}\n\t\tif ( !isNumber( meany ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a number. Value: `%s`.', meany ) );\n\t\t}\n\t\tpcorr = incrmpcorr( W, meanx, meany );\n\t} else {\n\t\tpcorr = incrmpcorr( W );\n\t}\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated sample correlation distance. If not provided a value, the accumulator function returns the current sample correlation distance.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @param {number} [y] - input value\n\t* @returns {(number|null)} sample correlation distance or null\n\t*/\n\tfunction accumulator( x, y ) {\n\t\tvar r;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tr = pcorr();\n\t\t\tif ( r === null ) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\treturn 1.0 - r;\n\t\t}\n\t\treturn 1.0 - pcorr( x, y );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmpcorrdist;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the mean percentage error incrementally.\n*\n* @module @stdlib/stats/incr/mpe\n*\n* @example\n* var incrmpe = require( '@stdlib/stats/incr/mpe' );\n*\n* var accumulator = incrmpe();\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns ~33.33\n*\n* m = accumulator( 5.0, 2.0 );\n* // returns ~-58.33\n*\n* m = accumulator();\n* // returns ~-58.33\n*/\n\n// MODULES //\n\nvar incrmpe = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmpe;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar incrmean = require( './../../../incr/mean' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes the mean percentage error.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmpe();\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns ~33.33\n*\n* m = accumulator( 5.0, 2.0 );\n* // returns ~-58.33\n*\n* m = accumulator();\n* // returns ~-58.33\n*/\nfunction incrmpe() {\n\tvar mean = incrmean();\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated mean percentage error. If not provided input values, the accumulator function returns the current mean percentage error.\n\t*\n\t* @private\n\t* @param {number} [f] - input value\n\t* @param {number} [a] - input value\n\t* @returns {(number|null)} mean percentage error or null\n\t*/\n\tfunction accumulator( f, a ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn mean();\n\t\t}\n\t\treturn mean( 100.0 * ((a-f)/a) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmpe;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving root mean squared error (RMSE) incrementally.\n*\n* @module @stdlib/stats/incr/mrmse\n*\n* @example\n* var incrmrmse = require( '@stdlib/stats/incr/mrmse' );\n*\n* var accumulator = incrmrmse( 3 );\n*\n* var r = accumulator();\n* // returns null\n*\n* r = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* r = accumulator( -5.0, 2.0 );\n* // returns 5.0\n*\n* r = accumulator( 3.0, 2.0 );\n* // returns ~4.12\n*\n* r = accumulator( 5.0, -2.0 );\n* // returns ~5.74\n*\n* r = accumulator();\n* // returns ~5.74\n*/\n\n// MODULES //\n\nvar incrmrmse = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmrmse;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar incrmmean = require( './../../../incr/mmean' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving root mean squared error.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmrmse( 3 );\n*\n* var r = accumulator();\n* // returns null\n*\n* r = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* r = accumulator( -5.0, 2.0 );\n* // returns 5.0\n*\n* r = accumulator( 3.0, 2.0 );\n* // returns ~4.12\n*\n* r = accumulator( 5.0, -2.0 );\n* // returns ~5.74\n*\n* r = accumulator();\n* // returns ~5.74\n*/\nfunction incrmrmse( W ) {\n\tvar mean;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tmean = incrmmean( W );\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated root mean squared error. If not provided input values, the accumulator function returns the current root mean squared error.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @param {number} [y] - input value\n\t* @returns {(number|null)} root mean squared error or null\n\t*/\n\tfunction accumulator( x, y ) {\n\t\tvar r;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tr = mean();\n\t\t\tif ( r === null ) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\treturn sqrt( r );\n\t\t}\n\t\tr = y - x;\n\t\treturn sqrt( mean( r*r ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmrmse;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving residual sum of squares (RSS) incrementally.\n*\n* @module @stdlib/stats/incr/mrss\n*\n* @example\n* var incrmrss = require( '@stdlib/stats/incr/mrss' );\n*\n* var accumulator = incrmrss( 3 );\n*\n* var r = accumulator();\n* // returns null\n*\n* r = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* r = accumulator( -5.0, 2.0 );\n* // returns 50.0\n*\n* r = accumulator( 3.0, 2.0 );\n* // returns 51.0\n*\n* r = accumulator( 5.0, -2.0 );\n* // returns 99.0\n*\n* r = accumulator();\n* // returns 99.0\n*/\n\n// MODULES //\n\nvar incrmrss = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmrss;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar incrmsum = require( './../../../incr/msum' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving residual sum of squares.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmrss( 3 );\n*\n* var r = accumulator();\n* // returns null\n*\n* r = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* r = accumulator( -5.0, 2.0 );\n* // returns 50.0\n*\n* r = accumulator( 3.0, 2.0 );\n* // returns 51.0\n*\n* r = accumulator( 5.0, -2.0 );\n* // returns 99.0\n*\n* r = accumulator();\n* // returns 99.0\n*/\nfunction incrmrss( W ) {\n\tvar sum;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tsum = incrmsum( W );\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated residual sum of squares. If not provided input values, the accumulator function returns the current residual sum of squares.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @param {number} [y] - input value\n\t* @returns {(number|null)} residual sum of squares or null\n\t*/\n\tfunction accumulator( x, y ) {\n\t\tvar r;\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn sum();\n\t\t}\n\t\tr = y - x;\n\t\treturn sum( r*r );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmrss;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the mean squared error incrementally.\n*\n* @module @stdlib/stats/incr/mse\n*\n* @example\n* var incrmse = require( '@stdlib/stats/incr/mse' );\n*\n* var accumulator = incrmse();\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* m = accumulator( -5.0, 2.0 );\n* // returns 25.0\n*\n* m = accumulator();\n* // returns 25.0\n*/\n\n// MODULES //\n\nvar incrmse = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmse;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar incrmean = require( './../../../incr/mean' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes the mean squared error.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmse();\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* m = accumulator( -5.0, 2.0 );\n* // returns 25.0\n*\n* m = accumulator();\n* // returns 25.0\n*/\nfunction incrmse() {\n\tvar mean = incrmean();\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated mean squared error. If not provided input values, the accumulator function returns the current mean squared error.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @param {number} [y] - input value\n\t* @returns {(number|null)} mean squared error or null\n\t*/\n\tfunction accumulator( x, y ) {\n\t\tvar r;\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn mean();\n\t\t}\n\t\tr = y - x;\n\t\treturn mean( r*r );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmse;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving statistical summary incrementally.\n*\n* @module @stdlib/stats/incr/msummary\n*\n* @example\n* var incrmsummary = require( '@stdlib/stats/incr/msummary' );\n*\n* var accumulator = incrmsummary( 3 );\n*\n* var summary = accumulator();\n* // returns {}\n*\n* summary = accumulator( 2.0 );\n* // returns {...}\n*\n* summary = accumulator( -5.0 );\n* // returns {...}\n*\n* summary = accumulator();\n* // returns {...}\n*/\n\n// MODULES //\n\nvar incrmsummary = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmsummary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar incrmsum = require( './../../../incr/msum' );\nvar incrmmean = require( './../../../incr/mmean' );\nvar incrmvariance = require( './../../../incr/mvariance' );\nvar incrmstdev = require( './../../../incr/mstdev' );\nvar incrmmin = require( './../../../incr/mmin' );\nvar incrmmax = require( './../../../incr/mmax' );\nvar incrmrange = require( './../../../incr/mrange' );\nvar incrmmidrange = require( './../../../incr/mmidrange' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving statistical summary.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmsummary( 3 );\n*\n* var summary = accumulator();\n* // returns {}\n*\n* summary = accumulator( 2.0 );\n* // returns {...}\n*\n* summary = accumulator( -5.0 );\n* // returns {...}\n*\n* summary = accumulator();\n* // returns {...}\n*/\nfunction incrmsummary( W ) {\n\tvar mvariance;\n\tvar mmidrange;\n\tvar summary;\n\tvar mrange;\n\tvar mstdev;\n\tvar mmean;\n\tvar msum;\n\tvar mmax;\n\tvar mmin;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tmvariance = incrmvariance( W );\n\tmmidrange = incrmmidrange( W );\n\tmrange = incrmrange( W );\n\tmstdev = incrmstdev( W );\n\tmmean = incrmmean( W );\n\tmsum = incrmsum( W );\n\tmmin = incrmmin( W );\n\tmmax = incrmmax( W );\n\tsummary = {};\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated summary. If not provided a value, the accumulator function returns the current summary.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {Object} summary\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn summary;\n\t\t}\n\t\tsummary.window = W;\n\t\tsummary.sum = msum( x );\n\t\tsummary.mean = mmean( x );\n\t\tsummary.variance = mvariance( x );\n\t\tsummary.stdev = mstdev( x );\n\t\tsummary.min = mmin( x );\n\t\tsummary.max = mmax( x );\n\t\tsummary.range = mrange( x );\n\t\tsummary.midrange = mmidrange( x );\n\t\treturn summary;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmsummary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving sum of products incrementally.\n*\n* @module @stdlib/stats/incr/msumprod\n*\n* @example\n* var incrmsumprod = require( '@stdlib/stats/incr/msumprod' );\n*\n* var accumulator = incrmsumprod( 3 );\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0, 3.0 );\n* // returns 6.0\n*\n* sum = accumulator( -5.0, 2.0 );\n* // returns -4.0\n*\n* sum = accumulator( 3.0, -2.0 );\n* // returns -10.0\n*\n* sum = accumulator( 5.0, 3.0 );\n* // returns -1.0\n*\n* sum = accumulator();\n* // returns -1.0\n*/\n\n// MODULES //\n\nvar incrmsumprod = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmsumprod;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar incrmsum = require( './../../../incr/msum' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving sum of products.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmsumprod( 3 );\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0, 3.0 );\n* // returns 6.0\n*\n* sum = accumulator( -5.0, 2.0 );\n* // returns -4.0\n*\n* sum = accumulator( 3.0, -2.0 );\n* // returns -10.0\n*\n* sum = accumulator( 5.0, 3.0 );\n* // returns -1.0\n*\n* sum = accumulator();\n* // returns -1.0\n*/\nfunction incrmsumprod( W ) {\n\tvar sum;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tsum = incrmsum( W );\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated sum. If not provided a value, the accumulator function returns the current sum.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @param {number} [y] - input value\n\t* @returns {(number|null)} sum or null\n\t*/\n\tfunction accumulator( x, y ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn sum();\n\t\t}\n\t\treturn sum( x*y );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmsumprod;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving variance-to-mean ratio (VMR) incrementally.\n*\n* @module @stdlib/stats/incr/mvmr\n*\n* @example\n* var incrmvmr = require( '@stdlib/stats/incr/mvmr' );\n*\n* var accumulator = incrmvmr( 3 );\n*\n* var F = accumulator();\n* // returns null\n*\n* F = accumulator( 2.0 );\n* // returns 0.0\n*\n* F = accumulator( 1.0 );\n* // returns ~0.33\n*\n* F = accumulator( 3.0 );\n* // returns 0.5\n*\n* F = accumulator( 7.0 );\n* // returns ~2.55\n*\n* F = accumulator();\n* // returns ~2.55\n*/\n\n// MODULES //\n\nvar incrmvmr = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmvmr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving variance-to-mean ratio (VMR).\n*\n* ## Method\n*\n* -   Let \\\\(W\\\\) be a window of \\\\(N\\\\) elements over which we want to compute a variance-to-mean ratio (VMR).\n*\n* -   The difference between the unbiased sample variance in a window \\\\(W_i\\\\) and the unbiased sample variance in a window \\\\(W_{i+1})\\\\) is given by\n*\n*     ```tex\n*     \\Delta s^2 = s_{i+1}^2 - s_{i}^2\n*     ```\n*\n* -   If we multiply both sides by \\\\(N-1\\\\),\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = (N-1)s_{i+1}^2 - (N-1)s_{i}^2\n*     ```\n*\n* -   If we substitute the definition of the unbiased sample variance having the form\n*\n*     ```tex\n*     \\begin{align*}\n*     s^2 &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} (x_i - \\bar{x})^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} (x_i^2 - 2\\bar{x}x_i + \\bar{x}^2) \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - 2\\bar{x} \\sum_{i=1}^{N} x_i + \\sum_{i=1}^{N} \\bar{x}^2) \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - \\frac{2N\\bar{x}\\sum_{i=1}^{N} x_i}{N} + N\\bar{x}^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - 2N\\bar{x}^2 + N\\bar{x}^2 \\biggr) \\\\\n*         &= \\frac{1}{N-1} \\biggl( \\sum_{i=1}^{N} x_i^2 - N\\bar{x}^2 \\biggr)\n*     \\end{align*}\n*     ```\n*\n*     we return\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = \\biggl(\\sum_{k=1}^N x_k^2 - N\\bar{x}_{i+1}^2 \\biggr) - \\biggl(\\sum_{k=0}^{N-1} x_k^2 - N\\bar{x}_{i}^2 \\biggr)\n*     ```\n*\n* -   This can be further simplified by recognizing that subtracting the sums reduces to \\\\(x_N^2 - x_0^2\\\\); in which case,\n*\n*     ```tex\n*     \\begin{align*}\n*     (N-1)(\\Delta s^2) &= x_N^2 - x_0^2 - N\\bar{x}_{i+1}^2 + N\\bar{x}_{i}^2 \\\\\n*     &= x_N^2 - x_0^2 - N(\\bar{x}_{i+1}^2 - \\bar{x}_{i}^2) \\\\\n*     &= x_N^2 - x_0^2 - N(\\bar{x}_{i+1} - \\bar{x}_{i})(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     \\end{align*}\n*     ```\n*\n* -   Recognizing that the difference of means can be expressed\n*\n*     ```tex\n*     \\bar{x}_{i+1} - \\bar{x}_i = \\frac{1}{N} \\biggl( \\sum_{k=1}^N x_k - \\sum_{k=0}^{N-1} x_k \\biggr) = \\frac{x_N - x_0}{N}\n*     ```\n*\n*     and substituting into the equation above\n*\n*     ```tex\n*     (N-1)(\\Delta s^2) = x_N^2 - x_0^2 - (x_N - x_0)(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     ```\n*\n* -   Rearranging terms gives us the update equation for the unbiased sample variance\n*\n*     ```tex\n*     \\begin{align*}\n*     (N-1)(\\Delta s^2) &= (x_N - x_0)(x_N + x_0) - (x_N - x_0)(\\bar{x}_{i+1} + \\bar{x}_{i})\n*     &= (x_N - x_0)(x_N + x_0 - \\bar{x}_{i+1} - \\bar{x}_{i}) \\\\\n*     &= (x_N - x_0)(x_N - \\bar{x}_{i+1} + x_0 - \\bar{x}_{i})\n*     \\end{align*}\n*     ```\n*\n* @param {PositiveInteger} W - window size\n* @param {number} [mean] - mean value\n* @throws {TypeError} first argument must be a positive integer\n* @throws {TypeError} second argument must be a number\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmvmr( 3 );\n*\n* var F = accumulator();\n* // returns null\n*\n* F = accumulator( 2.0 );\n* // returns 0.0\n*\n* F = accumulator( 1.0 );\n* // returns ~0.33\n*\n* F = accumulator( 3.0 );\n* // returns 0.5\n*\n* F = accumulator( 7.0 );\n* // returns ~2.55\n*\n* F = accumulator();\n* // returns ~2.55\n*\n* @example\n* var accumulator = incrmvmr( 3, 2.0 );\n*/\nfunction incrmvmr( W, mean ) {\n\tvar delta;\n\tvar buf;\n\tvar tmp;\n\tvar M2;\n\tvar mu;\n\tvar d1;\n\tvar d2;\n\tvar N;\n\tvar n;\n\tvar i;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', W ) );\n\t}\n\tbuf = new Array( W );\n\tn = W - 1;\n\tM2 = 0.0;\n\ti = -1;\n\tN = 0;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNumber( mean ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a number. Value: `%s`.', mean ) );\n\t\t}\n\t\tmu = mean;\n\t\treturn accumulator2;\n\t}\n\tmu = 0.0;\n\treturn accumulator1;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated accumulated value. If not provided a value, the accumulator function returns the current accumulated value.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} accumulated value or null\n\t*/\n\tfunction accumulator1( x ) {\n\t\tvar k;\n\t\tvar v;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn ( isnan( M2 ) ) ? NaN : 0.0/mu;\n\t\t\t}\n\t\t\tif ( N < W ) {\n\t\t\t\treturn ( M2/(N-1) ) / mu;\n\t\t\t}\n\t\t\treturn ( M2/n ) / mu;\n\t\t}\n\t\t// Update the index for managing the circular buffer:\n\t\ti = (i+1) % W;\n\n\t\t// Case: incoming value is NaN, the sliding second moment is automatically NaN...\n\t\tif ( isnan( x ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tmu = NaN;\n\t\t\tM2 = NaN;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tbuf[ i ] = x; // update buffer\n\t\t\tN += 1;\n\t\t\tdelta = x - mu;\n\t\t\tmu += delta / N;\n\t\t\tM2 += delta * (x - mu);\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn 0.0 / mu;\n\t\t\t}\n\t\t\treturn ( M2/(N-1) ) / mu;\n\t\t}\n\t\t// Case: N = W = 1\n\t\telse if ( N === 1 ) {\n\t\t\tmu = x;\n\t\t\tM2 = 0.0;\n\t\t\treturn M2 / mu;\n\t\t}\n\t\t// Case: outgoing value is NaN, and, thus, we need to compute the accumulated values...\n\t\telse if ( isnan( buf[ i ] ) ) {\n\t\t\tN = 1;\n\t\t\tmu = x;\n\t\t\tM2 = 0.0;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tv = buf[ k ];\n\t\t\t\t\tif ( isnan( v ) ) {\n\t\t\t\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\t\t\t\tmu = NaN;\n\t\t\t\t\t\tM2 = NaN;\n\t\t\t\t\t\tbreak; // second moment is automatically NaN, so no need to continue\n\t\t\t\t\t}\n\t\t\t\t\tN += 1;\n\t\t\t\t\tdelta = v - mu;\n\t\t\t\t\tmu += delta / N;\n\t\t\t\t\tM2 += delta * (v - mu);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: neither the current second moment nor the incoming value are NaN, so we need to update the accumulated values...\n\t\telse if ( isnan( M2 ) === false ) {\n\t\t\ttmp = buf[ i ];\n\t\t\tdelta = x - tmp;\n\t\t\td1 = tmp - mu;\n\t\t\tmu += delta / W;\n\t\t\td2 = x - mu;\n\t\t\tM2 += delta * (d1 + d2);\n\t\t}\n\t\t// Case: the current second moment is NaN, so nothing to do until the buffer no longer contains NaN values...\n\t\tbuf[ i ] = x;\n\n\t\treturn ( M2/n ) / mu;\n\t}\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated accumulated value. If not provided a value, the accumulator function returns the current accumulated value.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} accumulated value or null\n\t*/\n\tfunction accumulator2( x ) {\n\t\tvar k;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( N < W ) {\n\t\t\t\treturn ( M2/N ) / mu;\n\t\t\t}\n\t\t\treturn ( M2/W ) / mu;\n\t\t}\n\t\t// Update the index for managing the circular buffer:\n\t\ti = (i+1) % W;\n\n\t\t// Case: incoming value is NaN, the sliding second moment is automatically NaN...\n\t\tif ( isnan( x ) ) {\n\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\tM2 = NaN;\n\t\t}\n\t\t// Case: initial window...\n\t\telse if ( N < W ) {\n\t\t\tbuf[ i ] = x; // update buffer\n\t\t\tN += 1;\n\t\t\tdelta = x - mu;\n\t\t\tM2 += delta * delta;\n\t\t\treturn ( M2/N ) / mu;\n\t\t}\n\t\t// Case: outgoing value is NaN, and, thus, we need to compute the accumulated values...\n\t\telse if ( isnan( buf[ i ] ) ) {\n\t\t\tM2 = 0.0;\n\t\t\tfor ( k = 0; k < W; k++ ) {\n\t\t\t\tif ( k !== i ) {\n\t\t\t\t\tif ( isnan( buf[ k ] ) ) {\n\t\t\t\t\t\tN = W; // explicitly set to avoid `N < W` branch\n\t\t\t\t\t\tM2 = NaN;\n\t\t\t\t\t\tbreak; // second moment is automatically NaN, so no need to continue\n\t\t\t\t\t}\n\t\t\t\t\tdelta = buf[ k ] - mu;\n\t\t\t\t\tM2 += delta * delta;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Case: neither the current second moment nor the incoming value are NaN, so we need to update the accumulated values...\n\t\telse if ( isnan( M2 ) === false ) {\n\t\t\ttmp = buf[ i ];\n\t\t\tM2 += ( x-tmp ) * ( x-mu + tmp-mu );\n\t\t}\n\t\t// Case: the current second moment is NaN, so nothing to do until the buffer no longer contains NaN values...\n\t\tbuf[ i ] = x;\n\n\t\treturn ( M2/W ) / mu;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmvmr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a count incrementally, ignoring `NaN` values.\n*\n* @module @stdlib/stats/incr/nancount\n*\n* @example\n* var incrnancount = require( '@stdlib/stats/incr/nancount' );\n*\n* var accumulator = incrnancount();\n*\n* var nancount = accumulator();\n* // returns 0\n*\n* nancount = accumulator( 2.0 );\n* // returns 1\n*\n* nancount = accumulator( -5.0 );\n* // returns 2\n*\n* nancount = accumulator();\n* // returns 2\n*/\n\n// MODULES //\n\nvar incrnancount = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrnancount;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally updates a count, ignoring `NaN` values.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrnancount();\n*\n* var count = accumulator();\n* // returns 0\n*\n* count = accumulator( 2.0 );\n* // returns 1\n*\n* count = accumulator( -5.0 );\n* // returns 2\n*\n* count = accumulator();\n* // returns 2\n*/\nfunction incrnancount() {\n\tvar count = 0;\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated count. If not provided a value, the accumulator function returns the current count.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {number} count\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn count;\n\t\t}\n\t\tif ( isnan( x ) === false ) {\n\t\t\tcount += 1;\n\t\t}\n\t\treturn count;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrnancount;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a sum incrementally, ignoring `NaN` values.\n*\n* @module @stdlib/stats/incr/nansum\n*\n* @example\n* var incrnansum = require( '@stdlib/stats/incr/nansum' );\n*\n* var accumulator = incrnansum();\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0 );\n* // returns 2.0\n*\n* sum = accumulator( NaN );\n* // returns 2.0\n*\n* sum = accumulator( -5.0 );\n* // returns -3.0\n*\n* sum = accumulator();\n* // returns -3.0\n*/\n\n// MODULES //\n\nvar incrnansum = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrnansum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar incrsum = require( './../../../incr/sum' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a sum, ignoring `NaN` values.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrnansum();\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0 );\n* // returns 2.0\n*\n* sum = accumulator( NaN );\n* // returns 2.0\n*\n* sum = accumulator( -5.0 );\n* // returns -3.0\n*\n* sum = accumulator();\n* // returns -3.0\n*/\nfunction incrnansum() {\n\tvar sum = incrsum();\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated sum. If not provided a value, the accumulator function returns the current sum.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} sum or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 || isnan( x ) ) {\n\t\t\treturn sum();\n\t\t}\n\t\treturn sum( x );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrnansum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a sum of absolute values incrementally, ignoring `NaN` values.\n*\n* @module @stdlib/stats/incr/nansumabs\n*\n* @example\n* var incrnansumabs = require( '@stdlib/stats/incr/nansumabs' );\n*\n* var accumulator = incrnansumabs();\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0 );\n* // returns 2.0\n*\n* sum = accumulator( NaN );\n* // returns 2.0\n*\n* sum = accumulator( -5.0 );\n* // returns 7.0\n*\n* sum = accumulator();\n* // returns 7.0\n*/\n\n// MODULES //\n\nvar incrnansumabs = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrnansumabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar incrsumabs = require( './../../../incr/sumabs' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a sum of absolute values, ignoring `NaN` values.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrnansumabs();\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0 );\n* // returns 2.0\n*\n* sum = accumulator( NaN );\n* // returns 2.0\n*\n* sum = accumulator( -5.0 );\n* // returns 7.0\n*\n* sum = accumulator();\n* // returns 7.0\n*/\nfunction incrnansumabs() {\n\tvar sum = incrsumabs();\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated sum. If not provided a value, the accumulator function returns the current sum.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} sum or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 || isnan( x ) ) {\n\t\t\treturn sum();\n\t\t}\n\t\treturn sum( x );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrnansumabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a sum of squared absolute values incrementally, ignoring `NaN` values.\n*\n* @module @stdlib/stats/incr/nansumabs2\n*\n* @example\n* var incrnansumabs2 = require( '@stdlib/stats/incr/nansumabs2' );\n*\n* var accumulator = incrnansumabs2();\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0 );\n* // returns 4.0\n*\n* sum = accumulator( NaN );\n* // returns 4.0\n*\n* sum = accumulator( -5.0 );\n* // returns 29.0\n*\n* sum = accumulator();\n* // returns 29.0\n*/\n\n// MODULES //\n\nvar incrnansumabs2 = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrnansumabs2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar incrsumabs2 = require( './../../../incr/sumabs2' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a sum of squared absolute values, ignoring `NaN` values.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrnansumabs2();\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0 );\n* // returns 4.0\n*\n* sum = accumulator( NaN );\n* // returns 4.0\n*\n* sum = accumulator( -5.0 );\n* // returns 29.0\n*\n* sum = accumulator();\n* // returns 29.0\n*/\nfunction incrnansumabs2() {\n\tvar sum = incrsumabs2();\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated sum. If not provided a value, the accumulator function returns the current sum.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} sum or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 || isnan( x ) ) {\n\t\t\treturn sum();\n\t\t}\n\t\treturn sum( x );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrnansumabs2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a squared sample Pearson product-moment correlation coefficient incrementally.\n*\n* @module @stdlib/stats/incr/pcorr2\n*\n* @example\n* var incrpcorr2 = require( '@stdlib/stats/incr/pcorr2' );\n*\n* var accumulator = incrpcorr2();\n*\n* var r2 = accumulator();\n* // returns null\n*\n* r2 = accumulator( 2.0, 1.0 );\n* // returns 0.0\n*\n* r2 = accumulator( -5.0, 3.14 );\n* // returns ~1.0\n*\n* r2 = accumulator();\n* // returns ~1.0\n*/\n\n// MODULES //\n\nvar incrpcorr2 = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrpcorr2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar incrpcorr = require( './../../../incr/pcorr' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a squared sample Pearson product-moment correlation coefficient.\n*\n* @param {number} [meanx] - mean value\n* @param {number} [meany] - mean value\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrpcorr2();\n*\n* var r2 = accumulator();\n* // returns null\n*\n* r2 = accumulator( 2.0, 1.0 );\n* // returns 0.0\n*\n* r2 = accumulator( -5.0, 3.14 );\n* // returns ~1.0\n*\n* r2 = accumulator();\n* // returns ~1.0\n*\n* @example\n* var accumulator = incrpcorr2( 2.0, -3.0 );\n*/\nfunction incrpcorr2( meanx, meany ) {\n\tvar acc;\n\tif ( arguments.length ) {\n\t\tif ( !isNumber( meanx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', meanx ) );\n\t\t}\n\t\tif ( !isNumber( meany ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', meany ) );\n\t\t}\n\t\tacc = incrpcorr( meanx, meany );\n\t} else {\n\t\tacc = incrpcorr();\n\t}\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated accumulated value. If not provided input values, the accumulator function returns the current accumulate value.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @param {number} [y] - new value\n\t* @returns {(number|null)} squared sample correlation coefficient or null\n\t*/\n\tfunction accumulator( x, y ) {\n\t\tvar r;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tr = acc();\n\t\t\tif ( r === null ) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\treturn r * r;\n\t\t}\n\t\tr = acc( x, y );\n\t\treturn r * r;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrpcorr2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a sample Pearson product-moment correlation distance incrementally.\n*\n* @module @stdlib/stats/incr/pcorrdist\n*\n* @example\n* var incrpcorrdist = require( '@stdlib/stats/incr/pcorrdist' );\n*\n* var accumulator = incrpcorrdist();\n*\n* var d = accumulator();\n* // returns null\n*\n* d = accumulator( 2.0, 1.0 );\n* // returns 1.0\n*\n* d = accumulator( -5.0, 3.14 );\n* // returns ~2.0\n*\n* d = accumulator();\n* // returns ~2.0\n*/\n\n// MODULES //\n\nvar incrpcorrdist = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrpcorrdist;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar incrpcorr = require( './../../../incr/pcorr' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a sample Pearson product-moment correlation distance.\n*\n* ## Method\n*\n* -   The sample Pearson product-moment correlation distance is defined as\n*\n*     ```tex\n*     d = 1 - r = 1 - \\frac{\\operatorname{cov}_n(x,y)}{\\sigma_x \\sigma_y}\n*     ```\n*\n* -   The implementation thus computes the sample Pearson product-moment correlation coefficient \\\\(r\\\\) and subtracts the coefficient from 1.\n*\n* @param {number} [meanx] - mean value\n* @param {number} [meany] - mean value\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrpcorrdist();\n*\n* var d = accumulator();\n* // returns null\n*\n* d = accumulator( 2.0, 1.0 );\n* // returns 1.0\n*\n* d = accumulator( -5.0, 3.14 );\n* // returns ~2.0\n*\n* d = accumulator();\n* // returns ~2.0\n*\n* @example\n* var accumulator = incrpcorrdist( 2.0, -3.0 );\n*/\nfunction incrpcorrdist( meanx, meany ) {\n\tvar pcorr;\n\tif ( arguments.length ) {\n\t\tif ( !isNumber( meanx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', meanx ) );\n\t\t}\n\t\tif ( !isNumber( meany ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', meany ) );\n\t\t}\n\t\tpcorr = incrpcorr( meanx, meany );\n\t} else {\n\t\tpcorr = incrpcorr();\n\t}\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated sample correlation distance. If not provided input values, the accumulator function returns the current sample correlation distance.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @param {number} [y] - new value\n\t* @returns {(number|null)} sample correlation distance or null\n\t*/\n\tfunction accumulator( x, y ) {\n\t\tvar r;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tr = pcorr();\n\t\t\tif ( r === null ) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\treturn 1.0 - r;\n\t\t}\n\t\treturn 1.0 - pcorr( x, y );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrpcorrdist;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a sample Pearson product-moment correlation distance matrix incrementally.\n*\n* @module @stdlib/stats/incr/pcorrdistmat\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var incrpcorrdistmat = require( '@stdlib/stats/incr/pcorrdistmat' );\n*\n* // Create an output correlation distance matrix:\n* var buffer = new Float64Array( 4 );\n* var shape = [ 2, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n* var order = 'row-major';\n*\n* var dist = ndarray( 'float64', buffer, shape, strides, offset, order );\n*\n* // Create a correlation distance matrix accumulator:\n* var accumulator = incrpcorrdistmat( dist );\n*\n* var out = accumulator();\n* // returns null\n*\n* // Create a data vector:\n* buffer = new Float64Array( 2 );\n* shape = [ 2 ];\n* strides = [ 1 ];\n*\n* var vec = ndarray( 'float64', buffer, shape, strides, offset, order );\n*\n* // Provide data to the accumulator:\n* vec.set( 0, 2.0 );\n* vec.set( 1, 1.0 );\n*\n* out = accumulator( vec );\n* // returns <ndarray>\n*\n* var bool = ( out === dist );\n* // returns true\n*\n* vec.set( 0, -5.0 );\n* vec.set( 1, 3.14 );\n*\n* out = accumulator( vec );\n* // returns <ndarray>\n*\n* // Retrieve the distance matrix:\n* out = accumulator();\n* // returns <ndarray>\n*/\n\n// MODULES //\n\nvar incrpcorrdistmat = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrpcorrdistmat;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isSquareMatrix = require( '@stdlib/assert/is-square-matrix' );\nvar isVectorLike = require( '@stdlib/assert/is-vector-like' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar format = require( '@stdlib/string/format' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar ctor = require( '@stdlib/ndarray/ctor' );\nvar bctor = require( '@stdlib/ndarray/base/ctor' );\nvar numel = require( '@stdlib/ndarray/base/numel' );\n\n\n// FUNCTIONS //\n\n/**\n* Returns a matrix.\n*\n* @private\n* @param {PositiveInteger} n - matrix order\n* @param {boolean} bool - boolean indicating whether to create a low-level ndarray\n* @returns {ndarray} matrix\n*/\nfunction createMatrix( n, bool ) {\n\tvar strides;\n\tvar buffer;\n\tvar shape;\n\tvar f;\n\n\tif ( bool ) {\n\t\tf = bctor;\n\t} else {\n\t\tf = ctor;\n\t}\n\tbuffer = new Float64Array( n*n );\n\tshape = [ n, n ];\n\tstrides = [ n, 1 ];\n\treturn f( 'float64', buffer, shape, strides, 0, 'row-major' );\n}\n\n/**\n* Returns a vector.\n*\n* @private\n* @param {PositiveInteger} N - number of elements\n* @returns {ndarray} vector\n*/\nfunction createVector( N ) {\n\tvar strides;\n\tvar buffer;\n\tvar shape;\n\n\tbuffer = new Float64Array( N );\n\tshape = [ N ];\n\tstrides = [ 1 ];\n\n\treturn bctor( 'float64', buffer, shape, strides, 0, 'row-major' );\n}\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a sample Pearson product-moment correlation distance matrix.\n*\n* ## Method\n*\n* -   For each sample Pearson product-moment correlation distance, we begin by defining the co-moment \\\\(C_{jn}\\\\)\n*\n*     ```tex\n*     C_n = \\sum_{i=1}^{n} ( x_i - \\bar{x}_n ) ( y_i - \\bar{y}_n )\n*     ```\n*\n*     where \\\\(\\bar{x}_n\\\\) and \\\\(\\bar{y}_n\\\\) are the sample means for \\\\(x\\\\) and \\\\(y\\\\), respectively.\n*\n* -   Based on Welford's method, we know the update formulas for the sample means are given by\n*\n*     ```tex\n*     \\bar{x}_n = \\bar{x}_{n-1} + \\frac{x_n - \\bar{x}_{n-1}}{n}\n*     ```\n*\n*     and\n*\n*     ```tex\n*     \\bar{y}_n = \\bar{y}_{n-1} + \\frac{y_n - \\bar{y}_{n-1}}{n}\n*     ```\n*\n* -   Substituting into the equation for \\\\(C_n\\\\) and rearranging terms\n*\n*     ```tex\n*     C_n = C_{n-1} + (x_n - \\bar{x}_n) (y_n - \\bar{y}_{n-1})\n*     ```\n*\n*     where the apparent asymmetry arises from\n*\n*     ```tex\n*     x_n - \\bar{x}_n = \\frac{n-1}{n} (x_n - \\bar{x}_{n-1})\n*     ```\n*\n*     and, hence, the update term can be equivalently expressed\n*\n*     ```tex\n*     \\frac{n-1}{n} (x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})\n*     ```\n*\n* -   The covariance can be defined\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{cov}_n(x,y) &= \\frac{C_n}{n} \\\\\n*     &= \\frac{C_{n-1} + \\frac{n-1}{n} (x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})}{n} \\\\\n*     &= \\frac{(n-1)\\operatorname{cov}_{n-1}(x,y) + \\frac{n-1}{n} (x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})}{n}\n*     \\end{align*}\n*     ```\n*\n* -   Applying Bessel's correction, we arrive at an update formula for calculating an unbiased sample covariance\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{cov}_n(x,y) &= \\frac{n}{n-1}\\cdot\\frac{(n-1)\\operatorname{cov}_{n-1}(x,y) + \\frac{n-1}{n} (x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})}{n} \\\\\n*     &= \\operatorname{cov}_{n-1}(x,y) + \\frac{(x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})}{n} \\\\\n*     &= \\frac{C_{n-1}}{n-1} + \\frac{(x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})}{n}\n*     &= \\frac{C_{n-1} + \\frac{n-1}{n} (x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})}{n-1}\n*     \\end{align*}\n*     ```\n*\n* -   To calculate the corrected sample standard deviation, we can use Welford's method, which can be derived as follows. We can express the variance as\n*\n*     ```tex\n*     \\begin{align*}\n*     S_n &= n \\sigma_n^2 \\\\\n*         &= \\sum_{i=1}^{n} (x_i - \\mu_n)^2 \\\\\n*         &= \\biggl(\\sum_{i=1}^{n} x_i^2 \\biggr) - n\\mu_n^2\n*     \\end{align*}\n*     ```\n*\n*     Accordingly,\n*\n*     ```tex\n*     \\begin{align*}\n*     S_n - S_{n-1} &= \\sum_{i=1}^{n} x_i^2 - n\\mu_n^2 - \\sum_{i=1}^{n-1} x_i^2 + (n-1)\\mu_{n-1}^2 \\\\\n*                   &= x_n^2 - n\\mu_n^2 + (n-1)\\mu_{n-1}^2 \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + n(\\mu_{n-1}^2 - \\mu_n^2) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + n(\\mu_{n-1} - \\mu_n)(\\mu_{n-1} + \\mu_n) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + (\\mu_{n-1} - x_n)(\\mu_{n-1} + \\mu_n) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + \\mu_{n-1}^2 - x_n\\mu_n - x_n\\mu_{n-1} + \\mu_n\\mu_{n-1} \\\\\n*                   &= x_n^2 - x_n\\mu_n - x_n\\mu_{n-1} + \\mu_n\\mu_{n-1} \\\\\n*                   &= (x_n - \\mu_{n-1})(x_n - \\mu_n) \\\\\n*                   &= S_{n-1} + (x_n - \\mu_{n-1})(x_n - \\mu_n)\n*     \\end{align*}\n*     ```\n*\n*     where we use the identity\n*\n*     ```tex\n*     x_n - \\mu_{n-1} = n (\\mu_n - \\mu_{n-1})\n*     ```\n*\n* -   To compute the corrected sample standard deviation, we apply Bessel's correction and take the square root.\n*\n* -   The sample Pearson product-moment correlation coefficient can thus be calculated as\n*\n*     ```tex\n*     r = \\frac{\\operatorname{cov}_n(x,y)}{\\sigma_x \\sigma_y}\n*     ```\n*\n*     where \\\\(\\sigma_x\\\\) and \\\\(\\sigma_y\\\\) are the corrected sample standard deviations for \\\\(x\\\\) and \\\\(y\\\\), respectively.\n*\n* -   The sample Pearson product-moment correlation distance is defined as\n*\n*     ```tex\n*     d = 1 - r = 1 - \\frac{\\operatorname{cov}_n(x,y)}{\\sigma_x \\sigma_y}\n*     ```\n*\n* -   The implementation thus computes each sample Pearson product-moment correlation coefficient \\\\(r\\\\) and subtracts each coefficient from 1.\n*\n* @param {(PositiveInteger|ndarray)} out - order of the correlation distance matrix or a square 2-dimensional output ndarray for storing the correlation distance matrix\n* @param {ndarray} [means] - mean values\n* @throws {TypeError} first argument must be either a positive integer or a 2-dimensional ndarray having equal dimensions\n* @throws {TypeError} second argument must be a 1-dimensional ndarray\n* @throws {Error} number of means must match correlation distance matrix dimensions\n* @returns {Function} accumulator function\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* // Create an output correlation distance matrix:\n* var buffer = new Float64Array( 4 );\n* var shape = [ 2, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n* var order = 'row-major';\n*\n* var dist = ndarray( 'float64', buffer, shape, strides, offset, order );\n*\n* // Create a correlation distance matrix accumulator:\n* var accumulator = incrpcorrdistmat( dist );\n*\n* var out = accumulator();\n* // returns null\n*\n* // Create a data vector:\n* buffer = new Float64Array( 2 );\n* shape = [ 2 ];\n* strides = [ 1 ];\n*\n* var vec = ndarray( 'float64', buffer, shape, strides, offset, order );\n*\n* // Provide data to the accumulator:\n* vec.set( 0, 2.0 );\n* vec.set( 1, 1.0 );\n*\n* out = accumulator( vec );\n* // returns <ndarray>\n*\n* var bool = ( out === dist );\n* // returns true\n*\n* vec.set( 0, -5.0 );\n* vec.set( 1, 3.14 );\n*\n* out = accumulator( vec );\n* // returns <ndarray>\n*\n* // Retrieve the correlation distance matrix:\n* out = accumulator();\n* // returns <ndarray>\n*/\nfunction incrpcorrdistmat( out, means ) {\n\tvar order;\n\tvar dist;\n\tvar M2;\n\tvar sd;\n\tvar mu;\n\tvar C;\n\tvar d;\n\tvar N;\n\n\tN = 0;\n\tif ( isPositiveInteger( out ) ) {\n\t\torder = out;\n\t\tdist = createMatrix( order, false );\n\t} else if ( isSquareMatrix( out ) ) {\n\t\torder = out.shape[ 0 ];\n\t\tdist = out;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must either specify the order of the correlation distance matrix or be a square two-dimensional ndarray for storing the correlation distance matrix. Value: `%s`.', out ) );\n\t}\n\t// Create a scratch array for storing residuals (i.e., `x_i - xbar_{i-1}`):\n\td = new Float64Array( order );\n\n\t// Create a scratch array for storing second moments:\n\tM2 = new Float64Array( order );\n\n\t// Create a scratch array for storing standard deviations:\n\tsd = new Float64Array( order );\n\n\t// Create a low-level scratch matrix for storing co-moments:\n\tC = createMatrix( order, true );\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isVectorLike( means ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a one-dimensional ndarray. Value: `%s`.', means ) );\n\t\t}\n\t\tif ( numel( means.shape ) !== order ) {\n\t\t\tthrow new Error( format( 'invalid argument. The number of elements (means) in the second argument must match correlation distance matrix dimensions. Expected: `%u`. Actual: `%u`.', order, numel( means.shape ) ) );\n\t\t}\n\t\tmu = means; // TODO: should we copy this? Otherwise, internal state could be \"corrupted\" due to mutation outside the accumulator\n\t\treturn accumulator2;\n\t}\n\t// Create an ndarray vector for storing sample means (note: an ndarray interface is not necessary, but it reduces implementation complexity by ensuring a consistent abstraction for accessing and updating sample means):\n\tmu = createVector( order );\n\n\treturn accumulator1;\n\n\t/**\n\t* If provided a data vector, the accumulator function returns an updated sample correlation distance matrix. If not provided a data vector, the accumulator function returns the current sample correlation distance matrix.\n\t*\n\t* @private\n\t* @param {ndarray} [v] - data vector\n\t* @throws {TypeError} must provide a 1-dimensional ndarray\n\t* @throws {Error} vector length must match correlation distance matrix dimensions\n\t* @returns {(ndarray|null)} sample correlation distance matrix or null\n\t*/\n\tfunction accumulator1( v ) {\n\t\tvar denom;\n\t\tvar rdx;\n\t\tvar cij;\n\t\tvar dij;\n\t\tvar sdi;\n\t\tvar di;\n\t\tvar vi;\n\t\tvar m;\n\t\tvar n;\n\t\tvar r;\n\t\tvar i;\n\t\tvar j;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn dist;\n\t\t}\n\t\tif ( !isVectorLike( v ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a one-dimensional ndarray. Value: `%s`.', v ) );\n\t\t}\n\t\tif ( v.shape[ 0 ] !== order ) {\n\t\t\tthrow new Error( format( 'invalid argument. Vector length must match correlation matrix dimensions. Expected: `%u`. Actual: `%u`.', order, v.shape[ 0 ] ) );\n\t\t}\n\t\tn = N;\n\t\tN += 1;\n\t\tr = n / N;\n\n\t\tdenom = n || 1; // Bessel's correction (avoiding divide-by-zero below)\n\n\t\tif ( N === 1 ) {\n\t\t\tfor ( i = 0; i < order; i++ ) {\n\t\t\t\tvi = v.get( i );\n\t\t\t\tm = mu.get( i );\n\n\t\t\t\t// Compute the residual:\n\t\t\t\tdi = vi - m;\n\n\t\t\t\t// Update the sample mean:\n\t\t\t\tm += di / N;\n\t\t\t\tmu.set( i, m );\n\n\t\t\t\t// Update the sample standard deviation:\n\t\t\t\td[ i ] = di;\n\t\t\t\tM2[ i ] += di * ( vi-m );\n\t\t\t\tsd[ i ] = sqrt( M2[i]/denom );\n\n\t\t\t\t// Update the co-moments and correlation distance matrix, recognizing that the matrices are symmetric...\n\t\t\t\trdx = r * d[i]; // if `n=0`, `r=0.0`\n\t\t\t\tfor ( j = 0; j <= i; j++ ) {\n\t\t\t\t\tcij = C.get( i, j ) + ( rdx*d[j] );\n\t\t\t\t\tC.set( i, j, cij );\n\t\t\t\t\tC.set( j, i, cij ); // via symmetry\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i = 0; i < order; i++ ) {\n\t\t\t\tvi = v.get( i );\n\t\t\t\tm = mu.get( i );\n\n\t\t\t\t// Compute the residual:\n\t\t\t\tdi = vi - m;\n\n\t\t\t\t// Update the sample mean:\n\t\t\t\tm += di / N;\n\t\t\t\tmu.set( i, m );\n\n\t\t\t\t// Update the sample standard deviation:\n\t\t\t\td[ i ] = di;\n\t\t\t\tM2[ i ] += di * ( vi-m );\n\t\t\t\tsd[ i ] = sqrt( M2[i]/denom );\n\n\t\t\t\t// Update the co-moments and correlation distance matrix, recognizing that the matrices are symmetric...\n\t\t\t\trdx = r * d[i];\n\t\t\t\tsdi = sd[ i ];\n\t\t\t\tfor ( j = 0; j < i; j++ ) {\n\t\t\t\t\tcij = C.get( i, j ) + ( rdx*d[j] );\n\t\t\t\t\tC.set( i, j, cij );\n\t\t\t\t\tC.set( j, i, cij ); // via symmetry\n\n\t\t\t\t\tdij = 1.0 - ( (cij/denom)/(sdi*sd[j]) );\n\t\t\t\t\tdist.set( i, j, dij );\n\t\t\t\t\tdist.set( j, i, dij ); // via symmetry\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn dist;\n\t}\n\n\t/**\n\t* If provided a data vector, the accumulator function returns an updated sample correlation distance matrix. If not provided a data vector, the accumulator function returns the current sample correlation distance matrix.\n\t*\n\t* @private\n\t* @param {ndarray} [v] - data vector\n\t* @throws {TypeError} must provide a 1-dimensional ndarray\n\t* @throws {Error} vector length must match correlation distance matrix dimensions\n\t* @returns {(ndarray|null)} sample correlation distance matrix or null\n\t*/\n\tfunction accumulator2( v ) {\n\t\tvar dij;\n\t\tvar cij;\n\t\tvar sdi;\n\t\tvar di;\n\t\tvar i;\n\t\tvar j;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn dist;\n\t\t}\n\t\tif ( !isVectorLike( v ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a one-dimensional ndarray. Value: `%s`.', v ) );\n\t\t}\n\t\tif ( v.shape[ 0 ] !== order ) {\n\t\t\tthrow new Error( format( 'invalid argument. Vector length must match correlation distance matrix dimensions. Expected: `%u`. Actual: `%u`.', order, v.shape[ 0 ] ) );\n\t\t}\n\t\tN += 1;\n\t\tfor ( i = 0; i < order; i++ ) {\n\t\t\t// Compute the residual:\n\t\t\tdi = v.get( i ) - mu.get( i );\n\n\t\t\t// Update standard deviation:\n\t\t\td[ i ] = di;\n\t\t\tM2[ i ] += di * di;\n\t\t\tsd[ i ] = sqrt( M2[i]/N );\n\n\t\t\t// Update the co-moments and correlation distance matrix, recognizing that the matrices are symmetric...\n\t\t\tsdi = sd[ i ];\n\t\t\tfor ( j = 0; j < i; j++ ) {\n\t\t\t\tcij = C.get( i, j ) + ( di*d[j] );\n\t\t\t\tC.set( i, j, cij );\n\t\t\t\tC.set( j, i, cij ); // via symmetry\n\n\t\t\t\tdij = 1.0 - ( (cij/N)/(sdi*sd[j]) );\n\t\t\t\tdist.set( i, j, dij );\n\t\t\t\tdist.set( j, i, dij ); // via symmetry\n\t\t\t}\n\t\t}\n\t\treturn dist;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrpcorrdistmat;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a sample Pearson product-moment correlation matrix incrementally.\n*\n* @module @stdlib/stats/incr/pcorrmat\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var incrpcorrmat = require( '@stdlib/stats/incr/pcorrmat' );\n*\n* // Create an output correlation matrix:\n* var buffer = new Float64Array( 4 );\n* var shape = [ 2, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n* var order = 'row-major';\n*\n* var corr = ndarray( 'float64', buffer, shape, strides, offset, order );\n*\n* // Create a correlation matrix accumulator:\n* var accumulator = incrpcorrmat( corr );\n*\n* var out = accumulator();\n* // returns null\n*\n* // Create a data vector:\n* buffer = new Float64Array( 2 );\n* shape = [ 2 ];\n* strides = [ 1 ];\n*\n* var vec = ndarray( 'float64', buffer, shape, strides, offset, order );\n*\n* // Provide data to the accumulator:\n* vec.set( 0, 2.0 );\n* vec.set( 1, 1.0 );\n*\n* out = accumulator( vec );\n* // returns <ndarray>\n*\n* var bool = ( out === corr );\n* // returns true\n*\n* vec.set( 0, -5.0 );\n* vec.set( 1, 3.14 );\n*\n* out = accumulator( vec );\n* // returns <ndarray>\n*\n* // Retrieve the correlation matrix:\n* out = accumulator();\n* // returns <ndarray>\n*/\n\n// MODULES //\n\nvar incrpcorrmat = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrpcorrmat;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isSquareMatrix = require( '@stdlib/assert/is-square-matrix' );\nvar isVectorLike = require( '@stdlib/assert/is-vector-like' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar format = require( '@stdlib/string/format' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar ctor = require( '@stdlib/ndarray/ctor' );\nvar bctor = require( '@stdlib/ndarray/base/ctor' );\nvar numel = require( '@stdlib/ndarray/base/numel' );\n\n\n// FUNCTIONS //\n\n/**\n* Returns a matrix.\n*\n* @private\n* @param {PositiveInteger} n - matrix order\n* @param {boolean} bool - boolean indicating whether to create a low-level ndarray\n* @returns {ndarray} matrix\n*/\nfunction createMatrix( n, bool ) {\n\tvar strides;\n\tvar buffer;\n\tvar shape;\n\tvar f;\n\n\tif ( bool ) {\n\t\tf = bctor;\n\t} else {\n\t\tf = ctor;\n\t}\n\tbuffer = new Float64Array( n*n );\n\tshape = [ n, n ];\n\tstrides = [ n, 1 ];\n\treturn f( 'float64', buffer, shape, strides, 0, 'row-major' );\n}\n\n/**\n* Sets the values along the main diagonal of a square matrix.\n*\n* @private\n* @param {ndarray} matrix - input square matrix\n* @param {number} v - value\n* @returns {ndarray} input matrix\n*/\nfunction diagonal( matrix, v ) {\n\tvar M = matrix.shape[ 0 ];\n\tvar i;\n\tfor ( i = 0; i < M; i++ ) {\n\t\tmatrix.set( i, i, v );\n\t}\n\treturn matrix;\n}\n\n/**\n* Returns a vector.\n*\n* @private\n* @param {PositiveInteger} N - number of elements\n* @returns {ndarray} vector\n*/\nfunction createVector( N ) {\n\tvar strides;\n\tvar buffer;\n\tvar shape;\n\n\tbuffer = new Float64Array( N );\n\tshape = [ N ];\n\tstrides = [ 1 ];\n\n\treturn bctor( 'float64', buffer, shape, strides, 0, 'row-major' );\n}\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a sample Pearson product-moment correlation matrix.\n*\n* ## Method\n*\n* -   For each sample Pearson product-moment correlation coefficient, we begin by defining the co-moment \\\\(C_{jn}\\\\)\n*\n*     ```tex\n*     C_n = \\sum_{i=1}^{n} ( x_i - \\bar{x}_n ) ( y_i - \\bar{y}_n )\n*     ```\n*\n*     where \\\\(\\bar{x}_n\\\\) and \\\\(\\bar{y}_n\\\\) are the sample means for \\\\(x\\\\) and \\\\(y\\\\), respectively.\n*\n* -   Based on Welford's method, we know the update formulas for the sample means are given by\n*\n*     ```tex\n*     \\bar{x}_n = \\bar{x}_{n-1} + \\frac{x_n - \\bar{x}_{n-1}}{n}\n*     ```\n*\n*     and\n*\n*     ```tex\n*     \\bar{y}_n = \\bar{y}_{n-1} + \\frac{y_n - \\bar{y}_{n-1}}{n}\n*     ```\n*\n* -   Substituting into the equation for \\\\(C_n\\\\) and rearranging terms\n*\n*     ```tex\n*     C_n = C_{n-1} + (x_n - \\bar{x}_n) (y_n - \\bar{y}_{n-1})\n*     ```\n*\n*     where the apparent asymmetry arises from\n*\n*     ```tex\n*     x_n - \\bar{x}_n = \\frac{n-1}{n} (x_n - \\bar{x}_{n-1})\n*     ```\n*\n*     and, hence, the update term can be equivalently expressed\n*\n*     ```tex\n*     \\frac{n-1}{n} (x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})\n*     ```\n*\n* -   The covariance can be defined\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{cov}_n(x,y) &= \\frac{C_n}{n} \\\\\n*     &= \\frac{C_{n-1} + \\frac{n-1}{n} (x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})}{n} \\\\\n*     &= \\frac{(n-1)\\operatorname{cov}_{n-1}(x,y) + \\frac{n-1}{n} (x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})}{n}\n*     \\end{align*}\n*     ```\n*\n* -   Applying Bessel's correction, we arrive at an update formula for calculating an unbiased sample covariance\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{cov}_n(x,y) &= \\frac{n}{n-1}\\cdot\\frac{(n-1)\\operatorname{cov}_{n-1}(x,y) + \\frac{n-1}{n} (x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})}{n} \\\\\n*     &= \\operatorname{cov}_{n-1}(x,y) + \\frac{(x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})}{n} \\\\\n*     &= \\frac{C_{n-1}}{n-1} + \\frac{(x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})}{n}\n*     &= \\frac{C_{n-1} + \\frac{n-1}{n} (x_n - \\bar{x}_{n-1}) (y_n - \\bar{y}_{n-1})}{n-1}\n*     \\end{align*}\n*     ```\n*\n* -   To calculate the corrected sample standard deviation, we can use Welford's method, which can be derived as follows. We can express the variance as\n*\n*     ```tex\n*     \\begin{align*}\n*     S_n &= n \\sigma_n^2 \\\\\n*         &= \\sum_{i=1}^{n} (x_i - \\mu_n)^2 \\\\\n*         &= \\biggl(\\sum_{i=1}^{n} x_i^2 \\biggr) - n\\mu_n^2\n*     \\end{align*}\n*     ```\n*\n*     Accordingly,\n*\n*     ```tex\n*     \\begin{align*}\n*     S_n - S_{n-1} &= \\sum_{i=1}^{n} x_i^2 - n\\mu_n^2 - \\sum_{i=1}^{n-1} x_i^2 + (n-1)\\mu_{n-1}^2 \\\\\n*                   &= x_n^2 - n\\mu_n^2 + (n-1)\\mu_{n-1}^2 \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + n(\\mu_{n-1}^2 - \\mu_n^2) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + n(\\mu_{n-1} - \\mu_n)(\\mu_{n-1} + \\mu_n) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + (\\mu_{n-1} - x_n)(\\mu_{n-1} + \\mu_n) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + \\mu_{n-1}^2 - x_n\\mu_n - x_n\\mu_{n-1} + \\mu_n\\mu_{n-1} \\\\\n*                   &= x_n^2 - x_n\\mu_n - x_n\\mu_{n-1} + \\mu_n\\mu_{n-1} \\\\\n*                   &= (x_n - \\mu_{n-1})(x_n - \\mu_n) \\\\\n*                   &= S_{n-1} + (x_n - \\mu_{n-1})(x_n - \\mu_n)\n*     \\end{align*}\n*     ```\n*\n*     where we use the identity\n*\n*     ```tex\n*     x_n - \\mu_{n-1} = n (\\mu_n - \\mu_{n-1})\n*     ```\n*\n* -   To compute the corrected sample standard deviation, we apply Bessel's correction and take the square root.\n*\n* -   The sample Pearson product-moment correlation coefficient can thus be calculated as\n*\n*     ```tex\n*     r = \\frac{\\operatorname{cov}_n(x,y)}{\\sigma_x \\sigma_y}\n*     ```\n*\n*     where \\\\(\\sigma_x\\\\) and \\\\(\\sigma_y\\\\) are the corrected sample standard deviations for \\\\(x\\\\) and \\\\(y\\\\), respectively.\n*\n* @param {(PositiveInteger|ndarray)} out - order of the correlation matrix or a square 2-dimensional output ndarray for storing the correlation matrix\n* @param {ndarray} [means] - mean values\n* @throws {TypeError} first argument must be either a positive integer or a 2-dimensional ndarray having equal dimensions\n* @throws {TypeError} second argument must be a 1-dimensional ndarray\n* @throws {Error} number of means must match correlation matrix dimensions\n* @returns {Function} accumulator function\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* // Create an output correlation matrix:\n* var buffer = new Float64Array( 4 );\n* var shape = [ 2, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n* var order = 'row-major';\n*\n* var corr = ndarray( 'float64', buffer, shape, strides, offset, order );\n*\n* // Create a correlation matrix accumulator:\n* var accumulator = incrpcorrmat( corr );\n*\n* var out = accumulator();\n* // returns null\n*\n* // Create a data vector:\n* buffer = new Float64Array( 2 );\n* shape = [ 2 ];\n* strides = [ 1 ];\n*\n* var vec = ndarray( 'float64', buffer, shape, strides, offset, order );\n*\n* // Provide data to the accumulator:\n* vec.set( 0, 2.0 );\n* vec.set( 1, 1.0 );\n*\n* out = accumulator( vec );\n* // returns <ndarray>\n*\n* var bool = ( out === corr );\n* // returns true\n*\n* vec.set( 0, -5.0 );\n* vec.set( 1, 3.14 );\n*\n* out = accumulator( vec );\n* // returns <ndarray>\n*\n* // Retrieve the correlation matrix:\n* out = accumulator();\n* // returns <ndarray>\n*/\nfunction incrpcorrmat( out, means ) {\n\tvar order;\n\tvar corr;\n\tvar M2;\n\tvar sd;\n\tvar mu;\n\tvar C;\n\tvar d;\n\tvar N;\n\n\tN = 0;\n\tif ( isPositiveInteger( out ) ) {\n\t\torder = out;\n\t\tcorr = createMatrix( order, false );\n\t} else if ( isSquareMatrix( out ) ) {\n\t\torder = out.shape[ 0 ];\n\t\tcorr = out;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must either specify the order of the correlation matrix or be a square two-dimensional ndarray for storing the correlation matrix. Value: `%s`.', out ) );\n\t}\n\t// Set the values along the correlation matrix diagonal to `1` (i.e., a random variable is always perfectly correlated with itself):\n\tcorr = diagonal( corr, 1.0 );\n\n\t// Create a scratch array for storing residuals (i.e., `x_i - xbar_{i-1}`):\n\td = new Float64Array( order );\n\n\t// Create a scratch array for storing second moments:\n\tM2 = new Float64Array( order );\n\n\t// Create a scratch array for storing standard deviations:\n\tsd = new Float64Array( order );\n\n\t// Create a low-level scratch matrix for storing co-moments:\n\tC = createMatrix( order, true );\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isVectorLike( means ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a one-dimensional ndarray. Value: `%s`.', means ) );\n\t\t}\n\t\tif ( numel( means.shape ) !== order ) {\n\t\t\tthrow new Error( 'invalid argument. The number of elements (means) in the second argument must match correlation matrix dimensions. Expected: '+order+'. Actual: '+numel( means.shape )+'.' );\n\t\t}\n\t\tmu = means; // TODO: should we copy this? Otherwise, internal state could be \"corrupted\" due to mutation outside the accumulator\n\t\treturn accumulator2;\n\t}\n\t// Create an ndarray vector for storing sample means (note: an ndarray interface is not necessary, but it reduces implementation complexity by ensuring a consistent abstraction for accessing and updating sample means):\n\tmu = createVector( order );\n\n\treturn accumulator1;\n\n\t/**\n\t* If provided a data vector, the accumulator function returns an updated sample correlation matrix. If not provided a data vector, the accumulator function returns the current sample correlation matrix.\n\t*\n\t* @private\n\t* @param {ndarray} [v] - data vector\n\t* @throws {TypeError} must provide a 1-dimensional ndarray\n\t* @throws {Error} vector length must match correlation matrix dimensions\n\t* @returns {(ndarray|null)} sample correlation matrix or null\n\t*/\n\tfunction accumulator1( v ) {\n\t\tvar denom;\n\t\tvar rdx;\n\t\tvar cij;\n\t\tvar rij;\n\t\tvar sdi;\n\t\tvar di;\n\t\tvar vi;\n\t\tvar m;\n\t\tvar n;\n\t\tvar r;\n\t\tvar i;\n\t\tvar j;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn corr;\n\t\t}\n\t\tif ( !isVectorLike( v ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a one-dimensional ndarray. Value: `%s`.', v ) );\n\t\t}\n\t\tif ( v.shape[ 0 ] !== order ) {\n\t\t\tthrow new Error( format( 'invalid argument. Vector length must match correlation matrix dimensions. Expected: `%u`. Actual: `%u`.', order, v.shape[ 0 ] ) );\n\t\t}\n\t\tn = N;\n\t\tN += 1;\n\t\tr = n / N;\n\n\t\tdenom = n || 1; // Bessel's correction (avoiding divide-by-zero below)\n\n\t\tif ( N === 1 ) {\n\t\t\tfor ( i = 0; i < order; i++ ) {\n\t\t\t\tvi = v.get( i );\n\t\t\t\tm = mu.get( i );\n\n\t\t\t\t// Compute the residual:\n\t\t\t\tdi = vi - m;\n\n\t\t\t\t// Update the sample mean:\n\t\t\t\tm += di / N;\n\t\t\t\tmu.set( i, m );\n\n\t\t\t\t// Update the sample standard deviation:\n\t\t\t\td[ i ] = di;\n\t\t\t\tM2[ i ] += di * ( vi-m );\n\t\t\t\tsd[ i ] = sqrt( M2[i]/denom );\n\n\t\t\t\t// Update the co-moments and correlation matrix, recognizing that the matrices are symmetric...\n\t\t\t\trdx = r * d[i]; // if `n=0`, `r=0.0`\n\t\t\t\tfor ( j = 0; j < i; j++ ) {\n\t\t\t\t\tcij = C.get( i, j ) + ( rdx*d[j] );\n\t\t\t\t\tC.set( i, j, cij );\n\t\t\t\t\tC.set( j, i, cij ); // via symmetry\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i = 0; i < order; i++ ) {\n\t\t\t\tvi = v.get( i );\n\t\t\t\tm = mu.get( i );\n\n\t\t\t\t// Compute the residual:\n\t\t\t\tdi = vi - m;\n\n\t\t\t\t// Update the sample mean:\n\t\t\t\tm += di / N;\n\t\t\t\tmu.set( i, m );\n\n\t\t\t\t// Update the sample standard deviation:\n\t\t\t\td[ i ] = di;\n\t\t\t\tM2[ i ] += di * ( vi-m );\n\t\t\t\tsd[ i ] = sqrt( M2[i]/denom );\n\n\t\t\t\trdx = r * d[i];\n\t\t\t\tsdi = sd[ i ];\n\t\t\t\tfor ( j = 0; j < i; j++ ) {\n\t\t\t\t\tcij = C.get( i, j ) + ( rdx*d[j] );\n\t\t\t\t\tC.set( i, j, cij );\n\t\t\t\t\tC.set( j, i, cij ); // via symmetry\n\n\t\t\t\t\trij = ( cij/denom ) / ( sdi*sd[j] );\n\t\t\t\t\tcorr.set( i, j, rij );\n\t\t\t\t\tcorr.set( j, i, rij ); // via symmetry\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn corr;\n\t}\n\n\t/**\n\t* If provided a data vector, the accumulator function returns an updated sample correlation matrix. If not provided a data vector, the accumulator function returns the current sample correlation matrix.\n\t*\n\t* @private\n\t* @param {ndarray} [v] - data vector\n\t* @throws {TypeError} must provide a 1-dimensional ndarray\n\t* @throws {Error} vector length must match correlation matrix dimensions\n\t* @returns {(ndarray|null)} sample correlation matrix or null\n\t*/\n\tfunction accumulator2( v ) {\n\t\tvar rij;\n\t\tvar cij;\n\t\tvar sdi;\n\t\tvar di;\n\t\tvar i;\n\t\tvar j;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn corr;\n\t\t}\n\t\tif ( !isVectorLike( v ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a one-dimensional ndarray. Value: `%s`.', v ) );\n\t\t}\n\t\tif ( v.shape[ 0 ] !== order ) {\n\t\t\tthrow new Error( format( 'invalid argument. Vector length must match correlation matrix dimensions. Expected: `%u`. Actual: `%u`.', order, v.shape[ 0 ] ) );\n\t\t}\n\t\tN += 1;\n\t\tfor ( i = 0; i < order; i++ ) {\n\t\t\t// Compute the residual:\n\t\t\tdi = v.get( i ) - mu.get( i );\n\t\t\td[ i ] = di;\n\n\t\t\t// Update the standard deviation:\n\t\t\tM2[ i ] += di * di;\n\t\t\tsd[ i ] = sqrt( M2[i]/N );\n\n\t\t\t// Update the co-moments and correlation matrix, recognizing that the matrices are symmetric...\n\t\t\tsdi = sd[ i ];\n\t\t\tfor ( j = 0; j < i; j++ ) {\n\t\t\t\tcij = C.get( i, j ) + ( di*d[j] );\n\t\t\t\tC.set( i, j, cij );\n\t\t\t\tC.set( j, i, cij ); // via symmetry\n\n\t\t\t\trij = ( cij/N ) / ( sdi*sd[j] );\n\t\t\t\tcorr.set( i, j, rij );\n\t\t\t\tcorr.set( j, i, rij ); // via symmetry\n\t\t\t}\n\t\t}\n\t\treturn corr;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrpcorrmat;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the root mean squared error (RMSE) incrementally.\n*\n* @module @stdlib/stats/incr/rmse\n*\n* @example\n* var incrrmse = require( '@stdlib/stats/incr/rmse' );\n*\n* var accumulator = incrrmse();\n*\n* var r = accumulator();\n* // returns null\n*\n* r = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* r = accumulator( -5.0, 2.0 );\n* // returns 5.0\n*\n* r = accumulator();\n* // returns 5.0\n*/\n\n// MODULES //\n\nvar incrrmse = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrrmse;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar incrmean = require( './../../../incr/mean' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes the root mean squared error.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrrmse();\n*\n* var r = accumulator();\n* // returns null\n*\n* r = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* r = accumulator( -5.0, 2.0 );\n* // returns 5.0\n*\n* r = accumulator();\n* // returns 5.0\n*/\nfunction incrrmse() {\n\tvar mean = incrmean();\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated root mean squared error. If not provided input values, the accumulator function returns the current root mean squared error.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @param {number} [y] - input value\n\t* @returns {(number|null)} root mean squared error or null\n\t*/\n\tfunction accumulator( x, y ) {\n\t\tvar r;\n\t\tif ( arguments.length === 0 ) {\n\t\t\tr = mean();\n\t\t\tif ( r === null ) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\treturn sqrt( r );\n\t\t}\n\t\tr = y - x;\n\t\treturn sqrt( mean( r*r ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrrmse;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the residual sum of squares incrementally.\n*\n* @module @stdlib/stats/incr/rss\n*\n* @example\n* var incrrss = require( '@stdlib/stats/incr/rss' );\n*\n* var accumulator = incrrss();\n*\n* var r = accumulator();\n* // returns null\n*\n* r = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* r = accumulator( -5.0, 2.0 );\n* // returns 50.0\n*\n* r = accumulator();\n* // returns 50.0\n*/\n\n// MODULES //\n\nvar incrrss = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrrss;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar incrsum = require( './../../../incr/sum' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes the residual sum of squares.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrrss();\n*\n* var r = accumulator();\n* // returns null\n*\n* r = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* r = accumulator( -5.0, 2.0 );\n* // returns 50.0\n*\n* r = accumulator();\n* // returns 50.0\n*/\nfunction incrrss() {\n\tvar sum = incrsum();\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated residual sum of squares. If not provided input values, the accumulator function returns the current residual sum of squares.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @param {number} [y] - input value\n\t* @returns {(number|null)} residual sum of squares or null\n\t*/\n\tfunction accumulator( x, y ) {\n\t\tvar r;\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn sum();\n\t\t}\n\t\tr = y - x;\n\t\treturn sum( r*r );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrrss;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a statistical summary incrementally.\n*\n* @module @stdlib/stats/incr/summary\n*\n* @example\n* var incrsummary = require( '@stdlib/stats/incr/summary' );\n*\n* var accumulator = incrsummary();\n*\n* var summary = accumulator();\n* // returns {}\n*\n* summary = accumulator( 2.0 );\n* // returns {...}\n*\n* summary = accumulator( -5.0 );\n* // returns {...}\n*\n* summary = accumulator();\n* // returns {...}\n*/\n\n// MODULES //\n\nvar incrsummary = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrsummary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar incrcount = require( './../../../incr/count' );\nvar incrmax = require( './../../../incr/max' );\nvar incrmin = require( './../../../incr/min' );\nvar incrrange = require( './../../../incr/range' );\nvar incrmidrange = require( './../../../incr/midrange' );\nvar incrsum = require( './../../../incr/sum' );\nvar incrmean = require( './../../../incr/mean' );\nvar incrvariance = require( './../../../incr/variance' );\nvar incrstdev = require( './../../../incr/stdev' );\nvar incrskewness = require( './../../../incr/skewness' );\nvar incrkurtosis = require( './../../../incr/kurtosis' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a statistical summary.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrsummary();\n*\n* var summary = accumulator();\n* // returns {}\n*\n* summary = accumulator( 2.0 );\n* // returns {...}\n*\n* summary = accumulator( -5.0 );\n* // returns {...}\n*\n* summary = accumulator();\n* // returns {...}\n*/\nfunction incrsummary() {\n\tvar midrange;\n\tvar variance;\n\tvar skewness;\n\tvar kurtosis;\n\tvar summary;\n\tvar count;\n\tvar range;\n\tvar stdev;\n\tvar mean;\n\tvar max;\n\tvar min;\n\tvar sum;\n\n\t// Incremental count:\n\tcount = incrcount();\n\n\t// Sum:\n\tsum = incrsum();\n\n\t// Sample mean:\n\tmean = incrmean();\n\n\t// Unbiased sample variance:\n\tvariance = incrvariance();\n\n\t// Corrected sample standard deviation:\n\tstdev = incrstdev();\n\n\t// Corrected sample skewness:\n\tskewness = incrskewness();\n\n\t// Corrected excess sample kurtosis:\n\tkurtosis = incrkurtosis();\n\n\t// Maximum value:\n\tmax = incrmax();\n\n\t// Minimum value:\n\tmin = incrmin();\n\n\t// Range (i.e., max-min):\n\trange = incrrange();\n\n\t// Mid-range:\n\tmidrange = incrmidrange();\n\n\t// Initial an object for tracking state:\n\tsummary = {};\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated summary. If not provided a value, the accumulator function returns the current summary.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {Object} summary\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn summary;\n\t\t}\n\t\tsummary.count = count( x );\n\t\tsummary.max = max( x );\n\t\tsummary.min = min( x );\n\t\tsummary.range = range( x );\n\t\tsummary.midrange = midrange( x );\n\t\tsummary.sum = sum( x );\n\t\tsummary.mean = mean( x );\n\t\tsummary.variance = variance( x );\n\t\tsummary.stdev = stdev( x );\n\t\tsummary.skewness = skewness( x );\n\t\tsummary.kurtosis = kurtosis( x );\n\t\treturn summary;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrsummary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a sum of products incrementally.\n*\n* @module @stdlib/stats/incr/sumprod\n*\n* @example\n* var incrsumprod = require( '@stdlib/stats/incr/sumprod' );\n*\n* var accumulator = incrsumprod();\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0, 3.0 );\n* // returns 6.0\n*\n* sum = accumulator( -5.0, 2.0 );\n* // returns -4.0\n*\n* sum = accumulator();\n* // returns -4.0\n*/\n\n// MODULES //\n\nvar incrsumprod = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrsumprod;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar incrsum = require( './../../../incr/sum' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a sum of products.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrsumprod();\n*\n* var sum = accumulator();\n* // returns null\n*\n* sum = accumulator( 2.0, 3.0 );\n* // returns 6.0\n*\n* sum = accumulator( -5.0, 2.0 );\n* // returns -4.0\n*\n* sum = accumulator();\n* // returns -4.0\n*/\nfunction incrsumprod() {\n\tvar sum = incrsum();\n\treturn accumulator;\n\n\t/**\n\t* If provided input values, the accumulator function returns an updated sum. If not provided input values, the accumulator function returns the current sum.\n\t*\n\t* @private\n\t* @param {number} [x] - first value\n\t* @param {number} [y] - second value\n\t* @returns {(number|null)} sum-product or null\n\t*/\n\tfunction accumulator( x, y ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn sum();\n\t\t}\n\t\treturn sum( x*y );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrsumprod;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a variance-to-mean ratio (VMR) incrementally.\n*\n* @module @stdlib/stats/incr/vmr\n*\n* @example\n* var incrvmr = require( '@stdlib/stats/incr/vmr' );\n*\n* var accumulator = incrvmr();\n*\n* var D = accumulator();\n* // returns null\n*\n* D = accumulator( 2.0 );\n* // returns 0.0\n*\n* D = accumulator( 1.0 );\n* // returns ~0.33\n*\n* D = accumulator();\n* // returns ~0.33\n*/\n\n// MODULES //\n\nvar incrvmr = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrvmr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a variance-to-mean ratio (VMR).\n*\n* ## Method\n*\n* -   This implementation uses [Welford's method][algorithms-variance] for efficient computation, which can be derived as follows. Let\n*\n*     ```tex\n*     \\begin{align*}\n*     S_n &= n \\sigma_n^2 \\\\\n*         &= \\sum_{i=1}^{n} (x_i - \\mu_n)^2 \\\\\n*         &= \\biggl(\\sum_{i=1}^{n} x_i^2 \\biggr) - n\\mu_n^2\n*     \\end{align*}\n*     ```\n*\n*     Accordingly,\n*\n*     ```tex\n*     \\begin{align*}\n*     S_n - S_{n-1} &= \\sum_{i=1}^{n} x_i^2 - n\\mu_n^2 - \\sum_{i=1}^{n-1} x_i^2 + (n-1)\\mu_{n-1}^2 \\\\\n*                   &= x_n^2 - n\\mu_n^2 + (n-1)\\mu_{n-1}^2 \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + n(\\mu_{n-1}^2 - \\mu_n^2) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + n(\\mu_{n-1} - \\mu_n)(\\mu_{n-1} + \\mu_n) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + (\\mu_{n-1} - x_n)(\\mu_{n-1} + \\mu_n) \\\\\n*                   &= x_n^2 - \\mu_{n-1}^2 + \\mu_{n-1}^2 - x_n\\mu_n - x_n\\mu_{n-1} + \\mu_n\\mu_{n-1} \\\\\n*                   &= x_n^2 - x_n\\mu_n - x_n\\mu_{n-1} + \\mu_n\\mu_{n-1} \\\\\n*                   &= (x_n - \\mu_{n-1})(x_n - \\mu_n) \\\\\n*                   &= S_{n-1} + (x_n - \\mu_{n-1})(x_n - \\mu_n)\n*     \\end{align*}\n*     ```\n*\n*     where we use the identity\n*\n*     ```tex\n*     x_n - \\mu_{n-1} = n (\\mu_n - \\mu_{n-1})\n*     ```\n*\n* [algorithms-variance]: https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance\n*\n* @param {number} [mean] - mean value\n* @throws {TypeError} must provide a number primitive\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrvmr();\n*\n* var D = accumulator();\n* // returns null\n*\n* D = accumulator( 2.0 );\n* // returns 0.0\n*\n* D = accumulator( 1.0 );\n* // returns ~0.33\n*\n* D = accumulator();\n* // returns ~0.33\n*\n* @example\n* var accumulator = incrvmr( 3.14 );\n*/\nfunction incrvmr( mean ) {\n\tvar delta;\n\tvar mu;\n\tvar M2;\n\tvar N;\n\n\tM2 = 0.0;\n\tN = 0;\n\tif ( arguments.length ) {\n\t\tif ( !isNumber( mean ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a number. Value: `%s`.', mean ) );\n\t\t}\n\t\tmu = mean;\n\t\treturn accumulator2;\n\t}\n\tmu = 0.0;\n\treturn accumulator1;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated accumulated value. If not provided a value, the accumulator function returns the current accumulated value.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} accumulated value or null\n\t*/\n\tfunction accumulator1( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn ( isnan( M2 ) ) ? NaN : 0.0/mu;\n\t\t\t}\n\t\t\treturn ( M2/(N-1) ) / mu;\n\t\t}\n\t\tN += 1;\n\t\tdelta = x - mu;\n\t\tmu += delta / N;\n\t\tM2 += delta * ( x - mu );\n\t\tif ( N < 2 ) {\n\t\t\treturn ( isnan( M2 ) ) ? NaN : 0.0/mu;\n\t\t}\n\t\treturn ( M2/(N-1) ) / mu;\n\t}\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated accumulated value. If not provided a value, the accumulator function returns the current accumulated value.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} accumulated value or null\n\t*/\n\tfunction accumulator2( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn ( M2/N ) / mu;\n\t\t}\n\t\tN += 1;\n\t\tdelta = x - mu;\n\t\tM2 += delta * delta;\n\t\treturn ( M2/N ) / mu;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrvmr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a weighted arithmetic mean incrementally.\n*\n* @module @stdlib/stats/incr/wmean\n*\n* @example\n* var incrwmean = require( '@stdlib/stats/incr/wmean' );\n*\n* var accumulator = incrwmean();\n*\n* var mu = accumulator();\n* // returns null\n*\n* mu = accumulator( 2.0, 1.0 );\n* // returns 2.0\n*\n* mu = accumulator( 2.0, 0.5 );\n* // returns 2.0\n*\n* mu = accumulator( 3.0, 1.5 );\n* // returns 2.5\n*\n* mu = accumulator();\n* // returns 2.5\n*/\n\n// MODULES //\n\nvar incrwmean = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrwmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns an accumulator function which incrementally computes a weighted arithmetic mean.\n*\n* ## Method\n*\n* -   The weighted arithmetic mean is defined as\n*\n*     ```tex\n*     \\mu = \\frac{\\sum_{i=0}^{n-1} w_i x_i}{\\sum_{i=0}^{n-1} w_i}\n*     ```\n*\n*     where \\\\( w_i \\\\) are the weights.\n*\n* -   The weighted arithmetic mean is equivalent to the simple arithmetic mean when all weights are equal.\n*\n*     ```tex\n*     \\begin{align*}\n*     \\mu &= \\frac{\\sum_{i=0}^{n-1} w x_i}{\\sum_{i=0}^{n-1} w} \\\\\n*         &= \\frac{w\\sum_{i=0}^{n-1} x_i}{nw} \\\\\n*         &= \\frac{1}{n} \\sum_{i=0}^{n-1}\n*     \\end{align*}\n*     ```\n*\n* -   If the weights are different, then one can view weights either as sample frequencies or as a means to calculate probabilities where \\\\( p_i = w_i / \\sum w_i \\\\).\n*\n* -   To derive an incremental formula for computing a weighted arithmetic mean, let\n*\n*     ```tex\n*     W_n = \\sum_{i=1}^{n} w_i\n*     ```\n*\n* -   Accordingly,\n*\n*     ```tex\n*     \\begin{align*}\n*     \\mu_n &= \\frac{1}{W_n} \\sum_{i=1}^{n} w_i x_i \\\\\n*         &= \\frac{1}{W_n} \\biggl(w_n x_n + \\sum_{i=1}^{n-1} w_i x_i \\biggr) \\\\\n*         &= \\frac{1}{W_n} (w_n x_n + W_{n-1} \\mu_{n-1}) \\\\\n*         &= \\frac{1}{W_n} (w_n x_n + (W_n - w_n) \\mu_{n-1}) \\\\\n*         &= \\frac{1}{W_n} (W_n \\mu_{n-1} + w_n x_n - w_n\\mu_{n-1}) \\\\\n*         &= \\mu_{n-1} + \\frac{w_n}{W_n} (x_n - \\mu_{n-1})\n*     \\end{align*}\n*     ```\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrwmean();\n*\n* var mu = accumulator();\n* // returns null\n*\n* mu = accumulator( 2.0, 1.0 );\n* // returns 2.0\n*\n* mu = accumulator( 2.0, 0.5 );\n* // returns 2.0\n*\n* mu = accumulator( 3.0, 1.5 );\n* // returns 2.5\n*\n* mu = accumulator();\n* // returns 2.5\n*/\nfunction incrwmean() {\n\tvar wsum;\n\tvar FLG;\n\tvar mu;\n\n\twsum = 0.0;\n\tmu = 0.0;\n\n\treturn accumulator;\n\n\t/**\n\t* If provided arguments, the accumulator function returns an updated weighted mean. If not provided arguments, the accumulator function returns the current weighted mean.\n\t*\n\t* @private\n\t* @param {number} [x] - value\n\t* @param {number} [w] - weight\n\t* @returns {(number|null)} weighted mean or null\n\t*/\n\tfunction accumulator( x, w ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( FLG === void 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn mu;\n\t\t}\n\t\tFLG = true;\n\t\twsum += w;\n\t\tmu += ( w/wsum ) * ( x-mu );\n\t\treturn mu;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrwmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is iterator-like.\n*\n* @module @stdlib/assert/is-iterator-like\n*\n* @example\n* var isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\n*\n* var it = {\n*     'next': function noop() {}\n* };\n* var bool = isIteratorLike( it );\n* // returns true\n*\n* bool = isIteratorLike( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isIterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( './../../is-function' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is iterator-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is iterator-like\n*\n* @example\n* var it = {\n*     'next': function noop() {}\n* };\n* var bool = isIteratorLike( it );\n* // returns true\n*\n* @example\n* var bool = isIteratorLike( {} );\n* // returns false\n*\n* @example\n* var bool = isIteratorLike( null );\n* // returns false\n*/\nfunction isIteratorLike( value ) {\n\tvar t = typeof value;\n\treturn (\n\t\tvalue !== null &&\n\t\t( t === 'object' || t === 'function' ) &&\n\t\tisFunction( value.next )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isIteratorLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name itercugmean\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/cugmean}\n*/\nsetReadOnly( ns, 'itercugmean', require( './../../iter/cugmean' ) );\n\n/**\n* @name itercuhmean\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/cuhmean}\n*/\nsetReadOnly( ns, 'itercuhmean', require( './../../iter/cuhmean' ) );\n\n/**\n* @name itercumax\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/cumax}\n*/\nsetReadOnly( ns, 'itercumax', require( './../../iter/cumax' ) );\n\n/**\n* @name itercumaxabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/cumaxabs}\n*/\nsetReadOnly( ns, 'itercumaxabs', require( './../../iter/cumaxabs' ) );\n\n/**\n* @name itercumean\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/cumean}\n*/\nsetReadOnly( ns, 'itercumean', require( './../../iter/cumean' ) );\n\n/**\n* @name itercumeanabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/cumeanabs}\n*/\nsetReadOnly( ns, 'itercumeanabs', require( './../../iter/cumeanabs' ) );\n\n/**\n* @name itercumeanabs2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/cumeanabs2}\n*/\nsetReadOnly( ns, 'itercumeanabs2', require( './../../iter/cumeanabs2' ) );\n\n/**\n* @name itercumidrange\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/cumidrange}\n*/\nsetReadOnly( ns, 'itercumidrange', require( './../../iter/cumidrange' ) );\n\n/**\n* @name itercumin\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/cumin}\n*/\nsetReadOnly( ns, 'itercumin', require( './../../iter/cumin' ) );\n\n/**\n* @name itercuminabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/cuminabs}\n*/\nsetReadOnly( ns, 'itercuminabs', require( './../../iter/cuminabs' ) );\n\n/**\n* @name itercuprod\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/cuprod}\n*/\nsetReadOnly( ns, 'itercuprod', require( './../../iter/cuprod' ) );\n\n/**\n* @name itercurange\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/curange}\n*/\nsetReadOnly( ns, 'itercurange', require( './../../iter/curange' ) );\n\n/**\n* @name itercusum\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/cusum}\n*/\nsetReadOnly( ns, 'itercusum', require( './../../iter/cusum' ) );\n\n/**\n* @name itercusumabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/cusumabs}\n*/\nsetReadOnly( ns, 'itercusumabs', require( './../../iter/cusumabs' ) );\n\n/**\n* @name itercusumabs2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/cusumabs2}\n*/\nsetReadOnly( ns, 'itercusumabs2', require( './../../iter/cusumabs2' ) );\n\n/**\n* @name itermax\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/max}\n*/\nsetReadOnly( ns, 'itermax', require( './../../iter/max' ) );\n\n/**\n* @name itermaxabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/maxabs}\n*/\nsetReadOnly( ns, 'itermaxabs', require( './../../iter/maxabs' ) );\n\n/**\n* @name itermean\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/mean}\n*/\nsetReadOnly( ns, 'itermean', require( './../../iter/mean' ) );\n\n/**\n* @name itermeanabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/meanabs}\n*/\nsetReadOnly( ns, 'itermeanabs', require( './../../iter/meanabs' ) );\n\n/**\n* @name itermeanabs2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/meanabs2}\n*/\nsetReadOnly( ns, 'itermeanabs2', require( './../../iter/meanabs2' ) );\n\n/**\n* @name itermidrange\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/midrange}\n*/\nsetReadOnly( ns, 'itermidrange', require( './../../iter/midrange' ) );\n\n/**\n* @name itermin\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/min}\n*/\nsetReadOnly( ns, 'itermin', require( './../../iter/min' ) );\n\n/**\n* @name iterminabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/minabs}\n*/\nsetReadOnly( ns, 'iterminabs', require( './../../iter/minabs' ) );\n\n/**\n* @name itermmax\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/mmax}\n*/\nsetReadOnly( ns, 'itermmax', require( './../../iter/mmax' ) );\n\n/**\n* @name itermmaxabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/mmaxabs}\n*/\nsetReadOnly( ns, 'itermmaxabs', require( './../../iter/mmaxabs' ) );\n\n/**\n* @name itermmean\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/mmean}\n*/\nsetReadOnly( ns, 'itermmean', require( './../../iter/mmean' ) );\n\n/**\n* @name itermmeanabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/mmeanabs}\n*/\nsetReadOnly( ns, 'itermmeanabs', require( './../../iter/mmeanabs' ) );\n\n/**\n* @name itermmeanabs2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/mmeanabs2}\n*/\nsetReadOnly( ns, 'itermmeanabs2', require( './../../iter/mmeanabs2' ) );\n\n/**\n* @name itermmidrange\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/mmidrange}\n*/\nsetReadOnly( ns, 'itermmidrange', require( './../../iter/mmidrange' ) );\n\n/**\n* @name itermmin\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/mmin}\n*/\nsetReadOnly( ns, 'itermmin', require( './../../iter/mmin' ) );\n\n/**\n* @name itermminabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/mminabs}\n*/\nsetReadOnly( ns, 'itermminabs', require( './../../iter/mminabs' ) );\n\n/**\n* @name itermprod\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/mprod}\n*/\nsetReadOnly( ns, 'itermprod', require( './../../iter/mprod' ) );\n\n/**\n* @name itermrange\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/mrange}\n*/\nsetReadOnly( ns, 'itermrange', require( './../../iter/mrange' ) );\n\n/**\n* @name itermsum\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/msum}\n*/\nsetReadOnly( ns, 'itermsum', require( './../../iter/msum' ) );\n\n/**\n* @name itermsumabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/msumabs}\n*/\nsetReadOnly( ns, 'itermsumabs', require( './../../iter/msumabs' ) );\n\n/**\n* @name itermsumabs2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/msumabs2}\n*/\nsetReadOnly( ns, 'itermsumabs2', require( './../../iter/msumabs2' ) );\n\n/**\n* @name iterprod\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/prod}\n*/\nsetReadOnly( ns, 'iterprod', require( './../../iter/prod' ) );\n\n/**\n* @name iterrange\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/range}\n*/\nsetReadOnly( ns, 'iterrange', require( './../../iter/range' ) );\n\n/**\n* @name iterstdev\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/stdev}\n*/\nsetReadOnly( ns, 'iterstdev', require( './../../iter/stdev' ) );\n\n/**\n* @name itersum\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/sum}\n*/\nsetReadOnly( ns, 'itersum', require( './../../iter/sum' ) );\n\n/**\n* @name itersumabs\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/sumabs}\n*/\nsetReadOnly( ns, 'itersumabs', require( './../../iter/sumabs' ) );\n\n/**\n* @name itersumabs2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/sumabs2}\n*/\nsetReadOnly( ns, 'itersumabs2', require( './../../iter/sumabs2' ) );\n\n/**\n* @name itervariance\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/iter/variance}\n*/\nsetReadOnly( ns, 'itervariance', require( './../../iter/variance' ) );\n\n\n// EXPORTS //\n\nmodule.exports = ns;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a cumulative geometric mean.\n*\n* @module @stdlib/stats/iter/cugmean\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itercugmean = require( '@stdlib/stats/iter/cugmean' );\n*\n* var rand = runif( 0.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercugmean( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrgmean = require( './../../../incr/gmean' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a cumulative arithmetic geometric mean.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( 0.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercugmean( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itercugmean( iterator ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrgmean();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itercugmean( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itercugmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a cumulative harmonic mean.\n*\n* @module @stdlib/stats/iter/cuhmean\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itercuhmean = require( '@stdlib/stats/iter/cuhmean' );\n*\n* var rand = runif( 0.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercuhmean( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrhmean = require( './../../../incr/hmean' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a cumulative arithmetic geometric mean.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( 0.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercuhmean( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itercuhmean( iterator ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrhmean();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itercuhmean( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itercuhmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a cumulative maximum value.\n*\n* @module @stdlib/stats/iter/cumax\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itercumax = require( '@stdlib/stats/iter/cumax' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercumax( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrmax = require( './../../../incr/max' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a cumulative maximum value.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercumax( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itercumax( iterator ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrmax();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itercumax( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itercumax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a cumulative maximum absolute value.\n*\n* @module @stdlib/stats/iter/cumaxabs\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itercumaxabs = require( '@stdlib/stats/iter/cumaxabs' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercumaxabs( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrmaxabs = require( './../../../incr/maxabs' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a cumulative maximum absolute value.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercumaxabs( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itercumaxabs( iterator ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrmaxabs();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itercumaxabs( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itercumaxabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a cumulative arithmetic mean.\n*\n* @module @stdlib/stats/iter/cumean\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itercumean = require( '@stdlib/stats/iter/cumean' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercumean( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrmean = require( './../../../incr/mean' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a cumulative arithmetic mean.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercumean( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itercumean( iterator ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrmean();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itercumean( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itercumean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a cumulative arithmetic mean of absolute values.\n*\n* @module @stdlib/stats/iter/cumeanabs\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itercumeanabs = require( '@stdlib/stats/iter/cumeanabs' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercumeanabs( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrmeanabs = require( './../../../incr/meanabs' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a cumulative arithmetic mean of absolute values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercumeanabs( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itercumeanabs( iterator ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrmeanabs();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itercumeanabs( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itercumeanabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a cumulative arithmetic mean of squared absolute values.\n*\n* @module @stdlib/stats/iter/cumeanabs2\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itercumeanabs2 = require( '@stdlib/stats/iter/cumeanabs2' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercumeanabs2( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrmeanabs2 = require( './../../../incr/meanabs2' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a cumulative arithmetic mean of squared absolute values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercumeanabs2( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itercumeanabs2( iterator ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrmeanabs2();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itercumeanabs2( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itercumeanabs2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a cumulative mid-range.\n*\n* @module @stdlib/stats/iter/cumidrange\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itercumidrange = require( '@stdlib/stats/iter/cumidrange' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercumidrange( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrmidrange = require( './../../../incr/midrange' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a cumulative mid-range.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercumidrange( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itercumidrange( iterator ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrmidrange();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itercumidrange( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itercumidrange;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a cumulative minimum value.\n*\n* @module @stdlib/stats/iter/cumin\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itercumin = require( '@stdlib/stats/iter/cumin' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercumin( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrmin = require( './../../../incr/min' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a cumulative minimum value.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercumin( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itercumin( iterator ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrmin();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itercumin( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itercumin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a cumulative minimum absolute value.\n*\n* @module @stdlib/stats/iter/cuminabs\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itercuminabs = require( '@stdlib/stats/iter/cuminabs' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercuminabs( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrminabs = require( './../../../incr/minabs' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a cumulative minimum absolute value.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercuminabs( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itercuminabs( iterator ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrminabs();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itercuminabs( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itercuminabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a cumulative product.\n*\n* @module @stdlib/stats/iter/cuprod\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itercuprod = require( '@stdlib/stats/iter/cuprod' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercuprod( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrprod = require( './../../../incr/prod' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a cumulative product.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercuprod( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itercuprod( iterator ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrprod();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itercuprod( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itercuprod;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a cumulative range.\n*\n* @module @stdlib/stats/iter/curange\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itercurange = require( '@stdlib/stats/iter/curange' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercurange( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrrange = require( './../../../incr/range' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a cumulative range.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercurange( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itercurange( iterator ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrrange();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itercurange( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itercurange;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a cumulative sum.\n*\n* @module @stdlib/stats/iter/cusum\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itercusum = require( '@stdlib/stats/iter/cusum' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercusum( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrsum = require( './../../../incr/sum' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a cumulative sum.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercusum( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itercusum( iterator ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrsum();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itercusum( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itercusum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a cumulative sum of absolute values.\n*\n* @module @stdlib/stats/iter/cusumabs\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itercusumabs = require( '@stdlib/stats/iter/cusumabs' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercusumabs( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrsumabs = require( './../../../incr/sumabs' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a cumulative sum of absolute values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercusumabs( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itercusumabs( iterator ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrsumabs();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itercusumabs( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itercusumabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a cumulative sum of squared absolute values.\n*\n* @module @stdlib/stats/iter/cusumabs2\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itercusumabs2 = require( '@stdlib/stats/iter/cusumabs2' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercusumabs2( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrsumabs2 = require( './../../../incr/sumabs2' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a cumulative sum of squared absolute values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercusumabs2( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itercusumabs2( iterator ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrsumabs2();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itercusumabs2( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itercusumabs2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the maximum value of all iterated values.\n*\n* @module @stdlib/stats/iter/max\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermax = require( '@stdlib/stats/iter/max' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var m = itermax( rand );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar incrmax = require( './../../../incr/max' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Computes the maximum value of all iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {(number|null)} maximum value\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var m = itermax( rand );\n* // returns <number>\n*/\nfunction itermax( iterator ) {\n\tvar acc;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrmax();\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tacc( v.value );\n\t\t} else {\n\t\t\tacc( NaN );\n\t\t}\n\t}\n\treturn acc();\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the maximum absolute value of all iterated values.\n*\n* @module @stdlib/stats/iter/maxabs\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermaxabs = require( '@stdlib/stats/iter/maxabs' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var m = itermaxabs( rand );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar incrmaxabs = require( './../../../incr/maxabs' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Computes the maximum absolute value of all iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {(number|null)} maximum absolute value\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var m = itermaxabs( rand );\n* // returns <number>\n*/\nfunction itermaxabs( iterator ) {\n\tvar acc;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrmaxabs();\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tacc( v.value );\n\t\t} else {\n\t\t\tacc( NaN );\n\t\t}\n\t}\n\treturn acc();\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermaxabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the arithmetic mean over all iterated values.\n*\n* @module @stdlib/stats/iter/mean\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermean = require( '@stdlib/stats/iter/mean' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var m = itermean( rand );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar incrmean = require( './../../../incr/mean' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean over all iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {(number|null)} arithmetic mean\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var m = itermean( rand );\n* // returns <number>\n*/\nfunction itermean( iterator ) {\n\tvar acc;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrmean();\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tacc( v.value );\n\t\t} else {\n\t\t\tacc( NaN );\n\t\t}\n\t}\n\treturn acc();\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the arithmetic mean of absolute values for all iterated values.\n*\n* @module @stdlib/stats/iter/meanabs\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermeanabs = require( '@stdlib/stats/iter/meanabs' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var m = itermeanabs( rand );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar incrmeanabs = require( './../../../incr/meanabs' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of absolute values for all iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {(number|null)} arithmetic mean of absolute values\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var m = itermeanabs( rand );\n* // returns <number>\n*/\nfunction itermeanabs( iterator ) {\n\tvar acc;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrmeanabs();\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tacc( v.value );\n\t\t} else {\n\t\t\tacc( NaN );\n\t\t}\n\t}\n\treturn acc();\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermeanabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the arithmetic mean of squared absolute values for all iterated values.\n*\n* @module @stdlib/stats/iter/meanabs2\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermeanabs2 = require( '@stdlib/stats/iter/meanabs2' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var m = itermeanabs2( rand );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar incrmeanabs2 = require( './../../../incr/meanabs2' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of squared absolute values for all iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {(number|null)} arithmetic mean of squared absolute values\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var m = itermeanabs2( rand );\n* // returns <number>\n*/\nfunction itermeanabs2( iterator ) {\n\tvar acc;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrmeanabs2();\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tacc( v.value );\n\t\t} else {\n\t\t\tacc( NaN );\n\t\t}\n\t}\n\treturn acc();\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermeanabs2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the mid-range of all iterated values.\n*\n* @module @stdlib/stats/iter/midrange\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermidrange = require( '@stdlib/stats/iter/midrange' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var v = itermidrange( rand );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar incrmidrange = require( './../../../incr/midrange' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Computes the mid-range of all iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {(number|null)} mid-range\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var v = itermidrange( rand );\n* // returns <number>\n*/\nfunction itermidrange( iterator ) {\n\tvar acc;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrmidrange();\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tacc( v.value );\n\t\t} else {\n\t\t\tacc( NaN );\n\t\t}\n\t}\n\treturn acc();\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermidrange;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the minimum value of all iterated values.\n*\n* @module @stdlib/stats/iter/min\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermin = require( '@stdlib/stats/iter/min' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var m = itermin( rand );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar incrmin = require( './../../../incr/min' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Computes the minimum value of all iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {(number|null)} minimum value\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var m = itermin( rand );\n* // returns <number>\n*/\nfunction itermin( iterator ) {\n\tvar acc;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrmin();\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tacc( v.value );\n\t\t} else {\n\t\t\tacc( NaN );\n\t\t}\n\t}\n\treturn acc();\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the minimum absolute value of all iterated values.\n*\n* @module @stdlib/stats/iter/minabs\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var iterminabs = require( '@stdlib/stats/iter/minabs' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var m = iterminabs( rand );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar incrminabs = require( './../../../incr/minabs' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Computes the minimum absolute value of all iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {(number|null)} minimum absolute value\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var m = iterminabs( rand );\n* // returns <number>\n*/\nfunction iterminabs( iterator ) {\n\tvar acc;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrminabs();\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tacc( v.value );\n\t\t} else {\n\t\t\tacc( NaN );\n\t\t}\n\t}\n\treturn acc();\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterminabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a moving maximum value.\n*\n* @module @stdlib/stats/iter/mmax\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermmax = require( '@stdlib/stats/iter/mmax' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermmax( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrmmax = require( './../../../incr/mmax' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a moving maximum value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermmax( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itermmax( iterator, W ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tacc = incrmmax( W );\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itermmax( iterator[ iteratorSymbol ](), W );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermmax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a moving maximum absolute value.\n*\n* @module @stdlib/stats/iter/mmaxabs\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermmaxabs = require( '@stdlib/stats/iter/mmaxabs' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermmaxabs( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrmmaxabs = require( './../../../incr/mmaxabs' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a moving maximum absolute value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermmaxabs( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itermmaxabs( iterator, W ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tacc = incrmmaxabs( W );\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itermmaxabs( iterator[ iteratorSymbol ](), W );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermmaxabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a moving arithmetic mean.\n*\n* @module @stdlib/stats/iter/mmean\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermmean = require( '@stdlib/stats/iter/mmean' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermmean( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrmmean = require( './../../../incr/mmean' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a moving arithmetic mean.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermmean( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itermmean( iterator, W ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tacc = incrmmean( W );\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itermmean( iterator[ iteratorSymbol ](), W );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a moving arithmetic mean of absolute values.\n*\n* @module @stdlib/stats/iter/mmeanabs\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermmeanabs = require( '@stdlib/stats/iter/mmeanabs' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermmeanabs( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrmmeanabs = require( './../../../incr/mmeanabs' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a moving arithmetic mean of absolute values.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermmeanabs( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itermmeanabs( iterator, W ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tacc = incrmmeanabs( W );\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itermmeanabs( iterator[ iteratorSymbol ](), W );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermmeanabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a moving arithmetic mean of squared absolute values.\n*\n* @module @stdlib/stats/iter/mmeanabs2\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermmeanabs2 = require( '@stdlib/stats/iter/mmeanabs2' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermmeanabs2( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrmmeanabs2 = require( './../../../incr/mmeanabs2' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a moving arithmetic mean of squared absolute values.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermmeanabs2( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itermmeanabs2( iterator, W ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tacc = incrmmeanabs2( W );\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itermmeanabs2( iterator[ iteratorSymbol ](), W );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermmeanabs2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a moving mid-range.\n*\n* @module @stdlib/stats/iter/mmidrange\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermmidrange = require( '@stdlib/stats/iter/mmidrange' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermmidrange( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrmmidrange = require( './../../../incr/mmidrange' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a moving mid-range.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermmidrange( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itermmidrange( iterator, W ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tacc = incrmmidrange( W );\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itermmidrange( iterator[ iteratorSymbol ](), W );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermmidrange;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a moving minimum value.\n*\n* @module @stdlib/stats/iter/mmin\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermmin = require( '@stdlib/stats/iter/mmin' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermmin( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrmmin = require( './../../../incr/mmin' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a moving minimum value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermmin( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itermmin( iterator, W ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tacc = incrmmin( W );\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itermmin( iterator[ iteratorSymbol ](), W );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermmin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a moving minimum absolute value.\n*\n* @module @stdlib/stats/iter/mminabs\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermminabs = require( '@stdlib/stats/iter/mminabs' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermminabs( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrmminabs = require( './../../../incr/mminabs' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a moving minimum absolute value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermminabs( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itermminabs( iterator, W ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tacc = incrmminabs( W );\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itermminabs( iterator[ iteratorSymbol ](), W );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermminabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a moving product.\n*\n* @module @stdlib/stats/iter/mprod\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermprod = require( '@stdlib/stats/iter/mprod' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermprod( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrmprod = require( './../../../incr/mprod' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a moving product.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermprod( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itermprod( iterator, W ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tacc = incrmprod( W );\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itermprod( iterator[ iteratorSymbol ](), W );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermprod;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a moving range.\n*\n* @module @stdlib/stats/iter/mrange\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermrange = require( '@stdlib/stats/iter/mrange' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermrange( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrmrange = require( './../../../incr/mrange' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a moving range.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermrange( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itermrange( iterator, W ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tacc = incrmrange( W );\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itermrange( iterator[ iteratorSymbol ](), W );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermrange;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a moving sum.\n*\n* @module @stdlib/stats/iter/msum\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermsum = require( '@stdlib/stats/iter/msum' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermsum( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrmsum = require( './../../../incr/msum' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a moving sum.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermsum( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itermsum( iterator, W ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tacc = incrmsum( W );\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itermsum( iterator[ iteratorSymbol ](), W );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermsum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a moving sum of absolute values.\n*\n* @module @stdlib/stats/iter/msumabs\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermsumabs = require( '@stdlib/stats/iter/msumabs' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermsumabs( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrmsumabs = require( './../../../incr/msumabs' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a moving sum of absolute values.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermsumabs( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itermsumabs( iterator, W ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tacc = incrmsumabs( W );\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itermsumabs( iterator[ iteratorSymbol ](), W );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermsumabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a moving sum of squared absolute values.\n*\n* @module @stdlib/stats/iter/msumabs2\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermsumabs2 = require( '@stdlib/stats/iter/msumabs2' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermsumabs2( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar incrmsumabs2 = require( './../../../incr/msumabs2' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a moving sum of squared absolute values.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermsumabs2( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itermsumabs2( iterator, W ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', W ) );\n\t}\n\tacc = incrmsumabs2( W );\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itermsumabs2( iterator[ iteratorSymbol ](), W );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermsumabs2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the product of all iterated values.\n*\n* @module @stdlib/stats/iter/prod\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var iterprod = require( '@stdlib/stats/iter/prod' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var p = iterprod( rand );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar incrprod = require( './../../../incr/prod' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Computes the product of all iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {(number|null)} product\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var p = iterprod( rand );\n* // returns <number>\n*/\nfunction iterprod( iterator ) {\n\tvar acc;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrprod();\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tacc( v.value );\n\t\t} else {\n\t\t\tacc( NaN );\n\t\t}\n\t}\n\treturn acc();\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterprod;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the range of all iterated values.\n*\n* @module @stdlib/stats/iter/range\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var iterrange = require( '@stdlib/stats/iter/range' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var v = iterrange( rand );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar incrrange = require( './../../../incr/range' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Computes the range of all iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {(number|null)} range\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var v = iterrange( rand );\n* // returns <number>\n*/\nfunction iterrange( iterator ) {\n\tvar acc;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrrange();\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tacc( v.value );\n\t\t} else {\n\t\t\tacc( NaN );\n\t\t}\n\t}\n\treturn acc();\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterrange;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the corrected sample standard deviation over all iterated values.\n*\n* @module @stdlib/stats/iter/stdev\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var iterstdev = require( '@stdlib/stats/iter/stdev' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var s = iterstdev( rand );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar incrstdev = require( './../../../incr/stdev' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Computes the corrected sample standard deviation over all iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @param {number} [mean] - mean value\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a number\n* @returns {(number|null)} corrected sample standard deviation\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var s = iterstdev( rand );\n* // returns <number>\n*/\nfunction iterstdev( iterator, mean ) {\n\tvar acc;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNumber( mean ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', mean ) );\n\t\t}\n\t\tacc = incrstdev( mean );\n\t} else {\n\t\tacc = incrstdev();\n\t}\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tacc( v.value );\n\t\t} else {\n\t\t\tacc( NaN );\n\t\t}\n\t}\n\treturn acc();\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterstdev;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the sum of all iterated values.\n*\n* @module @stdlib/stats/iter/sum\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itersum = require( '@stdlib/stats/iter/sum' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var s = itersum( rand );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar incrsum = require( './../../../incr/sum' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Computes the sum of all iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {(number|null)} sum\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var s = itersum( rand );\n* // returns <number>\n*/\nfunction itersum( iterator ) {\n\tvar acc;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrsum();\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tacc( v.value );\n\t\t} else {\n\t\t\tacc( NaN );\n\t\t}\n\t}\n\treturn acc();\n}\n\n\n// EXPORTS //\n\nmodule.exports = itersum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the sum of absolute values for all iterated values.\n*\n* @module @stdlib/stats/iter/sumabs\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itersumabs = require( '@stdlib/stats/iter/sumabs' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var s = itersumabs( rand );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar incrsumabs = require( './../../../incr/sumabs' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Computes the sum of absolute values for all iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {(number|null)} sum of absolute values\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var s = itersumabs( rand );\n* // returns <number>\n*/\nfunction itersumabs( iterator ) {\n\tvar acc;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrsumabs();\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tacc( v.value );\n\t\t} else {\n\t\t\tacc( NaN );\n\t\t}\n\t}\n\treturn acc();\n}\n\n\n// EXPORTS //\n\nmodule.exports = itersumabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the sum of squared absolute values for all iterated values.\n*\n* @module @stdlib/stats/iter/sumabs2\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itersumabs2 = require( '@stdlib/stats/iter/sumabs2' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var s = itersumabs2( rand );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar incrsumabs2 = require( './../../../incr/sumabs2' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Computes the sum of squared absolute values for all iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {(number|null)} sum of squared absolute values\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var s = itersumabs2( rand );\n* // returns <number>\n*/\nfunction itersumabs2( iterator ) {\n\tvar acc;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tacc = incrsumabs2();\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tacc( v.value );\n\t\t} else {\n\t\t\tacc( NaN );\n\t\t}\n\t}\n\treturn acc();\n}\n\n\n// EXPORTS //\n\nmodule.exports = itersumabs2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the unbiased sample variance over all iterated values.\n*\n* @module @stdlib/stats/iter/variance\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itervariance = require( '@stdlib/stats/iter/variance' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var s2 = itervariance( rand );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar incrvariance = require( './../../../incr/variance' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Computes the unbiased sample variance over all iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @param {number} [mean] - mean value\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a number\n* @returns {(number|null)} unbiased sample variance\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var s2 = itervariance( rand );\n* // returns <number>\n*/\nfunction itervariance( iterator, mean ) {\n\tvar acc;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNumber( mean ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', mean ) );\n\t\t}\n\t\tacc = incrvariance( mean );\n\t} else {\n\t\tacc = incrvariance();\n\t}\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tacc( v.value );\n\t\t} else {\n\t\t\tacc( NaN );\n\t\t}\n\t}\n\treturn acc();\n}\n\n\n// EXPORTS //\n\nmodule.exports = itervariance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a linearly spaced numeric array.\n*\n* @param {number} x1 - first array value\n* @param {number} x2 - last array value\n* @param {NonNegativeInteger} len - length of output array\n* @returns {Array} linearly spaced numeric array\n*\n* @example\n* var arr = linspace( 0, 100, 6 );\n* // returns [ 0, 20, 40, 60, 80, 100 ]\n*/\nfunction linspace( x1, x2, len ) {\n\tvar arr;\n\tvar N;\n\tvar d;\n\tvar i;\n\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\t// Calculate the increment:\n\tN = len - 1;\n\td = ( x2-x1 ) / N;\n\n\t// Build the output array...\n\tarr = [ x1 ];\n\tfor ( i = 1; i < N; i++ ) {\n\t\tarr.push( x1 + (d*i) );\n\t}\n\tarr.push( x2 );\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = linspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate a linearly spaced numeric array.\n*\n* @module @stdlib/array/base/linspace\n*\n* @example\n* var linspace = require( '@stdlib/array/base/linspace' );\n*\n* var arr = linspace( 0, 100, 6 );\n* // returns [ 0, 20, 40, 60, 80, 100 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isTypedArray = require( './../../is-typed-array' );\nvar isNumberArray = require( './../../is-number-array' ).primitives;\nvar isBuffer = require( './../../is-buffer' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a numeric array.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a numeric array\n*\n* @example\n* var bool = isNumericArray( new Int8Array( 10 ) );\n* // returns true\n*\n* bool = isNumericArray( [ 1, 2, 3 ] );\n* // returns true\n*\n* bool = isNumericArray( [ '1', '2', '3' ] );\n* // returns false\n*/\nfunction isNumericArray( v ) {\n\treturn (\n\t\t!isBuffer( v ) &&\n\t\t(isTypedArray( v ) || isNumberArray( v ))\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumericArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a numeric array.\n*\n* @module @stdlib/assert/is-numeric-array\n*\n* @example\n* var isNumericArray = require( '@stdlib/assert/is-numeric-array' );\n*\n* var bool = isNumericArray( new Int8Array( 10 ) );\n* // returns true\n*\n* bool = isNumericArray( [ 1, 2, 3 ] );\n* // returns true\n*\n* bool = isNumericArray( [ '1', '2', '3' ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNumericArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNumericArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\n\n\n// MAIN //\n\n/**\n* Computes the unbiased standard deviation.\n*\n* @private\n* @param {ndarrayLike} arr - input array\n* @param {number} j - column for which to calculate the standard deviation\n* @returns {number} standard deviation\n*\n* @example\n* var ndarrayLike = require( './ndarray_like.js' );\n*\n* var x = [ 0.6333, 0.8643, 1.0952, 1.3262, 1.5571, 1.7881, 2.019, 2.25, 2.481, 2.7119 ];\n* var y = [ -0.0468, 0.8012, 1.6492, 2.4973, 3.3454, 4.1934, 5.0415, 5.8896, 6.7376, 7.5857 ];\n* var arr = ndarrayLike( x, y );\n* var out = stdev( arr, 1 );\n* // returns ~2.568\n*/\nfunction stdev( arr, j ) {\n\tvar delta;\n\tvar mean;\n\tvar M2;\n\tvar i;\n\tvar x;\n\tdelta = 0.0;\n\tmean = 0.0;\n\tM2 = 0.0;\n\n\tfor ( i = 0; i < arr.shape[0]; i++ ) {\n\t\tx = arr.get( i, j );\n\t\tdelta = x - mean;\n\t\tmean += delta / ( i+1 );\n\t\tM2 += delta * ( x - mean );\n\t}\n\treturn sqrt( M2 / ( i - 1 ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = stdev;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// FUNCTIONS //\n\n/**\n* Comparator function used to sort values in ascending order.\n*\n* @private\n* @param {number} a - first number\n* @param {number} b - second number\n* @returns {number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n}\n\n/**\n* Computes a quantile of the values in a numeric array.\n*\n* @private\n* @param {NumericArray} arr - sorted 1d array\n* @param {Probability} p - quantile prob [0,1]\n* @returns {number} quantile\n*/\nfunction quantile( arr, p ) {\n\tvar len = arr.length;\n\tvar id;\n\tvar h;\n\th = ( ( len - 1.0 ) * p ) + 1.0;\n\tid = floor( h ) - 1.0;\n\treturn arr[ id ] + ( ( h - floor( h ) ) * ( arr[ id + 1 ] - arr[ id ] ) );\n}\n\n\n// MAIN //\n\n/**\n* Computes the inter-quartile range for a numeric array.\n*\n* @private\n* @param {NumericArray} data - ndarray like data\n* @param {number} j - column index for which to get the IQR\n* @returns {number} inter-quartile range\n*/\nfunction iqr( data, j ) {\n\t// Copy and sort data --> build X\n\tvar arr;\n\tvar i;\n\tarr = new Array( data.shape[0] );\n\tfor ( i = 0; i < data.shape[0]; i++ ) {\n\t\tarr[ i ] = data.get( i, j );\n\t}\n\tarr.sort( ascending );\n\treturn quantile( arr, 0.75 ) - quantile( arr, 0.25 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = iqr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar EPSILON = require( '@stdlib/constants/float64/eps' );\nvar stdev = require( './stdev.js' );\nvar iqr = require( './iqr.js' );\n\n\n// MAIN //\n\n/**\n* Computes the rule-of-thumb bandwidth for the values in a column of `x`.\n*\n* @private\n* @param {ndarrayLike} arr - input ndarray\n* @param {number} j - index of the column from which to obtain the values\n* @returns {NumericArray} array with bandwidth values\n*\n* @example\n* var ndarrayLike = require( './ndarray_like.js' );\n*\n* var x = [ 0.6333, 0.8643, 1.0952, 1.3262, 1.5571, 1.7881, 2.019, 2.25, 2.481, 2.7119 ];\n* var y = [ -0.0468, 0.8012, 1.6492, 2.4973, 3.3454, 4.1934, 5.0415, 5.8896, 6.7376, 7.5857 ];\n* var arr = ndarrayLike( x, y );\n* var out = pickBandwidth( arr, 1 );\n* // returns ~1.717\n*/\nfunction pickBandwidth( arr, j ) {\n\tvar minElement;\n\tvar sigmaHat;\n\tvar powTerm;\n\tvar iqrVal;\n\tvar out;\n\n\tiqrVal = iqr( arr, j ) / 1.34;\n\tsigmaHat = stdev( arr, j );\n\tminElement = min( iqrVal, sigmaHat );\n\tpowTerm = pow( arr.shape[ 0 ], -1/5 );\n\tout = 1.06 * powTerm * minElement;\n\tif ( out === 0 ) {\n\t\tout = EPSILON;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pickBandwidth;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a positive value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a positive value\n*\n* @example\n* var bool = isPositiveNumber( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isPositiveNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a positive value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a positive value\n*\n* @example\n* var bool = isPositiveNumber( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isPositiveNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue.valueOf() > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a positive number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a positive number\n*\n* @example\n* var bool = isPositiveNumber( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveNumber( null );\n* // returns false\n*/\nfunction isPositiveNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a positive number.\n*\n* @module @stdlib/assert/is-positive-number\n*\n* @example\n* var isPositiveNumber = require( '@stdlib/assert/is-positive-number' );\n*\n* var bool = isPositiveNumber( 5.0 );\n* // returns true\n*\n* bool = isPositiveNumber( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isPositiveNumber( 3.14 );\n* // returns true\n*\n* bool = isPositiveNumber( -5.0 );\n* // returns false\n*\n* bool = isPositiveNumber( null );\n* // returns false\n*\n* @example\n* var isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\n*\n* var bool = isPositiveNumber( 3.0 );\n* // returns true\n*\n* bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* var isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isObject;\n*\n* var bool = isPositiveNumber( 3.0 );\n* // returns false\n*\n* bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isPositiveNumber = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isPositiveNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isPositiveNumber, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only positive numbers.\n*\n* @module @stdlib/assert/is-positive-number-array\n*\n* @example\n* var isPositiveNumberArray = require( '@stdlib/assert/is-positive-number-array' );\n*\n* var bool = isPositiveNumberArray( [ 3.0, new Number(3.0) ] );\n* // returns true\n*\n* bool = isPositiveNumberArray( [ 3.0, '3.0' ] );\n* // returns false\n*\n* @example\n* var isPositiveNumberArray = require( '@stdlib/assert/is-positive-number-array' ).primitives;\n*\n* var bool = isPositiveNumberArray( [ 1.0, 5.0, 10.0 ] );\n* // returns true\n*\n* bool = isPositiveNumberArray( [ 3.0, new Number(1.0) ] );\n* // returns false\n*\n* @example\n* var isPositiveNumberArray = require( '@stdlib/assert/is-positive-number-array' ).objects;\n*\n* var bool = isPositiveNumberArray( [ new Number(3.0), new Number(1.0) ] );\n* // returns true\n*\n* bool = isPositiveNumberArray( [ 1.0, 5.0, 10.0 ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isPositiveNumber = require( './../../is-positive-number' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\n\n\n// MAIN //\n\nvar isPositiveNumberArray = arrayfun( isPositiveNumber );\nsetReadOnly( isPositiveNumberArray, 'primitives', arrayfun( isPositiveNumber.isPrimitive ) );\nsetReadOnly( isPositiveNumberArray, 'objects', arrayfun( isPositiveNumber.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveNumberArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar SQRT_TWO_PI = require( '@stdlib/constants/float64/sqrt-two-pi' );\nvar exp = require( '@stdlib/math/base/special/exp' );\n\n\n// VARIABLES //\n\nvar INV_SQRT_TWO_PI = 1.0 / SQRT_TWO_PI;\n\n\n// MAIN //\n\n/**\n* Computes the Gaussian kernel for a value.\n*\n* @private\n* @param {number} u - input value\n* @returns {number} the value for the Gaussian kernel at u\n*\n* @example\n* var u = 5.0;\n* var out = gaussian( u );\n* // returns ~0.0\n*/\nfunction gaussian( u ) {\n\tif ( isnan( u ) ) {\n\t\treturn NaN;\n\t}\n\treturn INV_SQRT_TWO_PI * exp( -0.5 * pow( u, 2.0 ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gaussian;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Computes the Epanechnikov kernel for a value.\n*\n* @private\n* @param {number} u - value for which we wish to calculate the Epanechnikov kernel\n* @returns {number} the value for the kernel at u\n*\n* @example\n* var u = 5.0;\n* var out = epanechnikov( u );\n* // returns 0.0\n*/\nfunction epanechnikov(u) {\n\tif ( isnan( u ) ) {\n\t\treturn NaN;\n\t}\n\tif ( abs( u ) > 1.0 ) {\n\t\treturn 0.0;\n\t}\n\treturn 0.75 * ( 1.0 - pow( u, 2.0 ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = epanechnikov;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar FOURTH_PI = require( '@stdlib/constants/float64/fourth-pi' );\nvar HALF_PI = require( '@stdlib/constants/float64/half-pi' );\nvar cos = require( '@stdlib/math/base/special/cos' );\n\n\n// MAIN //\n\n/**\n* Computes the cosine kernel for a value.\n*\n* @private\n* @param {number} u - value for which we wish to calculate the cosine kernel\n* @returns {number} the value for the kernel at u\n*\n* @example\n* var u = 5;\n* var out = cosine( u );\n* // returns 0\n*/\nfunction cosine(u) {\n\tif ( isnan( u ) ) {\n\t\treturn NaN;\n\t}\n\tif ( abs( u ) > 1.0 ) {\n\t\treturn 0.0;\n\t}\n\treturn FOURTH_PI * cos( HALF_PI * u );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cosine;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Computes the quartic kernel for a value.\n*\n* @private\n* @param {number} u - input value\n* @returns {number} kernel value at u\n*\n* @example\n* var u = 5;\n* var out = quartic(u);\n* // returns 0\n*/\nfunction quartic( u ) {\n\tif ( isnan( u ) ) {\n\t\treturn NaN;\n\t}\n\tif ( abs( u ) > 1.0 ) {\n\t\treturn 0.0;\n\t}\n\treturn ( 15.0 / 16.0 ) * pow( 1.0 - pow( u, 2.0 ), 2.0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = quartic;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar isnan = require( '@stdlib/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Computes the triangular kernel for a value.\n*\n* @private\n* @param {number} u - input value\n* @returns {number} kernel value at u\n*\n* @example\n* var u = 0.2;\n* var out = triangular( u );\n* // returns 0.8\n*/\nfunction triangular( u ) {\n\tvar absU;\n\tif ( isnan( u ) ) {\n\t\treturn NaN;\n\t}\n\tabsU = abs( u );\n\tif ( absU > 1.0 ) {\n\t\treturn 0.0;\n\t}\n\treturn 1.0 - absU;\n}\n\n\n// EXPORTS //\n\nmodule.exports = triangular;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// VARIABLES //\n\nvar LEADING_TERM = ( 70.0 / 81.0 );\n\n\n// MAIN //\n\n/**\n* Computes the tricube kernel for a value.\n*\n* @private\n* @param {number} u - value for which we wish to calculate the tricube kernel\n* @returns {number} the value for the kernel at u\n*\n* @example\n* var u = 5;\n* out = tricube(u);\n* // returns 0\n*/\nfunction tricube(u) {\n\tvar absU;\n\n\tif ( isnan( u ) ) {\n\t\treturn NaN;\n\t}\n\tabsU = abs( u );\n\tif ( absU > 1.0 ) {\n\t\treturn 0.0;\n\t}\n\treturn LEADING_TERM * pow( 1.0 - pow( absU, 3.0 ), 3.0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = tricube;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Computes the Triweight kernel for a value.\n*\n* @private\n* @param {number} u - value for which we wish to calculate the Triweight kernel\n* @returns {number} the value for the kernel at u\n*\n* @example\n* var u = 5;\n* out = triweight(u); // returns 0\n*/\nfunction triweight(u) {\n\tvar absU;\n\n\tif (isnan(u)) {\n\t\treturn NaN;\n\t}\n\n\tabsU = abs(u);\n\tif (absU > 1) {\n\t\treturn 0;\n\t}\n\treturn (35 / 32) * pow(1.0 - pow(u, 2.0), 3.0);\n}\n\n\n// EXPORTS //\n\nmodule.exports = triweight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Computes the uniform kernel.\n*\n* @private\n* @param {number} u - input value\n* @returns {number} kernel value at u\n*\n* @example\n* var u = 0.2;\n* var out = uniform( u );\n* // returns 0.5\n*/\nfunction uniform(u) {\n\tif ( isnan( u ) ) {\n\t\treturn NaN;\n\t}\n\tif ( u < 0.0 || u > 1.0 ) {\n\t\treturn 0.0;\n\t}\n\treturn 0.5;\n}\n\n\n// EXPORTS //\n\nmodule.exports = uniform;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MAIN //\n\nvar kernels = {};\n\n// Make a stdlib/stats/base/kernels package\nkernels[ 'gaussian' ] = require( './gaussian.js' );\nkernels[ 'epanechnikov' ] = require( './epanechnikov.js' );\nkernels[ 'cosine' ] = require( './cosine.js' );\nkernels[ 'quartic' ] = require( './quartic.js' );\nkernels[ 'triangular' ] = require( './triangular.js' );\nkernels[ 'tricube' ] = require( './tricube.js' );\nkernels[ 'triweight' ] = require( './triweight.js' );\nkernels[ 'uniform' ] = require( './uniform.js' );\n\n\n// EXPORTS //\n\nmodule.exports = kernels;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar format = require( '@stdlib/string/format' );\nvar kernels = require( './kernels.js' );\n\n\n// MAIN //\n\n/**\n* Returns the specified kernel function.\n*\n* @private\n* @param {string} name - kernel name\n* @returns {(Function|Error)} kernel function or corresponding error\n*/\nfunction getKernel( name ) {\n\tvar kernel = kernels[ name ];\n\tif ( kernel === void 0 ) {\n\t\treturn new Error( format( 'invalid argument. Unsupported/unrecognized kernel. Value: `%s`.', name ) );\n\t}\n\treturn kernel;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getKernel;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isPositiveNumberArray = require( '@stdlib/assert/is-positive-number-array' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isError = require( '@stdlib/assert/is-error' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar getKernel = require( './get_kernel.js' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {number} [options.n] - number of splits in the generated grid\n* @param {NumericArray} [options.h] - array of length two indicating the x and y bandwidth values\n* @param {number} [options.xMin] - lower limit of x\n* @param {number} [options.xMax] - upper limit of x\n* @param {number} [options.xMin] - lower limit of y\n* @param {number} [options.yMax] - upper limit of y\n* @param {(string|Function)} [options.kernel] - a string or function to specifying the used kernel function\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'xMin': 3.14,\n*     'kernel': 'gaussian'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'h' ) ) {\n\t\topts.h = options.h;\n\t\tif ( !isPositiveNumberArray( opts.h) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an array of positive numbers. Option: `%s`.', 'h', opts.h ) );\n\t\t}\n\t\tif ( opts.h.length !== 2 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an array of length two. Option: `%s`.', 'h', opts.h ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'n' ) ) {\n\t\topts.n = options.n;\n\t\tif ( !isPositiveInteger( opts.n ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'n', opts.n ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'xMax' ) ) {\n\t\topts.xMax = options.xMax;\n\t\tif ( !isNumber( opts.xMax ) || isnan( opts.xMax ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'xMax', opts.xMax ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'xMin' ) ) {\n\t\topts.xMin = options.xMin;\n\t\tif ( !isNumber( opts.xMin ) || isnan( opts.xMin ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'xMin', opts.xMin ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'yMax' ) ) {\n\t\topts.yMax = options.yMax;\n\t\tif ( !isNumber( opts.yMax ) || isnan( opts.yMax ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'yMax', opts.yMax ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'yMin' ) ) {\n\t\topts.yMin = options.yMin;\n\t\tif ( !isNumber( opts.yMin ) || isnan( opts.yMin ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'yMin', opts.yMin ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'kernel' ) ) {\n\t\topts.kernel = options.kernel;\n\t\tif ( isString( opts.kernel ) ) {\n\t\t\topts.kernel = getKernel( opts.kernel );\n\t\t\tif ( isError( opts.kernel ) ) {\n\t\t\t\treturn opts.kernel;\n\t\t\t}\n\t\t} else if ( !isFunction( opts.kernel ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string denoting a known kernel function or a custom function. Option: `%s`.', 'kernel', opts.kernel ) );\n\t\t}\n\t}\n\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumericArray = require( '@stdlib/assert/is-numeric-array' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Converts two arrays .\n*\n* @private\n* @param {NumericArray} x - array of x values\n* @param {NumericArray} y - array of y values\n* @throws {TypeError} first argument must be a numeric array\n* @throws {TypeError} second argument must be a numeric array\n* @throws {RangeError} first and second arguments must have the same length\n* @returns {Object} object that mirrors an `ndarray`\n*\n* @example\n* var x = [ 0.6333, 0.8643, 1.0952, 1.3262, 1.5571, 1.7881, 2.019, 2.25, 2.481, 2.7119 ];\n* var y = [ -0.0468, 0.8012, 1.6492, 2.4973, 3.3454, 4.1934, 5.0415, 5.8896, 6.7376, 7.5857 ];\n* var out = ndarrayLike( x, y );\n*/\nfunction ndarrayLike( x, y ) {\n\tif ( !isNumericArray(x) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a numeric array. Value: `%s`.', x ) );\n\t}\n\n\tif ( !isNumericArray(y) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a numeric array. Value: `%s`.', y ) );\n\t}\n\n\tif ( x.length !== y.length ) {\n\t\tthrow new RangeError( 'invalid arguments. First and second arguments must have the same length.' );\n\t}\n\n\treturn {\n\t\t'get': get,\n\t\t'shape': [ x.length, 2 ]\n\t};\n\n\t/**\n\t* Gets an element of an nd-array-like object .\n\t*\n\t* @private\n\t* @param {number} i - row index\n\t* @param {number} j - column index\n\t* @returns {number} number stored in row i and column j\n\t*/\n\tfunction get( i, j ) {\n\t\tif ( j === 0 ) {\n\t\t\treturn x[ i ];\n\t\t}\n\t\treturn y[ i ];\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = ndarrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the minimum value.\n*\n* @private\n* @param {ndarrayLike} arr - input array\n* @param {number} j - column index for which to get the range\n* @param {number} len - number of rows in arr\n* @returns {number} minimum value\n*/\nfunction min( arr, j, len ) {\n\tvar minObs;\n\tvar x;\n\tvar i;\n\n\tminObs = arr.get( 0, j );\n\tfor ( i = 1; i < len; i++ ) {\n\t\tx = arr.get( i, j );\n\t\tif ( x < minObs ) {\n\t\t\tminObs = x;\n\t\t}\n\t}\n\treturn minObs;\n}\n\n\n// EXPORTS //\n\nmodule.exports = min;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the maximum value.\n*\n* @private\n* @param {ndarrayLike} arr - input array\n* @param {number} j - column index for which to get the maximum\n* @param {number} len - number of rows in arr\n* @returns {number} maximum value\n*/\nfunction max( arr, j, len ) {\n\tvar max;\n\tvar x;\n\tvar i;\n\n\tmax = arr.get( 0, j );\n\tfor ( i = 1; i < len; i++ ) {\n\t\tx = arr.get( i, j );\n\t\tif ( x > max ) {\n\t\t\tmax = x;\n\t\t}\n\t}\n\treturn max;\n}\n\n\n// EXPORTS //\n\nmodule.exports = max;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ndarray = require( '@stdlib/ndarray/array' );\nvar linspace = require( '@stdlib/array/base/linspace' );\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar isNumericArray = require( '@stdlib/assert/is-numeric-array' );\nvar isMatrixLike = require( '@stdlib/assert/is-matrix-like' );\nvar format = require( '@stdlib/string/format' );\nvar pickBandwidth = require( './pick_bandwidth.js' );\nvar validate = require( './validate.js' );\nvar ndarrayLike = require( './ndarray_like.js' );\nvar min = require( './min.js' );\nvar max = require( './max.js' );\nvar gaussian = require( './gaussian.js' );\n\n\n// MAIN //\n\n/**\n* Computes two-dimensional kernel density estimates.\n*\n* @param {NumericArray} x - array of x values\n* @param {NumericArray} y - array of y values\n* @param {Options} [options] - function options\n* @param {NumericArray} [options.h] - array of length two containing the bandwidth values for x and y\n* @param {number} [options.n=25] - number of partitions on the x- and y-axes\n* @param {number} [options.xMin] - lower limit of x\n* @param {number} [options.xMax] - upper limit of x\n* @param {number} [options.yMin] - lower limit of y\n* @param {number} [options.yMax] - upper limit of y\n* @param {(string|Function)} [options.kernel='gaussian'] - a string or function to specifying the used kernel function\n* @throws {TypeError} first argument must be an array or matrix-like\n* @throws {TypeError} second argument must be an array\n* @throws {Error} first and second arguments must have the same length\n* @throws {RangeError} `xMin` must be less than `xMax`\n* @throws {RangeError} `yMin` must be less than `yMax`\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Object} object containing the density estimates (`z`) along grid points (`x` and `y` values)\n*\n* @example\n* var x = [ 0.6333, 0.8643, 1.0952, 1.3262, 1.5571, 1.7881, 2.019, 2.25, 2.481, 2.7119 ];\n* var y = [ -0.0468, 0.8012, 1.6492, 2.4973, 3.3454, 4.1934, 5.0415, 5.8896, 6.7376, 7.5857 ];\n* var out = kde2d( x, y );\n*/\nfunction kde2d() {\n\tvar kernelFunction;\n\tvar maxArgs;\n\tvar zScoreX;\n\tvar zScoreY;\n\tvar gridX;\n\tvar gridY;\n\tvar xMin;\n\tvar xMax;\n\tvar yMin;\n\tvar yMax;\n\tvar xVal; // For gridspace loop\n\tvar yVal; // For gridspace loop\n\tvar subX;\n\tvar subY;\n\tvar opts;\n\tvar arr;\n\tvar err;\n\tvar ans;\n\tvar out;\n\tvar gx;\n\tvar gy;\n\tvar hX;\n\tvar hY;\n\tvar ix;\n\tvar iy;\n\tvar x;\n\tvar y;\n\tvar i;\n\tvar n;\n\tvar z;\n\n\topts = {};\n\n\tif ( isMatrixLike( arguments[0] ) ) {\n\t\t// Case of ndarray, opts\n\t\tarr = arguments[ 0 ];\n\t\tmaxArgs = 1;\n\t} else {\n\t\tx = arguments[ 0 ];\n\t\ty = arguments[ 1 ];\n\t\tif ( !isNumericArray( x ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a numeric array. Value: `%s`.', x ) );\n\t\t}\n\t\tif ( !isNumericArray( y ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a numeric array. Value: `%s`.', y ) );\n\t\t}\n\t\tif ( x.length !== y.length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. First and second arguments must be arrays having the same length.' );\n\t\t}\n\t\tarr = ndarrayLike( x, y );\n\t\tmaxArgs = 2;\n\t}\n\tif ( arguments.length > maxArgs ) {\n\t\terr = validate( opts, arguments[ maxArgs ] );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.h ) {\n\t\thX = opts.h[0];\n\t\thY = opts.h[1];\n\t} else {\n\t\thX = pickBandwidth( arr, 0 );\n\t\thY = pickBandwidth( arr, 1 );\n\t}\n\tn = opts.n || 25;\n\txMin = opts.xMin || min( arr, 0, arr.shape[0] );\n\txMax = opts.xMax || max( arr, 0, arr.shape[0] );\n\tyMin = opts.yMin || min( arr, 1, arr.shape[0] );\n\tyMax = opts.yMax || max( arr, 1, arr.shape[0] );\n\n\tif ( xMin >= xMax ) {\n\t\tthrow new RangeError( format( 'invalid option. Lower bound `%s` must be strictly less than the upper bound `%s`.', 'xMin', 'xMax' ) );\n\t}\n\tif ( yMin >= yMax ) {\n\t\tthrow new RangeError( format( 'invalid option. Lower bound `%s` must be strictly less than the upper bound `%s`.', 'yMin', 'yMax' ) );\n\t}\n\n\tkernelFunction = opts.kernel || gaussian;\n\n\t// Create the `ndarray` to hold the density values:\n\tz = ndarray({\n\t\t'shape': [ n, n ]\n\t} );\n\n\t// Make the grid:\n\tgridX = linspace( xMin, xMax, n );\n\tgridY = linspace( yMin, yMax, n );\n\n\t// Loop through x and y indices:\n\tfor ( ix = 0; ix < gridX.length; ix++ ) {\n\t\tgx = gridX[ ix ];\n\t\tfor ( iy = 0; iy < gridY.length; iy++ ) {\n\t\t\tgy = gridY[ iy ];\n\t\t\tans = 0.0;\n\t\t\tfor ( i = 0; i < arr.shape[ 0 ]; i++ ) {\n\t\t\t\txVal = arr.get( i, 0 );\n\t\t\t\tyVal = arr.get( i, 1 );\n\n\t\t\t\tzScoreX = ( (xVal - gx) / hX );\n\t\t\t\tzScoreY = ( (yVal - gy) / hY );\n\n\t\t\t\tsubX = ( 1.0 / hX ) * kernelFunction( zScoreX );\n\t\t\t\tsubY = ( 1.0 / hY ) * kernelFunction( zScoreY );\n\t\t\t\tans += ( subX * subY );\n\t\t\t}\n\t\t\tz.set( ix, iy, ans / arr.shape[0] );\n\t\t}\n\t}\n\tout = {};\n\tsetReadOnly( out, 'x', gridX );\n\tsetReadOnly( out, 'y', gridY );\n\tsetReadOnly( out, 'z', z );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = kde2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Two-dimensional kernel density estimation.\n*\n* @module @stdlib/stats/kde2d\n*\n* @example\n* var kde2d = require( '@stdlib/stats/kde2d' );\n* var x = [ 1, 3, 5, 6, 21, 23, 16, 17, 20, 10 ];\n* var y = [ 0.40, 0.20, 0.20, 0.15, 0.05, 0.55, 0.6, 0.33, 0.8, 0.41 ];\n*\n* var out = kde2d( x, y );\n* // returns { 'x': [1, 1.91, ... ], 'y': [0.05, 0.08125, ...], 'z': ndarray {Float64Array[ 0.031, ...] }\n*/\n\n// MODULES //\n\nvar kde2d = require( './kde2d.js' );\n\n\n// EXPORTS //\n\nmodule.exports = kde2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {}\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and returns group counts.\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} must provide valid options\n* @returns {Object} counts\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = countBy( arr, indicator );\n* // returns { 'b': 3, 'f': 1 }\n*/\nfunction countBy( collection, options, indicator ) {\n\tvar thisArg;\n\tvar opts;\n\tvar err;\n\tvar out;\n\tvar len;\n\tvar cb;\n\tvar g;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\topts = {};\n\tif ( arguments.length === 2 ) {\n\t\tcb = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tcb = indicator;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tthisArg = opts.thisArg;\n\tlen = collection.length;\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tg = cb.call( thisArg, collection[ i ], i );\n\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\tout[ g ] += 1;\n\t\t} else {\n\t\t\tout[ g ] = 1;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = countBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Identity function.\n*\n* @param {*} x - input value\n* @returns {*} input value\n*\n* @example\n* var v = identity( 3.14 );\n* // returns 3.14\n*/\nfunction identity( x ) {\n\treturn x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = identity;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Identity function.\n*\n* @module @stdlib/utils/identity-function\n*\n* @example\n* var identity = require( '@stdlib/utils/identity-function' );\n*\n* var input = [];\n* var output = identity( input );\n*\n* var bool = ( input === output );\n* // returns true\n*/\n\n// MODULES //\n\nvar identity = require( './identity.js' );\n\n\n// EXPORTS //\n\nmodule.exports = identity;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( '@stdlib/assert/is-array' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {Array} [options.groups] - array of group indicators\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'groups' ) ) {\n\t\topts.groups = options.groups;\n\t\tif ( !isArray( opts.groups ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an array. Option: `%s`.', 'groups', opts.groups ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar roundn = require( '@stdlib/math/base/special/roundn' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Null hypothesis: the medians of all groups are the same';\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts );\n\tstr += '    df: ' + this.df;\n\tstr += '\\n\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar countBy = require( '@stdlib/utils/count-by' );\nvar objectKeys = require( '@stdlib/utils/keys' );\nvar rank = require( './../../ranks' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar chisqCDF = require( './../../base/dists/chisquare/cdf' );\nvar identity = require( '@stdlib/utils/identity-function' );\nvar incrspace = require( '@stdlib/array/base/incrspace' );\nvar format = require( '@stdlib/string/format' );\nvar validate = require( './validate.js' );\nvar print = require( './print.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Computes the Kruskal-Wallis test for equality of medians.\n*\n* @param {...NumberArray} arguments - either two or more number arrays or a single numeric array if an array of group indicators is supplied as an option\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {Array} [options.groups] - array of group indicators\n* @throws {Error} must provide at least two array-like arguments if `groups` is not set\n* @throws {TypeError} must provide array-like arguments\n* @throws {TypeError} options must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} alpha option has to be a number in the interval `[0,1]`\n* @returns {Object} test results\n*\n* @example\n* // Data from Hollander & Wolfe (1973), p. 116:\n* var x = [ 2.9, 3.0, 2.5, 2.6, 3.2 ];\n* var y = [ 3.8, 2.7, 4.0, 2.4 ];\n* var z = [ 2.8, 3.4, 3.7, 2.2, 2.0 ];\n*\n* var out = kruskal( x, y, z );\n* // returns {...}\n*/\nfunction kruskal() {\n\tvar groupsIndicators;\n\tvar groupRankSums;\n\tvar tieSumTerm;\n\tvar ngroups;\n\tvar options;\n\tvar levels;\n\tvar alpha;\n\tvar param;\n\tvar ranks;\n\tvar vals;\n\tvar opts;\n\tvar pval;\n\tvar stat;\n\tvar ties;\n\tvar arg;\n\tvar err;\n\tvar key;\n\tvar out;\n\tvar i;\n\tvar j;\n\tvar n;\n\tvar N;\n\tvar x;\n\tvar v;\n\n\tngroups = arguments.length;\n\topts = {};\n\tif ( isPlainObject( arguments[ ngroups - 1 ] ) ) {\n\t\toptions = arguments[ ngroups - 1 ];\n\t\tngroups -= 1;\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tgroupRankSums = {};\n\tn = {};\n\tif ( opts.groups ) {\n\t\tx = arguments[ 0 ];\n\t\tif ( x.length !== opts.groups.length ) {\n\t\t\tthrow new RangeError( format( 'invalid arguments. First argument and `%s` must be arrays having the same length.', 'opts.groups' ) );\n\t\t}\n\t\tn = countBy( opts.groups, identity );\n\t\tlevels = objectKeys( n );\n\t\tngroups = levels.length;\n\t\tfor ( i = 0; i < ngroups; i++ ) {\n\t\t\tkey = levels[ i ];\n\t\t\tgroupRankSums[ key ] = 0;\n\t\t}\n\t\tif ( ngroups < 2 ) {\n\t\t\tthrow new Error( format( 'invalid option. `%s` option must be an array containing at least two unique elements. Option: `%s`.', 'groups', levels ) );\n\t\t}\n\t\tgroupsIndicators = opts.groups;\n\t} else {\n\t\tx = [];\n\t\tgroupsIndicators = [];\n\t\tif ( ngroups < 2 ) {\n\t\t\tthrow new Error( format( 'invalid invocation. Incorrect number of arguments. Must provide at least two array-like arguments. Value: `%s`.', arg ) );\n\t\t}\n\t\tfor ( i = 0; i < ngroups; i++ ) {\n\t\t\targ = arguments[ i ];\n\t\t\tif ( !isCollection( arg ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide array-like arguments. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t\tif ( arg.length === 0 ) {\n\t\t\t\tthrow new Error( format( 'invalid argument. Supplied arrays cannot be empty. Value: `%s`.', arg ) );\n\t\t\t} else {\n\t\t\t\tn[ i ] = arg.length;\n\t\t\t}\n\t\t\tgroupRankSums[ i ] = 0;\n\t\t\tfor ( j = 0; j < n[ i ]; j++ ) {\n\t\t\t\tgroupsIndicators.push( i );\n\t\t\t\tx.push( arg[ j ] );\n\t\t\t}\n\t\t}\n\t\tlevels = incrspace( 0, ngroups, 1 );\n\t}\n\tif ( opts.alpha === void 0 ) {\n\t\talpha = 0.05;\n\t} else {\n\t\talpha = opts.alpha;\n\t}\n\tif ( alpha < 0.0 || alpha > 1.0 ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` must be a number on the interval: [0, 1]. Value: `%f`.', 'alpha', alpha ) );\n\t}\n\n\tN = x.length;\n\tranks = rank( x );\n\n\t// Calculate # ties for each value & rank sums per group:\n\tties = {};\n\tfor ( i = 0; i < N; i++ ) {\n\t\tgroupRankSums[ groupsIndicators[ i ] ] += ranks[ i ];\n\t\tif ( x[ i ] in ties ) {\n\t\t\tties[ x[ i ] ] += 1;\n\t\t} else {\n\t\t\tties[ x[ i ] ] = 1;\n\t\t}\n\t}\n\n\t// Calculate test statistic using short-cut formula:\n\tstat = 0.0;\n\tfor ( i = 0; i < ngroups; i++ ) {\n\t\tkey = levels[ i ];\n\t\tstat += pow( groupRankSums[ key ], 2.0 ) / n[ key ];\n\t}\n\tstat = ( ( 12.0 / ( N * (N+1) ) ) * stat ) - ( 3.0 * (N+1) );\n\n\t// Correction for ties:\n\ttieSumTerm = 0;\n\tvals = objectKeys( ties );\n\tfor ( i = 0; i < vals.length; i++ ) {\n\t\tv = ties[ vals[ i ] ];\n\t\ttieSumTerm += pow( v, 3.0 ) - v;\n\t}\n\n\tstat /= 1.0 - ( ( tieSumTerm ) / ( pow( N, 3 ) - N ) );\n\tparam = ngroups - 1;\n\tpval = 1.0 - chisqCDF( stat, param );\n\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= alpha );\n\tsetReadOnly( out, 'alpha', alpha );\n\tsetReadOnly( out, 'df', param );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'method', 'Kruskal-Wallis Test' );\n\tsetReadOnly( out, 'print', print );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = kruskal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Group values according to an indicator function and return group counts.\n*\n* @module @stdlib/utils/count-by\n*\n* @example\n* var countBy = require( '@stdlib/utils/count-by' );\n*\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = countBy( arr, indicator );\n* // returns { 'b': 3, 'f': 1 }\n*/\n\n// MODULES //\n\nvar countBy = require( './count_by.js' );\n\n\n// EXPORTS //\n\nmodule.exports = countBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the Kruskal-Wallis test for equal medians.\n*\n* @module @stdlib/stats/kruskal-test\n*\n* @example\n* var kruskalTest = require( '@stdlib/stats/kruskal-test' );\n*\n* // Data from Hollander & Wolfe (1973), p. 116:\n* var x = [ 2.9, 3.0, 2.5, 2.6, 3.2 ];\n* var y = [ 3.8, 2.7, 4.0, 2.4 ];\n* var z = [ 2.8, 3.4, 3.7, 2.2, 2.0 ];\n*\n* var out = kruskalTest( x, y, z );\n* // returns {...}\n*/\n\n// MODULES //\n\nvar kruskalTest = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = kruskalTest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isPositiveZero = require( '@stdlib/math/base/assert/is-positive-zero' );\n\n\n// MAIN //\n\n/**\n* Computes the maximum value of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} maximum value\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = max( N, x, 1 );\n* // returns 2.0\n*/\nfunction max( N, x, stride ) {\n\tvar max;\n\tvar ix;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn x[ 0 ];\n\t}\n\tif ( stride < 0 ) {\n\t\tix = (1-N) * stride;\n\t} else {\n\t\tix = 0;\n\t}\n\tmax = x[ ix ];\n\tfor ( i = 1; i < N; i++ ) {\n\t\tix += stride;\n\t\tv = x[ ix ];\n\t\tif ( isnan( v ) ) {\n\t\t\treturn v;\n\t\t}\n\t\tif ( v > max || ( v === max && isPositiveZero( v ) ) ) {\n\t\t\tmax = v;\n\t\t}\n\t}\n\treturn max;\n}\n\n\n// EXPORTS //\n\nmodule.exports = max;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isPositiveZero = require( '@stdlib/math/base/assert/is-positive-zero' );\n\n\n// MAIN //\n\n/**\n* Computes the maximum value of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} maximum value\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = max( N, x, 2, 1 );\n* // returns 4.0\n*/\nfunction max( N, x, stride, offset ) {\n\tvar max;\n\tvar ix;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn x[ offset ];\n\t}\n\tix = offset;\n\tmax = x[ ix ];\n\tfor ( i = 1; i < N; i++ ) {\n\t\tix += stride;\n\t\tv = x[ ix ];\n\t\tif ( isnan( v ) ) {\n\t\t\treturn v;\n\t\t}\n\t\tif ( v > max || ( v === max && isPositiveZero( v ) ) ) {\n\t\t\tmax = v;\n\t\t}\n\t}\n\treturn max;\n}\n\n\n// EXPORTS //\n\nmodule.exports = max;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar max = require( './max.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( max, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = max;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the maximum value of a strided array.\n*\n* @module @stdlib/stats/base/max\n*\n* @example\n* var max = require( '@stdlib/stats/base/max' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = max( N, x, 1 );\n* // returns 2.0\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n* var max = require( '@stdlib/stats/base/max' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = max.ndarray( N, x, 2, 1 );\n* // returns 4.0\n*/\n\n// MODULES //\n\nvar max = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = max;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar binomcoefln = require( '@stdlib/math/base/special/binomcoefln' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar ln = require( '@stdlib/math/base/special/ln' );\n\n\n// MAIN //\n\n/**\n* Evaluates the CDF for the one-sided test statistics, i.e., the maximum by which the empirical CDF exceeds / is less than the hypothesized CDF.\n*\n* @private\n* @param {number} d - the argument of the CDF of D_n^+ / D_n^-\n* @param {PositiveInteger} n - number of variates\n* @returns {number} evaluated CDF, i.e., P( D_n^+ < d )\n*/\nfunction pKolmogorov1( d, n ) {\n\tvar len;\n\tvar out;\n\tvar tmp;\n\tvar i;\n\n\tif ( d <= 0.0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( d >= 1.0 ) {\n\t\treturn 1.0;\n\t}\n\tlen = floor( n * (1.0-d) ) + 1;\n\tout = 0.0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\ttmp = binomcoefln( n, i );\n\t\ttmp += ( n - i ) * ln( 1.0 - d - (i/n) );\n\t\ttmp += ( i - 1.0 ) * ln( d + (i/n) );\n\t\tout += exp( tmp );\n\t}\n\treturn 1.0 - (d * out);\n}\n\n\n// EXPORTS //\n\nmodule.exports = pKolmogorov1;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar Float64Array = require( '@stdlib/array/float64' );\n\n\n// MAIN //\n\n/**\n* Evaluates the Kolmogorov distribution. This function is a JavaScript implementation of a procedure developed by Marsaglia & Tsang.\n*\n* ## References\n*\n* -   Marsaglia, George, Wai Wan Tsang, and Jingbo Wang. 2003. \"Evaluating Kolmogorov's Distribution.\" _Journal of Statistical Software_ 8 (18): 1–4. doi:[10.18637/jss.v008.i18](https://doi.org/10.18637/jss.v008.i18).\n*\n* @private\n* @param {number} d - the argument of the CDF of D_n\n* @param {number} n - number of variates\n* @returns {number} evaluated CDF, i.e. P( D_n < d )\n*/\nfunction pKolmogorov( d, n ) {\n\tvar eH;\n\tvar eQ;\n\tvar h;\n\tvar H;\n\tvar Q;\n\tvar g;\n\tvar i;\n\tvar j;\n\tvar k;\n\tvar m;\n\tvar s;\n\n\ts = d * d * n;\n\tif ( s > 7.24 || ( s > 3.76 && n > 99 ) ) {\n\t\treturn 1 - (2 * exp( -( 2.000071 + (0.331/sqrt(n)) + (1.409/n) ) * s ));\n\t}\n\tk = floor( n * d ) + 1;\n\tm = (2*k) - 1;\n\th = k - (n*d);\n\tH = new Float64Array( m * m );\n\tQ = new Float64Array( m * m );\n\tfor ( i = 0; i < m; i++ ) {\n\t\tfor ( j = 0; j < m; j++ ) {\n\t\t\tif ( i - j + 1 < 0 ) {\n\t\t\t\tH[ (i*m) + j ] = 0;\n\t\t\t} else {\n\t\t\t\tH[ (i*m) + j ] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor ( i = 0; i < m; i++ ) {\n\t\tH[ i * m ] -= pow( h, i+1 );\n\t\tH[ ((m-1) * m) + i ] -= pow( h, (m-i) );\n\t}\n\tH[ (m-1) * m ] += ( ( (2*h)-1 > 0 ) ? pow( (2*h)-1, m ) : 0 );\n\tfor ( i = 0; i < m; i++ ) {\n\t\tfor ( j = 0; j < m; j++ ) {\n\t\t\tif ( i - j + 1 > 0 ) {\n\t\t\t\tfor ( g = 1; g <= i - j + 1; g++ ) {\n\t\t\t\t\tH[ (i*m) + j ] /= g;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\teH = 0;\n\tmpow( H, eH, n );\n\ts = Q[ ((k-1) * m) + k - 1 ];\n\tfor ( i = 1; i <= n; i++ ) {\n\t\ts = s * i / n;\n\t\tif ( s < 1e-140 ) {\n\t\t\ts *= 1e140;\n\t\t\teQ -= 140;\n\t\t}\n\t}\n\ts *= pow( 10, eQ );\n\treturn s;\n\n\t/**\n\t* Matrix exponentiation. Mutates Q matrix.\n\t*\n\t* @private\n\t* @param {Float64Array} A - input matrix\n\t* @param {number} eA - matrix power\n\t* @param {number} n - number of variates\n\t*/\n\tfunction mpow( A, eA, n ) {\n\t\tvar eB;\n\t\tvar B;\n\t\tvar i;\n\n\t\tif ( n === 1 ) {\n\t\t\tfor ( i = 0; i < m*m; i++ ) {\n\t\t\t\tQ[ i ] = A[ i ];\n\t\t\t\teQ = eA;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tmpow( A, eA, floor( n/2 ) );\n\t\tB = mmult( Q, Q );\n\t\teB = 2 * eQ;\n\t\tif ( n % 2 === 0 ) {\n\t\t\tfor ( i = 0; i < m*m; i++ ) {\n\t\t\t\tQ[ i ] = B[ i ];\n\t\t\t}\n\t\t\teQ = eB;\n\t\t} else {\n\t\t\tQ = mmult( A, B );\n\t\t\teQ = eA + eB;\n\t\t}\n\t\tif ( Q[ (floor(m/2) * m) + floor(m/2) ] > 1e140 ) {\n\t\t\tfor ( i = 0; i < m*m; i++ ) {\n\t\t\t\tQ[ i ] *= 1e-140;\n\t\t\t}\n\t\t\teQ += 140;\n\t\t}\n\t}\n\n\t/**\n\t* Multiply matrices x and y.\n\t*\n\t* @private\n\t* @param {Float64Array} x - first input matrix\n\t* @param {Float64Array} y - second input matrix\n\t* @returns {Float64Array} matrix product\n\t*/\n\tfunction mmult( x, y ) {\n\t\tvar i;\n\t\tvar j;\n\t\tvar k;\n\t\tvar s;\n\t\tvar z;\n\n\t\tz = new Float64Array( m * m );\n\t\tfor ( i = 0; i < m; i++) {\n\t\t\tfor ( j = 0; j < m; j++ ) {\n\t\t\t\ts = 0;\n\t\t\t\tfor ( k = 0; k < m; k++ ) {\n\t\t\t\t\ts += x[ (i*m) + k ] * y[ (k*m) + j ];\n\t\t\t\t\tz[ (i*m) + j ] = s;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn z;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = pKolmogorov;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Comparator function used to sort values in ascending order.\n*\n* @private\n* @param {number} a - first value\n* @param {number} b - second value\n* @returns {number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ascending;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes an element-wise subtraction.\n*\n* @private\n* @param {number} x - scalar minuend (implicitly broadcasted to full length array)\n* @param {NumericArray} arr - array of subtrahends\n* @returns {NumericArray} output array\n*\n* @example\n* var x = 3;\n* var arr = [ 1, 2, 2, 3 ];\n*\n* var y = subtract( x, arr );\n* // returns [ 2, 1, 1, 0 ]\n*/\nfunction subtract( x, arr ) {\n\tvar len;\n\tvar res;\n\tvar i;\n\n\tlen = arr.length;\n\tres = new Array( len );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tres[ i ] = x - arr[ i ];\n\t}\n\n\treturn res;\n}\n\n\n// EXPORTS //\n\nmodule.exports = subtract;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {boolean} [options.sorted] - boolean indicating if the input data is already sorted in ascending order\n* @param {string} [options.alternative] - alternative hypothesis\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'alternative' ) ) {\n\t\topts.alternative = options.alternative;\n\t\tif ( !isString( opts.alternative ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'alternative', opts.alternative ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'sorted' ) ) {\n\t\topts.sorted = options.sorted;\n\t\tif ( !isBoolean( opts.sorted ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'sorted', opts.sorted ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar asin = require( '@stdlib/math/base/special/asin' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar PI = require( '@stdlib/constants/float64/pi' );\n\n\n// VARIABLES //\n\nvar TWO_OVER_PI = 2.0 / PI; // TODO: consider moving to pkg\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for an arcsine distribution with minimum support `a` and maximum support `b` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} a - minimum support\n* @param {number} b - maximum support\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 9.0, 0.0, 10.0 );\n* // returns ~0.795\n*\n* @example\n* var y = cdf( 0.5, 0.0, 2.0 );\n* // returns ~0.333\n*\n* @example\n* var y = cdf( +Infinity, 2.0, 4.0 );\n* // returns 1.0\n*\n* @example\n* var y = cdf( -Infinity, 2.0, 4.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 1.0, 0.0 );\n* // returns NaN\n*/\nfunction cdf( x, a, b ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\ta >= b\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x < a ) {\n\t\treturn 0.0;\n\t}\n\tif ( x >= b ) {\n\t\treturn 1.0;\n\t}\n\treturn TWO_OVER_PI * asin( sqrt( ( x-a ) / ( b-a ) ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar asin = require( '@stdlib/math/base/special/asin' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar PI = require( '@stdlib/constants/float64/pi' );\n\n\n// VARIABLES //\n\nvar TWO_OVER_PI = 2.0 / PI;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for an arcsine distribution with minimum support `a` and maximum support `b`.\n*\n* @param {number} a - minimum support\n* @param {number} b - maximum support\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 0.0, 10.0 );\n* var y = cdf( 0.5 );\n* // returns ~0.144\n*\n* y = cdf( 8.0 );\n* // returns ~0.705\n*/\nfunction factory( a, b ) {\n\tif (\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\ta >= b\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for an arcsine distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < a ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tif ( x >= b ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\treturn TWO_OVER_PI * asin( sqrt( ( x-a ) / ( b-a ) ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Arcsine distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/arcsine/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/arcsine/cdf' );\n*\n* var y = cdf( 5.0, 0.0, 4.0 );\n* // returns 1.0\n*\n* var mycdf = cdf.factory( 0.0, 10.0 );\n* y = mycdf( 0.5 );\n* // returns ~0.144\n*\n* y = mycdf( 8.0 );\n* // returns ~0.705\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar betainc = require( '@stdlib/math/base/special/betainc' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a beta distribution with first shape parameter `alpha` and second shape parameter `beta` at a value `x`.\n*\n* @param {number} x - input value\n* @param {PositiveNumber} alpha - first shape parameter\n* @param {PositiveNumber} beta - second shape parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 0.5, 1.0, 1.0 );\n* // returns 0.5\n*\n* @example\n* var y = cdf( 0.5, 2.0, 4.0 );\n* // returns ~0.813\n*\n* @example\n* var y = cdf( 0.2, 2.0, 2.0 );\n* // returns ~0.104\n*\n* @example\n* var y = cdf( 0.8, 4.0, 4.0 );\n* // returns ~0.967\n*\n* @example\n* var y = cdf( -0.5, 4.0, 2.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( 1.5, 4.0, 2.0 );\n* // returns 1.0\n*\n* @example\n* var y = cdf( 2.0, -1.0, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 0.5, -1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( NaN, 1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 1.0, NaN );\n* // returns NaN\n*/\nfunction cdf( x, alpha, beta ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( alpha ) ||\n\t\tisnan( beta ) ||\n\t\talpha <= 0.0 ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x <= 0.0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( x >= 1.0 ) {\n\t\treturn 1.0;\n\t}\n\treturn betainc( x, alpha, beta );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar betainc = require( '@stdlib/math/base/special/betainc' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a beta distribution with first shape parameter `alpha` and second shape parameter `beta`.\n*\n* @param {PositiveNumber} alpha - first shape parameter\n* @param {PositiveNumber} beta - second shape parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 0.5, 0.5 );\n*\n* var y = cdf( 0.8 );\n* // returns ~0.705\n*\n* y = cdf( 0.3 );\n* // returns ~0.369\n*/\nfunction factory( alpha, beta ) {\n\tif (\n\t\tisnan( alpha ) ||\n\t\tisnan( beta ) ||\n\t\talpha <= 0.0 ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a beta distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x <= 0.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tif ( x >= 1.0 ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\treturn betainc( x, alpha, beta );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the cumulative distribution function (CDF) for a beta distribution.\n*\n* @module @stdlib/stats/base/dists/beta/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/beta/cdf' );\n*\n* var y = cdf( 0.5, 1.0, 1.0 );\n* // returns 0.5\n*\n* y = cdf( 0.5, 2.0, 4.0 );\n* // returns ~0.813\n*\n* @example\n* var factory = require( '@stdlib/stats/base/dists/beta/cdf' ).factory;\n*\n* var cdf = factory( 0.5, 0.5 );\n*\n* var y = cdf( 0.8 );\n* // returns ~0.705\n*\n* y = cdf( 0.3 );\n* // returns ~0.369\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar betaCDF = require( './../../../../../base/dists/beta/cdf' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a beta prime distribution with first shape parameter `alpha` and second shape parameter `beta` at a value `x`.\n*\n* @param {number} x - input value\n* @param {PositiveNumber} alpha - first shape parameter\n* @param {PositiveNumber} beta - second shape parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 0.5, 1.0, 1.0 );\n* // returns ~0.333\n*\n* @example\n* var y = cdf( 0.5, 2.0, 4.0 );\n* // returns ~0.539\n*\n* @example\n* var y = cdf( 0.2, 2.0, 2.0 );\n* // returns ~0.074\n*\n* @example\n* var y = cdf( 0.8, 4.0, 4.0 );\n* // returns ~0.38\n*\n* @example\n* var y = cdf( -0.5, 4.0, 2.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( 2.0, -1.0, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 0.5, -1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( NaN, 1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 1.0, NaN );\n* // returns NaN\n*/\nfunction cdf( x, alpha, beta ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( alpha ) ||\n\t\tisnan( beta ) ||\n\t\talpha <= 0.0 ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x <= 0.0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( x === PINF ) {\n\t\treturn 1.0;\n\t}\n\treturn betaCDF( x / ( 1.0 + x ), alpha, beta );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar betaFactory = require( './../../../../../base/dists/beta/cdf' ).factory;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a beta prime distribution with first shape parameter `alpha` and second shape parameter `beta`.\n*\n* @param {PositiveNumber} alpha - first shape parameter\n* @param {PositiveNumber} beta - second shape parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 0.5, 0.5 );\n*\n* var y = cdf( 0.8 );\n* // returns ~0.465\n*\n* y = cdf( 0.3 );\n* // returns ~0.319\n*/\nfunction factory( alpha, beta ) {\n\tvar betaCDF;\n\tif (\n\t\tisnan( alpha ) ||\n\t\tisnan( beta ) ||\n\t\talpha <= 0.0 ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\tbetaCDF = betaFactory( alpha, beta );\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a beta prime distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x <= 0.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tif ( x === PINF ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\treturn betaCDF( x / ( 1.0 + x ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the cumulative distribution function (CDF) for a beta prime distribution.\n*\n* @module @stdlib/stats/base/dists/betaprime/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/betaprime/cdf' );\n*\n* var y = cdf( 0.5, 1.0, 1.0 );\n* // returns ~0.333\n*\n* y = cdf( 0.5, 2.0, 4.0 );\n* // returns ~0.539\n*\n* @example\n* var factory = require( '@stdlib/stats/base/dists/betaprime/cdf' ).factory;\n*\n* var cdf = factory( 0.5, 0.5 );\n*\n* var y = cdf( 0.8 );\n* // returns ~0.465\n*\n* y = cdf( 0.3 );\n* // returns ~0.319\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( './../../../../float64/base/get-high-word' );\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if the sign bit is on (true) or off (false).\n*\n* @param {number} x - input value\n* @returns {boolean} boolean indicating if sign bit is on or off\n*\n* @example\n* var bool = signbit( 4.0 );\n* // returns false\n*\n* @example\n* var bool = signbit( -9.14e-307 );\n* // returns true\n*\n* @example\n* var bool = signbit( 0.0 );\n* // returns false\n*\n* @example\n* var bool = signbit( -0.0 );\n* // returns true\n*/\nfunction signbit( x ) {\n\t// Extract from the input value a higher order word (unsigned 32-bit integer) containing the exponent and sign:\n\tvar high = getHighWord( x );\n\n\t// Shift off all bits which are not the sign bit and check if the sign bit is on:\n\treturn ( high >>> 31 ) ? true : false; // eslint-disable-line no-unneeded-ternary\n}\n\n\n// EXPORTS //\n\nmodule.exports = signbit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a boolean indicating if the sign bit is on (true) or off (false).\n*\n* @module @stdlib/number/float64/base/signbit\n*\n* @example\n* var signbit = require( '@stdlib/number/float64/base/signbit' );\n*\n* var bool = signbit( 4.0 );\n* // returns false\n*\n* bool = signbit( -9.14e-307 );\n* // returns true\n*\n* bool = signbit( 0.0 );\n* // returns false\n*\n* bool = signbit( -0.0 );\n* // returns true\n*/\n\n// MODULES //\n\nvar signbit = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = signbit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original code, copyright and license are from [Go]{@link https://golang.org/src/math/atan2.go}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (c) 2009 The Go Authors. All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without\n* modification, are permitted provided that the following conditions are\n* met:\n*\n*    * Redistributions of source code must retain the above copyright\n* notice, this list of conditions and the following disclaimer.\n*    * Redistributions in binary form must reproduce the above\n* copyright notice, this list of conditions and the following disclaimer\n* in the documentation and/or other materials provided with the\n* distribution.\n*    * Neither the name of Google Inc. nor the names of its\n* contributors may be used to endorse or promote products derived from\n* this software without specific prior written permission.\n*\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n* \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n* OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isinfinite = require( './../../../../base/assert/is-infinite' );\nvar copysign = require( './../../../../base/special/copysign' );\nvar signbit = require( '@stdlib/number/float64/base/signbit' );\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar atan = require( './../../../../base/special/atan' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar PI = require( '@stdlib/constants/float64/pi' );\n\n\n// MAIN //\n\n/**\n* Computes the angle in the plane (in radians) between the positive x-axis and the ray from `(0,0)` to the point `(x,y)`.\n*\n* ## Special Cases\n*\n* ```tex\n* \\begin{align*}\n* \\operatorname{atan2}(y,\\mathrm{NaN}) &= \\mathrm{NaN}\\\\\n* \\operatorname{atan2}(\\mathrm{NaN},x) &= \\mathrm{NaN}\\\\\n* \\operatorname{atan2}( +0,x \\ge 0 ) &= +0 \\\\\n* \\operatorname{atan2}( -0, x \\ge 0 ) &= -0 \\\\\n* \\operatorname{atan2}( +0,x \\le -0 ) &= +\\Pi \\\\\n* \\operatorname{atan2}( -0, x \\le -0 ) &= -\\Pi \\\\\n* \\operatorname{atan2}(+\\infty, +\\infty) &= +\\tfrac{\\Pi}{4} \\\\\n* \\operatorname{atan2}(-\\infty, +\\infty) &= -\\tfrac{\\Pi}{4} \\\\\n* \\operatorname{atan2}(+\\infty, -\\infty) &= +\\tfrac{3\\Pi}{4} \\\\\n* \\operatorname{atan2}(-\\infty, -\\infty) &= -\\tfrac{3\\Pi}{4} \\\\\n* \\operatorname{atan2}(y, +\\infty) &= 0.0 \\\\\n* \\operatorname{atan2}(y>0, -\\infty) &= +\\Pi \\\\\n* \\operatorname{atan2}(y<0, -\\infty) &= -\\Pi \\\\\n* \\operatorname{atan2}(+\\infty, x ) &= +\\tfrac{\\Pi}{2} \\\\\n* \\operatorname{atan2}(-\\infty, x ) &= -\\tfrac{\\Pi}{2} \\\\\n* \\end{align*}\n* ```\n*\n* @param {number} y - `y` coordinate\n* @param {number} x - `x` coordinate\n* @returns {number} angle (in radians)\n*\n* @example\n* var v = atan2( 2.0, 2.0 ); // => atan(1.0)\n* // returns ~0.785\n*\n* @example\n* var v = atan2( 6.0, 2.0 ); // => atan(3.0)\n* // returns ~1.249\n*\n* @example\n* var v = atan2( -1.0, -1.0 ); // => atan(1.0) - π\n* // returns ~-2.356\n*\n* @example\n* var v = atan2( 3.0, 0.0 ); // => π/2\n* // returns ~1.571\n*\n* @example\n* var v = atan2( -2.0, 0.0 ); // => -π/2\n* // returns ~-1.571\n*\n* @example\n* var v = atan2( 0.0, 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = atan2( 3.0, NaN );\n* // returns NaN\n*\n* @example\n* var v = atan2( NaN, 2.0 );\n* // returns NaN\n*/\nfunction atan2( y, x ) {\n\tvar q;\n\tif ( isnan( x ) || isnan( y ) ) {\n\t\treturn NaN;\n\t}\n\tif ( isinfinite( x ) ) {\n\t\tif ( x === PINF ) {\n\t\t\tif ( isinfinite( y ) ) {\n\t\t\t\treturn copysign( PI / 4.0, y );\n\t\t\t}\n\t\t\treturn copysign( 0.0, y );\n\t\t}\n\t\t// Case: x is -Infinity\n\t\tif ( isinfinite( y ) ) {\n\t\t\treturn copysign( 3.0*PI/4.0, y );\n\t\t}\n\t\treturn copysign( PI, y );\n\t}\n\tif ( isinfinite( y ) ) {\n\t\treturn copysign( PI / 2.0, y );\n\t}\n\tif ( y === 0.0 ) {\n\t\tif ( x >= 0.0 && !signbit( x ) ) {\n\t\t\treturn copysign( 0.0, y );\n\t\t}\n\t\treturn copysign( PI, y );\n\t}\n\tif ( x === 0.0 ) {\n\t\treturn copysign( PI / 2.0, y );\n\t}\n\tq = atan( y / x );\n\tif ( x < 0.0 ) {\n\t\tif ( q <= 0.0 ) {\n\t\t\treturn q + PI;\n\t\t}\n\t\treturn q - PI;\n\t}\n\treturn q;\n}\n\n\n// EXPORTS //\n\nmodule.exports = atan2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar atan2 = require( '@stdlib/math/base/special/atan2' );\n\n\n// VARIABLES //\n\nvar ONE_OVER_PI = 0.3183098861837907;\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a Cauchy distribution with location parameter `x0` and scale parameter `gamma` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} x0 - location parameter\n* @param {PositiveNumber} gamma - scale parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 4.0, 0.0, 2.0 );\n* // returns ~0.852\n*\n* @example\n* var y = cdf( 1.0, 0.0, 2.0 );\n* // returns ~0.648\n*\n* @example\n* var y = cdf( 1.0, 3.0, 2.0 );\n* // returns 0.25\n*\n* @example\n* var y = cdf( NaN, 0.0, 2.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 1.0, 2.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = cdf( 1.0, NaN, 3.0 );\n* // returns NaN\n*/\nfunction cdf( x, x0, gamma ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( gamma ) ||\n\t\tisnan( x0 ) ||\n\t\tgamma <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\treturn ( ONE_OVER_PI * atan2( x-x0, gamma ) ) + 0.5;\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the angle in the plane (in radians) between the positive x-axis and the ray from `(0,0)` to the point `(x,y)`.\n*\n* @module @stdlib/math/base/special/atan2\n*\n* @example\n* var atan2 = require( '@stdlib/math/base/special/atan2' );\n*\n* var v = atan2( 2.0, 2.0 ); // => atan(1.0)\n* // returns ~0.785\n*\n* v = atan2( 6.0, 2.0 ); // => atan(3.0)\n* // returns ~1.249\n*\n* v = atan2( -1.0, -1.0 ); // => atan(1.0) - π\n* // returns ~-2.356\n*\n* v = atan2( 3.0, 0.0 ); // => π/2\n* // returns ~1.571\n*\n* v = atan2( -2.0, 0.0 ); // => -π/2\n* // returns ~-1.571\n*\n* v = atan2( 0.0, 0.0 );\n* // returns 0.0\n*\n* v = atan2( 3.0, NaN );\n* // returns NaN\n*\n* v = atan2( NaN, 2.0 );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar atan2 = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = atan2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar atan2 = require( '@stdlib/math/base/special/atan2' );\n\n\n// VARIABLES //\n\nvar ONE_OVER_PI = 0.3183098861837907;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a Cauchy distribution with location parameter `x0` and scale parameter `gamma`.\n*\n* @param {number} x0 - location parameter\n* @param {PositiveNumber} gamma - scale parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 10.0, 2.0 );\n*\n* var y = cdf( 10.0 );\n* // returns 0.5\n*\n* y = cdf( 12.0 );\n* // returns 0.75\n*/\nfunction factory( x0, gamma ) {\n\tif (\n\t\tisnan( gamma ) ||\n\t\tisnan( x0 ) ||\n\t\tgamma <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a Cauchy distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn ( ONE_OVER_PI * atan2( x-x0, gamma ) ) + 0.5;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Cauchy distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/cauchy/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/cauchy/cdf' );\n*\n* var y = cdf( 2.0, 0.0, 1.0 );\n* // returns ~0.852\n*\n* @example\n* var factory = require( '@stdlib/stats/base/dists/cauchy/cdf' ).factory;\n*\n* var cdf = factory( 1.5, 3.0 );\n*\n* var y = cdf( 1.0 );\n* // returns ~0.447\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gammaCDF = require( './../../../../../base/dists/gamma/cdf' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a chi distribution with degrees of freedom `k` at a value `x`.\n*\n* @param {number} x - input value\n* @param {NonNegativeNumber} k - degrees of freedom\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 2.0, 3.0 );\n* // returns ~0.739\n*\n* @example\n* var y = cdf( 1.0, 0.5 );\n* // returns ~0.846\n*\n* @example\n* var y = cdf( -1.0, 4.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative degrees of freedom:\n* var y = cdf( 2.0, -1.0 );\n* // returns NaN\n*/\nfunction cdf( x, k ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( k ) ||\n\t\tk < 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( k === 0.0 ) {\n\t\treturn ( x < 0 ) ? 0.0 : 1.0;\n\t}\n\tif ( x <= 0.0 ) {\n\t\treturn 0.0;\n\t}\n\treturn gammaCDF( x*x, k/2.0, 0.5 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar degenerate = require( './../../../../../base/dists/degenerate/cdf' ).factory;\nvar gammaFactory = require( './../../../../../base/dists/gamma/cdf' ).factory;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a chi distribution with degrees of freedom `k`.\n*\n* @param {NonNegativeNumber} k - degrees of freedom\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 3.0 );\n*\n* var y = cdf( 6.0 );\n* // returns ~1.0\n*\n* y = cdf( 1.5 );\n* // returns ~0.478\n*/\nfunction factory( k ) {\n\tvar gamma;\n\tif ( k === 0.0 ) {\n\t\treturn degenerate( 0.0 );\n\t}\n\tgamma = gammaFactory( k/2.0, 0.5 );\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a chi distribution with degrees of freedom `k`.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*/\n\tfunction cdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < 0.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn gamma( x*x );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Chi distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/chi/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/chi/cdf' );\n*\n* var y = cdf( 2.0, 8.0 );\n* // returns ~0.143\n*\n* y = cdf( 0.0, 1.0 );\n* // returns 0.0\n*\n* @example\n* var factory = require( '@stdlib/stats/base/dists/chi/cdf' ).factory;\n*\n* var cdf = factory( 1.0 );\n*\n* var y = cdf( 2.0 );\n* // returns ~0.954\n*\n* y = cdf( 1.2 );\n* // returns ~0.77\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar sinpi = require( '@stdlib/math/base/special/sinpi' );\nvar PI = require( '@stdlib/constants/float64/pi' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a raised cosine distribution with location parameter `mu` and scale parameter `s` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} mu - location parameter\n* @param {NonNegativeNumber} s - scale parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 0.5, 0.0, 1.0 );\n* // returns ~0.909\n*\n* @example\n* var y = cdf( 1.2, 0.0, 1.0 );\n* // returns 1.0\n*\n* @example\n* var y = cdf( -0.9, 0.0, 1.0);\n* // returns ~0.0\n*\n* @example\n* var y = cdf( 2.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*/\nfunction cdf( x, mu, s ) {\n\tvar z;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( s ) ||\n\t\ts < 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( s === 0.0 ) {\n\t\treturn ( x < mu ) ? 0.0 : 1.0;\n\t}\n\tif ( x < mu - s ) {\n\t\treturn 0.0;\n\t}\n\tif ( x > mu + s ) {\n\t\treturn 1.0;\n\t}\n\tz = ( x - mu ) / s;\n\treturn ( 1.0 + z + ( sinpi( z ) / PI ) ) / 2.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar degenerate = require( './../../../../../base/dists/degenerate/cdf' ).factory;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar sinpi = require( '@stdlib/math/base/special/sinpi' );\nvar PI = require( '@stdlib/constants/float64/pi' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a raised cosine distribution with location parameter `mu` and scale parameter `s`.\n*\n* @param {number} mu - location parameter\n* @param {NonNegativeNumber} s - scale parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 3.0, 1.5 );\n*\n* var y = cdf( 1.9 );\n* // returns ~0.015\n*\n* y = cdf( 4.0 );\n* // returns ~0.971\n*/\nfunction factory( mu, s ) {\n\tif ( isnan( mu ) || isnan( s ) || s < 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( s === 0.0 ) {\n\t\treturn degenerate( mu );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a raised cosine distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tvar z;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < mu - s ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tif ( x > mu + s ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\tz = ( x - mu ) / s;\n\t\treturn ( 1.0 + z + ( sinpi( z ) / PI ) ) / 2.0;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Raised cosine distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/cosine/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/cosine/cdf' );\n*\n* var y = cdf( 0.5, 0.0, 1.0 );\n* // returns ~0.909\n*\n* var mycdf = cdf.factory( 3.0, 1.5 );\n*\n* y = mycdf( 4.0 );\n* // returns ~0.971\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );\nvar gammaCDF = require( './../../../../../base/dists/gamma/cdf' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for an Erlang distribution with shape parameter `k` and rate parameter `lambda` at a value `x`.\n*\n* @param {number} x - input value\n* @param {NonNegativeInteger} k - shape parameter\n* @param {PositiveNumber} lambda - rate parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 2.0, 1, 1.0 );\n* // returns ~0.865\n*\n* @example\n* var y = cdf( 2.0, 3, 1.0 );\n* // returns ~0.323\n*\n* @example\n* var y = cdf( 2.0, 2.5, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( -1.0, 2, 2.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( +Infinity, 4, 2.0 );\n* // returns 1.0\n*\n* @example\n* var y = cdf( -Infinity, 4, 2.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( NaN, 0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 0, NaN );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, -1, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 1, -1.0 );\n* // returns NaN\n*/\nfunction cdf( x, k, lambda ) {\n\tif ( !isNonNegativeInteger( k ) ) {\n\t\treturn NaN;\n\t}\n\treturn gammaCDF( x, k, lambda );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar factoryGamma = require( './../../../../../base/dists/gamma/cdf' ).factory;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for an Erlang distribution with shape parameter `k` and rate parameter `lambda`.\n*\n* @param {NonNegativeInteger} k - shape parameter\n* @param {PositiveNumber} lambda - rate parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 2, 0.1 );\n* var y = cdf( 12.0 );\n* // returns ~0.337\n*\n* y = cdf( 8.0 );\n* // returns ~0.191\n*/\nfunction factory( k, lambda ) {\n\tif ( !isNonNegativeInteger( k ) ) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn factoryGamma( k, lambda );\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Erlang distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/erlang/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/erlang/cdf' );\n*\n* var y = cdf( 2.0, 8, 3.0 );\n* // returns ~0.256\n*\n* y = cdf( 0.0, 1, 1.0 );\n* // returns 0.0\n*\n* var mycdf = cdf.factory( 2, 0.5 );\n* y = mycdf( 6.0 );\n* // returns ~0.801\n*\n* y = mycdf( 2.0 );\n* // returns ~0.264\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for an exponential distribution with rate parameter `lambda` at a value `x`.\n*\n* @param {number} x - input value\n* @param {PositiveNumber} lambda - rate parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 2.0, 0.1 );\n* // returns ~0.181\n*\n* @example\n* var y = cdf( 1.0, 2.0 );\n* // returns ~0.865\n*\n* @example\n* var y = cdf( -1.0, 4.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative rate parameter:\n* var y = cdf( 2.0, -1.0 );\n* // returns NaN\n*/\nfunction cdf( x, lambda ) {\n\tif (\n\t\tisnan( lambda ) ||\n\t\tlambda < 0.0 ||\n\t\tlambda === PINF\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x < 0.0 ) {\n\t\treturn 0.0;\n\t}\n\treturn 1.0 - exp( -lambda * x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for an exponential distribution with rate parameter `lambda`.\n*\n* @param {PositiveNumber} lambda - rate parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 0.5 );\n* var y = cdf( 3.0 );\n* // returns ~0.777\n*\n* y = cdf( 1.0 );\n* // returns ~0.393\n*/\nfunction factory( lambda ) {\n\tif (\n\t\tisnan( lambda ) ||\n\t\tlambda < 0.0 ||\n\t\tlambda === PINF\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for an exponential distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tif ( x < 0.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn 1.0 - exp( -lambda * x );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Exponential distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/exponential/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/exponential/cdf' );\n*\n* var y = cdf( 2.0, 0.1 );\n* // returns ~0.181\n*\n* var myCDF = cdf.factory( 0.5 );\n* y = myCDF( 3.0 );\n* // returns ~0.777\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a Fréchet distribution with shape `alpha`, scale `s`, and location `m` at a value `x`.\n*\n* @param {number} x - input value\n* @param {PositiveNumber} alpha - shape parameter\n* @param {PositiveNumber} s - scale parameter\n* @param {number} m - location parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 10.0, 2.0, 3.0, 2.0 );\n* // returns ~0.869\n*\n* @example\n* var y = cdf( -0.2, 1.0, 3.0, -1.0 );\n* // returns ~0.024\n*\n* @example\n* var y = cdf( 1.5, 2.0, 1.0, 1.0 );\n* // returns ~0.018\n*\n* @example\n* var y = cdf( NaN, 2.0, 1.0, -1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN, 1.0, -1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 2.0, NaN, -1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 2.0, 1.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, -1.0, 1.0, 0.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 1.0, -1.0, 0.0 );\n* // returns NaN\n*/\nfunction cdf( x, alpha, s, m ) {\n\tvar z;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( alpha ) ||\n\t\tisnan( s ) ||\n\t\tisnan( m ) ||\n\t\talpha <= 0.0 ||\n\t\ts <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x <= m ) {\n\t\treturn 0.0;\n\t}\n\tz = ( x - m ) / s;\n\treturn exp( -pow( z, -alpha ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a Fréchet distribution with shape `alpha`, scale `s`, and location `m`.\n*\n* @param {PositiveNumber} alpha - shape parameter\n* @param {PositiveNumber} s - scale parameter\n* @param {number} m - location parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 3.0, 3.0, 5.0 );\n*\n* var y = cdf( 10.0 );\n* // returns ~0.806\n*\n* y = cdf( 7.0 );\n* // returns ~0.034\n*/\nfunction factory( alpha, s, m ) {\n\tif (\n\t\tisnan( alpha ) ||\n\t\tisnan( s ) ||\n\t\tisnan( m ) ||\n\t\talpha <= 0.0 ||\n\t\ts <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a Fréchet distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( -2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tvar z;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x <= m ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tz = ( x - m ) / s;\n\t\treturn exp( -pow( z, -alpha ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Fréchet distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/frechet/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/frechet/cdf' );\n*\n* var y = cdf( 10.0, 2.0, 3.0, 5.0 );\n* // returns ~0.698\n*\n* y = cdf( 0.0, 2.0, 3.0, 2.0 );\n* // returns 0.0\n*\n* @example\n* var factory = require( '@stdlib/stats/base/dists/frechet/cdf' ).factory;\n* var cdf = factory( 3.0, 3.0, 5.0 );\n* var y = cdf( 10.0 );\n* // returns ~0.806\n*\n* y = cdf( 7.0 );\n* // returns ~0.034\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar exp = require( '@stdlib/math/base/special/exp' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a Gumbel distribution with location parameter `mu` and scale parameter `beta` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} mu - location parameter\n* @param {PositiveNumber} beta - scale parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 10.0, 0.0, 3.0 );\n* // returns ~0.965\n*\n* @example\n* var y = cdf( -2.0, 0.0, 3.0 );\n* // returns ~0.143\n*\n* @example\n* var y = cdf( 0.0, 0.0, 1.0 );\n* // returns ~0.368\n*\n* @example\n* var y = cdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative scale parameter:\n* var y = cdf( 0.0, 0.0, -1.0 );\n* // returns NaN\n*/\nfunction cdf( x, mu, beta ) {\n\tvar z;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( beta ) ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tz = ( x - mu ) / beta;\n\treturn exp( -exp( -z ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar exp = require( '@stdlib/math/base/special/exp' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a Gumbel distribution with location parameter `mu` and scale parameter `beta`.\n*\n* @param {number} mu - location parameter\n* @param {PositiveNumber} beta - scale parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 0.0, 3.0 );\n*\n* var y = cdf( 10.0 );\n* // returns ~0.965\n*\n* y = cdf( -2.0 );\n* // returns ~0.143\n*/\nfunction factory( mu, beta ) {\n\tif (\n\t\tisnan( mu ) ||\n\t\tisnan( beta ) ||\n\t\tbeta <= 0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a Gumbel distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( -2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tvar z;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tz = ( x - mu ) / beta;\n\t\treturn exp( -exp( -z ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Gumbel distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/gumbel/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/gumbel/cdf' );\n*\n* var y = cdf( 10.0, 0.0, 3.0 );\n* // returns ~0.965\n*\n* y = cdf( 0.0, 0.0, 3.0 );\n* // returns ~0.368\n*\n* var myCDF = cdf.factory( 2.0, 3.0 );\n* y = myCDF( 10.0 );\n* // returns ~0.933\n*\n* y = myCDF( 2.0 );\n* // returns ~0.368\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gammainc = require( '@stdlib/math/base/special/gammainc' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for an inverse gamma distribution with shape parameter `alpha` and scale parameter `beta` at a value `x`.\n*\n* @param {number} x - input value\n* @param {PositiveNumber} alpha - shape parameter\n* @param {PositiveNumber} beta - scale parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 2.0, 1.0, 1.0 );\n* // returns ~0.607\n*\n* @example\n* var y = cdf( 2.0, 3.0, 1.0 );\n* // returns ~0.986\n*\n* @example\n* var y = cdf( -1.0, 2.0, 2.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( +Infinity, 4.0, 2.0 );\n* // returns 1.0\n*\n* @example\n* var y = cdf( -Infinity, 4.0, 2.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, -1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 1.0, -1.0 );\n* // returns NaN\n*/\nfunction cdf( x, alpha, beta ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( alpha ) ||\n\t\tisnan( beta ) ||\n\t\talpha <= 0.0 ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x <= 0.0 ) {\n\t\treturn 0.0;\n\t}\n\treturn gammainc( beta / x, alpha, true, true );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar gammainc = require( '@stdlib/math/base/special/gammainc' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for an inverse gamma distribution with shape parameter `alpha` and scale parameter `beta`.\n*\n* @param {PositiveNumber} alpha - shape parameter\n* @param {PositiveNumber} beta - scale parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 3.0, 1.5 );\n*\n* var y = cdf( 1.0 );\n* // returns ~0.809\n*\n* y = cdf( 2.0 );\n* // returns ~0.96\n*/\nfunction factory( alpha, beta ) {\n\tif (\n\t\tisnan( alpha ) ||\n\t\tisnan( beta ) ||\n\t\talpha <= 0.0 ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for an inverse gamma distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x <= 0 ) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn gammainc( beta / x, alpha, true, true );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Inverse gamma distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/invgamma/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/invgamma/cdf' );\n*\n* var y = cdf( 1.0, 8.0, 3.0 );\n* // returns ~0.988\n*\n* y = cdf( 0.0, 1.0, 1.0 );\n* // returns 0.0\n*\n* var mycdf = cdf.factory( 2.0, 0.5 );\n* y = mycdf( 0.5 );\n* // returns ~0.736\n*\n* y = mycdf( 2.0 );\n* // returns ~0.973\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a Kumaraswamy's double bounded distribution with first shape parameter `a` and second shape parameter `b` at a value `x`.\n*\n* @param {number} x - input value\n* @param {PositiveNumber} a - first shape parameter\n* @param {PositiveNumber} b - second shape parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 0.5, 1.0, 1.0 );\n* // returns ~0.5\n*\n* @example\n* var y = cdf( 0.5, 2.0, 4.0 );\n* // returns ~0.684\n*\n* @example\n* var y = cdf( 0.2, 2.0, 2.0 );\n* // returns ~0.078\n*\n* @example\n* var y = cdf( 0.8, 4.0, 4.0 );\n* // returns ~0.878\n*\n* @example\n* var y = cdf( -0.5, 4.0, 2.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( 1.5, 4.0, 2.0 );\n* // returns 1.0\n*\n* @example\n* var y = cdf( 2.0, -1.0, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 0.5, -1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( NaN, 1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 1.0, NaN );\n* // returns NaN\n*/\nfunction cdf( x, a, b ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\ta <= 0.0 ||\n\t\tb <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x <= 0.0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( x >= 1.0 ) {\n\t\treturn 1.0;\n\t}\n\treturn 1.0 - pow( 1.0 - pow( x, a ), b );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a Kumaraswamy's double bounded distribution with first shape parameter `a` and second shape parameter `b`.\n*\n* @param {PositiveNumber} a - first shape parameter\n* @param {PositiveNumber} b - second shape parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 0.5, 0.5 );\n*\n* var y = cdf( 0.8 );\n* // returns ~0.675\n*\n* y = cdf( 0.3 );\n* // returns ~0.327\n*/\nfunction factory( a, b ) {\n\tif (\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\ta <= 0.0 ||\n\t\tb <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a Kumaraswamy's double bounded distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x <= 0.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tif ( x >= 1.0 ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\treturn 1.0 - pow( 1.0 - pow( x, a ), b );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the cumulative distribution function (CDF) for a Kumaraswamy's double bounded distribution.\n*\n* @module @stdlib/stats/base/dists/kumaraswamy/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/kumaraswamy/cdf' );\n*\n* var y = cdf( 0.5, 1.0, 1.0 );\n* // returns 0.5\n*\n* y = cdf( 0.5, 2.0, 4.0 );\n* // returns ~0.684\n*\n* @example\n* var factory = require( '@stdlib/stats/base/dists/kumaraswamy/cdf' ).factory;\n*\n* var cdf = factory( 0.5, 0.5 );\n*\n* var y = cdf( 0.8 );\n* // returns ~0.675\n*\n* y = cdf( 0.3 );\n* // returns ~0.327\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar exp = require( '@stdlib/math/base/special/exp' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a Laplace distribution with location parameter `mu` and scale parameter `b` at value `x`.\n*\n* @param {number} x - input value\n* @param {number} mu - location parameter\n* @param {PositiveNumber} b - scale parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 2.0, 0.0, 1.0 );\n* // returns ~0.932\n*\n* @example\n* var y = cdf( 5.0, 10.0, 3.0 );\n* // returns ~0.094\n*\n* @example\n* var y = cdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative scale parameter:\n* var y = cdf( 2.0, 0.0, -1.0 );\n* // returns NaN\n*/\nfunction cdf( x, mu, b ) {\n\tvar z;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( b ) ||\n\t\tb <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tz = ( x - mu ) / b;\n\tif ( x < mu ) {\n\t\treturn 0.5 * exp( z );\n\t}\n\treturn 1.0 - ( 0.5 * exp( -z ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar exp = require( '@stdlib/math/base/special/exp' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a Laplace distribution with location parameter `mu` and scale parameter `b`.\n*\n* @param {number} mu - location parameter\n* @param {PositiveNumber} b - scale parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 3.0, 1.5 );\n*\n* var y = cdf( 1.0 );\n* // returns ~0.132\n*\n* y = cdf( 4.0 );\n* // returns ~0.743\n*/\nfunction factory( mu, b ) {\n\tif (\n\t\tisnan( mu ) ||\n\t\tisnan( b ) ||\n\t\tb <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a Laplace distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tvar z;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tz = ( x - mu ) / b;\n\t\tif ( x < mu ) {\n\t\t\treturn 0.5 * exp( z );\n\t\t}\n\t\treturn 1.0 - (0.5 * exp( -z ));\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Laplace distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/laplace/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/laplace/cdf' );\n*\n* var y = cdf( 10.0, 0.0, 3.0 );\n* // returns ~0.982\n*\n* y = cdf( 0.0, 0.0, 3.0 );\n* // returns 0.5\n*\n* var myCDF = cdf.factory( 2.0, 3.0 );\n* y = myCDF( 10.0 );\n* // returns ~0.965\n*\n* y = myCDF( 2.0 );\n* // returns 0.5\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar erfc = require( '@stdlib/math/base/special/erfc' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a Lévy distribution with location parameter `mu` and scale parameter `c` at value `x`.\n*\n* @param {number} x - input value\n* @param {number} mu - location parameter\n* @param {PositiveNumber} c - scale parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 2.0, 0.0, 1.0 );\n* // returns ~0.48\n*\n* @example\n* var y = cdf( 12.0, 10.0, 3.0 );\n* // returns ~0.221\n*\n* @example\n* var y = cdf( 9.0, 10.0, 3.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative scale parameter:\n* var y = cdf( 2.0, 0.0, -1.0 );\n* // returns NaN\n*/\nfunction cdf( x, mu, c ) {\n\tvar z;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( c ) ||\n\t\tc <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x < mu ) {\n\t\treturn 0.0;\n\t}\n\tz = sqrt( c / ( 2.0 * ( x-mu ) ) );\n\treturn erfc( z );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar erfc = require( '@stdlib/math/base/special/erfc' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a Lévy distribution with location parameter `mu` and scale parameter `c`.\n*\n* @param {number} mu - location parameter\n* @param {PositiveNumber} c - scale parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 3.0, 1.5 );\n*\n* var y = cdf( 4.0 );\n* // returns ~0.22\n*\n* y = cdf( 2.0 );\n* // returns 0.0\n*/\nfunction factory( mu, c ) {\n\tif (\n\t\tisnan( mu ) ||\n\t\tisnan( c ) ||\n\t\tc <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a Lévy distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tvar z;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < mu ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tz = sqrt( c / ( 2.0 * ( x-mu ) ) );\n\t\treturn erfc( z );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Lévy distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/levy/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/levy/cdf' );\n*\n* var y = cdf( 10.0, 0.0, 3.0 );\n* // returns ~0.584\n*\n* y = cdf( 0.3, 0.0, 3.0 );\n* // returns ~0.002\n*\n* @example\n* var factory = require( '@stdlib/stats/base/dists/levy/cdf' ).factory;\n*\n* var myCDF = factory( 2.0, 3.0 );\n* var y = myCDF( 100.0 );\n* // returns ~0.861\n*\n* y = myCDF( 10.0 );\n* // returns ~0.54\n*\n* y = myCDF( 2.0 );\n* // returns 0.0\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar exp = require( '@stdlib/math/base/special/exp' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a logistic distribution with location parameter `mu` and scale parameter `s` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} mu - location parameter\n* @param {NonNegativeNumber} s - scale parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 2.0, 0.0, 1.0 );\n* // returns ~0.881\n*\n* @example\n* var y = cdf( 5.0, 10.0, 3.0 );\n* // returns ~0.159\n*\n* @example\n* var y = cdf( 2.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*/\nfunction cdf( x, mu, s ) {\n\tvar z;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( s ) ||\n\t\ts < 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( s === 0.0 ) {\n\t\treturn ( x < mu ) ? 0.0 : 1.0;\n\t}\n\tz = ( x - mu ) / s;\n\treturn 1.0 / ( 1.0 + exp( -z ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar degenerate = require( './../../../../../base/dists/degenerate/cdf' ).factory;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar exp = require( '@stdlib/math/base/special/exp' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a logistic distribution with location parameter `mu` and scale parameter `s`.\n*\n* @param {number} mu - location parameter\n* @param {NonNegativeNumber} s - scale parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 3.0, 1.5 );\n*\n* var y = cdf( 1.0 );\n* // returns ~0.209\n*\n* y = cdf( 4.0 );\n* // returns ~0.661\n*/\nfunction factory( mu, s ) {\n\tif ( isnan( mu ) || isnan( s ) || s < 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( s === 0.0 ) {\n\t\treturn degenerate( mu );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a logistic distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tvar z;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tz = ( x - mu ) / s;\n\t\treturn 1.0 / ( 1.0 + exp( -z ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Logistic distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/logistic/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/logistic/cdf' );\n*\n* var y = cdf( 2.0, 0.0, 1.0 );\n* // returns ~0.881\n*\n* var mycdf = cdf.factory( 3.0, 1.5 );\n*\n* y = mycdf( 1.0 );\n* // returns ~0.209\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar erfc = require( '@stdlib/math/base/special/erfc' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a Normal distribution with mean `mu` and standard deviation `sigma` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} mu - mean\n* @param {NonNegativeNumber} sigma - standard deviation\n* @returns {Probability} evaluated cumulative distribution function\n*\n* @example\n* var y = cdf( 2.0, 0.0, 1.0 );\n* // returns ~0.977\n*\n* @example\n* var y = cdf( -1.0, -1.0, 2.0 );\n* // returns 0.5\n*\n* @example\n* var y = cdf( -1.0, 4.0, 2.0 );\n* // returns ~0.006\n*\n* @example\n* var y = cdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative standard deviation:\n* var y = cdf( 2.0, 0.0, -1.0 );\n* // returns NaN\n*/\nfunction cdf( x, mu, sigma ) {\n\tvar denom;\n\tvar xc;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( sigma ) ||\n\t\tsigma < 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( sigma === 0.0 ) {\n\t\treturn (x < mu) ? 0.0 : 1.0;\n\t}\n\tdenom = sigma * sqrt( 2.0 );\n\txc = x - mu;\n\treturn 0.5 * erfc( -xc/denom );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar degenerate = require( './../../../../../base/dists/degenerate/cdf' ).factory;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar erfc = require( '@stdlib/math/base/special/erfc' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a Normal distribution.\n*\n* @param {number} mu - mean\n* @param {NonNegativeNumber} sigma - standard deviation\n* @returns {Function} function to evaluate the cumulative distribution function\n*\n* @example\n* var cdf = factory( 10.0, 2.0 );\n* var y = cdf( 10.0 );\n* // returns 0.5\n*\n* y = cdf( 12.0 );\n* // returns ~0.841\n*/\nfunction factory( mu, sigma ) {\n\tvar denom;\n\tif (\n\t\tisnan( mu ) ||\n\t\tisnan( sigma ) ||\n\t\tsigma < 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( sigma === 0.0 ) {\n\t\treturn degenerate( mu );\n\t}\n\tdenom = sigma * sqrt( 2.0 );\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a Normal distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tvar xc;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\txc = x - mu;\n\t\treturn 0.5 * erfc( -xc / denom );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Normal distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/normal/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/normal/cdf' );\n*\n* var y = cdf( 2.0, 0.0, 1.0 );\n* // returns ~0.977\n*\n* var myCDF = cdf.factory( 10.0, 2.0 );\n* y = myCDF( 10.0 );\n* // returns 0.5\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar normalCDF = require( './../../../../../base/dists/normal/cdf' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar ln = require( '@stdlib/math/base/special/ln' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a lognormal distribution with location parameter `mu` and scale parameter `sigma` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} mu - location parameter\n* @param {PositiveNumber} sigma - scale parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 2.0, 0.0, 1.0 );\n* // returns ~0.756\n*\n* @example\n* var y = cdf( 5.0, 10.0, 3.0 );\n* // returns ~0.003\n*\n* @example\n* var y = cdf( 2.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*/\nfunction cdf( x, mu, sigma ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( sigma ) ||\n\t\tsigma <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x <= 0.0 ) {\n\t\treturn 0.0;\n\t}\n\treturn normalCDF( ln(x), mu, sigma );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar normalCDF = require( './../../../../../base/dists/normal/cdf' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar ln = require( '@stdlib/math/base/special/ln' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a lognormal distribution with location parameter `mu` and scale parameter `sigma`.\n*\n* @param {number} mu - location parameter\n* @param {PositiveNumber} sigma - scale parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 3.0, 1.5 );\n*\n* var y = cdf( 1.0 );\n* // returns ~0.023\n*\n* y = cdf( 4.0 );\n* // returns ~0.141\n*/\nfunction factory( mu, sigma ) {\n\tif ( isnan( mu ) || isnan( sigma ) || sigma <= 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a lognormal distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x <= 0.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn normalCDF( ln(x), mu, sigma );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the lognormal distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/lognormal/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/lognormal/cdf' );\n*\n* var y = cdf( 2.0, 0.0, 1.0 );\n* // returns ~0.756\n*\n* y = cdf( 5.0, 10.0, 3.0 );\n* // returns ~0.003\n*\n* var mycdf = cdf.factory( 3.0, 1.5 );\n*\n* y = mycdf( 1.0 );\n* // returns ~0.023\n*\n* y = mycdf( 4.0 );\n* // returns ~0.141\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a Pareto (Type I) distribution with shape parameter `alpha` and scale parameter `beta` at a value `x`.\n*\n* @param {number} x - input value\n* @param {PositiveNumber} alpha - shape parameter\n* @param {PositiveNumber} beta - scale parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 2.0, 1.0, 1.0 );\n* // returns 0.5\n*\n* @example\n* var y = cdf( 5.0, 2.0, 4.0 );\n* // returns ~0.36\n*\n* @example\n* var y = cdf( 4.0, 2.0, 2.0 );\n* // returns 0.75\n*\n* @example\n* var y = cdf( 1.9, 2.0, 2.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( +Infinity, 4.0, 2.0 );\n* // returns 1.0\n*\n* @example\n* var y = cdf( 2.0, -1.0, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 0.5, -1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( NaN, 1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 1.0, NaN );\n* // returns NaN\n*/\nfunction cdf( x, alpha, beta ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( alpha ) ||\n\t\tisnan( beta ) ||\n\t\talpha <= 0.0 ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x < beta ) {\n\t\treturn 0.0;\n\t}\n\treturn 1.0 - pow( beta / x, alpha );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a Pareto (Type I) distribution with shape parameter `alpha` and scale parameter `beta`.\n*\n* @param {PositiveNumber} alpha - shape parameter\n* @param {PositiveNumber} beta - scale parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 10.0, 2.0 );\n* var y = cdf( 3.0 );\n* // returns ~0.983\n*\n* y = cdf( 2.5 );\n* // returns ~0.893\n*/\nfunction factory( alpha, beta ) {\n\tif (\n\t\tisnan( alpha ) ||\n\t\tisnan( beta ) ||\n\t\talpha <= 0.0 ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a Pareto (Type I) distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*/\n\tfunction cdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < beta ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn 1.0 - pow( beta / x, alpha );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Pareto (Type I) distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/pareto-type1/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/pareto-type1/cdf' );\n*\n* var y = cdf( 2.0, 1.0, 1.0 );\n* // returns 0.5\n*\n* y = cdf( 5.0, 2.0, 4.0 );\n* // returns ~0.36\n*\n* y = cdf( 4.0, 2.0, 2.0 );\n* // returns 0.75\n*\n* y = cdf( 1.9, 2.0, 2.0 );\n* // returns 0.0\n*\n* y = cdf( +Infinity, 4.0, 2.0 );\n* // returns 1.0\n*\n* var mycdf = cdf.factory( 10.0, 2.0 );\n* y = mycdf( 3.0 );\n* // returns ~0.983\n*\n* y = mycdf( 2.5 );\n* // returns ~0.893\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a Rayleigh distribution with scale parameter `sigma` at a value `x`.\n*\n* @param {number} x - input value\n* @param {NonNegativeNumber} sigma - scale parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 2.0, 3.0 );\n* // returns ~0.199\n*\n* @example\n* var y = cdf( 1.0, 2.0 );\n* // returns ~0.118\n*\n* @example\n* var y = cdf( -1.0, 4.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative scale parameter:\n* var y = cdf( 2.0, -1.0 );\n* // returns NaN\n*/\nfunction cdf( x, sigma ) {\n\tvar s2;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( sigma ) ||\n\t\tsigma < 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( sigma === 0.0 ) {\n\t\treturn ( x < 0.0 ) ? 0.0 : 1.0;\n\t}\n\tif ( x < 0.0 ) {\n\t\treturn 0.0;\n\t}\n\ts2 = pow( sigma, 2.0 );\n\treturn 1.0 - exp( -pow( x, 2.0 ) / ( 2.0 * s2 ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar degenerate = require( './../../../../../base/dists/degenerate/cdf' ).factory;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a Rayleigh distribution with scale parameter `sigma`.\n*\n* @param {NonNegativeNumber} sigma - scale parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 2.0 );\n* var y = cdf( 3.0 );\n* // returns ~0.675\n*\n* y = cdf( 1.0 );\n* // returns ~0.118\n*/\nfunction factory( sigma ) {\n\tvar s2;\n\tif ( isnan( sigma ) || sigma < 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( sigma === 0.0 ) {\n\t\treturn degenerate( 0.0 );\n\t}\n\ts2 = pow( sigma, 2.0 );\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a Rayleigh distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < 0.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn 1.0 - exp( -pow( x, 2.0 ) / ( 2.0 * s2 ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Rayleigh distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/rayleigh/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/rayleigh/cdf' );\n*\n* var y = cdf( 2.0, 5.0 );\n* // returns ~0.077\n*\n* var myCDF = cdf.factory( 0.5 );\n* y = myCDF( 1.0 );\n* // returns ~0.865\n*\n* y = myCDF( 0.5 );\n* // returns ~0.393\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar betainc = require( '@stdlib/math/base/special/betainc' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a Student's t distribution with degrees of freedom `v` at a value `x`.\n*\n* @param {number} x - input value\n* @param {PositiveNumber} v - degrees of freedom\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 2.0, 0.1 );\n* // returns ~0.611\n*\n* @example\n* var y = cdf( 1.0, 2.0 );\n* // returns ~0.789\n*\n* @example\n* var y = cdf( -1.0, 4.0 );\n* // returns ~0.187\n*\n* @example\n* var y = cdf( NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, -1.0 );\n* // returns NaN\n*/\nfunction cdf( x, v ) {\n\tvar x2;\n\tvar p;\n\tvar z;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( v ) ||\n\t\tv <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x === 0.0 ) {\n\t\treturn 0.5;\n\t}\n\tx2 = pow( x, 2.0 );\n\tif ( v > 2.0*x2 ) {\n\t\tz = x2 / ( v + x2 );\n\t\tp = betainc( z, 0.5, v/2.0, true, true ) / 2.0;\n\t} else {\n\t\tz = v / ( v + x2 );\n\t\tp = betainc( z, v/2.0, 0.5, true, false ) / 2.0;\n\t}\n\treturn ( x > 0.0 ) ? 1.0 - p : p;\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar betainc = require( '@stdlib/math/base/special/betainc' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a Student's t distribution with degrees of freedom `v`.\n*\n* @param {PositiveNumber} v - degrees of freedom\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 0.5 );\n* var y = cdf( 3.0 );\n* // returns ~0.816\n*\n* y = cdf( 1.0 );\n* // returns ~0.699\n*/\nfunction factory( v ) {\n\tif ( isnan( v ) || v <= 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a Student's t distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tvar x2;\n\t\tvar p;\n\t\tvar z;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x === 0.0 ) {\n\t\t\treturn 0.5;\n\t\t}\n\t\tx2 = pow( x, 2.0 );\n\t\tif ( v > 2.0*x2 ) {\n\t\t\tz = x2 / ( v + x2 );\n\t\t\tp = betainc( z, 0.5, v/2.0, true, true ) / 2.0;\n\t\t} else {\n\t\t\tz = v / ( v + x2 );\n\t\t\tp = betainc( z, v/2.0, 0.5, true, false ) / 2.0;\n\t\t}\n\t\treturn ( x > 0.0 ) ? 1.0 - p : p;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Student's t distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/t/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/t/cdf' );\n*\n* var y = cdf( 2.0, 0.1 );\n* // returns ~0.611\n*\n* y = cdf( 1.0, 2.0 );\n* // returns ~0.789\n*\n* y = cdf( -1.0, 4.0 );\n* // returns ~0.187\n*\n* var mycdf = cdf.factory( 0.5 );\n* y = mycdf( 3.0 );\n* // returns ~0.816\n*\n* y = mycdf( 1.0 );\n* // returns ~0.699\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a triangular distribution with lower limit `a` and upper limit `b` and mode `c` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} a - lower limit\n* @param {number} b - upper limit\n* @param {number} c - mode\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 0.5, -1.0, 1.0, 0.0 );\n* // returns 0.875\n*\n* @example\n* var y = cdf( 0.5, -1.0, 1.0, 0.5 );\n* // returns 0.75\n*\n* @example\n* var y = cdf( -10.0, -20.0, 0.0, -2.0 );\n* // returns ~0.278\n*\n* @example\n* var y = cdf( -2.0, -1.0, 1.0, 0.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( NaN, 0.0, 1.0, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN, 1.0, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 0.0, NaN, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 1.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 1.0, 0.0, 1.5 );\n* // returns NaN\n*/\nfunction cdf( x, a, b, c ) {\n\tvar denom1;\n\tvar denom2;\n\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\tisnan( c ) ||\n\t\ta > c ||\n\t\tc > b\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x <= a ) {\n\t\treturn 0.0;\n\t}\n\tdenom1 = ( b - a ) * ( c - a );\n\tdenom2 = ( b - a ) * ( b - c );\n\n\t// Case: x > a\n\tif ( x <= c ) {\n\t\treturn pow( x - a, 2.0 ) / denom1;\n\t}\n\t// Case: x > c\n\tif ( x < b ) {\n\t\treturn 1.0 - ( pow( b - x, 2.0 ) / denom2 );\n\t}\n\t// Case: x >= b\n\treturn 1.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a triangular distribution with lower limit `a` and upper limit `b` and mode `c`.\n*\n* @param {number} a - lower limit\n* @param {number} b - upper limit\n* @param {number} c - mode\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 0.0, 10.0, 2.0 );\n* var y = cdf( 0.5 );\n* // returns 0.0125\n*\n* y = cdf( 8.0 );\n* // returns 0.95\n*/\nfunction factory( a, b, c ) {\n\tvar denom1;\n\tvar denom2;\n\n\tif (\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\tisnan( c )\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( !( a <= c && c <= b ) ) {\n\t\treturn constantFunction( NaN );\n\t}\n\n\tdenom1 = ( b - a ) * ( c - a );\n\tdenom2 = ( b - a ) * ( b - c );\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a triangular distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x <= a ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\t// Case: x > a\n\t\tif ( x <= c ) {\n\t\t\treturn pow( x - a, 2.0 ) / denom1;\n\t\t}\n\t\t// Case: x > c\n\t\tif ( x < b ) {\n\t\t\treturn 1 - ( pow( b - x, 2.0 ) / denom2 );\n\t\t}\n\t\t// Case: x >= b\n\t\treturn 1.0;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Triangular distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/triangular/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/triangular/cdf' );\n*\n* var y = cdf( 0.5, -1.0, 1.0, 0.0 );\n* // returns 0.875\n*\n* y = cdf( 0.5, -1.0, 1.0, 0.5 );\n* // returns 0.75\n*\n* y = cdf( -10.0, -20.0, 0.0, -2.0 );\n* // returns ~0.278\n*\n* y = cdf( -2.0, -1.0, 1.0, 0.0 );\n* // returns 0.0\n*\n* var mycdf = cdf.factory( 0.0, 10.0, 2.0 );\n* y = mycdf( 0.5 );\n* // returns 0.0125\n*\n* y = mycdf( 8.0 );\n* // returns 0.95\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a uniform distribution with minimum support `a` and maximum support `b` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} a - minimum support\n* @param {number} b - maximum support\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 9.0, 0.0, 10.0 );\n* // returns 0.9\n*\n* @example\n* var y = cdf( 0.5, 0.0, 2.0 );\n* // returns 0.25\n*\n* @example\n* var y = cdf( +Infinity, 2.0, 4.0 );\n* // returns 1.0\n*\n* @example\n* var y = cdf( -Infinity, 2.0, 4.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 1.0, 0.0 );\n* // returns NaN\n*/\nfunction cdf( x, a, b ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\ta >= b\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x < a ) {\n\t\treturn 0.0;\n\t}\n\tif ( x >= b ) {\n\t\treturn 1.0;\n\t}\n\treturn ( x - a ) / ( b - a );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a uniform distribution with minimum support `a` and maximum support `b`.\n*\n* @param {number} a - minimum support\n* @param {number} b - maximum support\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 0.0, 10.0 );\n* var y = cdf( 0.5 );\n* // returns 0.05\n*\n* y = cdf( 8.0 );\n* // returns 0.8\n*/\nfunction factory( a, b ) {\n\tif (\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\ta >= b\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a uniform distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < a ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tif ( x >= b ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\treturn ( x - a ) / ( b - a );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Uniform distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/uniform/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/uniform/cdf' );\n*\n* var y = cdf( 5.0, 0.0, 4.0 );\n* // returns 1.0\n*\n* var mycdf = cdf.factory( 0.0, 10.0 );\n* y = mycdf( 0.5 );\n* // returns 0.05\n*\n* y = mycdf( 8.0 );\n* // returns 0.8\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar expm1 = require( '@stdlib/math/base/special/expm1' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a Weibull distribution with scale parameter `k` and shape parameter `lambda` at a value `x`.\n*\n* @param {number} x - input value\n* @param {PositiveNumber} k - scale parameter\n* @param {PositiveNumber} lambda - shape parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 2.0, 1.0, 1.0 );\n* // returns ~0.865\n*\n* @example\n* var y = cdf( -1.0, 2.0, 2.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( +Infinity, 4.0, 2.0 );\n* // returns 1.0\n*\n* @example\n* var y = cdf( -Infinity, 4.0, 2.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 0.0, -1.0 );\n* // returns NaN\n*/\nfunction cdf( x, k, lambda ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( k ) ||\n\t\tisnan( lambda ) ||\n\t\tk <= 0.0 ||\n\t\tlambda <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x < 0.0 ) {\n\t\treturn 0.0;\n\t}\n\treturn -expm1( -pow( x / lambda, k ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar expm1 = require( '@stdlib/math/base/special/expm1' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a Weibull distribution.\n*\n* @param {PositiveNumber} k - scale parameter\n* @param {PositiveNumber} lambda - shape parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 2.0, 10.0 );\n* var y = cdf( 12.0 );\n* // returns ~0.763\n*\n* y = cdf( 8.0 );\n* // returns ~0.473\n*/\nfunction factory( k, lambda ) {\n\tif (\n\t\tisnan( k ) ||\n\t\tisnan( lambda ) ||\n\t\tk <= 0.0 ||\n\t\tlambda <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a Weibull distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < 0.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn -expm1( -pow( x / lambda, k ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Weibull distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/weibull/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/weibull/cdf' );\n*\n* var y = cdf( 2.0, 1.0, 1.0 );\n* // returns ~0.865\n*\n* var myCDF = cdf.factory( 2.0, 10.0 );\n* y = myCDF( 12.0 );\n* // returns ~0.763\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MAIN //\n\nvar CDF = {};\n\nCDF[ 'arcsine' ] = require( './../../base/dists/arcsine/cdf' );\nCDF[ 'beta' ] = require( './../../base/dists/beta/cdf' );\nCDF[ 'betaprime' ] = require( './../../base/dists/betaprime/cdf' );\nCDF[ 'cauchy' ] = require( './../../base/dists/cauchy/cdf' );\nCDF[ 'chi' ] = require( './../../base/dists/chi/cdf' );\nCDF[ 'chisquare' ] = require( './../../base/dists/chisquare/cdf' );\nCDF[ 'cosine' ] = require( './../../base/dists/cosine/cdf' );\nCDF[ 'erlang' ] = require( './../../base/dists/erlang/cdf' );\nCDF[ 'exponential' ] = require( './../../base/dists/exponential/cdf' );\nCDF[ 'f' ] = require( './../../base/dists/f/cdf' );\nCDF[ 'frechet' ] = require( './../../base/dists/frechet/cdf' );\nCDF[ 'gamma' ] = require( './../../base/dists/gamma/cdf' );\nCDF[ 'gumbel' ] = require( './../../base/dists/gumbel/cdf' );\nCDF[ 'invgamma' ] = require( './../../base/dists/invgamma/cdf' );\nCDF[ 'kumaraswamy' ] = require( './../../base/dists/kumaraswamy/cdf' );\nCDF[ 'laplace' ] = require( './../../base/dists/laplace/cdf' );\nCDF[ 'levy' ] = require( './../../base/dists/levy/cdf' );\nCDF[ 'logistic' ] = require( './../../base/dists/logistic/cdf' );\nCDF[ 'lognormal' ] = require( './../../base/dists/lognormal/cdf' );\nCDF[ 'normal' ] = require( './../../base/dists/normal/cdf' );\nCDF[ 'pareto-type1' ] = require( './../../base/dists/pareto-type1/cdf' );\nCDF[ 'rayleigh' ] = require( './../../base/dists/rayleigh/cdf' );\nCDF[ 't' ] = require( './../../base/dists/t/cdf' );\nCDF[ 'triangular' ] = require( './../../base/dists/triangular/cdf' );\nCDF[ 'uniform' ] = require( './../../base/dists/uniform/cdf' );\nCDF[ 'weibull' ] = require( './../../base/dists/weibull/cdf' );\n\n\n// EXPORTS //\n\nmodule.exports = CDF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar format = require( '@stdlib/string/format' );\nvar CDF = require( './cdf.js' );\n\n\n// MAIN //\n\n/**\n* Returns the cumulative distribution function (CDF) corresponding to a provided distribution name.\n*\n* @private\n* @param {string} name - distribution name\n* @throws {Error} unsupported/unrecognized distribution name\n* @returns {Function} cumulative distribution function (CDF)\n*/\nfunction getCDF( name ) {\n\tvar cdf = CDF[ name ];\n\tif ( cdf === void 0 ) {\n\t\tthrow new Error( format( 'invalid argument. Unsupported/unrecognized distribution name. Value: `%s`.', name ) );\n\t}\n\treturn cdf;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getCDF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar roundn = require( '@stdlib/math/base/special/roundn' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Null hypothesis: the CDF of `x` is ';\n\tswitch ( this.alternative ) {\n\tcase 'two-sided':\n\tdefault:\n\t\tstr += 'equal to ';\n\t\tbreak;\n\tcase 'less':\n\t\tstr += 'greater than or equal to ';\n\t\tbreak;\n\tcase 'greater':\n\t\tstr += 'less than or equal to ';\n\t\tbreak;\n\t}\n\tstr += 'the reference CDF';\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts );\n\tstr += '\\n\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isTypedArrayLike = require( '@stdlib/assert/is-typed-array-like' );\nvar isNumber = require( '@stdlib/assert/is-number' );\nvar isNumberArray = require( '@stdlib/assert/is-number-array' ).primitives;\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar max = require( './../../base/max' );\nvar pKolmogorov1 = require( './smirnov.js' );\nvar pKolmogorov = require( './marsaglia.js' );\nvar ascending = require( './ascending.js' );\nvar subtract = require( './subtract.js' );\nvar validate = require( './validate.js' );\nvar getCDF = require( './get_cdf.js' );\nvar print = require( './print.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// FUNCTIONS //\n\nvar slice = Array.prototype.slice;\n\n\n// MAIN //\n\n/**\n* Computes a Kolmogorov-Smirnov goodness-of-fit test.\n*\n* @param {NumericArray} x - input array holding numeric values\n* @param {(Function|string)} y - either a CDF function or a string denoting the name of a distribution\n* @param {...number} [params] - distribution parameters passed to reference CDF\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {boolean} [options.sorted=false] - boolean indicating if the input array is already in sorted order\n* @param {string} [options.alternative=\"two-sided\"] - string indicating whether to conduct two-sided or one-sided hypothesis test (other options: `less`, `greater`)\n* @throws {TypeError} argument x has to be a typed array or array of numbers\n* @throws {TypeError} argument y has to be a CDF function or string\n* @throws {TypeError} options must be an object\n* @throws {TypeError} alpha option has to be a number\n* @throws {RangeError} alpha option has to be a number in the interval `[0,1]`\n* @throws {TypeError} alternative option has to be a string\n* @throws {Error} alternative option must be `two-sided`, `less` or `greater`\n* @throws {TypeError} sorted option has to be a boolean\n* @returns {Object} test result object\n*\n* @example\n* var out = kstest( [ 2.0, 1.0, 5.0, -5.0, 3.0, 0.5, 6.0 ], 'normal', 0.0, 1.0 );\n* // returns { 'pValue': ~0.015, 'statistic': ~0.556, ... }\n*/\nfunction kstest() {\n\tvar nDistParams;\n\tvar distParams;\n\tvar distArgs;\n\tvar options;\n\tvar alpha;\n\tvar opts;\n\tvar pval;\n\tvar stat;\n\tvar yVal;\n\tvar alt;\n\tvar err;\n\tvar idx;\n\tvar out;\n\tvar val;\n\tvar i;\n\tvar n;\n\tvar x;\n\tvar y;\n\n\tx = arguments[ 0 ];\n\ty = arguments[ 1 ];\n\tif ( !isNumberArray( x ) && !isTypedArrayLike( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a typed array or number array. Value: `%s`.', x ) );\n\t}\n\tif ( !isFunction( y ) && !isString( y ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be either a CDF function or a string. Value: `%s`.', y ) );\n\t}\n\tif ( isString( y ) ) {\n\t\ty = getCDF( y );\n\t}\n\tnDistParams = y.length - 1.0;\n\tn = x.length;\n\n\tdistParams = new Array( nDistParams );\n\tfor ( i = 0; i < nDistParams; i++ ) {\n\t\tidx = i + 2;\n\t\tval = arguments[ idx ];\n\t\tif ( !isNumber( val ) || isnan( val ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Distribution parameter must be a number. Value: `%s`.', val ) );\n\t\t}\n\t\tdistParams[ i ] = arguments[ idx ];\n\t}\n\topts = {};\n\tif ( arguments.length > 2 + nDistParams ) {\n\t\toptions = arguments[ 2 + nDistParams ];\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\t// Make a copy to prevent mutation of x:\n\tx = slice.call( x );\n\n\tif ( opts.alpha === void 0 ) {\n\t\talpha = 0.05;\n\t} else {\n\t\talpha = opts.alpha;\n\t}\n\tif ( alpha < 0.0 || alpha > 1.0 ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.', 'alpha', alpha ) );\n\t}\n\n\t// Input data has to be sorted:\n\tif ( opts.sorted !== true ) {\n\t\tx.sort( ascending );\n\t}\n\tdistArgs = [ null ].concat( distParams );\n\tfor ( i = 0; i < n; i++ ) {\n\t\tdistArgs[ 0 ] = x[ i ];\n\t\tyVal = y.apply( null, distArgs );\n\t\tx[ i ] = yVal - ( i / n );\n\t}\n\n\talt = opts.alternative || 'two-sided';\n\tswitch ( alt ) {\n\tcase 'two-sided':\n\t\tstat = max( n, [ max( n, x, 1 ), max( n, subtract( 1/n, x ), 1 ) ], 1 );\n\t\tbreak;\n\tcase 'greater':\n\t\tstat = max( n, subtract( 1/n, x ), 1 );\n\t\tbreak;\n\tcase 'less':\n\t\tstat = max( n, x, 1 );\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'alternative', [ 'two-sided', 'less', 'greater' ].join( '\", \"' ), alt ) );\n\t}\n\tif ( alt === 'two-sided' ) {\n\t\tpval = 1.0 - pKolmogorov( stat, n );\n\t} else {\n\t\tpval = 1.0 - pKolmogorov1( stat, n );\n\t}\n\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= alpha );\n\tsetReadOnly( out, 'alpha', alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'method', 'Kolmogorov-Smirnov goodness-of-fit test' );\n\tsetReadOnly( out, 'print', print );\n\tsetReadOnly( out, 'alternative', alt );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = kstest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a Kolmogorov-Smirnov goodness-of-fit test.\n*\n* @module @stdlib/stats/kstest\n*\n* @example\n* var generator = require( '@stdlib/random/base/normal' ).factory;\n* var kstest = require( '@stdlib/stats/kstest' );\n*\n* var rnorm;\n* var out;\n* var i;\n* var x;\n*\n* // Values drawn from a Normal(3,1) distribution\n* rnorm = generator( 3.0, 1.0, {\n*     'seed': 293\n* });\n* x = new Array( 100 );\n* for ( i = 0; i < 100; i++ ) {\n*     x[ i ] = rnorm();\n* }\n*\n* // Test against N(0,1)\n* out = kstest( x, 'normal', 0.0, 1.0 );\n* // returns { pValue: 0, statistic: ~0.901, ... }\n*\n* // Test against N(3,1)\n* out = kstest( x, 'normal', 3.0, 1.0 );\n* // returns { pValue: ~0.234, statistic: ~0.102, ... }\n*/\n\n// MODULES //\n\nvar kstest = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = kstest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar incrmean = require( './../../incr/mean' );\nvar abs = require( '@stdlib/math/base/special/abs' );\n\n\n// MAIN //\n\n/**\n* Calculates the absolute difference of the values and the respective group means for the elements of a numeric array.\n*\n* @private\n* @param {Array} x - input array\n* @param {Array} groups - array of group labels\n* @param {Array} levels - array of distinct group levels\n* @returns {Array} array of absolute centered values\n*\n* @example\n* var x = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ];\n* var groups = [ 'a', 'b', 'a', 'a', 'b', 'b', 'a', 'a', 'b', 'b' ];\n* var levels = [ 'a', 'b' ];\n* var out = absMeanDiff( x, groups, levels );\n* // returns [ ~3.6, 4.4, ..., ~3.6 ]\n*/\nfunction absMeanDiff( x, groups, levels ) {\n\tvar accumulators = {};\n\tvar means = {};\n\tvar len = x.length;\n\tvar out = [];\n\tvar i;\n\tfor ( i = 0; i < levels.length; i++ ) {\n\t\taccumulators[ levels[ i ] ] = incrmean();\n\t}\n\tfor ( i = 0; i < len; i++ ) {\n\t\taccumulators[ groups[ i ] ]( x[ i ] );\n\t}\n\tfor ( i = 0; i < levels.length; i++ ) {\n\t\tmeans[ levels[ i ] ] = accumulators[ levels[ i ] ]();\n\t}\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout.push( abs( x[ i ] - means[ groups[ i ] ] ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = absMeanDiff;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( '@stdlib/assert/is-array' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {Array} [options.groups] - array of group indicators\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'groups' ) ) {\n\t\topts.groups = options.groups;\n\t\tif ( !isArray( opts.groups ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an array. Option: `%s`.', 'groups', opts.groups ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Comparator function to sort values in ascending order.\n*\n* @private\n* @param {number} a - first value\n* @param {number} b - second value\n* @returns {number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n}\n\n\n// MAIN //\n\n/**\n* Removes duplicate values from a numeric array.\n*\n* @private\n* @param {NumberArray} arr - array to be deduped\n* @returns {NumberArray} deduped array\n*/\nfunction unique( arr ) {\n\tvar len;\n\tvar val;\n\tvar i;\n\tvar j;\n\n\tarr = arr.slice();\n\tarr.sort( ascending );\n\tlen = arr.length;\n\n\t// Loop through the array, only incrementing a pointer when successive values are different. When a succeeding value is different, move the pointer and set the next value. In the trivial case where all array elements are unique, we incur a slight penalty in resetting the element value for each unique value. In other cases, we simply move a unique value to a new position in the array. The end result is a sorted array with unique values.\n\tfor ( i = 1, j = 0; i < len; i++ ) {\n\t\tval = arr[ i ];\n\t\tif ( arr[ j ] !== val ) {\n\t\t\tj += 1;\n\t\t\tarr[ j ] = val;\n\t\t}\n\t}\n\t// Truncate the array:\n\tarr.length = j + 1;\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = unique;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar roundn = require( '@stdlib/math/base/special/roundn' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Pretty-prints test output.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Null hypothesis: The variances in all groups are the same.';\n\tstr += '\\n\\n';\n\tstr += '    df 1: ' + roundn( this.df[ 0 ], -dgts ) + '\\n';\n\tstr += '    df 2: ' + roundn( this.df[ 1 ], -dgts ) + '\\n';\n\tstr += '    F score: ' + roundn( this.statistic, -dgts ) + '\\n';\n\tstr += '    P Value: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar format = require( '@stdlib/string/format' );\nvar anova1 = require( './../../anova1' );\nvar absMeanDiff = require( './absdiff.js' );\nvar validate = require( './validate.js' );\nvar unique = require( './unique.js' );\nvar print = require( './print.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Computes Levene's test for equal variances.\n*\n* @param {...NumericArray} arguments - either two or more number arrays or a single numeric array if provided an array of group indicators\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {Array} [options.groups] - array of group indicators\n* @throws {TypeError} must provide array-like arguments\n* @throws {RangeError} alpha option must be a number on the interval `[0,1]`\n* @throws {Error} must provide at least two array-like arguments if `groups` is not provided\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Object} test results\n*\n* @example\n* // Data from Hollander & Wolfe (1973), p. 116:\n* var x = [ 2.9, 3.0, 2.5, 2.6, 3.2 ];\n* var y = [ 3.8, 2.7, 4.0, 2.4 ];\n* var z = [ 2.8, 3.4, 3.7, 2.2, 2.0 ];\n*\n* var out = levene( x, y, z );\n* // returns {...}\n*/\nfunction levene() {\n\tvar options;\n\tvar result;\n\tvar groups;\n\tvar levels;\n\tvar args;\n\tvar opts;\n\tvar arg;\n\tvar err;\n\tvar out;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\tk = arguments.length;\n\targs = [];\n\topts = {};\n\tif ( isPlainObject( arguments[ k-1 ] ) ) {\n\t\toptions = arguments[ k-1 ];\n\t\tk -= 1;\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t} else {\n\t\toptions = {};\n\t}\n\tif ( opts.groups ) {\n\t\targs = arguments[ 0 ];\n\t\tgroups = opts.groups;\n\t\tlevels = unique( groups );\n\t\tk = levels.length;\n\t\tif ( k < 2 ) {\n\t\t\tthrow new Error( format( 'invalid option. `%s` option must contain at least two unique elements. Value: `%s`.', 'groups', levels ) );\n\t\t}\n\t} else {\n\t\tgroups = [];\n\t\targs = [];\n\t\tlevels = [];\n\t\tfor ( i = 0; i < k; i++ ) {\n\t\t\targ = arguments[ i ];\n\t\t\tif ( arg.length === 0 ) {\n\t\t\t\tthrow new Error( format( 'invalid argument. Provided arrays cannot be empty. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t\targs = args.concat( arg );\n\t\t\tfor ( j = 0; j < arg.length; j++ ) {\n\t\t\t\tgroups.push( i );\n\t\t\t}\n\t\t\tlevels.push( i );\n\t\t}\n\t}\n\targs = absMeanDiff( args, groups, levels );\n\tresult = anova1( args, groups, options );\n\tout = {};\n\tsetReadOnly( out, 'rejected', result.rejected );\n\tsetReadOnly( out, 'alpha', result.alpha );\n\tsetReadOnly( out, 'pValue', result.pValue );\n\tsetReadOnly( out, 'statistic', result.statistic );\n\tsetReadOnly( out, 'df', [ result.treatment.df, result.error.df ] );\n\tsetReadOnly( out, 'method', 'Levene\\'s test for Homogeneity of Variance' );\n\tsetReadOnly( out, 'print', print );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = levene;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute Levene's test for equal variances.\n*\n* @module @stdlib/stats/levene-test\n*\n* @example\n* var leveneTest = require( '@stdlib/stats/levene-test' );\n*\n* // Data from Hollander & Wolfe (1973), p. 116:\n* var x = [ 2.9, 3.0, 2.5, 2.6, 3.2 ];\n* var y = [ 3.8, 2.7, 4.0, 2.4 ];\n* var z = [ 2.8, 3.4, 3.7, 2.2, 2.0 ];\n*\n* var out = leveneTest( x, y, z );\n* // returns {...}\n*/\n\n// MODULES //\n\nvar leveneTest = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = leveneTest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Computes the range of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} range\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = range( N, x, 1 );\n* // returns 4.0\n*/\nfunction range( N, x, stride ) {\n\tvar max;\n\tvar min;\n\tvar ix;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\tif ( isnan( x[ 0 ] ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn 0.0;\n\t}\n\tif ( stride < 0 ) {\n\t\tix = (1-N) * stride;\n\t} else {\n\t\tix = 0;\n\t}\n\tmin = x[ ix ];\n\tmax = min;\n\tfor ( i = 1; i < N; i++ ) {\n\t\tix += stride;\n\t\tv = x[ ix ];\n\t\tif ( isnan( v ) ) {\n\t\t\treturn v;\n\t\t}\n\t\tif ( v < min ) {\n\t\t\tmin = v;\n\t\t} else if ( v > max ) {\n\t\t\tmax = v;\n\t\t}\n\t}\n\treturn max - min;\n}\n\n\n// EXPORTS //\n\nmodule.exports = range;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Computes the range of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} range\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = range( N, x, 2, 1 );\n* // returns 6.0\n*/\nfunction range( N, x, stride, offset ) {\n\tvar max;\n\tvar min;\n\tvar ix;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\tif ( isnan( x[ offset ] ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn 0.0;\n\t}\n\tix = offset;\n\tmin = x[ ix ];\n\tmax = min;\n\tfor ( i = 1; i < N; i++ ) {\n\t\tix += stride;\n\t\tv = x[ ix ];\n\t\tif ( isnan( v ) ) {\n\t\t\treturn v;\n\t\t}\n\t\tif ( v < min ) {\n\t\t\tmin = v;\n\t\t} else if ( v > max ) {\n\t\t\tmax = v;\n\t\t}\n\t}\n\treturn max - min;\n}\n\n\n// EXPORTS //\n\nmodule.exports = range;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar range = require( './range.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( range, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = range;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the range of a strided array.\n*\n* @module @stdlib/stats/base/range\n*\n* @example\n* var range = require( '@stdlib/stats/base/range' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = range( N, x, 1 );\n* // returns 4.0\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n* var range = require( '@stdlib/stats/base/range' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = range.ndarray( N, x, 2, 1 );\n* // returns 6.0\n*/\n\n// MODULES //\n\nvar range = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = range;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Calculates the fitted value `ys` for a value `xs` on the horizontal axis.\n*\n* ## Method\n*\n* -   The smoothed value for the x-axis value at the current index is computed using a (robust) locally weighted regression of degree one.  The tricube weight function is used with `h` equal to the maximum of `xs - x[ nleft ]` and `x[ nright ] - xs`.\n*\n* ## References\n*\n* -   Cleveland, William S. 1979. \"Robust Locally and Smoothing Weighted Regression Scatterplots.\" _Journal of the American Statistical Association_ 74 (368): 829–36. doi:[10.1080/01621459.1979.10481038](https://doi.org/10.1080/01621459.1979.10481038).\n* -   Cleveland, William S. 1981. \"Lowess: A program for smoothing scatterplots by robust locally weighted regression.\" _American Statistician_ 35 (1): 54–55. doi:[10.2307/2683591](https://doi.org/10.2307/2683591).\n*\n* @private\n* @param {NumericArray} x - ordered x-axis values (abscissa values)\n* @param {NumericArray} y - corresponding y-axis values (ordinate values)\n* @param {PositiveInteger} n - number of observations\n* @param {NonNegativeInteger} i - current index\n* @param {NonNegativeInteger} nleft - index of the first point used in computing the fitted value\n* @param {NonNegativeInteger} nright - index of the last point used in computing the fitted value\n* @param {ProbabilityArray} w - weights at indices from `nleft` to `nright` to be used in the calculation of the fitted value\n* @param {boolean} userw - boolean indicating whether a robust fit is carried out using the weights in `rw`\n* @param {ProbabilityArray} rw - robustness weights\n* @returns {number} fitted value\n*/\nfunction lowest( x, y, n, i, nleft, nright, w, userw, rw ) {\n\tvar range;\n\tvar nrt;\n\tvar h1;\n\tvar h9;\n\tvar xs;\n\tvar ys;\n\tvar h;\n\tvar a;\n\tvar b;\n\tvar c;\n\tvar r;\n\tvar j;\n\n\txs = x[ i ];\n\trange = x[ n - 1 ] - x[ 0 ];\n\th = max( xs - x[ nleft ], x[ nright ] - xs );\n\th9 = 0.999 * h;\n\th1 = 0.001 * h;\n\n\t// Compute weights (pick up all ties on right):\n\ta = 0.0; // sum of weights\n\tfor ( j = nleft; j < n; j++ ) {\n\t\tw[ j ] = 0.0;\n\t\tr = abs( x[ j ] - xs );\n\t\tif ( r <= h9 ) { // small enough for non-zero weight\n\t\t\tif ( r > h1 ) {\n\t\t\t\tw[ j ] = pow( 1.0-pow( r/h, 3.0 ), 3.0 );\n\t\t\t} else {\n\t\t\t\tw[ j ] = 1.0;\n\t\t\t}\n\t\t\tif ( userw ) {\n\t\t\t\tw[ j ] *= rw[ j ];\n\t\t\t}\n\t\t\ta += w[ j ];\n\t\t}\n\t\telse if ( x[ j ] > xs ) {\n\t\t\tbreak; // get out at first zero weight on right\n\t\t}\n\t}\n\tnrt = j - 1; // rightmost point (may be greater than `nright` because of ties)\n\tif ( a <= 0.0 ) {\n\t\treturn y[ i ];\n\t}\n\n\t// Make sum of weights equal to one:\n\tfor ( j = nleft; j <= nrt; j++ ) {\n\t\tw[ j ] /= a;\n\t}\n\n\tif ( h > 0.0 ) { // use linear fit\n\t\t// Find weighted center of x values:\n\t\ta = 0.0;\n\t\tfor ( j = nleft; j <= nrt; j++ ) {\n\t\t\ta += w[ j ] * x[ j ];\n\t\t}\n\t\tb = xs - a;\n\t\tc = 0.0;\n\t\tfor ( j = nleft; j <= nrt; j++ ) {\n\t\t\tc += w[ j ] * pow( x[ j ] - a, 2.0 );\n\t\t}\n\t\tif ( sqrt( c ) > 0.001 * range ) {\n\t\t\t// Points are spread out enough to compute slope:\n\t\t\tb /= c;\n\t\t\tfor ( j = nleft; j <= nrt; j++ ) {\n\t\t\t\tw[ j ] *= ( 1.0 + ( b*(x[j]-a) ) );\n\t\t\t}\n\t\t}\n\t}\n\tys = 0.0;\n\tfor ( j = nleft; j <= nrt; j++ ) {\n\t\tys += w[ j ] * y[ j ];\n\t}\n\treturn ys;\n}\n\n\n// EXPORTS //\n\nmodule.exports = lowest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar lowest = require( './lowest.js' );\n\n\n// FUNCTIONS //\n\n/**\n* Comparator function used to sort values in ascending order.\n*\n* @private\n* @param {number} a - first value\n* @param {number} b - second value\n* @returns {number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n}\n\n\n// MAIN //\n\n/**\n* Locally-weighted polynomial regression via the LOWESS algorithm.\n*\n* ## Method\n*\n* -   Calculates fitted values using a nearest neighbor function and robust locally weighted regression of degree one with the tricube weight function.\n*\n* ## References\n*\n* -   Cleveland, William S. 1979. \"Robust Locally and Smoothing Weighted Regression Scatterplots.\" _Journal of the American Statistical Association_ 74 (368): 829–36. doi:[10.1080/01621459.1979.10481038](https://doi.org/10.1080/01621459.1979.10481038).\n* -   Cleveland, William S. 1981. \"Lowess: A program for smoothing scatterplots by robust locally weighted regression.\" _American Statistician_ 35 (1): 54–55. doi:[10.2307/2683591](https://doi.org/10.2307/2683591).\n*\n* @private\n* @param {NumericArray} x - ordered x-axis values (abscissa values)\n* @param {NumericArray} y - corresponding y-axis values (ordinate values)\n* @param {PositiveInteger} n - number of observations\n* @param {PositiveNumber} f - smoother span (proportion of points which influence smoothing at each value)\n* @param {NonNegativeInteger} nsteps - number of iterations in the robust fit\n* @param {PositiveNumber} delta - nonnegative parameter which may be used to reduce the number of computations\n* @returns {Object} sorted x-values and fitted values\n*/\nfunction lowess( x, y, n, f, nsteps, delta ) {\n\tvar nright;\n\tvar denom;\n\tvar nleft;\n\tvar alpha;\n\tvar cmad;\n\tvar iter;\n\tvar last;\n\tvar cut;\n\tvar res;\n\tvar m1;\n\tvar m2;\n\tvar ns;\n\tvar c1;\n\tvar c9;\n\tvar d1;\n\tvar d2;\n\tvar rw;\n\tvar ys;\n\tvar i;\n\tvar j;\n\tvar r;\n\n\tif ( n < 2 ) {\n\t\treturn y;\n\t}\n\tys = new Array( n );\n\tres = new Array( n );\n\trw = new Array( n );\n\n\t// Use at least two and at most n points:\n\tns = max( min( floor( f * n ), n ), 2 );\n\n\t// Robustness iterations:\n\tfor ( iter = 1; iter <= nsteps + 1; iter++ ) {\n\t\tnleft = 0;\n\t\tnright = ns - 1;\n\t\tlast = -1; // index of previously estimated point\n\t\ti = 0; // index of current point\n\t\tdo {\n\t\t\twhile ( nright < n - 1 ) {\n\t\t\t\t// Move nleft, nright to the right if radius decreases:\n\t\t\t\td1 = x[ i ] - x[ nleft ];\n\t\t\t\td2 = x[ nright + 1 ] - x[ i ];\n\n\t\t\t\t// If d1 <= d2 with x[nright+1] == x[nright], lowest fixes:\n\t\t\t\tif ( d1 <= d2 ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Radius will not decrease by a move to the right...\n\t\t\t\tnleft += 1;\n\t\t\t\tnright += 1;\n\t\t\t}\n\t\t\t// Fitted value at x[ i ]:\n\t\t\tys[ i ] = lowest( x, y, n, i, nleft, nright, res, (iter > 1), rw );\n\n\t\t\tif ( last < i - 1 ) {\n\t\t\t\tdenom = x[ i ] - x[ last ];\n\t\t\t\tfor ( j = last + 1; j < i; j++ ) {\n\t\t\t\t\talpha = ( x[ j ] - x[ last ] ) / denom;\n\t\t\t\t\tys[ j ] = ( alpha*ys[ i ] ) + ( (1.0-alpha) * ys[ last ] );\n\t\t\t\t}\n\t\t\t}\n\t\t\tlast = i;\n\t\t\tcut = x[ last ] + delta;\n\t\t\tfor ( i = last + 1; i < n; i++ ) {\n\t\t\t\tif ( x[ i ] > cut ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( x[ i ] === x[ last ] ) {\n\t\t\t\t\tys[ i ] = ys[ last ];\n\t\t\t\t\tlast = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\ti = max( last + 1, i - 1 );\n\t\t} while ( last < n - 1 );\n\n\t\t// Calculate Residuals:\n\t\tfor ( i = 0; i < n; i++ ) {\n\t\t\tres[ i ] = y[ i ] - ys[ i ];\n\t\t}\n\t\tif ( iter > nsteps ) {\n\t\t\tbreak; // Compute robustness weights except last time...\n\t\t}\n\t\tfor ( i = 0; i < n; i++ ) {\n\t\t\trw[i] = abs( res[i] );\n\t\t}\n\t\trw.sort( ascending );\n\t\tm1 = floor( n / 2.0 );\n\t\tm2 = n - m1 - 1.0;\n\t\tcmad = 3.0 * ( rw[m1] + rw[m2] );\n\t\tc9 = 0.999 * cmad;\n\t\tc1 = 0.001 * cmad;\n\t\tfor ( i = 0; i < n; i++ ) {\n\t\t\tr = abs( res[i] );\n\t\t\tif ( r <= c1 ) {\n\t\t\t\trw[ i ] = 1.0; // near 0, avoid underflow\n\t\t\t}\n\t\t\telse if ( r > c9 ) {\n\t\t\t\trw[ i ] = 0.0;  // near 1, avoid underflow\n\t\t\t}\n\t\t\telse {\n\t\t\t\trw[ i ] = pow( 1.0 - pow( r / cmad, 2.0 ), 2.0 );\n\t\t\t}\n\t\t}\n\t}\n\treturn {\n\t\t'x': x,\n\t\t'y': ys\n\t};\n}\n\n\n// EXPORTS //\n\nmodule.exports = lowess;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isPositiveNumber = require( '@stdlib/assert/is-positive-number' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isNonNegativeNumber = require( '@stdlib/assert/is-nonnegative-number' ).isPrimitive;\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {Probability} [options.f] - smoother span (proportion of points which influence smoothing at each value)\n* @param {NonNegativeInteger} [options.nsteps] - number of iterations in the robust fit\n* @param {NonNegativeNumber} [options.delta] - nonnegative parameter which may be used to save computations\n* @param {boolean} [options.sorted] - boolean indicating if the input array is in sorted order\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'f': 0.75,\n*     'nsteps': 6,\n*     'delta': 0.03,\n*     'sorted': true\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'f' ) ) {\n\t\topts.f = options.f;\n\t\tif ( !isPositiveNumber( opts.f ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'f', opts.f ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'nsteps' ) ) {\n\t\topts.nsteps = options.nsteps;\n\t\tif ( !isNonNegativeInteger( opts.nsteps ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'nsteps', opts.nsteps ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'delta' ) ) {\n\t\topts.delta = options.delta;\n\t\tif ( !isNonNegativeNumber( opts.delta ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative number. Option: `%s`.', 'delta', opts.delta ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'sorted' ) ) {\n\t\topts.sorted = options.sorted;\n\t\tif ( !isBoolean( opts.sorted ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'sorted', opts.sorted ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumberArray = require( '@stdlib/assert/is-number-array' ).primitives;\nvar isTypedArrayLike = require( '@stdlib/assert/is-typed-array-like' );\nvar range = require( './../../base/range' );\nvar format = require( '@stdlib/string/format' );\nvar lowess = require( './lowess.js' );\nvar validate = require( './validate.js' );\n\n\n// FUNCTIONS //\n\n/**\n* Comparator function used to sort (x,y)-pairs in ascending order by the first coordinate.\n*\n* @private\n* @param {Array} a - first pair\n* @param {Array} b - second pair\n* @returns {number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a[ 0 ] - b[ 0 ];\n}\n\n\n// MAIN //\n\n/**\n* Locally-weighted polynomial regression via the LOWESS algorithm.\n*\n* ## References\n*\n* -   Cleveland, William S. 1979. \"Robust Locally and Smoothing Weighted Regression Scatterplots.\" _Journal of the American Statistical Association_ 74 (368): 829–36. doi:[10.1080/01621459.1979.10481038](https://doi.org/10.1080/01621459.1979.10481038).\n* -   Cleveland, William S. 1981. \"Lowess: A program for smoothing scatterplots by robust locally weighted regression.\" _American Statistician_ 35 (1): 54–55. doi:[10.2307/2683591](https://doi.org/10.2307/2683591).\n*\n* @param {NumericArray} x - ordered x-axis values (abscissa values)\n* @param {NumericArray} y - corresponding y-axis values (ordinate values)\n* @param {Options} options - function options\n* @param {PositiveNumber} [options.f=2/3] - smoother span (proportion of points which influence smoothing at each value)\n* @param {integer} [options.nsteps=3] - number of iterations in the robust fit (fewer iterations translates to faster function execution)\n* @param {NonNegativeNumber} [options.delta] - nonnegative parameter which may be used to reduce the number of computations\n* @param {boolean} [options.sorted=false] - boolean indicating if the input array `x` is already in sorted order\n* @throws {TypeError} first argument must be a numeric array\n* @throws {TypeError} second argument must be a numeric array\n* @throws {RangeError} first and second arguments must have the same length\n* @returns {Object} ordered x-values and fitted values\n*/\nfunction main( x, y, options ) {\n\tvar nsteps;\n\tvar delta;\n\tvar opts;\n\tvar err;\n\tvar xy;\n\tvar f;\n\tvar i;\n\tvar n;\n\tvar r;\n\n\tif ( !isTypedArrayLike( x ) && !isNumberArray( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a numeric array. Value: `%s`.', x ) );\n\t}\n\tif ( !isTypedArrayLike( y ) && !isNumberArray( y ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a numeric array. Value: `%s`.', y ) );\n\t}\n\tn = x.length;\n\tif ( y.length !== n ) {\n\t\tthrow new RangeError( 'invalid arguments. First and second arguments must have the same length.' );\n\t}\n\topts = {};\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\t// Input data has to be sorted:\n\tif ( opts.sorted !== true ) {\n\t\t// Copy to prevent mutation and sort by x:\n\t\txy = new Array( n );\n\t\tfor ( i = 0; i < n; i++ ) {\n\t\t\txy[ i ] = [ x[ i ], y[ i ] ];\n\t\t}\n\t\txy.sort( ascending ); // TODO: Revisit once we have function for sorting multiple arrays by the elements of one of the arrays\n\t\tx = new Array( n );\n\t\ty = new Array( n );\n\t\tfor ( i = 0; i < n; i++ ) {\n\t\t\tx[ i ] = xy[ i ][ 0 ];\n\t\t\ty[ i ] = xy[ i ][ 1 ];\n\t\t}\n\t}\n\tif ( opts.nsteps === void 0 ) {\n\t\tnsteps = 3;\n\t} else {\n\t\tnsteps = opts.nsteps;\n\t}\n\tif ( opts.f === void 0 ) {\n\t\tf = 2.0/3.0;\n\t} else {\n\t\tf = opts.f;\n\t}\n\tif ( opts.delta === void 0 ) {\n\t\tr = range( n, x, 1 );\n\t\tdelta = 0.01 * r;\n\t} else {\n\t\tdelta = opts.delta;\n\t}\n\treturn lowess( x, y, n, f, nsteps, delta );\n}\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Locally-weighted polynomial regression via the LOWESS algorithm.\n*\n* @module @stdlib/stats/lowess\n*\n* @example\n* var lowess = require( '@stdlib/stats/lowess' );\n*\n* var x = [\n*     4, 4, 7, 7, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14,\n*     14, 14, 14, 15, 15, 15, 16, 16, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 20,\n*     20, 20, 20, 20, 22, 23, 24, 24, 24, 24, 25\n* ];\n* var y = [\n*     2, 10, 4, 22, 16, 10, 18, 26, 34, 17, 28, 14, 20, 24, 28, 26, 34, 34, 46,\n*     26, 36, 60, 80, 20, 26, 54, 32, 40, 32, 40, 50, 42, 56, 76, 84, 36, 46, 68,\n*     32, 48, 52, 56, 64, 66, 54, 70, 92, 93, 120, 85\n* ];\n*\n* var out = lowess( x, y );\n* /* returns\n*     {\n*         'x': [\n*             4,\n*             4,\n*             7,\n*             7,\n*             ...,\n*             24,\n*             24,\n*             24,\n*             25\n*         ],\n*         'y': [\n*             ~4.857,\n*             ~4.857,\n*             ~13.1037,\n*             ~13.1037,\n*             ...,\n*             ~79.102,\n*             ~79.102,\n*             ~79.102,\n*             ~84.825\n*         ]\n*     }\n* *\\/\n*/\n\n// MODULES //\n\nvar lowess = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = lowess;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a value which is a probability.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a value which is a probability\n*\n* @example\n* var bool = isProbability( 0.66 );\n* // returns true\n*\n* @example\n* var bool = isProbability( new Number( 0.66 ) );\n* // returns false\n*/\nfunction isProbability( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue >= 0.0 &&\n\t\tvalue <= 1.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isProbability;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value which is a probability.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value which is a probability\n*\n* @example\n* var bool = isProbability( 0.5 );\n* // returns false\n*\n* @example\n* var bool = isProbability( new Number( 0.5 ) );\n* // returns true\n*/\nfunction isProbability( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue.valueOf() >= 0.0 &&\n\t\tvalue.valueOf() <= 1.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isProbability;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a probability.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a probability\n*\n* @example\n* var bool = isProbability( 0.5 );\n* // returns true\n*\n* @example\n* var bool = isProbability( new Number( 0.5 ) );\n* // returns true\n*\n* @example\n* var bool = isProbability( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isProbability( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isProbability( null );\n* // returns false\n*/\nfunction isProbability( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isProbability;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a probability.\n*\n* @module @stdlib/assert/is-probability\n*\n* @example\n* var isProbability = require( '@stdlib/assert/is-probability' );\n*\n* var bool = isProbability( 0.5 );\n* // returns true\n*\n* bool = isProbability( new Number( 0.5 ) );\n* // returns true\n*\n* bool = isProbability( 3.14 );\n* // returns false\n*\n* bool = isProbability( -5.0 );\n* // returns false\n*\n* bool = isProbability( null );\n* // returns false\n*\n* @example\n* var isProbability = require( '@stdlib/assert/is-probability' ).isPrimitive;\n*\n* var bool = isProbability( 0.3 );\n* // returns true\n*\n* bool = isProbability( new Number( 0.3 ) );\n* // returns false\n*\n* @example\n* var isProbability = require( '@stdlib/assert/is-probability' ).isObject;\n*\n* var bool = isProbability( 0.77 );\n* // returns false\n*\n* bool = isProbability( new Number( 0.77 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isProbability = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isProbability, 'isPrimitive', isPrimitive );\nsetReadOnly( isProbability, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isProbability;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only probabilities.\n*\n* @module @stdlib/assert/is-probability-array\n*\n* @example\n* var isNonNegativeNumberArray = require( '@stdlib/assert/is-probability-array' );\n*\n* var bool = isProbabilityArray( [ 0.5, new Number(0.8) ] );\n* // returns true\n*\n* bool = isProbabilityArray( [ 0.8, 1.2 ] );\n* // returns false\n*\n* bool = isProbabilityArray( [ 0.8, '0.2' ] );\n* // returns false\n*\n* @example\n* var isProbabilityArray = require( '@stdlib/assert/is-probability-array' ).primitives;\n*\n* var bool = isProbabilityArray( [ 1.0, 0.0, 0.5 ] );\n* // returns true\n*\n* bool = isProbabilityArray( [ 0.3, new Number(0.4) ] );\n* // returns false\n*\n* @example\n* var isProbabilityArray = require( '@stdlib/assert/is-probability-array' ).objects;\n*\n* var bool = isProbabilityArray( [ new Number(0.7), new Number(1.0) ] );\n* // returns true\n*\n* bool = isProbabilityArray( [ 1.0, 0.0, new Number(0.7) ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isProbability = require( './../../is-probability' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\n\n\n// MAIN //\n\nvar isProbabilityArray = arrayfun( isProbability );\nsetReadOnly( isProbabilityArray, 'primitives', arrayfun( isProbability.isPrimitive ) );\nsetReadOnly( isProbabilityArray, 'objects', arrayfun( isProbability.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isProbabilityArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adjusts the p-values via the Bonferroni method.\n*\n* @private\n* @param {ProbabilityArray} pvalues - p-values to be adjusted\n* @param {PositiveInteger} comparisons - number of comparisons\n* @returns {ProbabilityArray} adjusted p-values\n*/\nfunction bonferroni( pvalues, comparisons ) {\n\tvar pval;\n\tvar i;\n\tfor ( i = 0; i < pvalues.length; i++ ) {\n\t\tpval = pvalues[ i ];\n\t\tpvalues[ i ] = ( comparisons * pval > 1 ) ? 1 : comparisons * pval;\n\t}\n\treturn pvalues;\n}\n\n\n// EXPORTS //\n\nmodule.exports = bonferroni;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Int32Array = require( '@stdlib/array/int32' );\n\n\n// FUNCTIONS //\n\n/**\n* Returns a comparison result. If `-1`, `a` comes before `b`. If `1`, `b` comes before `a`. If `0`, the order stays the same.\n*\n* @private\n* @param {number} a - first number\n* @param {number} b - second number\n* @returns {boolean} comparison result\n*/\nfunction ascending( a, b ) {\n\tif ( a < b ) {\n\t\treturn -1;\n\t}\n\tif ( a > b ) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\n/**\n* Returns a comparison result. If `-1`, `a` comes before `b`. If `1`, `b` comes before `a`. If `0`, the order stays the same.\n*\n* @private\n* @param {number} a - first number\n* @param {number} b - second number\n* @returns {boolean} comparison result\n*/\nfunction descending( a, b ) {\n\tif ( a < b ) {\n\t\treturn 1;\n\t}\n\tif ( a > b ) {\n\t\treturn -1;\n\t}\n\treturn 0;\n}\n\n\n// MAIN //\n\n/**\n* Returns a permutation which rearranges input array.\n*\n* @private\n* @param {ArrayLike} x - input array-like object\n* @param {boolean} invert - controls whether to permutation that sorts input array in descending order\n* @returns {Array} permutation array\n*/\nfunction order( x, invert ) {\n\tvar comparator;\n\tvar arr;\n\tvar i;\n\n\tcomparator = ( invert ) ? descending : ascending;\n\tarr = new Int32Array( x.length );\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tarr[ i ] = i;\n\t}\n\treturn arr.sort( compare );\n\n\t/**\n\t* Compare the elements of the input array.\n\t*\n\t* @private\n\t* @param {number} a - first number\n\t* @param {number} b - second number\n\t* @returns {boolean} comparison result\n\t*/\n\tfunction compare( a, b ) {\n\t\treturn comparator( x[a], x[b] );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = order;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar min = require( '@stdlib/math/base/special/min' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar order = require( './order.js' );\n\n\n// VARIABLES //\n\nvar slice = Array.prototype.slice;\n\n\n// MAIN //\n\n/**\n* Adjusts the p-values via Hommel's method.\n*\n* @private\n* @param {ProbabilityArray} pvalues - p-values to be adjusted\n* @param {PositiveInteger} comparisons - number of comparisons\n* @returns {ProbabilityArray} adjusted p-values\n*/\nfunction hommel( pvalues, comparisons ) {\n\tvar indices;\n\tvar diff;\n\tvar adj;\n\tvar idx;\n\tvar len;\n\tvar out;\n\tvar mq;\n\tvar m;\n\tvar i;\n\tvar j;\n\tvar k;\n\tvar q;\n\tvar v;\n\n\tlen = pvalues.length;\n\tdiff = comparisons - len;\n\tif ( diff > 0 ) {\n\t\tpvalues = slice.call( pvalues );\n\t\twhile ( diff > 0 ) {\n\t\t\tpvalues.push( 1.0 );\n\t\t\tdiff -= 1;\n\t\t}\n\t}\n\tindices = order( pvalues );\n\tm = PINF;\n\tfor ( i = 0; i < comparisons; i++ ) {\n\t\tv = comparisons * pvalues[ i ] / ( i+1 );\n\t\tif ( v < m ) {\n\t\t\tm = v;\n\t\t}\n\t}\n\tq = new Float64Array( comparisons );\n\tadj = new Float64Array( comparisons );\n\tfor ( i = comparisons - 1; i > 1; i-- ) {\n\t\tmq = PINF;\n\t\tfor ( k = comparisons - i + 1; k <= comparisons; k++ ) {\n\t\t\tv = i * pvalues[ indices[ k ] ] / ( 2 + k - comparisons + i - 1 );\n\t\t\tif ( v < mq ) {\n\t\t\t\tmq = v;\n\t\t\t}\n\t\t}\n\t\tfor ( j = 0; j < comparisons - i + 1; j++ ) {\n\t\t\tq[ j ] = min( i * pvalues[ indices[ j ] ], mq );\n\t\t}\n\t\tfor ( k = comparisons - i + 1; k <= comparisons; k++ ) {\n\t\t\tq[ k ] = q[ comparisons - i ];\n\t\t}\n\t\tfor ( j = 0; j < adj.length; j++ ) {\n\t\t\tadj[ j ] = max( q[ j ], adj[ j ] );\n\t\t}\n\t}\n\tout = new Array( len );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tidx = indices[ i ];\n\t\tv = max( adj[ i ], pvalues[ idx ] );\n\t\tout[ idx ] = v;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hommel;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isPositiveZero = require( '@stdlib/math/base/assert/is-positive-zero' );\n\n\n// MAIN //\n\n/**\n* Computes the cumulative maximum of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NumericArray} y - output array\n* @param {integer} strideY - `y` stride length\n* @returns {NumericArray} output array\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var y = [ 0.0, 0.0, 0.0 ];\n* var N = x.length;\n*\n* var v = cumax( N, x, 1, y, 1 );\n* // returns [ 1.0, 1.0, 2.0 ]\n*/\nfunction cumax( N, x, strideX, y, strideY ) {\n\tvar max;\n\tvar ix;\n\tvar iy;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = (1-N) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tmax = x[ ix ];\n\ty[ iy ] = max;\n\n\tiy += strideY;\n\ti = 1;\n\tif ( isnan( max ) === false ) {\n\t\tfor ( i; i < N; i++ ) {\n\t\t\tix += strideX;\n\t\t\tv = x[ ix ];\n\t\t\tif ( isnan( v ) ) {\n\t\t\t\tmax = v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( v > max || ( v === max && isPositiveZero( v ) ) ) {\n\t\t\t\tmax = v;\n\t\t\t}\n\t\t\ty[ iy ] = max;\n\t\t\tiy += strideY;\n\t\t}\n\t}\n\tif ( isnan( max ) ) {\n\t\tfor ( i; i < N; i++ ) {\n\t\t\ty[ iy ] = max;\n\t\t\tiy += strideY;\n\t\t}\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nmodule.exports = cumax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isPositiveZero = require( '@stdlib/math/base/assert/is-positive-zero' );\n\n\n// MAIN //\n\n/**\n* Computes the cumulative maximum of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting index for `x`\n* @param {NumericArray} y - output array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting index for `y`\n* @returns {NumericArray} output array\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var y = [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = cumax( N, x, 2, 1, y, 1, 0 );\n* // returns [ 1.0, 1.0, 2.0, 4.0, 0.0, 0.0, 0.0, 0.0 ]\n*/\nfunction cumax( N, x, strideX, offsetX, y, strideY, offsetY ) {\n\tvar max;\n\tvar ix;\n\tvar iy;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\n\tmax = x[ ix ];\n\ty[ iy ] = max;\n\n\tiy += strideY;\n\ti = 1;\n\tif ( isnan( max ) === false ) {\n\t\tfor ( i; i < N; i++ ) {\n\t\t\tix += strideX;\n\t\t\tv = x[ ix ];\n\t\t\tif ( isnan( v ) ) {\n\t\t\t\tmax = v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( v > max || ( v === max && isPositiveZero( v ) ) ) {\n\t\t\t\tmax = v;\n\t\t\t}\n\t\t\ty[ iy ] = max;\n\t\t\tiy += strideY;\n\t\t}\n\t}\n\tif ( isnan( max ) ) {\n\t\tfor ( i; i < N; i++ ) {\n\t\t\ty[ iy ] = max;\n\t\t\tiy += strideY;\n\t\t}\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nmodule.exports = cumax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cumax = require( './cumax.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( cumax, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = cumax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar min = require( '@stdlib/math/base/special/min' );\nvar cumax = require( './../../base/cumax' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar order = require( './order.js' );\n\n\n// MAIN //\n\n/**\n* Adjusts the p-values via the Bonferroni–Holm method.\n*\n* @private\n* @param {ProbabilityArray} pvalues - p-values to be adjusted\n* @param {PositiveInteger} comparisons - number of comparisons\n* @returns {ProbabilityArray} adjusted p-values\n*/\nfunction holm( pvalues, comparisons ) {\n\tvar indices;\n\tvar sorted;\n\tvar len;\n\tvar out;\n\tvar i;\n\n\tlen = pvalues.length;\n\tindices = order( pvalues );\n\tsorted = new Float64Array( len );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tsorted[ i ] = ( comparisons - i ) * pvalues[ indices[ i ] ];\n\t}\n\tsorted = cumax( len, sorted, 1, sorted, 1 );\n\tout = new Array( len );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout[ indices[ i ] ] = min( sorted[ i ], 1.0 );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = holm;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isNegativeZero = require( '@stdlib/math/base/assert/is-negative-zero' );\n\n\n// MAIN //\n\n/**\n* Computes the cumulative minimum of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NumericArray} y - output array\n* @param {integer} strideY - `y` stride length\n* @returns {NumericArray} output array\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var y = [ 0.0, 0.0, 0.0 ];\n* var N = x.length;\n*\n* var v = cumin( N, x, 1, y, 1 );\n* // returns [ 1.0, -2.0, -2.0 ]\n*/\nfunction cumin( N, x, strideX, y, strideY ) {\n\tvar min;\n\tvar ix;\n\tvar iy;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = (1-N) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tmin = x[ ix ];\n\ty[ iy ] = min;\n\n\tiy += strideY;\n\ti = 1;\n\tif ( isnan( min ) === false ) {\n\t\tfor ( i; i < N; i++ ) {\n\t\t\tix += strideX;\n\t\t\tv = x[ ix ];\n\t\t\tif ( isnan( v ) ) {\n\t\t\t\tmin = v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( v < min || ( v === min && isNegativeZero( v ) ) ) {\n\t\t\t\tmin = v;\n\t\t\t}\n\t\t\ty[ iy ] = min;\n\t\t\tiy += strideY;\n\t\t}\n\t}\n\tif ( isnan( min ) ) {\n\t\tfor ( i; i < N; i++ ) {\n\t\t\ty[ iy ] = min;\n\t\t\tiy += strideY;\n\t\t}\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nmodule.exports = cumin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isNegativeZero = require( '@stdlib/math/base/assert/is-negative-zero' );\n\n\n// MAIN //\n\n/**\n* Computes the cumulative minimum of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting index for `x`\n* @param {NumericArray} y - output array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting index for `y`\n* @returns {NumericArray} output array\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var y = [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = cumin( N, x, 2, 1, y, 1, 0 );\n* // returns [ 1.0, -2.0, -2.0, -2.0, 0.0, 0.0, 0.0, 0.0 ]\n*/\nfunction cumin( N, x, strideX, offsetX, y, strideY, offsetY ) {\n\tvar min;\n\tvar ix;\n\tvar iy;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\n\tmin = x[ ix ];\n\ty[ iy ] = min;\n\n\tiy += strideY;\n\ti = 1;\n\tif ( isnan( min ) === false ) {\n\t\tfor ( i; i < N; i++ ) {\n\t\t\tix += strideX;\n\t\t\tv = x[ ix ];\n\t\t\tif ( isnan( v ) ) {\n\t\t\t\tmin = v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( v < min || ( v === min && isNegativeZero( v ) ) ) {\n\t\t\t\tmin = v;\n\t\t\t}\n\t\t\ty[ iy ] = min;\n\t\t\tiy += strideY;\n\t\t}\n\t}\n\tif ( isnan( min ) ) {\n\t\tfor ( i; i < N; i++ ) {\n\t\t\ty[ iy ] = min;\n\t\t\tiy += strideY;\n\t\t}\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nmodule.exports = cumin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cumin = require( './cumin.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( cumin, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = cumin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar min = require( '@stdlib/math/base/special/min' );\nvar cumin = require( './../../base/cumin' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar order = require( './order.js' );\n\n\n// MAIN //\n\n/**\n* Adjusts the p-values via the Benjamini-Hochberg procedure.\n*\n* @private\n* @param {ProbabilityArray} pvalues - p-values to be adjusted\n* @param {PositiveInteger} comparisons - number of comparisons\n* @returns {ProbabilityArray} adjusted p-values\n*/\nfunction bh( pvalues, comparisons ) {\n\tvar indices;\n\tvar sorted;\n\tvar len;\n\tvar out;\n\tvar i;\n\n\tlen = pvalues.length;\n\tindices = order( pvalues, true );\n\tsorted = new Float64Array( len );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tsorted[ i ] = comparisons / ( len - i ) * pvalues[ indices[ i ] ];\n\t}\n\tsorted = cumin( len, sorted, 1, sorted, 1 );\n\tout = new Array( len );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout[ indices[ i ] ] = min( sorted[ i ], 1.0 );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = bh;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar min = require( '@stdlib/math/base/special/min' );\nvar cumin = require( './../../base/cumin' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar order = require( './order.js' );\n\n\n// MAIN //\n\n/**\n* Adjusts the p-values via the Benjamini & Yekutieli method.\n*\n* @private\n* @param {ProbabilityArray} pvalues - p-values to be adjusted\n* @param {PositiveInteger} comparisons - number of comparisons\n* @returns {ProbabilityArray} adjusted p-values\n*/\nfunction by( pvalues, comparisons ) {\n\tvar indices;\n\tvar sorted;\n\tvar len;\n\tvar out;\n\tvar i;\n\tvar q;\n\n\tlen = pvalues.length;\n\tindices = order( pvalues, true );\n\tq = 0;\n\tfor ( i = 0; i < comparisons; i++ ) {\n\t\tq += 1 / ( 1 + i );\n\t}\n\tsorted = new Float64Array( len );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tsorted[ i ] = q * comparisons / ( len - i ) * pvalues[ indices[ i ] ];\n\t}\n\tsorted = cumin( len, sorted, 1, sorted, 1 );\n\tout = new Array( len );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout[ indices[ i ] ] = min( sorted[ i ], 1.0 );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = by;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isProbabilityArray = require( '@stdlib/assert/is-probability-array' );\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar bonferroni = require( './bonferroni.js' );\nvar hommel = require( './hommel.js' );\nvar holm = require( './holm.js' );\nvar bh = require( './bh.js' );\nvar by = require( './by.js' );\n\n\n// VARIABLES //\n\nvar METHODS = [ 'bh', 'bonferroni', 'by', 'holm', 'hommel' ];\n\n\n// MAIN //\n\n/**\n* Adjusts supplied p-values for multiple comparisons via a specified method.\n*\n* @param {ProbabilityArray} pvals - p-values to be adjusted\n* @param {string} method - correction method\n* @param {PositiveInteger} [comparisons=pvals.length] - number of comparisons\n* @throws {TypeError} first argument has to be an array-like object\n* @throws {TypeError} second argument must be a string\n* @throws {Error} second argument must be `bh`, `bonferroni`, `by`, `holm`, or `hommel`\n* @throws {RangeError} comparisons must be greater or equal to the number of p-values to be adjusted\n* @returns {ProbabilityArray} array containing the corrected p-values\n*\n* @example\n* var pvalues = [ 0.008, 0.03, 0.123, 0.6, 0.2 ];\n* var out = padjust( pvalues, 'bonferroni' );\n* // returns [ 0.04, 0.15, ..., 1, 1 ]\n*\n* @example\n* var pvalues = [ 0.008, 0.03, 0.123, 0.6, 0.2 ];\n* var out = padjust( pvalues, 'by' );\n* // returns [ ~0.091, ~0.171, ..., 1, ~0.571 ]\n*\n* @example\n* var pvalues = [ 0.008, 0.03, 0.123, 0.6, 0.2 ];\n* var out = padjust( pvalues, 'bh' );\n* // returns [ 0.04, 0.075, ..., 0.6, 0.25 ]\n*\n* @example\n* var pvalues = [ 0.008, 0.03, 0.123, 0.6, 0.2 ];\n* var out = padjust( pvalues, 'holm' );\n* // returns [ 0.04, 0.12, ..., 0.6, 0.4 ]\n*\n* @example\n* var pvalues = [ 0.008, 0.03, 0.123, 0.6, 0.2 ];\n* var out = padjust( pvalues, 'hommel' );\n* // returns [ 0.032, 0.12, ..., 0.6, 0.4 ]\n*/\nfunction padjust( pvals, method, comparisons ) {\n\tif ( !isProbabilityArray( pvals ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array of probabilities. Value: `%s`.', pvals ) );\n\t}\n\tif ( !isString( method ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string. Value: `%s`.', method ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isInteger( comparisons ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', comparisons ) );\n\t\t}\n\t\tif ( comparisons < pvals.length ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. The number of comparisons must be greater or equal to the number of p-values to be adjusted. Value: `%u`.', comparisons ) );\n\t\t}\n\t}\n\tcomparisons = comparisons || pvals.length;\n\tswitch ( method ) {\n\tcase 'bonferroni':\n\t\treturn bonferroni( pvals, comparisons );\n\tcase 'by':\n\t\treturn by( pvals, comparisons );\n\tcase 'bh':\n\t\treturn bh( pvals, comparisons );\n\tcase 'holm':\n\t\treturn holm( pvals, comparisons );\n\tcase 'hommel':\n\t\treturn hommel( pvals, comparisons );\n\tdefault:\n\t\tthrow new Error( format( 'invalid argument. Second argument must be one of the following: \"%s\". Value: `%s`.', METHODS.join( '\", \"' ), method ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = padjust;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Adjust supplied p-values for multiple comparisons via a specified method.\n*\n* @module @stdlib/stats/padjust\n*\n* @example\n* var padjust = require( '@stdlib/stats/padjust' );\n*\n* var pvalues = [ 0.008, 0.03, 0.123, 0.6, 0.2 ];\n* var out = padjust( pvalues, 'bh' );\n* // returns [ 0.04, 0.075, ~0.205, 0.6, 0.25 ]\n*/\n\n// MODULES //\n\nvar padjust = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = padjust;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_atanh.c?view=markup}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar log1p = require( './../../../../base/special/log1p' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\n\n\n// VARIABLES //\n\nvar NEAR_ZERO = 1.0 / (1 << 28); // 2**-28\n\n\n// MAIN //\n\n/**\n* Computes the hyperbolic arctangent of a number.\n*\n* ## Method\n*\n* 1.  Reduce \\\\( x \\\\) to positive by \\\\( \\operatorname{atanh}(-x) = -\\operatorname{atanh}(x) \\\\)\n*\n* 2.  For \\\\( x \\ge 0.5 \\\\), we calculate\n*\n*     ```tex\n*     \\operatorname{atanh}(x) = \\frac{1}{2} \\cdot \\log\\left( 1 + \\tfrac{2x}{1-x} \\right) = \\frac{1}{2} \\cdot \\operatorname{log1p}\\left( 2 \\tfrac{x}{1-x} \\right)\n*     ```\n*\n*     For \\\\( x < 0.5 \\\\), we have\n*\n*     ```tex\n*     \\operatorname{atanh}(x) = \\frac{1}{2} \\cdot \\operatorname{log1p}\\left( 2x + \\tfrac{2x^2}{1-x} \\right)\n*     ```\n*\n* ## Special Cases\n*\n* ```tex\n* \\begin{align*}\n* \\operatorname{atanh}(\\mathrm{NaN}) &= \\mathrm{NaN}\\\\\n* \\operatorname{atanh}(1.0) &= \\infty \\\\\n* \\operatorname{atanh}(-1.0) &= -\\infty \\\\\n* \\end{align*}\n* ```\n*\n* @param {number} x - input value\n* @returns {number} hyperbolic arctangent\n*\n* @example\n* var v = atanh( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = atanh( 0.9 );\n* // returns ~1.472\n*\n* @example\n* var v = atanh( 1.0 );\n* // returns Infinity\n*\n* @example\n* var v = atanh( -1.0 );\n* // returns -Infinity\n*\n* @example\n* var v = atanh( NaN );\n* // returns NaN\n*/\nfunction atanh( x ) {\n\tvar sgn;\n\tvar t;\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( x < -1.0 || x > 1.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( x === 1.0 ) {\n\t\treturn PINF;\n\t}\n\tif ( x === -1.0 ) {\n\t\treturn NINF;\n\t}\n\tif ( x < 0.0 ) {\n\t\tsgn = true;\n\t\tx = -x;\n\t}\n\t// Case: |x| < 2**-28\n\tif ( x < NEAR_ZERO ) {\n\t\treturn ( sgn ) ? -x : x;\n\t}\n\tif ( x < 0.5 ) {\n\t\tt = x + x;\n\t\tt = 0.5 * log1p( t + ( t*x/(1-x) ) );\n\t} else {\n\t\tt = 0.5 * log1p( (x+x) / (1-x) );\n\t}\n\treturn ( sgn ) ? -t : t;\n}\n\n\n// EXPORTS //\n\nmodule.exports = atanh;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the hyperbolic arctangent of a number.\n*\n* @module @stdlib/math/base/special/atanh\n*\n* @example\n* var atanh = require( '@stdlib/math/base/special/atanh' );\n*\n* var v = atanh( 0.0 );\n* // returns 0.0\n*\n* v = atanh( 0.9 );\n* // returns ~1.472\n*\n* v = atanh( 1.0 );\n* // returns Infinity\n*\n* v = atanh( -1.0 );\n* // returns -Infinity\n*\n* v = atanh( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar atanh = require( './atanh.js' );\n\n\n// EXPORTS //\n\nmodule.exports = atanh;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.3333333333333332;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -1614.6876844170845 + (x * (-99.28772310019185 + (x * (-0.9643991794250523 + (x * 0.0))))); // eslint-disable-line max-len\n\t\ts2 = 4844.063053251255 + (x * (2235.4883906010045 + (x * (112.81167849163293 + (x * 1.0))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.0 + (x * (-0.9643991794250523 + (x * (-99.28772310019185 + (x * -1614.6876844170845))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (112.81167849163293 + (x * (2235.4883906010045 + (x * 4844.063053251255))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C code, long comment, copyright, license, and constants are from [Cephes]{@link http://www.netlib.org/cephes}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright 1984, 1995, 2000 by Stephen L. Moshier\n*\n* Some software in this archive may be from the book _Methods and Programs for Mathematical Functions_ (Prentice-Hall or Simon & Schuster International, 1989) or from the Cephes Mathematical Library, a commercial product. In either event, it is copyrighted by the author. What you see here may be used freely but it comes with no support or guarantee.\n*\n* Stephen L. Moshier\n* moshier@na-net.ornl.gov\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( './../../../../base/special/abs' );\nvar exp = require( './../../../../base/special/exp' );\nvar ratval = require( './rational_pq.js' );\n\n\n// VARIABLES //\n\n// log(2**127)\nvar MAXLOG = 8.8029691931113054295988e+01;\n\n\n// MAIN //\n\n/**\n* Computes the hyperbolic tangent of a number.\n*\n* ## Method\n*\n* For \\\\( |x| < 0.625 \\\\), we use a rational function of the form (Cody and Waite)\n*\n* ```tex\n* x + x^3 \\frac{\\mathrm{P}(x)}{\\mathrm{Q}(x)}\n* ```\n*\n* Otherwise,\n*\n* ```tex\n* \\begin{align*}\n* \\operatorname{tanh}(x) &= \\frac{\\operatorname{sinh}(x)}{\\operatorname{cosh(x)}} \\\\\n* &= 1 - \\frac{2}{e^{2x} + 1}\n* \\end{align*}\n* ```\n*\n* ## Notes\n*\n* -   Relative error:\n*\n*     | arithmetic | domain | # trials | peak    | rms     |\n*     |:----------:|:------:|:--------:|:-------:|:-------:|\n*     | DEC        | -2,2   | 50000    | 3.3e-17 | 6.4e-18 |\n*     | IEEE       | -2,2   | 30000    | 2.5e-16 | 5.8e-17 |\n*\n*\n* @param {number} x - input value\n* @returns {number} hyperbolic tangent\n*\n* @example\n* var v = tanh( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = tanh( 2.0 );\n* // returns ~0.964\n*\n* @example\n* var v = tanh( -2.0 );\n* // returns ~-0.964\n*\n* @example\n* var v = tanh( NaN );\n* // returns NaN\n*/\nfunction tanh( x ) {\n\tvar s;\n\tvar z;\n\tz = abs( x );\n\tif ( z > 0.5*MAXLOG ) {\n\t\treturn ( x < 0.0 ) ? -1.0 : 1.0;\n\t}\n\tif ( z >= 0.625 ) {\n\t\ts = exp( 2.0 * z );\n\t\tz = 1.0 - ( 2.0/(s+1.0) );\n\t\tif ( x < 0.0 ) {\n\t\t\tz = -z;\n\t\t}\n\t} else {\n\t\tif ( x === 0.0 ) {\n\t\t\treturn x; // Handle `+-0`\n\t\t}\n\t\ts = x * x;\n\t\tz = x + ( x*s*ratval( s ) );\n\t}\n\treturn z;\n}\n\n\n// EXPORTS //\n\nmodule.exports = tanh;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the hyperbolic tangent of a number.\n*\n* @module @stdlib/math/base/special/tanh\n*\n* @example\n* var tanh = require( '@stdlib/math/base/special/tanh' );\n*\n* var v = tanh( 0.0 );\n* // returns 0.0\n*\n* var v = tanh( -0.0 );\n* // returns -0.0\n*\n* v = tanh( 2.0 );\n* // returns ~0.964\n*\n* v = tanh( -2.0 );\n* // returns ~-0.964\n*\n* v = tanh( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar tanh = require( './tanh.js' );\n\n\n// EXPORTS //\n\nmodule.exports = tanh;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar roundn = require( '@stdlib/math/base/special/roundn' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Alternative hypothesis: ';\n\tstr += 'True correlation coefficient is ';\n\tswitch ( this.alternative ) {\n\tcase 'less':\n\t\tstr += 'less than ';\n\t\tbreak;\n\tcase 'greater':\n\t\tstr += 'greater than ';\n\t\tbreak;\n\tcase 'two-sided':\n\tdefault:\n\t\tstr += 'not equal to ';\n\t\tbreak;\n\t}\n\tstr += this.nullValue;\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts ) + '\\n';\n\tstr += '    ' + ((1.0-this.alpha)*100) + '% confidence interval: [' +\n\t\troundn( this.ci[0], -dgts ) +\n\t\t',' +\n\t\troundn( this.ci[1], -dgts ) +\n\t']';\n\tstr += '\\n\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// VARIABLES //\n\n// Blocksize for pairwise summation (NOTE: decreasing the blocksize decreases rounding error as more pairs are summed, but also decreases performance. Because the inner loop is unrolled eight times, the blocksize is effectively `16`.):\nvar BLOCKSIZE = 128;\n\n\n// MAIN //\n\n/**\n* Computes the sum of strided array elements using pairwise summation.\n*\n* ## Method\n*\n* -   This implementation uses pairwise summation, which accrues rounding error `O(log2 N)` instead of `O(N)`. The recursion depth is also `O(log2 N)`.\n*\n* ## References\n*\n* -   Higham, Nicholas J. 1993. \"The Accuracy of Floating Point Summation.\" _SIAM Journal on Scientific Computing_ 14 (4): 783–99. doi:[10.1137/0914050](https://doi.org/10.1137/0914050).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} sum\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = gsumpw( N, x, 2, 1 );\n* // returns 5.0\n*/\nfunction gsumpw( N, x, stride, offset ) {\n\tvar ix;\n\tvar s0;\n\tvar s1;\n\tvar s2;\n\tvar s3;\n\tvar s4;\n\tvar s5;\n\tvar s6;\n\tvar s7;\n\tvar M;\n\tvar s;\n\tvar n;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn x[ offset ];\n\t}\n\tix = offset;\n\tif ( N < 8 ) {\n\t\t// Use simple summation...\n\t\ts = 0.0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\ts += x[ ix ];\n\t\t\tix += stride;\n\t\t}\n\t\treturn s;\n\t}\n\tif ( N <= BLOCKSIZE ) {\n\t\t// Sum a block with 8 accumulators (by loop unrolling, we lower the effective blocksize to 16)...\n\t\ts0 = x[ ix ];\n\t\ts1 = x[ ix+stride ];\n\t\ts2 = x[ ix+(2*stride) ];\n\t\ts3 = x[ ix+(3*stride) ];\n\t\ts4 = x[ ix+(4*stride) ];\n\t\ts5 = x[ ix+(5*stride) ];\n\t\ts6 = x[ ix+(6*stride) ];\n\t\ts7 = x[ ix+(7*stride) ];\n\t\tix += 8 * stride;\n\n\t\tM = N % 8;\n\t\tfor ( i = 8; i < N-M; i += 8 ) {\n\t\t\ts0 += x[ ix ];\n\t\t\ts1 += x[ ix+stride ];\n\t\t\ts2 += x[ ix+(2*stride) ];\n\t\t\ts3 += x[ ix+(3*stride) ];\n\t\t\ts4 += x[ ix+(4*stride) ];\n\t\t\ts5 += x[ ix+(5*stride) ];\n\t\t\ts6 += x[ ix+(6*stride) ];\n\t\t\ts7 += x[ ix+(7*stride) ];\n\t\t\tix += 8 * stride;\n\t\t}\n\t\t// Pairwise sum the accumulators:\n\t\ts = ((s0+s1) + (s2+s3)) + ((s4+s5) + (s6+s7));\n\n\t\t// Clean-up loop...\n\t\tfor ( i; i < N; i++ ) {\n\t\t\ts += x[ ix ];\n\t\t\tix += stride;\n\t\t}\n\t\treturn s;\n\t}\n\t// Recurse by dividing by two, but avoiding non-multiples of unroll factor...\n\tn = floor( N/2 );\n\tn -= n % 8;\n\treturn gsumpw( n, x, stride, ix ) + gsumpw( N-n, x, stride, ix+(n*stride) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gsumpw;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar sum = require( './ndarray.js' );\n\n\n// MAIN //\n\n/**\n* Computes the sum of strided array elements using pairwise summation.\n*\n* ## Method\n*\n* -   This implementation uses pairwise summation, which accrues rounding error `O(log2 N)` instead of `O(N)`. The recursion depth is also `O(log2 N)`.\n*\n* ## References\n*\n* -   Higham, Nicholas J. 1993. \"The Accuracy of Floating Point Summation.\" _SIAM Journal on Scientific Computing_ 14 (4): 783–99. doi:[10.1137/0914050](https://doi.org/10.1137/0914050).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} sum\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = gsumpw( N, x, 1 );\n* // returns 1.0\n*/\nfunction gsumpw( N, x, stride ) {\n\tvar ix;\n\tvar s;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn x[ 0 ];\n\t}\n\tif ( stride < 0 ) {\n\t\tix = (1-N) * stride;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( N < 8 ) {\n\t\t// Use simple summation...\n\t\ts = 0.0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\ts += x[ ix ];\n\t\t\tix += stride;\n\t\t}\n\t\treturn s;\n\t}\n\treturn sum( N, x, stride, ix );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gsumpw;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the sum of strided array elements using pairwise summation.\n*\n* @module @stdlib/blas/ext/base/gsumpw\n*\n* @example\n* var gsumpw = require( '@stdlib/blas/ext/base/gsumpw' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = gsumpw( N, x, 1 );\n* // returns 1.0\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n* var gsumpw = require( '@stdlib/blas/ext/base/gsumpw' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = gsumpw.ndarray( N, x, 2, 1 );\n* // returns 5.0\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gsumpw = require( '@stdlib/blas/ext/base/gsumpw' );\n\n\n// MAIN //\n\n/**\n* Computes the variance of a strided array using a two-pass algorithm.\n*\n* ## Method\n*\n* -   This implementation uses a two-pass approach, as suggested by Neely (1966).\n*\n* ## References\n*\n* -   Neely, Peter M. 1966. \"Comparison of Several Algorithms for Computation of Means, Standard Deviations and Correlation Coefficients.\" _Communications of the ACM_ 9 (7). Association for Computing Machinery: 496–99. doi:[10.1145/365719.365958](https://doi.org/10.1145/365719.365958).\n* -   Schubert, Erich, and Michael Gertz. 2018. \"Numerically Stable Parallel Computation of (Co-)Variance.\" In _Proceedings of the 30th International Conference on Scientific and Statistical Database Management_. New York, NY, USA: Association for Computing Machinery. doi:[10.1145/3221269.3223036](https://doi.org/10.1145/3221269.3223036).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} variance\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = variancepn( N, 1, x, 1 );\n* // returns ~4.3333\n*/\nfunction variancepn( N, correction, x, stride ) {\n\tvar mu;\n\tvar ix;\n\tvar M2;\n\tvar M;\n\tvar d;\n\tvar n;\n\tvar i;\n\n\tn = N - correction;\n\tif ( N <= 0 || n <= 0.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn 0.0;\n\t}\n\t// Compute an estimate for the mean:\n\tmu = gsumpw( N, x, stride ) / N;\n\n\tif ( stride < 0 ) {\n\t\tix = (1-N) * stride;\n\t} else {\n\t\tix = 0;\n\t}\n\t// Compute the variance...\n\tM2 = 0.0;\n\tM = 0.0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\td = x[ ix ] - mu;\n\t\tM2 += d * d;\n\t\tM += d;\n\t\tix += stride;\n\t}\n\treturn (M2/n) - ((M/N)*(M/n));\n}\n\n\n// EXPORTS //\n\nmodule.exports = variancepn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gsumpw = require( '@stdlib/blas/ext/base/gsumpw' ).ndarray;\n\n\n// MAIN //\n\n/**\n* Computes the variance of a strided array using a two-pass algorithm.\n*\n* ## Method\n*\n* -   This implementation uses a two-pass approach, as suggested by Neely (1966).\n*\n* ## References\n*\n* -   Neely, Peter M. 1966. \"Comparison of Several Algorithms for Computation of Means, Standard Deviations and Correlation Coefficients.\" _Communications of the ACM_ 9 (7). Association for Computing Machinery: 496–99. doi:[10.1145/365719.365958](https://doi.org/10.1145/365719.365958).\n* -   Schubert, Erich, and Michael Gertz. 2018. \"Numerically Stable Parallel Computation of (Co-)Variance.\" In _Proceedings of the 30th International Conference on Scientific and Statistical Database Management_. New York, NY, USA: Association for Computing Machinery. doi:[10.1145/3221269.3223036](https://doi.org/10.1145/3221269.3223036).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} variance\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = variancepn( N, 1, x, 2, 1 );\n* // returns 6.25\n*/\nfunction variancepn( N, correction, x, stride, offset ) {\n\tvar mu;\n\tvar ix;\n\tvar M2;\n\tvar M;\n\tvar d;\n\tvar n;\n\tvar i;\n\n\tn = N - correction;\n\tif ( N <= 0 || n <= 0.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn 0.0;\n\t}\n\t// Compute an estimate for the mean:\n\tmu = gsumpw( N, x, stride, offset ) / N;\n\n\t// Compute the variance...\n\tix = offset;\n\tM2 = 0.0;\n\tM = 0.0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\td = x[ ix ] - mu;\n\t\tM2 += d * d;\n\t\tM += d;\n\t\tix += stride;\n\t}\n\treturn (M2/n) - ((M/N)*(M/n));\n}\n\n\n// EXPORTS //\n\nmodule.exports = variancepn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar variancepn = require( './variancepn.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( variancepn, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = variancepn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar variancepn = require( './../../../base/variancepn' );\n\n\n// MAIN //\n\n/**\n* Computes the variance of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} variance\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = variance( N, 1, x, 1 );\n* // returns ~4.3333\n*/\nfunction variance( N, correction, x, stride ) {\n\treturn variancepn( N, correction, x, stride );\n}\n\n\n// EXPORTS //\n\nmodule.exports = variance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar variancepn = require( './../../../base/variancepn' ).ndarray;\n\n\n// MAIN //\n\n/**\n* Computes the variance of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} variance\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = variance( N, 1, x, 2, 1 );\n* // returns 6.25\n*/\nfunction variance( N, correction, x, stride, offset ) {\n\treturn variancepn( N, correction, x, stride, offset );\n}\n\n\n// EXPORTS //\n\nmodule.exports = variance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar variance = require( './variance.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( variance, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = variance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the variance of a strided array.\n*\n* @module @stdlib/stats/base/variance\n*\n* @example\n* var variance = require( '@stdlib/stats/base/variance' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = variance( N, 1, x, 1 );\n* // returns ~4.3333\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n* var variance = require( '@stdlib/stats/base/variance' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = variance.ndarray( N, 1, x, 2, 1 );\n* // returns 6.25\n*/\n\n// MODULES //\n\nvar variance = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = variance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// VARIABLES //\n\n// Blocksize for pairwise summation (NOTE: decreasing the blocksize decreases rounding error as more pairs are summed, but also decreases performance. Because the inner loop is unrolled eight times, the blocksize is effectively `16`.):\nvar BLOCKSIZE = 128;\n\n\n// MAIN //\n\n/**\n* Adds a constant to each strided array element and computes the sum using pairwise summation.\n*\n* ## Method\n*\n* -   This implementation uses pairwise summation, which accrues rounding error `O(log2 N)` instead of `O(N)`. The recursion depth is also `O(log2 N)`.\n*\n* ## References\n*\n* -   Higham, Nicholas J. 1993. \"The Accuracy of Floating Point Summation.\" _SIAM Journal on Scientific Computing_ 14 (4): 783–99. doi:[10.1137/0914050](https://doi.org/10.1137/0914050).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} alpha - constant\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} sum\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = gapxsumpw( N, 5.0, x, 2, 1 );\n* // returns 25.0\n*/\nfunction gapxsumpw( N, alpha, x, stride, offset ) {\n\tvar ix;\n\tvar s0;\n\tvar s1;\n\tvar s2;\n\tvar s3;\n\tvar s4;\n\tvar s5;\n\tvar s6;\n\tvar s7;\n\tvar M;\n\tvar s;\n\tvar n;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn alpha + x[ offset ];\n\t}\n\tix = offset;\n\tif ( N < 8 ) {\n\t\t// Use simple summation...\n\t\ts = 0.0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\ts += alpha + x[ ix ];\n\t\t\tix += stride;\n\t\t}\n\t\treturn s;\n\t}\n\tif ( N <= BLOCKSIZE ) {\n\t\t// Sum a block with 8 accumulators (by loop unrolling, we lower the effective blocksize to 16)...\n\t\ts0 = alpha + x[ ix ];\n\t\ts1 = alpha + x[ ix+stride ];\n\t\ts2 = alpha + x[ ix+(2*stride) ];\n\t\ts3 = alpha + x[ ix+(3*stride) ];\n\t\ts4 = alpha + x[ ix+(4*stride) ];\n\t\ts5 = alpha + x[ ix+(5*stride) ];\n\t\ts6 = alpha + x[ ix+(6*stride) ];\n\t\ts7 = alpha + x[ ix+(7*stride) ];\n\t\tix += 8 * stride;\n\n\t\tM = N % 8;\n\t\tfor ( i = 8; i < N-M; i += 8 ) {\n\t\t\ts0 += alpha + x[ ix ];\n\t\t\ts1 += alpha + x[ ix+stride ];\n\t\t\ts2 += alpha + x[ ix+(2*stride) ];\n\t\t\ts3 += alpha + x[ ix+(3*stride) ];\n\t\t\ts4 += alpha + x[ ix+(4*stride) ];\n\t\t\ts5 += alpha + x[ ix+(5*stride) ];\n\t\t\ts6 += alpha + x[ ix+(6*stride) ];\n\t\t\ts7 += alpha + x[ ix+(7*stride) ];\n\t\t\tix += 8 * stride;\n\t\t}\n\t\t// Pairwise sum the accumulators:\n\t\ts = ((s0+s1) + (s2+s3)) + ((s4+s5) + (s6+s7));\n\n\t\t// Clean-up loop...\n\t\tfor ( i; i < N; i++ ) {\n\t\t\ts += alpha + x[ ix ];\n\t\t\tix += stride;\n\t\t}\n\t\treturn s;\n\t}\n\t// Recurse by dividing by two, but avoiding non-multiples of unroll factor...\n\tn = floor( N/2 );\n\tn -= n % 8;\n\treturn gapxsumpw( n, alpha, x, stride, ix ) + gapxsumpw( N-n, alpha, x, stride, ix+(n*stride) ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = gapxsumpw;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar sum = require( './ndarray.js' );\n\n\n// MAIN //\n\n/**\n* Adds a constant to each strided array element and computes the sum using pairwise summation.\n*\n* ## Method\n*\n* -   This implementation uses pairwise summation, which accrues rounding error `O(log2 N)` instead of `O(N)`. The recursion depth is also `O(log2 N)`.\n*\n* ## References\n*\n* -   Higham, Nicholas J. 1993. \"The Accuracy of Floating Point Summation.\" _SIAM Journal on Scientific Computing_ 14 (4): 783–99. doi:[10.1137/0914050](https://doi.org/10.1137/0914050).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} alpha - constant\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} sum\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = gapxsumpw( N, 5.0, x, 1 );\n* // returns 16.0\n*/\nfunction gapxsumpw( N, alpha, x, stride ) {\n\tvar ix;\n\tvar s;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn alpha + x[ 0 ];\n\t}\n\tif ( stride < 0 ) {\n\t\tix = (1-N) * stride;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( N < 8 ) {\n\t\t// Use simple summation...\n\t\ts = 0.0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\ts += alpha + x[ ix ];\n\t\t\tix += stride;\n\t\t}\n\t\treturn s;\n\t}\n\treturn sum( N, alpha, x, stride, ix );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gapxsumpw;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Add a constant to each strided array element and compute the sum using pairwise summation.\n*\n* @module @stdlib/blas/ext/base/gapxsumpw\n*\n* @example\n* var gapxsumpw = require( '@stdlib/blas/ext/base/gapxsumpw' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = gapxsumpw( N, 5.0, x, 1 );\n* // returns 16.0\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n* var gapxsumpw = require( '@stdlib/blas/ext/base/gapxsumpw' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = gapxsumpw.ndarray( N, 5.0, x, 2, 1 );\n* // returns 25.0\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gsumpw = require( '@stdlib/blas/ext/base/gsumpw' );\nvar gapxsumpw = require( '@stdlib/blas/ext/base/gapxsumpw' );\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of a strided array using a two-pass error correction algorithm.\n*\n* ## Method\n*\n* -   This implementation uses a two-pass approach, as suggested by Neely (1966).\n*\n* ## References\n*\n* -   Neely, Peter M. 1966. \"Comparison of Several Algorithms for Computation of Means, Standard Deviations and Correlation Coefficients.\" _Communications of the ACM_ 9 (7). Association for Computing Machinery: 496–99. doi:[10.1145/365719.365958](https://doi.org/10.1145/365719.365958).\n* -   Schubert, Erich, and Michael Gertz. 2018. \"Numerically Stable Parallel Computation of (Co-)Variance.\" In _Proceedings of the 30th International Conference on Scientific and Statistical Database Management_. New York, NY, USA: Association for Computing Machinery. doi:[10.1145/3221269.3223036](https://doi.org/10.1145/3221269.3223036).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} arithmetic mean\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = meanpn( N, x, 1 );\n* // returns ~0.3333\n*/\nfunction meanpn( N, x, stride ) {\n\tvar mu;\n\tvar c;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn x[ 0 ];\n\t}\n\t// Compute an estimate for the meanpn:\n\tmu = gsumpw( N, x, stride ) / N;\n\n\t// Compute an error term:\n\tc = gapxsumpw( N, -mu, x, stride ) / N;\n\n\treturn mu + c;\n}\n\n\n// EXPORTS //\n\nmodule.exports = meanpn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gsumpw = require( '@stdlib/blas/ext/base/gsumpw' ).ndarray;\nvar gapxsumpw = require( '@stdlib/blas/ext/base/gapxsumpw' ).ndarray;\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of a strided array using a two-pass error correction algorithm.\n*\n* ## Method\n*\n* -   This implementation uses a two-pass approach, as suggested by Neely (1966).\n*\n* ## References\n*\n* -   Neely, Peter M. 1966. \"Comparison of Several Algorithms for Computation of Means, Standard Deviations and Correlation Coefficients.\" _Communications of the ACM_ 9 (7). Association for Computing Machinery: 496–99. doi:[10.1145/365719.365958](https://doi.org/10.1145/365719.365958).\n* -   Schubert, Erich, and Michael Gertz. 2018. \"Numerically Stable Parallel Computation of (Co-)Variance.\" In _Proceedings of the 30th International Conference on Scientific and Statistical Database Management_. New York, NY, USA: Association for Computing Machinery. doi:[10.1145/3221269.3223036](https://doi.org/10.1145/3221269.3223036).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} arithmetic mean\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = meanpn( N, x, 2, 1 );\n* // returns 1.25\n*/\nfunction meanpn( N, x, stride, offset ) {\n\tvar mu;\n\tvar c;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn x[ offset ];\n\t}\n\t// Compute an estimate for the meanpn:\n\tmu = gsumpw( N, x, stride, offset ) / N;\n\n\t// Compute an error term:\n\tc = gapxsumpw( N, -mu, x, stride, offset ) / N;\n\n\treturn mu + c;\n}\n\n\n// EXPORTS //\n\nmodule.exports = meanpn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar meanpn = require( './meanpn.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( meanpn, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = meanpn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar meanpn = require( './../../../base/meanpn' );\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} arithmetic mean\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = mean( N, x, 1 );\n* // returns ~0.3333\n*/\nfunction mean( N, x, stride ) {\n\treturn meanpn( N, x, stride );\n}\n\n\n// EXPORTS //\n\nmodule.exports = mean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar meanpn = require( './../../../base/meanpn' ).ndarray;\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} arithmetic mean\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = mean( N, x, 2, 1 );\n* // returns 1.25\n*/\nfunction mean( N, x, stride, offset ) {\n\treturn meanpn( N, x, stride, offset );\n}\n\n\n// EXPORTS //\n\nmodule.exports = mean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar mean = require( './mean.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( mean, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = mean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the arithmetic mean of a strided array.\n*\n* @module @stdlib/stats/base/mean\n*\n* @example\n* var mean = require( '@stdlib/stats/base/mean' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = mean( N, x, 1 );\n* // returns ~0.3333\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n* var mean = require( '@stdlib/stats/base/mean' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = mean.ndarray( N, x, 2, 1 );\n* // returns 1.25\n*/\n\n// MODULES //\n\nvar mean = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = mean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar max = require( '@stdlib/math/base/special/max' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar variance = require( './../../base/variance' );\nvar mean = require( './../../base/mean' );\n\n\n// MAIN //\n\n/**\n* Computes the Pearson product-moment correlation coefficient between `x` and `y`.\n*\n* @private\n* @param {NumericArray} x - first data array\n* @param {NumericArray} y - second data array\n* @returns {number} correlation coefficient\n*\n* @example\n* var x = [ 1.0, 2.0, 2.0, 1.0 ];\n* var y = [ 1.8, 2.2, 2.5, 1.4 ];\n* var r = pcorr( x, y );\n* // returns ~0.905\n*/\nfunction pcorr( x, y ) {\n\tvar denom;\n\tvar num;\n\tvar out;\n\tvar xy;\n\tvar xm;\n\tvar ym;\n\tvar i;\n\tvar n;\n\n\tn = x.length;\n\txm = mean( n, x, 1 );\n\tym = mean( n, y, 1 );\n\txy = 0.0;\n\tfor ( i = 0; i < n; i++ ) {\n\t\txy += x[ i ] * y[ i ];\n\t}\n\tnum = xy - ( n * xm * ym );\n\tdenom = ( n-1 ) * sqrt(variance(n, 1, x, 1)) * sqrt(variance(n, 1, y, 1) );\n\tout = num / denom;\n\n\t// Handle rounding errors:\n\treturn max( min( out, 1.0 ), -1.0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = pcorr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar indexOf = require( '@stdlib/utils/index-of' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar alternative = [ 'two-sided', 'less', 'greater' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {string} [options.alternative] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {number} [options.rho] - correlation coefficient unter HO\n* @returns {(null|Error)} null or an error\n*\n* @example\n* var opts = {};\n* var options = {\n*     'alpha': 0.01,\n*     'rho': 0.8\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif (\n\t\t\t!isNumber( opts.alpha ) ||\n\t\t\tisnan( opts.alpha ) ||\n\t\t\topts.alpha < 0.0 ||\n\t\t\topts.alpha > 1.0\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'alternative' ) ) {\n\t\topts.alternative = options.alternative;\n\t\tif ( indexOf( alternative, opts.alternative ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'alternative', alternative.join( '\", \"' ), opts.alternative ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'rho' ) ) {\n\t\topts.rho = options.rho;\n\t\tif (\n\t\t\t!isNumber( opts.rho ) ||\n\t\t\tisnan( opts.rho ) ||\n\t\t\topts.rho < -1.0 ||\n\t\t\topts.rho > 1.0\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number on the interval: [-1, 1]. Option: `%s`.', 'rho', opts.rho ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumberArray = require( '@stdlib/assert/is-number-array' ).primitives;\nvar isTypedArrayLike = require( '@stdlib/assert/is-typed-array-like' );\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar quantileFactory = require( './../../base/dists/normal/quantile' ).factory;\nvar cdfFactory = require( './../../base/dists/normal/cdf' ).factory;\nvar format = require( '@stdlib/string/format' );\nvar atanh = require( '@stdlib/math/base/special/atanh' );\nvar tanh = require( '@stdlib/math/base/special/tanh' );\nvar tCDF = require( './../../base/dists/t/cdf' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar print = require( './print.js' ); // eslint-disable-line stdlib/no-redeclare\nvar pcorr = require( './pcorr.js' );\nvar validate = require( './validate.js' );\n\n\n// VARIABLES //\n\nvar normQuantile = quantileFactory( 0.0, 1.0 );\nvar normCDF = cdfFactory( 0.0, 1.0 );\n\n\n// MAIN //\n\n/**\n* Computes a Pearson product-moment correlation test between paired samples.\n*\n* @param {NumericArray} x - first data array\n* @param {NumericArray} y - second data array\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {string} [options.alternative='two-sided'] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {number} [options.rho=0.0] - correlation under H0\n* @throws {TypeError} first argument has to be a typed array or array of numbers\n* @throws {TypeError} second argument has to be a typed array or array of numbers\n* @throws {Error} first and second arguments must be arrays having the same length\n* @throws {Error} first and second arguments must contain at least four elements\n* @throws {TypeError} options must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Object} test result object\n*\n* @example\n* var x = [ 2, 4, 3, 1, 2, 3 ];\n* var y = [ 3, 2, 4, 1, 2, 4 ];\n* var out = pcorrTest( x, y );\n*/\nfunction pcorrTest( x, y, options ) {\n\tvar method;\n\tvar alpha;\n\tvar cint;\n\tvar opts;\n\tvar pval;\n\tvar stat;\n\tvar alt;\n\tvar err;\n\tvar out;\n\tvar rho;\n\tvar val;\n\tvar df;\n\tvar se;\n\tvar n;\n\tvar r;\n\tvar z;\n\n\tif ( !isTypedArrayLike( x ) && !isNumberArray( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a numeric array. Value: `%s`.', x ) );\n\t}\n\tif ( !isTypedArrayLike( y ) && !isNumberArray( y ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a numeric array. Value: `%s`.', y ) );\n\t}\n\tn = x.length;\n\tif ( n !== y.length ) {\n\t\tthrow new RangeError( 'invalid arguments. First and second arguments must be arrays having the same length.' );\n\t}\n\topts = {};\n\tif ( options ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.alpha === void 0 ) {\n\t\talpha = 0.05;\n\t} else {\n\t\talpha = opts.alpha;\n\t}\n\tif ( n < 4 ) {\n\t\tthrow new Error( 'invalid arguments. Not enough observations. First and second arguments must contain at least four observations.' );\n\t}\n\tif ( opts.rho === void 0 ) {\n\t\trho = 0.0;\n\t} else {\n\t\trho = opts.rho;\n\t}\n\tif ( opts.alternative === void 0 ) {\n\t\talt = 'two-sided';\n\t} else {\n\t\talt = opts.alternative;\n\t}\n\n\tr = pcorr( x, y );\n\tz = atanh( r );\n\tse = 1.0 / sqrt( n - 3 );\n\tif ( rho === 0.0 ) {\n\t\t// Use t-test for H0: rho = 0.0 vs H1: rho != 0.0...\n\t\tmethod = 't-test for Pearson correlation coefficient';\n\t\tdf = n - 2;\n\t\tstat = sqrt( df ) * r / sqrt( 1.0 - (r*r) );\n\t\tswitch ( alt ) {\n\t\tcase 'greater':\n\t\t\tpval = 1.0 - tCDF( stat, df );\n\t\t\tbreak;\n\t\tcase 'less':\n\t\t\tpval = tCDF( stat, df);\n\t\t\tbreak;\n\t\tcase 'two-sided':\n\t\tdefault:\n\t\t\tpval = 2.0 * min( tCDF( stat, df), 1.0 - tCDF( stat, df ));\n\t\t\tbreak;\n\t\t}\n\t} else {\n\t\t// Use large-sample normality to calculate p-value based on Fisher's z transform...\n\t\tmethod = 'Fisher\\'s z transform test for Pearson correlation coefficient';\n\t\tstat = ( z - atanh( rho ) ) * sqrt( n - 3 );\n\t\tswitch ( alt ) {\n\t\tcase 'greater':\n\t\t\tpval = normCDF( -stat );\n\t\t\tbreak;\n\t\tcase 'less':\n\t\t\tpval = 1.0 - normCDF( -stat );\n\t\t\tbreak;\n\t\tcase 'two-sided':\n\t\tdefault:\n\t\t\tpval = 2.0 * min( normCDF( -stat ), 1.0 - normCDF( -stat ));\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tswitch ( alt ) {\n\tcase 'greater':\n\t\tcint = [ tanh( z - ( se*normQuantile( 1.0 - alpha ) ) ), 1.0 ];\n\t\tbreak;\n\tcase 'less':\n\t\tcint = [ -1.0, tanh( z + ( se*normQuantile( 1.0 - alpha ) ) ) ];\n\t\tbreak;\n\tcase 'two-sided':\n\tdefault:\n\t\tval = se * normQuantile( 1.0 - ( alpha/2.0 ) );\n\t\tcint = [ tanh( z - val ), tanh( z + val ) ];\n\t\tbreak;\n\t}\n\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= alpha );\n\tsetReadOnly( out, 'alpha', alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'ci', cint );\n\tsetReadOnly( out, 'alternative', alt );\n\tsetReadOnly( out, 'method', method );\n\tsetReadOnly( out, 'nullValue', rho );\n\tsetReadOnly( out, 'pcorr', r );\n\tsetReadOnly( out, 'print', print );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pcorrTest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a Pearson product-moment correlation test between paired samples.\n*\n* @module @stdlib/stats/pcorrtest\n*\n* @example\n* var pcorrtest = require( '@stdlib/stats/pcorrtest' );\n* var incrspace = require( '@stdlib/array/base/incrspace' );\n*\n* var a = incrspace( 1, 11, 1 );\n* var b = incrspace( 11, 21, 1 );\n*\n* var out = pcorrtest( a, b );\n* var table = out.print();\n*/\n\n// MODULES //\n\nvar pcorrtest = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = pcorrtest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar contains = require( '@stdlib/assert/contains' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar ALTERNATIVE = [\n\t'two-sided',\n\t'less',\n\t'greater'\n];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {string} [options.alternative] - alternative hypothesis\n* @param {number} [options.mu] - mean under `H0`\n* @returns {(null|Error)} null or an error object\n*\n* @example\n* var options = {\n*     'alpha': 0.05\n* };\n* var opts = {};\n*\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t\tif ( opts.alpha < 0.0 || opts.alpha > 1.0 ) {\n\t\t\treturn new RangeError( format( 'invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'alternative' ) ) {\n\t\topts.alternative = options.alternative;\n\t\tif ( !isString( opts.alternative ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'alternative', opts.alternative ) );\n\t\t}\n\t\tif ( !contains( ALTERNATIVE, opts.alternative ) ) {\n\t\t\treturn new Error( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'alternative', ALTERNATIVE.join( '\", \"' ), opts.alternative ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'mu' ) ) {\n\t\topts.mu = options.mu;\n\t\tif ( !isNumber( opts.mu ) || isnan( opts.mu ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'mu', opts.mu ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar roundn = require( '@stdlib/math/base/special/roundn' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Alternative hypothesis: ';\n\tif ( this.method === 'Paired t-test' ) {\n\t\tstr += 'True difference in means is ';\n\t} else {\n\t\tstr += 'True mean is ';\n\t}\n\tswitch ( this.alternative ) {\n\tcase 'two-sided':\n\tdefault:\n\t\tstr += 'not equal to ';\n\t\tbreak;\n\tcase 'less':\n\t\tstr += 'less than ';\n\t\tbreak;\n\tcase 'greater':\n\t\tstr += 'greater than ';\n\t\tbreak;\n\t}\n\tstr += this.nullValue;\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts ) + '\\n';\n\tstr += '    df: ' + this.df + '\\n';\n\tstr += '    ' + ((1.0-this.alpha)*100) + '% confidence interval: [' +\n\t\troundn( this.ci[0], -dgts ) +\n\t\t',' +\n\t\troundn( this.ci[1], -dgts ) +\n\t']';\n\tstr += '\\n\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumberArray = require( '@stdlib/assert/is-number-array' ).primitives;\nvar isTypedArrayLike = require( '@stdlib/assert/is-typed-array-like' );\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar tCDF = require( './../../base/dists/t/cdf' );\nvar tQuantile = require( './../../base/dists/t/quantile' );\nvar format = require( '@stdlib/string/format' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar mean = require( './../../base/mean' );\nvar variance = require( './../../base/variance' );\nvar gcopy = require( '@stdlib/blas/base/gcopy' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar validate = require( './validate.js' );\nvar print = require( './print.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Computes a one-sample or paired Student's t test.\n*\n* @param {NumericArray} x - input array\n* @param {NumericArray} [y] - optional paired array\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {string} [options.alternative='two-sided'] - alternative hypothesis (`two-sided`, `less`, or `greater`)\n* @param {number} [options.mu=0.0] - mean under `H0`\n* @throws {TypeError} first argument must be a numeric array\n* @throws {Error} first argument must contain at least two elements\n* @throws {Error} paired array must have the same length as the first argument\n* @throws {TypeError} second argument must be either a numeric array or an options object\n* @throws {TypeError} `alpha` option must be number\n* @throws {RangeError} `alpha` option must be reside along the interval `[0,1]`\n* @throws {TypeError} `alternative` option must be a recognized option value (`two-sided`, `less`, or `greater`)\n* @throws {TypeError} `mu` option must be a number\n* @returns {Object} test results\n*\n* @example\n* var x = [ 4.0, 4.0, 6.0, 6.0, 5.0 ];\n* var opts = {\n*     'mu': 5.0\n* };\n* var out = ttest( x, opts );\n* // returns {...}\n*\n* @example\n* var x = [ 4.0, 4.0, 6.0, 6.0, 5.0 ];\n* var opts = {\n*     'alternative': 'greater'\n* };\n* var out = ttest( x, opts );\n* // returns {...}\n*/\nfunction ttest( x ) {\n\tvar stderr;\n\tvar xmean;\n\tvar cint;\n\tvar pval;\n\tvar opts;\n\tvar stat;\n\tvar err;\n\tvar len;\n\tvar out;\n\tvar df;\n\tvar tq;\n\tvar y;\n\tvar i;\n\n\tif ( !isTypedArrayLike( x ) && !isNumberArray( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a numeric array. Value: `%s`.', x ) );\n\t}\n\tlen = x.length;\n\tif ( len < 2 ) {\n\t\tthrow new Error( format( 'invalid argument. First argument must contain at least two elements. Value: `%s`.', x ) );\n\t}\n\topts = {\n\t\t'mu': 0.0,\n\t\t'alpha': 0.05,\n\t\t'alternative': 'two-sided'\n\t};\n\tif ( arguments.length === 2 ) {\n\t\tif ( isObject( arguments[ 1 ] ) ) {\n\t\t\terr = validate( opts, arguments[ 1 ] );\n\t\t\tif ( err ) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t} else {\n\t\t\ty = arguments[ 1 ];\n\t\t\tif ( !isTypedArrayLike( y ) && !isNumberArray( y ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be either a numeric array or an options object. Value: `%s`.', y ) );\n\t\t\t}\n\t\t}\n\t} else if ( arguments.length > 2 ) {\n\t\ty = arguments[ 1 ];\n\t\tif ( !isTypedArrayLike( y ) && !isNumberArray( y ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a numeric array. Value: `%s`.', y ) );\n\t\t}\n\t\terr = validate( opts, arguments[ 2 ] );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( y ) {\n\t\tif ( y.length !== len ) {\n\t\t\tthrow new Error( 'invalid arguments. First and second arguments must have the same length.' );\n\t\t}\n\t\tx = gcopy( len, x, 1, new Float64Array( len ), 1 );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tx[ i ] -= y[ i ];\n\t\t}\n\t}\n\tstderr = sqrt( variance( len, 1, x, 1 ) / len ); // TODO: replace with base/sem\n\txmean = mean( len, x, 1 ); // TODO: ideally, we would get both the sem and the mean from the same function and without needing to traverse 3-4 times\n\tstat = ( xmean-opts.mu ) / stderr;\n\tdf = len - 1;\n\tif ( opts.alternative === 'two-sided' ) {\n\t\tpval = 2.0 * tCDF( -abs(stat), df );\n\t\ttq = tQuantile( 1.0-(opts.alpha/2.0), df );\n\t\tcint = [\n\t\t\topts.mu + ( (stat-tq)*stderr ),\n\t\t\topts.mu + ( (stat+tq)*stderr )\n\t\t];\n\t} else if ( opts.alternative === 'greater' ) {\n\t\tpval = 1.0 - tCDF( stat, df );\n\t\ttq = tQuantile( 1.0-opts.alpha, df );\n\t\tcint = [\n\t\t\topts.mu + ( (stat-tq)*stderr ),\n\t\t\tPINF\n\t\t];\n\t} else { // opts.alternative === 'less'\n\t\tpval = tCDF( stat, df );\n\t\ttq = tQuantile( 1.0-opts.alpha, df );\n\t\tcint = [\n\t\t\tNINF,\n\t\t\topts.mu + ( (stat+tq)*stderr )\n\t\t];\n\t}\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= opts.alpha );\n\tsetReadOnly( out, 'alpha', opts.alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'ci', cint );\n\tsetReadOnly( out, 'df', df );\n\tsetReadOnly( out, 'nullValue', opts.mu );\n\tsetReadOnly( out, 'mean', xmean );\n\tsetReadOnly( out, 'sd', stderr );\n\tsetReadOnly( out, 'alternative', opts.alternative );\n\tsetReadOnly( out, 'method', ( y ) ? 'Paired t-test' : 'One-sample t-test' );\n\tsetReadOnly( out, 'print', print );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ttest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a one-sample Student's t-Test.\n*\n* @module @stdlib/stats/ttest\n*\n* @example\n* var normal = require( '@stdlib/random/base/normal' ).factory;\n* var Float64Array = require( '@stdlib/array/float64' );\n* var ttest = require( '@stdlib/stats/ttest' );\n*\n* var rnorm;\n* var out;\n* var i;\n* var x;\n* var y;\n*\n* rnorm = normal( 1.0, 2.0, {\n*     'seed': 786\n* });\n*\n* // One-sample t-test:\n* x = new Float64Array( 100 );\n* for ( i = 0; i < x.length; i++ ) {\n*     x[ i ] = rnorm();\n* }\n* out = ttest( x );\n*\n* // Paired t-test:\n* x = new Float64Array( 100 );\n* y = new Float64Array( 100 );\n* for ( i = 0; i < x.length; i++ ) {\n*     x[ i ] = rnorm();\n*     y[ i ] = rnorm();\n* }\n* out = ttest( x, y );\n*/\n\n// MODULES //\n\nvar ttest = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ttest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {string} [options.alternative] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {number} [options.difference] - difference in means under H0\n* @param {string} [options.variance] - whether variances are `equal` or `unequal` under H0\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'alternative' ) ) {\n\t\topts.alternative = options.alternative;\n\t\tif ( !isString( opts.alternative ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'alternative', opts.alternative ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'difference' ) ) {\n\t\topts.difference = options.difference;\n\t\tif ( !isNumber( opts.difference ) || isnan( opts.difference ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'difference', opts.difference ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'variance' ) ) {\n\t\topts.variance = options.variance;\n\t\tif ( !isString( opts.variance ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'variance', opts.variance ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar roundn = require( '@stdlib/math/base/special/roundn' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Alternative hypothesis: ';\n\tstr += 'True difference in means is ';\n\tswitch ( this.alternative ) {\n\tcase 'two-sided':\n\tdefault:\n\t\tstr += 'not equal to ';\n\t\tbreak;\n\tcase 'less':\n\t\tstr += 'less than ';\n\t\tbreak;\n\tcase 'greater':\n\t\tstr += 'greater than ';\n\t\tbreak;\n\t}\n\tstr += this.nullValue;\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts ) + '\\n';\n\tstr += '    df: ' + roundn( this.df, -dgts ) + '\\n';\n\tstr += '    ' + ((1.0-this.alpha)*100) + '% confidence interval: [' +\n\t\troundn( this.ci[0], -dgts ) +\n\t\t',' +\n\t\troundn( this.ci[1], -dgts ) +\n\t']';\n\tstr += '\\n\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumberArray = require( '@stdlib/assert/is-number-array' ).primitives;\nvar isTypedArrayLike = require( '@stdlib/assert/is-typed-array-like' );\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar tCDF = require( './../../base/dists/t/cdf' );\nvar tQuantile = require( './../../base/dists/t/quantile' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar mean = require( './../../base/mean' );\nvar variance = require( './../../base/variance' );\nvar format = require( '@stdlib/string/format' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar validate = require( './validate.js' );\nvar print = require( './print.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Computes a two-sample Student's t test.\n*\n* @param {NumericArray} x - first data array\n* @param {NumericArray} y - second data array\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {string} [options.alternative='two-sided'] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {number} [options.difference=0] - difference in means under H0\n* @param {string} [options.variance='unequal'] - whether variances are `equal` or `unequal` under H0\n* @throws {TypeError} x argument has to be a typed array or array of numbers\n* @throws {TypeError} y argument has to be a typed array or array of numbers\n* @throws {TypeError} options must be an object\n* @throws {TypeError} alpha option has to be a number\n* @throws {RangeError} alpha option has to be a number in the interval `[0,1]`\n* @throws {TypeError} alternative option has to be a string\n* @throws {Error} alternative option must be `two-sided`, `less` or `greater`\n* @throws {TypeError} difference option has to be a number\n* @throws {TypeError} variance option has to be a string\n* @throws {Error} variance option must be `equal` or `unequal`\n* @returns {Object} test result object\n*/\nfunction ttest2( x, y, options ) {\n\tvar stderr;\n\tvar alpha;\n\tvar xmean;\n\tvar ymean;\n\tvar vars;\n\tvar cint;\n\tvar diff;\n\tvar opts;\n\tvar pval;\n\tvar xvar;\n\tvar yvar;\n\tvar stat;\n\tvar sdx;\n\tvar sdy;\n\tvar alt;\n\tvar err;\n\tvar out;\n\tvar nx;\n\tvar ny;\n\tvar df;\n\tvar v;\n\n\tif ( !isTypedArrayLike( x ) && !isNumberArray( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a numeric array. Value: `%s`.', x ) );\n\t}\n\tif ( !isTypedArrayLike( y ) && !isNumberArray( y ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a numeric array. Value: `%s`.', y ) );\n\t}\n\topts = {};\n\tif ( options ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tdiff = opts.difference || 0.0;\n\tif ( opts.alpha === void 0 ) {\n\t\talpha = 0.05;\n\t} else {\n\t\talpha = opts.alpha;\n\t}\n\tif ( alpha < 0.0 || alpha > 1.0 ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.', 'alpha', alpha ) );\n\t}\n\tnx = x.length;\n\tny = y.length;\n\n\txvar = variance( nx, 1, x, 1 );\n\tyvar = variance( ny, 1, y, 1 );\n\n\tvars = opts.variance || 'unequal';\n\tif ( vars === 'equal' ) {\n\t\tdf = nx + ny - 2;\n\t\tv = ((nx-1) * xvar) + ((ny-1) * yvar);\n\t\tv /= df;\n\t\tstderr = sqrt( v * ((1/nx) + (1/ny)) );\n\t}\n\telse if ( vars === 'unequal' ) {\n\t\tsdx = sqrt( xvar/nx );\n\t\tsdy = sqrt( yvar/ny );\n\t\tstderr = sqrt( (sdx*sdx) + (sdy*sdy) );\n\t\tv = pow( sdx, 4 ) / ( nx - 1 );\n\t\tv += pow( sdy, 4 ) / ( ny - 1 );\n\t\tdf = pow( stderr, 4 ) / v;\n\t}\n\telse {\n\t\tthrow new Error( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'variance', [ 'equal', 'unequal' ].join( '\", \"' ), vars ) );\n\t}\n\n\txmean = mean( nx, x, 1 );\n\tymean = mean( ny, y, 1 );\n\tstat = ( xmean - ymean - diff ) / stderr;\n\n\talt = opts.alternative || 'two-sided';\n\tswitch ( alt ) {\n\tcase 'two-sided':\n\t\tpval = 2.0 * tCDF( -abs(stat), df );\n\t\tcint = [\n\t\t\tstat - tQuantile( 1.0-(alpha/2.0), df ),\n\t\t\tstat + tQuantile( 1.0-(alpha/2.0), df )\n\t\t];\n\t\tcint[ 0 ] = diff + (cint[ 0 ] * stderr);\n\t\tcint[ 1 ] = diff + (cint[ 1 ] * stderr);\n\t\tbreak;\n\tcase 'greater':\n\t\tpval = 1.0 - tCDF( stat, df );\n\t\tcint = [ stat - tQuantile( 1.0-alpha, df ), PINF ];\n\t\tcint[ 0 ] = diff + (cint[ 0 ] * stderr);\n\t\tbreak;\n\tcase 'less':\n\t\tpval = tCDF( stat, df );\n\t\tcint = [ NINF, stat + tQuantile( 1.0-alpha, df ) ];\n\t\tcint[ 1 ] = diff + (cint[ 1 ] * stderr);\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'alternative', [ 'two-sided', 'less', 'greater' ].join( '\", \"' ), alt ) );\n\t}\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= alpha );\n\tsetReadOnly( out, 'alpha', alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'ci', cint );\n\tsetReadOnly( out, 'alternative', alt );\n\tsetReadOnly( out, 'df', df );\n\tsetReadOnly( out, 'method', ( vars === 'equal' ) ? 'Two-sample t-test' : 'Welch two-sample t-test' );\n\tsetReadOnly( out, 'nullValue', diff );\n\tsetReadOnly( out, 'xmean', xmean );\n\tsetReadOnly( out, 'ymean', ymean );\n\tsetReadOnly( out, 'print', print );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ttest2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a two-sample Student's t-Test.\n*\n* @module @stdlib/stats/ttest2\n*\n* @example\n* var ttest2 = require( '@stdlib/stats/ttest2' );\n* var incrspace = require( '@stdlib/array/base/incrspace' );\n*\n* var a = incrspace( 1, 11, 1 );\n* var b = incrspace( 7, 21, 1 );\n*\n* var out = ttest2( a, b );\n* var table = out.print();\n*/\n\n// MODULES //\n\nvar ttest2 = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ttest2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar kernelBetaincinv = require( '@stdlib/math/base/special/kernel-betaincinv' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Evaluates the quantile function for an F distribution with numerator degrees of freedom `d1` and denominator degrees of freedom `d2` at a probability `p`.\n*\n* @param {Probability} p - input value\n* @param {PositiveNumber} d1 - numerator degrees of freedom\n* @param {PositiveNumber} d2 - denominator degrees of freedom\n* @returns {number} evaluated quantile function\n*\n* @example\n* var y = quantile( 0.8, 1.0, 1.0 );\n* // returns ~9.472\n*\n* @example\n* var y = quantile( 0.5, 4.0, 2.0 );\n* // returns ~1.207\n*\n* @example\n* var y = quantile( 1.1, 1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( -0.2, 1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( NaN, 1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.5, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.5, 1.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.5, -1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.5, 1.0, -1.0 );\n* // returns NaN\n*/\nfunction quantile( p, d1, d2 ) {\n\tvar xs;\n\tif (\n\t\tisnan( p ) ||\n\t\tisnan( d1 ) ||\n\t\tisnan( d2 ) ||\n\t\td1 <= 0.0 ||\n\t\td2 <= 0.0 ||\n\t\tp < 0.0 ||\n\t\tp > 1.0\n\t) {\n\t\treturn NaN;\n\t}\n\txs = kernelBetaincinv( d1/2.0, d2/2.0, p, 1.0 - p );\n\treturn d2 * xs[ 0 ] / ( d1 * xs[ 1 ] );\n}\n\n\n// EXPORTS //\n\nmodule.exports = quantile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar kernelBetaincinv = require( '@stdlib/math/base/special/kernel-betaincinv' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the quantile function for an F distribution with numerator degrees of freedom `d1` and denominator degrees of freedom `d2`.\n*\n* @param {PositiveNumber} d1 - numerator degrees of freedom\n* @param {PositiveNumber} d2 - denominator degrees of freedom\n* @returns {Function} quantile function\n*\n* @example\n* var quantile = factory( 10.0, 2.0 );\n* var y = quantile( 0.4 );\n* // returns ~0.994\n*\n* y = quantile( 0.8 );\n* // returns ~4.382\n*/\nfunction factory( d1, d2 ) {\n\tif (\n\t\tisnan( d1 ) ||\n\t\tisnan( d2 ) ||\n\t\td1 <= 0.0 ||\n\t\td2 <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn quantile;\n\n\t/**\n\t* Evaluates the quantile function for an F distribution.\n\t*\n\t* @private\n\t* @param {Probability} p - input value\n\t* @returns {number} evaluated quantile function\n\t*\n\t* @example\n\t* var y = quantile( 0.3 );\n\t* // returns <number>\n\t*/\n\tfunction quantile( p ) {\n\t\tvar xs;\n\t\tif ( isnan( p ) || p < 0.0 || p > 1.0 ) {\n\t\t\treturn NaN;\n\t\t}\n\t\txs = kernelBetaincinv( d1/2.0, d2/2.0, p, 1.0 - p );\n\t\treturn d2 * xs[ 0 ] / ( d1 * xs[ 1 ] );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the quantile function for an F distribution.\n*\n* @module @stdlib/stats/base/dists/f/quantile\n*\n* @example\n* var quantile = require( '@stdlib/stats/base/dists/f/quantile' );\n*\n* var y = quantile( 0.8, 1.0, 1.0 );\n* // returns ~9.472\n*\n* y = quantile( 0.5, 4.0, 2.0 );\n* // returns ~1.207\n*\n* var myquantile = quantile.factory( 10.0, 2.0 );\n*\n* y = myquantile( 0.2 );\n* // returns ~0.527\n*\n* y = myquantile( 0.8 );\n* // returns ~4.382\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar quantile = require( './quantile.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( quantile, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = quantile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {string} [options.alternative] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {PositiveNumber} [options.ratio] - ratio of population variances under H0\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'alternative' ) ) {\n\t\topts.alternative = options.alternative;\n\t\tif ( !isString( opts.alternative ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'alternative', opts.alternative ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'ratio' ) ) {\n\t\topts.ratio = options.ratio;\n\t\tif ( !isPositiveNumber( opts.ratio ) || isnan( opts.ratio ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'ratio', opts.ratio ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar roundn = require( '@stdlib/math/base/special/roundn' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Alternative hypothesis: ';\n\tstr += 'True ratio in variances is ';\n\tswitch ( this.alternative ) {\n\tcase 'two-sided':\n\tdefault:\n\t\tstr += 'not equal to ';\n\t\tbreak;\n\tcase 'less':\n\t\tstr += 'less than ';\n\t\tbreak;\n\tcase 'greater':\n\t\tstr += 'greater than ';\n\t\tbreak;\n\t}\n\tstr += this.nullValue;\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts ) + '\\n';\n\tstr += '    variance of x: ' + roundn( this.xvar, -dgts );\n\tstr += ' (df of x: ' + roundn( this.dfX, -dgts ) + ')\\n';\n\tstr += '    variance of y: ' + roundn( this.yvar, -dgts );\n\tstr += ' (df of y: ' + roundn( this.dfY, -dgts ) + ')\\n';\n\tstr += '    ' + ((1.0-this.alpha)*100) + '% confidence interval: [' +\n\t\troundn( this.ci[0], -dgts ) +\n\t\t',' +\n\t\troundn( this.ci[1], -dgts ) +\n\t']';\n\tstr += '\\n\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumberArray = require( '@stdlib/assert/is-number-array' ).primitives;\nvar isTypedArrayLike = require( '@stdlib/assert/is-typed-array-like' );\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar fCDF = require( './../../base/dists/f/cdf' );\nvar fQuantile = require( './../../base/dists/f/quantile' );\nvar variance = require( './../../base/variance' );\nvar format = require( '@stdlib/string/format' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar validate = require( './validate.js' );\nvar print = require( './print.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Computes a two-sample F-test for equal variances.\n*\n* @param {NumericArray} x - first data array\n* @param {NumericArray} y - second data array\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {string} [options.alternative='two-sided'] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {PositiveNumber} [options.ratio=1] - ratio of population variances under H0\n* @throws {TypeError} x argument has to be a typed array or array of numbers\n* @throws {TypeError} y argument has to be a typed array or array of numbers\n* @throws {TypeError} options must be an object\n* @throws {TypeError} alpha option has to be a number\n* @throws {RangeError} alpha option has to be a number in the interval `[0,1]`\n* @throws {TypeError} alternative option has to be a string\n* @throws {Error} alternative option must be `two-sided`, `less` or `greater`\n* @throws {TypeError} ratio option has to be a number\n* @returns {Object} test result object\n*\n* @example\n* var x = [ 610, 610, 550, 590, 565, 570 ];\n* var y = [ 560, 550, 580, 550, 560, 590, 550, 590 ];\n*\n* var out = vartest( x, y );\n*/\nfunction vartest( x, y, options ) {\n\tvar estimate;\n\tvar alpha;\n\tvar ratio;\n\tvar beta;\n\tvar cint;\n\tvar opts;\n\tvar pval;\n\tvar stat;\n\tvar xvar;\n\tvar yvar;\n\tvar alt;\n\tvar err;\n\tvar out;\n\tvar dfX;\n\tvar dfY;\n\n\tif ( !isTypedArrayLike( x ) && !isNumberArray( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a numeric array. Value: `%s`.', x ) );\n\t}\n\tif ( !isTypedArrayLike( y ) && !isNumberArray( y ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a numeric array. Value: `%s`.', y ) );\n\t}\n\topts = {};\n\tif ( options ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tratio = opts.ratio || 1.0;\n\tif ( opts.alpha === void 0 ) {\n\t\talpha = 0.05;\n\t} else {\n\t\talpha = opts.alpha;\n\t}\n\tif ( alpha < 0.0 || alpha > 1.0 ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.', 'alpha', alpha ) );\n\t}\n\tdfX = x.length - 1;\n\tdfY = y.length - 1;\n\n\txvar = variance( x.length, 1, x, 1 );\n\tyvar = variance( y.length, 1, y, 1 );\n\n\testimate = xvar / yvar;\n\tstat = estimate / ratio;\n\tpval = fCDF( stat, dfX, dfY );\n\n\talt = opts.alternative || 'two-sided';\n\tswitch ( alt ) {\n\tcase 'two-sided':\n\t\tpval = 2.0 * min( pval, 1.0 - pval );\n\t\tbeta = alpha / 2.0;\n\t\tcint = [\n\t\t\testimate / fQuantile( 1.0 - beta, dfX, dfY ),\n\t\t\testimate / fQuantile( beta, dfX, dfY )\n\t\t];\n\t\tbreak;\n\tcase 'greater':\n\t\tpval = 1.0 - pval;\n\t\tcint = [\n\t\t\testimate / fQuantile( 1.0 - alpha, dfX, dfY ),\n\t\t\tPINF\n\t\t];\n\t\tbreak;\n\tcase 'less':\n\t\tcint = [\n\t\t\t0.0,\n\t\t\testimate / fQuantile( alpha, dfX, dfY )\n\t\t];\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'alternative', [ 'two-sided', 'less', 'greater' ].join( '\", \"' ), alt ) );\n\t}\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= alpha );\n\tsetReadOnly( out, 'alpha', alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'ci', cint );\n\tsetReadOnly( out, 'alternative', alt );\n\tsetReadOnly( out, 'xvar', xvar );\n\tsetReadOnly( out, 'yvar', yvar );\n\tsetReadOnly( out, 'dfX', dfX );\n\tsetReadOnly( out, 'dfY', dfY );\n\tsetReadOnly( out, 'method', 'F test for comparing two variances' );\n\tsetReadOnly( out, 'nullValue', ratio );\n\tsetReadOnly( out, 'print', print );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = vartest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a two-sample F-test for equal variances.\n*\n* @module @stdlib/stats/vartest\n*\n* @example\n* var vartest = require( '@stdlib/stats/vartest' );\n*\n* var x = [ 610, 610, 550, 590, 565, 570 ];\n* var y = [ 560, 550, 580, 550, 560, 590, 550, 590 ];\n*\n* var out = vartest( x, y );\n*/\n\n// MODULES //\n\nvar vartest = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = vartest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( './../../../../base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is a positive integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is a positive integer\n*\n* @example\n* var bool = isPositiveInteger( 1.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( -10.0 );\n* // returns false\n*/\nfunction isPositiveInteger( x ) {\n\treturn (floor(x) === x && x > 0);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a finite double-precision floating-point number is a positive integer.\n*\n* @module @stdlib/math/base/assert/is-positive-integer\n*\n* @example\n* var isPositiveInteger = require( '@stdlib/math/base/assert/is-positive-integer' );\n*\n* var bool = isPositiveInteger( 1.0 );\n* // returns true\n*\n* bool = isPositiveInteger( 0.0 );\n* // returns false\n*\n* bool = isPositiveInteger( -10.0 );\n* // returns false\n*/\n\n// MODULES //\n\nvar isPositiveInteger = require( './is_positive_integer.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\n\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is finite.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is finite\n*\n* @example\n* var bool = isfinite( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isfinite( -2.0e64 );\n* // returns true\n*\n* @example\n* var bool = isfinite( Infinity );\n* // returns false\n*\n* @example\n* var bool = isfinite( -Infinity );\n* // returns false\n*/\nfunction isfinite( x ) {\n\treturn (\n\t\t// NaN check (x !== x ):\n\t\tx === x &&\n\n\t\t// +-infinity check:\n\t\tx > NINF &&\n\t\tx < PINF\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isfinite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a double-precision floating-point numeric value is finite.\n*\n* @module @stdlib/math/base/assert/is-finite\n*\n* @example\n* var isfinite = require( '@stdlib/math/base/assert/is-finite' );\n*\n* var bool = isfinite( 5.0 );\n* // returns true\n*\n* bool = isfinite( -2.0e64 );\n* // returns true\n*\n* bool = isfinite( Infinity );\n* // returns false\n*\n* bool = isfinite( -Infinity );\n* // returns false\n*/\n\n// MODULES //\n\nvar isfinite = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isfinite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar setReadOnly = require( './../../define-nonenumerable-read-only-property' );\nvar identity = require( './../../identity-function' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns a memoized function.\n*\n* @param {Function} fcn - function to memoize\n* @param {Function} [hashFunction] - function to map a set of arguments to a single value identifying that set\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @returns {Function} memoized function\n*\n* @example\n* function factorial( n ) {\n*     var prod;\n*     var i;\n*     prod = 1;\n*     for ( i = n; i > 1; i-- ) {\n*         prod *= i;\n*     }\n*     return prod;\n* }\n*\n* var memoized = memoize( factorial );\n*\n* var v = memoized( 5 );\n* // returns 120\n*\n* v = memoized( 5 );\n* // returns 120\n*/\nfunction memoize( fcn, hashFunction ) {\n\tvar toKey;\n\tvar cache;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\ttoKey = identity;\n\t} else {\n\t\ttoKey = hashFunction;\n\t\tif ( !isFunction( toKey ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Hash function argument must be a function. Value: `%s`.', toKey ) );\n\t\t}\n\t}\n\tcache = {};\n\tsetReadOnly( memoized, 'cache', cache );\n\treturn memoized;\n\n\t/**\n\t* Memoized function.\n\t*\n\t* @private\n\t* @param {...*} args - function arguments\n\t* @returns {*} memoized function result\n\t*/\n\tfunction memoized() {\n\t\tvar args;\n\t\tvar out;\n\t\tvar key;\n\t\tvar i;\n\t\targs = new Array( arguments.length );\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\tkey = toKey( args ).toString();\n\t\tif ( hasOwnProp( cache, key ) ) {\n\t\t\treturn cache[ key ];\n\t\t}\n\t\tout = fcn.apply( null, args );\n\t\tcache[ key ] = out;\n\t\treturn out;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = memoize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar memoize = require( '@stdlib/utils/memoize' );\n\n\n// VARIABLES //\n\nvar memoized;\n\n\n// FUNCTIONS //\n\n/**\n* Calculates the weight for the `(x,n)` pair and memoizes the result.\n*\n* @private\n* @param {number} x - input value\n* @param {NonNegativeInteger} n - number of observations\n* @returns {number} weight\n*/\nfunction weights( x, n ) {\n\tvar mlim;\n\n\tif ( n === 0 ) {\n\t\treturn ( x === 0 ) ? 1 : 0;\n\t}\n\tmlim = n * ( n + 1 ) / 2;\n\tif ( x < 0 || x > mlim ) {\n\t\treturn 0;\n\t}\n\tif ( x > mlim / 2 ) {\n\t\tx = mlim - x;\n\t}\n\treturn memoized( x - n, n - 1 ) + memoized( x, n - 1 );\n}\n\n\n// MAIN //\n\nmemoized = memoize( weights );\n\n\n// EXPORTS //\n\nmodule.exports = memoized;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Memoize a function.\n*\n* @module @stdlib/utils/memoize\n*\n* @example\n* var memoize = require( '@stdlib/utils/memoize' );\n*\n* function factorial( n ) {\n*     var prod;\n*     var i;\n*     prod = 1;\n*     for ( i = n; i > 1; i-- ) {\n*         prod *= i;\n*     }\n*     return prod;\n* }\n*\n* var memoized = memoize( factorial );\n*\n* var v = memoized( 5 );\n* // returns 120\n*\n* v = memoized( 5 );\n* // returns 120\n*/\n\n// MODULES //\n\nvar memoize = require( './memoize.js' );\n\n\n// EXPORTS //\n\nmodule.exports = memoize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/math/base/assert/is-positive-integer' );\nvar isfinite = require( '@stdlib/math/base/assert/is-finite' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar round = require( '@stdlib/math/base/special/round' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar LN2 = require( '@stdlib/constants/float64/ln-two' );\nvar weights = require( './weights.js' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) of the Wilcoxon signed rank test statistic with `n` observations.\n*\n* @param {number} x - input value\n* @param {PositiveInteger} n - number of observations\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 7.0, 9 );\n* // returns ~0.037\n*\n* @example\n* var y = cdf( 7.0, 6 );\n* // returns ~0.281\n*\n* @example\n* var y = cdf( -1.0, 40 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( NaN, 10 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, -1 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 1.8 );\n* // returns NaN\n*/\nfunction cdf( x, n ) {\n\tvar mlim;\n\tvar pui;\n\tvar i;\n\tvar p;\n\tif (\n\t\tisnan( x ) ||\n\t\t!isPositiveInteger( n ) ||\n\t\t!isfinite( n )\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x < 0.0 ) {\n\t\treturn 0.0;\n\t}\n\tx = round( x );\n\tmlim = n * ( n + 1 ) / 2;\n\tif ( x >= mlim ) {\n\t\treturn 1.0;\n\t}\n\tpui = exp( -n * LN2 );\n\tp = 0;\n\tfor ( i = 0; i <= x; i++ ) {\n\t\tp += weights( i, n ) * pui;\n\t}\n\treturn p;\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/math/base/assert/is-positive-integer' );\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar isfinite = require( '@stdlib/math/base/assert/is-finite' );\nvar round = require( '@stdlib/math/base/special/round' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar LN2 = require( '@stdlib/constants/float64/ln-two' );\nvar weights = require( './weights.js' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for the distribution of the Wilcoxon signed rank test statistic with `n` observations.\n*\n* @param {PositiveInteger} n - number of observations\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 8 );\n* var y = cdf( 3.9 );\n* // returns ~0.027\n*\n* y = cdf( 17.0 );\n* // returns ~0.473\n*/\nfunction factory( n ) {\n\tvar mlim;\n\tvar pui;\n\n\tif ( !isPositiveInteger( n ) || !isfinite( n ) ) {\n\t\treturn constantFunction( NaN );\n\t}\n\tpui = exp( -n * LN2 );\n\tmlim = n * ( n + 1 ) / 2;\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for the distribution of the Wilcoxon signed rank test statistic.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tvar i;\n\t\tvar p;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < 0.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tx = round( x );\n\t\tif ( x >= mlim ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\tp = 0;\n\t\tfor ( i = 0; i <= x; i++ ) {\n\t\t\tp += weights( i, n ) * pui;\n\t\t}\n\t\treturn p;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Wilcoxon signed rank test statistic cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/signrank/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/signrank/cdf' );\n*\n* var y = cdf( 7.0, 9 );\n* // returns ~0.037\n*\n* var myCDF = cdf.factory( 8 );\n* y = myCDF( 3.9 );\n* // returns ~0.027\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar indexOf = require( './../../index-of' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Generates a frequency table.\n*\n* ## Notes\n*\n* -   The output is an array of arrays. Each sub-array corresponds to a unique value in the input collection and is structured as follows:\n*\n*     -   0: unique value\n*     -   1: value count\n*     -   2: frequency percentage\n*\n*\n* @param {Collection} collection - input collection\n* @throws {TypeError} first argument must be a collection\n* @returns {(Array<Array>|Array)} frequency table\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'beep' ];\n*\n* var out = tabulate( arr );\n* // returns [ [ 'beep', 2, 0.5 ], [ 'boop', 1, 0.25 ], [ 'foo', 1, 0.25 ] ]\n*/\nfunction tabulate( collection ) {\n\tvar count;\n\tvar tmp;\n\tvar len;\n\tvar out;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tcount = 0;\n\ttmp = [];\n\tout = [];\n\n\t// For each collection element, determine if we've seen the element before. If not, cache a reference which points to its location in the output array; otherwise, update the running count.\n\tlen = collection.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = collection[ i ];\n\t\tcount += 1;\n\t\tj = indexOf( tmp, v );\n\t\tif ( j === -1 ) {\n\t\t\ttmp.push( v );\n\t\t\tout.push( [ v, 1, 0 ] );\n\t\t} else {\n\t\t\tout[ j ][ 1 ] += 1;\n\t\t}\n\t}\n\t// Compute percentages...\n\tlen = out.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout[ i ][ 2 ] = out[ i ][ 1 ] / count;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = tabulate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate a frequency table.\n*\n* @module @stdlib/utils/tabulate\n*\n* @example\n* var tabulate = require( '@stdlib/utils/tabulate' );\n*\n* var arr = [ 'beep', 'boop', 'foo', 'beep' ];\n*\n* var out = tabulate( arr );\n* // returns [ [ 'beep', 2, 0.5 ], [ 'boop', 1, 0.25 ], [ 'foo', 1, 0.25 ] ]\n*/\n\n// MODULES //\n\nvar tabulate = require( './tabulate.js' );\n\n\n// EXPORTS //\n\nmodule.exports = tabulate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar contains = require( '@stdlib/assert/contains' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar ALTERNATIVE_VALUES = [ 'two-sided', 'less', 'greater' ];\nvar ZERO_METHOD_VALUES = [ 'pratt', 'wilcox', 'zsplit' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {string} [options.alternative] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {boolean} [options.exact] - whether to force using the exact distribution instead of a normal approximation when there are more than fifty data points\n* @param {boolean} [options.correction] - continuity correction adjusting the Wilcoxon rank statistic by 0.5 towards the mean\n* @param {string} [options.zeroMethod] - method governing how zero-differences are handled (`pratt`, `wilcox` or `zsplit`)\n* @param {number} [options.mu] - mean under H0\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t\tif ( opts.alpha < 0.0 || opts.alpha > 1.0 ) {\n\t\t\treturn new RangeError( format( 'invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'alternative' ) ) {\n\t\topts.alternative = options.alternative;\n\t\tif ( !isString( opts.alternative ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'alternative', opts.alternative ) );\n\t\t}\n\t\tif ( !contains( ALTERNATIVE_VALUES, opts.alternative ) ) {\n\t\t\treturn new Error( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'alternative', ALTERNATIVE_VALUES.join( '\", \"' ), opts.alternative ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'correction' ) ) {\n\t\topts.correction = options.correction;\n\t\tif ( !isBoolean( opts.correction ) || isnan( opts.correction ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'correction', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'exact' ) ) {\n\t\topts.exact = options.exact;\n\t\tif (\n\t\t\t!isBoolean( opts.exact ) ||\n\t\t\tisnan( opts.exact )\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'exact', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'mu' ) ) {\n\t\topts.mu = options.mu;\n\t\tif ( !isNumber( opts.mu ) || isnan( opts.mu ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'mu', opts.mu ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'zeroMethod' ) ) {\n\t\topts.zeroMethod = options.zeroMethod;\n\t\tif ( !isString( opts.zeroMethod ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'zeroMethod', opts.alternative ) );\n\t\t}\n\t\tif ( !contains( ZERO_METHOD_VALUES, opts.zeroMethod ) ) {\n\t\t\treturn new Error( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'zeroMethod', ZERO_METHOD_VALUES.join( '\", \"' ), opts.zeroMethod ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Comparator function to sort values in ascending order.\n*\n* @private\n* @param {number} a - first value\n* @param {number} b - second value\n* @returns {number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n}\n\n\n// MAIN //\n\n/**\n* Removes duplicate values from a numeric array.\n*\n* @private\n* @param {NumberArray} arr - array to be deduped\n* @returns {NumberArray} deduped array\n*/\nfunction unique( arr ) {\n\tvar len;\n\tvar val;\n\tvar i;\n\tvar j;\n\n\tarr = arr.slice();\n\tarr.sort( ascending );\n\tlen = arr.length;\n\n\t// Loop through the array, only incrementing a pointer when successive values are different. When a succeeding value is different, move the pointer and set the next value. In the trivial case where all array elements are unique, we incur a slight penalty in resetting the element value for each unique value. In other cases, we simply move a unique value to a new position in the array. The end result is a sorted array with unique values.\n\tfor ( i = 1, j = 0; i < len; i++ ) {\n\t\tval = arr[ i ];\n\t\tif ( arr[ j ] !== val ) {\n\t\t\tj += 1;\n\t\t\tarr[ j ] = val;\n\t\t}\n\t}\n\t// Truncate the array:\n\tarr.length = j + 1;\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = unique;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar roundn = require( '@stdlib/math/base/special/roundn' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Alternative hypothesis: ';\n\tif ( this.method === 'Paired Wilcoxon signed rank test' ) {\n\t\tstr += 'Median of the difference `x - y` is ';\n\t} else {\n\t\tstr += 'Median of `x` is ';\n\t}\n\tswitch ( this.alternative ) {\n\tcase 'two-sided':\n\tdefault:\n\t\tstr += 'not equal to ';\n\t\tbreak;\n\tcase 'less':\n\t\tstr += 'less than ';\n\t\tbreak;\n\tcase 'greater':\n\t\tstr += 'greater than ';\n\t\tbreak;\n\t}\n\tstr += this.nullValue;\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts ) + '\\n';\n\tstr += '\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = print;\n","/* eslint-disable max-statements, max-lines-per-function */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumberArray = require( '@stdlib/assert/is-number-array' ).primitives;\nvar isTypedArrayLike = require( '@stdlib/assert/is-typed-array-like' );\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar ranks = require( './../../ranks' );\nvar normalCDF = require( './../../base/dists/normal/cdf' ).factory;\nvar signrankCDF = require( './../../base/dists/signrank/cdf' );\nvar tabulate = require( '@stdlib/utils/tabulate' );\nvar signum = require( '@stdlib/math/base/special/signum' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar format = require( '@stdlib/string/format' );\nvar validate = require( './validate.js' );\nvar unique = require( './unique.js' );\nvar print = require( './print.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// VARIABLES //\n\nvar pnorm = normalCDF( 0.0, 1.0 );\n\n\n// MAIN //\n\n/**\n* Computes a Wilcoxon signed rank test.\n*\n* @param {NumericArray} x - data array\n* @param {NumericArray} [y] - optional paired data array\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {string} [options.alternative='two-sided'] - alternative hypothesis (`two-sided`, `less`, or `greater`)\n* @param {string} [options.zeroMethod='wilcox'] - method governing how zero-differences are handled (`pratt`, `wilcox`, or `zsplit`)\n* @param {boolean} [options.correction=true] - continuity correction adjusting the Wilcoxon rank statistic by 0.5 towards the mean\n* @param {boolean} [options.exact=false] - whether to force using the exact distribution instead of a normal approximation when there are more than fifty data points\n* @param {number} [options.mu=0] - location parameter under H0\n* @throws {TypeError} `x` must be a numeric array\n* @throws {TypeError} `y` must be a numeric array\n* @throws {TypeError} options must be an object\n* @throws {TypeError} `alpha` option has to be a number\n* @throws {RangeError} `alpha` option has to be a number in the interval `[0,1]`\n* @throws {TypeError} `alternative` option has to be a string\n* @throws {Error} `alternative` option must be `two-sided`, `less`, or `greater`\n* @throws {TypeError} `zeroMethod` option has to be a string\n* @throws {Error} `zeroMethod` option must be `pratt`, `wilcox`, or `zsplit`\n* @throws {TypeError} `correction` option has to be a boolean\n* @throws {TypeError} `exact` option has to be a boolean\n* @throws {TypeError} `mu` option has to be a number\n* @returns {Object} test result object\n*\n* @example\n* var x = [ 6, 8, 14, 16, 23, 24, 28, 29, 41, -48, 49, 56, 60, -67, 75 ];\n* var out = wilcoxon( x, {\n*     'mu': 2\n* });\n*\n* @example\n* var x = [ 6, 8, 14, 16, 23, 24, 28, 29, 41, -48, 49, 56, 60, -67, 75 ];\n* var out = wilcoxon( x, {\n*     'alternative': 'greater'\n* });\n*/\nfunction wilcoxon() {\n\tvar correction;\n\tvar zeroMethod;\n\tvar options;\n\tvar hasTies;\n\tvar counts;\n\tvar repsum;\n\tvar rplus;\n\tvar nzero;\n\tvar rzero;\n\tvar alpha;\n\tvar pval;\n\tvar opts;\n\tvar stat;\n\tvar alt;\n\tvar err;\n\tvar len;\n\tvar tmp;\n\tvar out;\n\tvar ad;\n\tvar mu;\n\tvar mn;\n\tvar se;\n\tvar d;\n\tvar i;\n\tvar r;\n\tvar T;\n\tvar v;\n\tvar x;\n\tvar y;\n\n\tx = arguments[ 0 ];\n\tif ( !isTypedArrayLike( x ) && !isNumberArray( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a numeric array. Value: `%s`.', x ) );\n\t}\n\tlen = x.length;\n\tif ( arguments.length > 1 ) {\n\t\tif ( isObject( arguments[ 1 ] ) ) {\n\t\t\toptions = arguments[ 1 ];\n\t\t} else {\n\t\t\ty = arguments[ 1 ];\n\t\t\tif ( !isTypedArrayLike( y ) && !isNumberArray( y ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. `%s` argument must be a numeric array. Value: `%s`.', 'y', y ) );\n\t\t\t}\n\t\t\tif ( len !== y.length ) {\n\t\t\t\tthrow new Error( 'invalid arguments. First and second arguments must have the same length.' );\n\t\t\t}\n\t\t\tif ( arguments.length > 2 ) {\n\t\t\t\toptions = arguments[ 2 ];\n\t\t\t}\n\t\t}\n\t}\n\topts = {};\n\tif ( options ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tmu = opts.mu || 0.0;\n\tif ( opts.correction === void 0 ) {\n\t\tcorrection = true;\n\t} else {\n\t\tcorrection = opts.correction;\n\t}\n\tif ( opts.alpha === void 0 ) {\n\t\talpha = 0.05;\n\t} else {\n\t\talpha = opts.alpha;\n\t}\n\tif ( len < 2 ) {\n\t\tthrow new Error( format( 'invalid argument. First argument must contain at least two elements. Value: `%s`.', x ) );\n\t}\n\talt = opts.alternative || 'two-sided';\n\tzeroMethod = opts.zeroMethod || 'wilcox';\n\n\tif ( zeroMethod === 'wilcox' ) {\n\t\t// Only keep all non-zero differences:\n\t\td = [];\n\t\tif ( y ) {\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = ( x[ i ] - y[ i ] ) - mu;\n\t\t\t\tif ( v !== 0 ) {\n\t\t\t\t\td.push( v );\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( x[ i ] !== 0 ) {\n\t\t\t\t\td.push( x[ i ] - mu );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tnzero = x.length - d.length;\n\t} else {\n\t\td = new Float64Array( len );\n\t\tnzero = 0;\n\t\tif ( y ) {\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\td[ i ] = ( x[ i ] - y[ i ] ) - mu;\n\t\t\t\tif ( d[ i ] === 0 ) {\n\t\t\t\t\tnzero += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\td[ i ] = x[ i ] - mu;\n\t\t\t\tif ( d[ i ] === 0 ) {\n\t\t\t\t\tnzero += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif ( nzero === len ) {\n\t\tthrow new Error( '`x` or `x - y` cannot be zero for all elements.' );\n\t}\n\t// Update length after potentially discarding zero values:\n\tlen = d.length;\n\tad = new Float64Array( len );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tad[ i ] = abs( d[ i ] );\n\t}\n\tr = ranks( ad );\n\trplus = 0;\n\trzero = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( d[ i ] > 0 ) {\n\t\t\trplus += r[ i ];\n\t\t}\n\t\telse if ( d[ i ] === 0 ) {\n\t\t\trzero += r[ i ];\n\t\t}\n\t}\n\thasTies = unique( r ).length !== r.length;\n\tif ( zeroMethod === 'zsplit' ) {\n\t\trplus += rzero / 2.0;\n\t}\n\tT = rplus;\n\tmn = len * ( len + 1.0 ) * 0.25;\n\tse = len * ( len + 1.0 ) * ( ( 2.0 * len ) + 1.0 );\n\n\tif ( zeroMethod === 'pratt' ) {\n\t\ttmp = [];\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( d[ i ] !== 0 ) {\n\t\t\t\ttmp.push( r[ i ] );\n\t\t\t}\n\t\t}\n\t\tr = tmp;\n\t\tmn -= nzero * ( nzero + 1.0 ) * 0.25;\n\t\tse -= nzero * ( nzero + 1.0 ) * ( ( 2.0 * nzero ) + 1.0 );\n\t}\n\tcounts = tabulate( r );\n\trepsum = 0;\n\tfor ( i = 0; i < counts.length; i++ ) {\n\t\tif ( counts[ i ][ 1 ] > 1 ) {\n\t\t\tv = counts[ i ][ 1 ];\n\t\t\trepsum += v * ( (v*v) - 1 );\n\t\t}\n\t}\n\tif ( repsum > 0 ) {\n\t\t// Correction for repeated values:\n\t\tse -= 0.5 * repsum;\n\t}\n\tse = sqrt( se / 24.0 );\n\n\tif (\n\t\t( len > 50 && !opts.exact ) ||\n\t\tnzero > 0 ||\n\t\thasTies\n\t) {\n\t\td = 0.0;\n\t\tif ( correction ) {\n\t\t\tswitch ( alt ) {\n\t\t\tcase 'two-sided':\n\t\t\t\td = 0.5 * signum( T - mn );\n\t\t\t\tbreak;\n\t\t\tcase 'less':\n\t\t\t\td = -0.5;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\td = 0.5;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Compute test statistic and p-value using normal approximation:\n\t\tstat = ( T - mn - d ) / se;\n\t\tif ( alt === 'two-sided' ) {\n\t\t\tpval = 2.0 * ( 1.0 - pnorm( abs( stat ) ) );\n\t\t} else if ( alt === 'greater' ) {\n\t\t\tpval = 1.0 - pnorm( stat );\n\t\t} else {\n\t\t\tpval = pnorm( stat );\n\t\t}\n\t} else {\n\t\t// Compute test statistic and p-value using exact critical values:\n\t\tstat = T;\n\t\tif ( alt === 'two-sided' ) {\n\t\t\tif ( stat > ( len * ( len+1 ) / 4 ) ) {\n\t\t\t\tpval = 2.0 * ( 1 - signrankCDF( stat - 1, len ) );\n\t\t\t} else {\n\t\t\t\tpval = 2.0 * signrankCDF( stat, len );\n\t\t\t}\n\t\t} else if ( alt === 'greater' ) {\n\t\t\tpval = 1.0 - signrankCDF( stat - 1, len );\n\t\t} else {\n\t\t\tpval = signrankCDF( stat, len );\n\t\t}\n\t}\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= alpha );\n\tsetReadOnly( out, 'alpha', alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', T );\n\tsetReadOnly( out, 'nullValue', mu );\n\tsetReadOnly( out, 'alternative', alt );\n\tsetReadOnly( out, 'method', ( ( y ) ? 'Paired' : 'One-Sample' ) + ' Wilcoxon signed rank test' );\n\tsetReadOnly( out, 'print', print );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = wilcoxon;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a Wilcoxon signed-rank test.\n*\n* @module @stdlib/stats/wilcoxon\n*\n* @example\n* var normal = require( '@stdlib/random/base/normal' ).factory;\n* var wilcoxon = require( '@stdlib/stats/wilcoxon' );\n*\n* var rnorm;\n* var out;\n* var i;\n* var x;\n* var y;\n*\n* rnorm = normal( 1.0, 2.0, {\n*     'seed': 786\n* });\n*\n* // One-sample Wilcoxon signed rank test:\n* x = new Array( 100 );\n* for ( i = 0; i < x.length; i++ ) {\n*     x[ i ] = rnorm();\n* }\n* out = wilcoxon( x );\n*\n* // Paired Wilcoxon signed rank test:\n* x = new Array( 100 );\n* y = new Array( 100 );\n* for ( i = 0; i < x.length; i++ ) {\n*     x[ i ] = rnorm();\n*     y[ i ] = rnorm();\n* }\n* out = wilcoxon( x, y );\n*/\n\n// MODULES //\n\nvar wilcoxon = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = wilcoxon;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {string} [options.alternative] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {number} [options.mu] - mean under H0\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'alternative' ) ) {\n\t\topts.alternative = options.alternative;\n\t\tif ( !isString( opts.alternative ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'alternative', opts.alternative ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'mu' ) ) {\n\t\topts.mu = options.mu;\n\t\tif ( !isNumber( opts.mu ) || isnan( opts.mu ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'mu', opts.mu ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar roundn = require( '@stdlib/math/base/special/roundn' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Alternative hypothesis: ';\n\tstr += 'True mean is ';\n\tswitch ( this.alternative ) {\n\tcase 'two-sided':\n\tdefault:\n\t\tstr += 'not equal to ';\n\t\tbreak;\n\tcase 'less':\n\t\tstr += 'less than ';\n\t\tbreak;\n\tcase 'greater':\n\t\tstr += 'greater than ';\n\t\tbreak;\n\t}\n\tstr += this.nullValue;\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts ) + '\\n';\n\tstr += '    ' + ((1.0-this.alpha)*100) + '% confidence interval: [' +\n\t\troundn( this.ci[0], -dgts ) +\n\t\t',' +\n\t\troundn( this.ci[1], -dgts ) +\n\t']';\n\tstr += '\\n\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\nvar isNumberArray = require( '@stdlib/assert/is-number-array' ).primitives;\nvar isTypedArrayLike = require( '@stdlib/assert/is-typed-array-like' );\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar cdfFactory = require( './../../base/dists/normal/cdf' ).factory;\nvar quantileFactory = require( './../../base/dists/normal/quantile' ).factory;\nvar format = require( '@stdlib/string/format' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar mean = require( './../../base/mean' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar validate = require( './validate.js' );\nvar print = require( './print.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// VARIABLES //\n\nvar normalCDF = cdfFactory( 0.0, 1.0 );\nvar normalQuantile = quantileFactory( 0.0, 1.0 );\n\n\n// MAIN //\n\n/**\n* Computes a one-sample z-test.\n*\n* @param {NumericArray} x - data array\n* @param {PositiveNumber} sigma - known standard deviation\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {string} [options.alternative='two-sided'] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {number} [options.mu=0] - mean under H0\n* @throws {TypeError} x argument has to be a typed array or array of numbers\n* @throws {TypeError} sigma argument has to be a positive number\n* @throws {TypeError} options must be an object\n* @throws {TypeError} alpha option has to be a number\n* @throws {RangeError} alpha option has to be a number in the interval `[0,1]`\n* @throws {TypeError} alternative option has to be a string\n* @throws {Error} alternative option must be `two-sided`, `less` or `greater`\n* @throws {TypeError} mu option has to be a number\n* @throws {TypeError} sigma option has to be a positive number\n* @returns {Object} test result object\n*\n* @example\n* var arr = [ 4, 4, 6, 6, 5 ];\n* var out = ztest( arr, 1.0, {\n*     'mu': 5\n* });\n*\n* @example\n* var arr = [ 4, 4, 6, 6, 5 ];\n* var out = ztest( arr, 1.0, {\n*     'alternative': 'greater'\n* });\n*/\nfunction ztest( x, sigma, options ) {\n\tvar stderr;\n\tvar alpha;\n\tvar xmean;\n\tvar cint;\n\tvar pval;\n\tvar opts;\n\tvar stat;\n\tvar alt;\n\tvar err;\n\tvar out;\n\tvar len;\n\tvar mu;\n\n\tif ( !isTypedArrayLike( x ) && !isNumberArray( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a numeric array. Value: `%s`.', x ) );\n\t}\n\tif ( !isPositiveNumber( sigma ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive number. Value: `%s`.', sigma ) );\n\t}\n\tlen = x.length;\n\topts = {};\n\tif ( options ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tmu = opts.mu || 0.0;\n\tif ( opts.alpha === void 0 ) {\n\t\talpha = 0.05;\n\t} else {\n\t\talpha = opts.alpha;\n\t}\n\tif ( alpha < 0.0 || alpha > 1.0 ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.', 'alpha', alpha ) );\n\t}\n\tif ( len < 2 ) {\n\t\tthrow new Error( format( 'invalid argument. First argument must contain at least two elements. Value: `%s`.', x ) );\n\t}\n\tstderr = sqrt( sigma*sigma / len );\n\txmean = mean( len, x, 1 );\n\tstat = ( xmean - mu ) / stderr;\n\n\talt = opts.alternative || 'two-sided';\n\tswitch ( alt ) {\n\tcase 'two-sided':\n\t\tpval = 2.0 * normalCDF( -abs(stat) );\n\t\tcint = [\n\t\t\tstat - normalQuantile( 1.0-(alpha/2.0) ),\n\t\t\tstat + normalQuantile( 1.0-(alpha/2.0) )\n\t\t];\n\t\tcint[ 0 ] = mu + (cint[ 0 ] * stderr);\n\t\tcint[ 1 ] = mu + (cint[ 1 ] * stderr);\n\t\tbreak;\n\tcase 'greater':\n\t\tpval = 1.0 - normalCDF( stat );\n\t\tcint = [ stat - normalQuantile( 1.0-alpha ), PINF ];\n\t\tcint[ 0 ] = mu + (cint[ 0 ] * stderr);\n\t\tbreak;\n\tcase 'less':\n\t\tpval = normalCDF( stat );\n\t\tcint = [ NINF, stat + normalQuantile( 1.0-alpha ) ];\n\t\tcint[ 1 ] = mu + (cint[ 1 ] * stderr);\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'alternative', [ 'two-sided', 'less', 'greater' ].join( '\", \"' ), alt ) );\n\t}\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= alpha );\n\tsetReadOnly( out, 'alpha', alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'ci', cint );\n\tsetReadOnly( out, 'alternative', alt );\n\tsetReadOnly( out, 'nullValue', mu );\n\tsetReadOnly( out, 'sd', stderr );\n\tsetReadOnly( out, 'method', 'One-sample z-test' );\n\tsetReadOnly( out, 'print', print );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ztest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a one-sample z-Test.\n*\n* @module @stdlib/stats/ztest\n*\n* @example\n* var ztest = require( '@stdlib/stats/ztest' );\n* var normal = require( '@stdlib/random/base/normal' ).factory;\n*\n* var rnorm;\n* var out;\n* var i;\n* var x;\n* var y;\n*\n* rnorm = normal( 1.0, 2.0, {\n*     'seed': 786\n* });\n*\n* // One-sample z-test:\n* x = new Array( 300 );\n* for ( i = 0; i < x.length; i++ ) {\n*     x[ i ] = rnorm();\n* }\n* out = ztest( x, 2.0 );\n*/\n\n// MODULES //\n\nvar ztest = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ztest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isProbability = require( '@stdlib/assert/is-probability' ).isPrimitive;\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {string} [options.alternative] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {number} [options.difference] - difference in means under H0\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t\tif ( !isProbability( opts.alpha ) ) {\n\t\t\treturn new RangeError( format( 'invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'alternative' ) ) {\n\t\topts.alternative = options.alternative;\n\t\tif ( !isString( opts.alternative ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'alternative', opts.alternative ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'difference' ) ) {\n\t\topts.difference = options.difference;\n\t\tif ( !isNumber( opts.difference ) || isnan( opts.difference ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'difference', opts.difference ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar roundn = require( '@stdlib/math/base/special/roundn' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Alternative hypothesis: ';\n\tstr += 'True difference in means is ';\n\tswitch ( this.alternative ) {\n\tcase 'less':\n\t\tstr += 'less than ';\n\t\tbreak;\n\tcase 'greater':\n\t\tstr += 'greater than ';\n\t\tbreak;\n\tcase 'two-sided':\n\tdefault:\n\t\tstr += 'not equal to ';\n\t\tbreak;\n\t}\n\tstr += this.nullValue;\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts ) + '\\n';\n\tstr += '    ' + ((1.0-this.alpha)*100) + '% confidence interval: [' +\n\t\troundn( this.ci[0], -dgts ) +\n\t\t',' +\n\t\troundn( this.ci[1], -dgts ) +\n\t']';\n\tstr += '\\n\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumberArray = require( '@stdlib/assert/is-number-array' ).primitives;\nvar isTypedArrayLike = require( '@stdlib/assert/is-typed-array-like' );\nvar isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar quantileFactory = require( './../../base/dists/normal/quantile' ).factory;\nvar cdfFactory = require( './../../base/dists/normal/cdf' ).factory;\nvar format = require( '@stdlib/string/format' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar mean = require( './../../base/mean' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar validate = require( './validate.js' );\nvar print = require( './print.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// VARIABLES //\n\nvar normQuantile = quantileFactory( 0.0, 1.0 );\nvar normCDF = cdfFactory( 0.0, 1.0 );\n\n\n// MAIN //\n\n/**\n* Computes a two-sample z-test.\n*\n* @param {NumericArray} x - first data array\n* @param {NumericArray} y - second data array\n* @param {PositiveNumber} sigmax - known standard deviation of first group\n* @param {PositiveNumber} sigmay - known standard deviation of second group\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {string} [options.alternative='two-sided'] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {number} [options.difference=0] - difference in means under H0\n* @throws {TypeError} x argument has to be a typed array or array of numbers\n* @throws {TypeError} y argument has to be a typed array or array of numbers\n* @throws {TypeError} sigmax argument has to be a positive number\n* @throws {TypeError} sigmay argument has to be a positive number\n* @throws {TypeError} options must be an object\n* @throws {TypeError} must provide valid options\n* @throws {Error} `alternative` option  must be either `two-sided`, `less`, or `greater`\n* @returns {Object} test result object\n*/\nfunction ztest2( x, y, sigmax, sigmay, options ) {\n\tvar stderr;\n\tvar alpha;\n\tvar xmean;\n\tvar ymean;\n\tvar cint;\n\tvar diff;\n\tvar opts;\n\tvar pval;\n\tvar xvar;\n\tvar yvar;\n\tvar stat;\n\tvar alt;\n\tvar err;\n\tvar out;\n\tvar nx;\n\tvar ny;\n\n\tif ( !isTypedArrayLike( x ) && !isNumberArray( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a numeric array. Value: `%s`.', x ) );\n\t}\n\tif ( !isTypedArrayLike( y ) && !isNumberArray( y ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a numeric array. Value: `%s`.', y ) );\n\t}\n\tif ( !isPositiveNumber( sigmax ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a positive number. Value: `%s`.', sigmax ) );\n\t}\n\tif ( !isPositiveNumber( sigmay ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a positive number. Value: `%s`.', sigmay ) );\n\t}\n\topts = {};\n\tif ( options ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tdiff = opts.difference || 0.0;\n\tif ( opts.alpha === void 0 ) {\n\t\talpha = 0.05;\n\t} else {\n\t\talpha = opts.alpha;\n\t}\n\tnx = x.length;\n\tny = y.length;\n\n\txvar = sigmax * sigmax;\n\tyvar = sigmay * sigmay;\n\tstderr = sqrt( (xvar/nx) + (yvar/ny) );\n\n\txmean = mean( nx, x, 1 );\n\tymean = mean( ny, y, 1 );\n\tstat = ( xmean - ymean - diff ) / stderr;\n\n\talt = opts.alternative || 'two-sided';\n\tswitch ( alt ) {\n\tcase 'two-sided':\n\t\tpval = 2.0 * normCDF( -abs(stat) );\n\t\tcint = [\n\t\t\tstat - normQuantile( 1.0-(alpha/2.0) ),\n\t\t\tstat + normQuantile( 1.0-(alpha/2.0) )\n\t\t];\n\t\tcint[ 0 ] = diff + (cint[ 0 ] * stderr);\n\t\tcint[ 1 ] = diff + (cint[ 1 ] * stderr);\n\t\tbreak;\n\tcase 'greater':\n\t\tpval = 1.0 - normCDF( stat );\n\t\tcint = [ stat - normQuantile( 1.0-alpha ), PINF ];\n\t\tcint[ 0 ] = diff + (cint[ 0 ] * stderr);\n\t\tbreak;\n\tcase 'less':\n\t\tpval = normCDF( stat );\n\t\tcint = [ NINF, stat + normQuantile( 1.0-alpha ) ];\n\t\tcint[ 1 ] = diff + (cint[ 1 ] * stderr);\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'alternative', [ 'two-sided', 'less', 'greater' ].join( '\", \"' ), alt ) );\n\t}\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= alpha );\n\tsetReadOnly( out, 'alpha', alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'ci', cint );\n\tsetReadOnly( out, 'alternative', alt );\n\tsetReadOnly( out, 'method', 'Two-sample z-test' );\n\tsetReadOnly( out, 'nullValue', diff );\n\tsetReadOnly( out, 'xmean', xmean );\n\tsetReadOnly( out, 'ymean', ymean );\n\tsetReadOnly( out, 'print', print );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ztest2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a two-sample z-Test.\n*\n* @module @stdlib/stats/ztest2\n*\n* @example\n* var ztest2 = require( '@stdlib/stats/ztest2' );\n*\n* var x = [ 2.66, 1.5, 3.25, 0.993, 2.31, 2.41, 1.76, 2.57, 2.62, 1.23 ]; // Drawn from N(2,1)\n* var y = [ 4.88, 2.93, 2.96, 4.5, -0.0603, 4.62, 3.35, 2.98 ]; // Drawn from N(3,2)\n*\n* var out = ztest2( x, y, 1.0, 2.0 );\n* // returns {...}\n*/\n\n// MODULES //\n\nvar ztest2 = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ztest2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property' ;\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name anova1\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/anova1}\n*/\nimport anova1 from './../anova1';\nsetReadOnly( ns, 'anova1', anova1 );\n\n/**\n* @name bartlettTest\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/bartlett-test}\n*/\nimport bartlettTest from './../bartlett-test';\nsetReadOnly( ns, 'bartlettTest', bartlettTest );\n\n/**\n* @name binomialTest\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/binomial-test}\n*/\nimport binomialTest from './../binomial-test';\nsetReadOnly( ns, 'binomialTest', binomialTest );\n\n/**\n* @name chi2gof\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/chi2gof}\n*/\nimport chi2gof from './../chi2gof';\nsetReadOnly( ns, 'chi2gof', chi2gof );\n\n/**\n* @name chi2test\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/chi2test}\n*/\nimport chi2test from './../chi2test';\nsetReadOnly( ns, 'chi2test', chi2test );\n\n/**\n* @name flignerTest\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/stats/fligner-test}\n*/\nimport flignerTest from './../fligner-test';\nsetReadOnly( ns, 'flignerTest', flignerTest );\n\n/**\n* @name incr\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/stats/incr}\n*/\nimport incr from './../incr';\nsetReadOnly( ns, 'incr', incr );\n\n/**\n* @name iterators\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/stats/iter}\n*/\nimport iterators from './../iter';\nsetReadOnly( ns, 'iterators', iterators );\n\n/**\n* @name kde2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/kde2d}\n*/\nimport kde2d from './../kde2d';\nsetReadOnly( ns, 'kde2d', kde2d );\n\n/**\n* @name kruskalTest\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/kruskal-test}\n*/\nimport kruskalTest from './../kruskal-test';\nsetReadOnly( ns, 'kruskalTest', kruskalTest );\n\n/**\n* @name kstest\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/kstest}\n*/\nimport kstest from './../kstest';\nsetReadOnly( ns, 'kstest', kstest );\n\n/**\n* @name leveneTest\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/levene-test}\n*/\nimport leveneTest from './../levene-test';\nsetReadOnly( ns, 'leveneTest', leveneTest );\n\n/**\n* @name lowess\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/lowess}\n*/\nimport lowess from './../lowess';\nsetReadOnly( ns, 'lowess', lowess );\n\n/**\n* @name padjust\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/padjust}\n*/\nimport padjust from './../padjust';\nsetReadOnly( ns, 'padjust', padjust );\n\n/**\n* @name pcorrtest\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/pcorrtest}\n*/\nimport pcorrtest from './../pcorrtest';\nsetReadOnly( ns, 'pcorrtest', pcorrtest );\n\n/**\n* @name ranks\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/ranks}\n*/\nimport ranks from './../ranks';\nsetReadOnly( ns, 'ranks', ranks );\n\n/**\n* @name ttest\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/ttest}\n*/\nimport ttest from './../ttest';\nsetReadOnly( ns, 'ttest', ttest );\n\n/**\n* @name ttest2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/ttest2}\n*/\nimport ttest2 from './../ttest2';\nsetReadOnly( ns, 'ttest2', ttest2 );\n\n/**\n* @name vartest\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/vartest}\n*/\nimport vartest from './../vartest';\nsetReadOnly( ns, 'vartest', vartest );\n\n/**\n* @name wilcoxon\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/wilcoxon}\n*/\nimport wilcoxon from './../wilcoxon';\nsetReadOnly( ns, 'wilcoxon', wilcoxon );\n\n/**\n* @name ztest\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/ztest}\n*/\nimport ztest from './../ztest';\nsetReadOnly( ns, 'ztest', ztest );\n\n/**\n* @name ztest2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/ztest2}\n*/\nimport ztest2 from './../ztest2';\nsetReadOnly( ns, 'ztest2', ztest2 );\n\n\n// EXPORTS //\n\nexport default ns;\n"],"names":["defineProperty","Object","has_define_property_support","err","builtin","is_number","value","zeros","n","i","out","zero_pad","str","width","right","negative","pad","length","startsWithMinus","substr","isNumber","require$$0","zeroPad","require$$1","lowercase","String","prototype","toLowerCase","uppercase","toUpperCase","format_integer","token","base","specifier","arg","parseInt","isFinite","Error","toString","precision","padRight","sign","alternate","call","charAt","is_string","abs","Math","replace","RE_EXP_POS_DIGITS","RE_EXP_NEG_DIGITS","RE_ONLY_DIGITS","RE_DIGITS_BEFORE_EXP","RE_TRAILING_PERIOD_ZERO","RE_PERIOD_ZERO_EXP","RE_ZERO_BEFORE_EXP","format_double","digits","f","parseFloat","toExponential","toFixed","toPrecision","spaces","formatInteger","isString","formatDouble","require$$2","spacePad","require$$4","fromCharCode","isnan","isNaN","isArray","Array","initialize","flags","mapping","main","tokens","hasPeriod","flag","num","pos","j","TypeError","padZeros","indexOf","arguments","maxWidth","substring","RE","parse","match","interpolate","tokenize","content","prev","exec","slice","lastIndex","push","format","args","apply","lib","objectProtoype","toStr","defineGetter","__defineGetter__","defineSetter","__defineSetter__","lookupGetter","__lookupGetter__","lookupSetter","__lookupSetter__","polyfill","obj","prop","descriptor","hasValue","hasGet","hasSet","__proto__","get","set","configurable","enumerable","writable","floor","x","isInteger","MAX_LENGTH","isArrayLike","arraylikefcn_1","predicate","len","primitive","FLG","Symbol","hasSymbols","toStringTag","tostring","native_class","v","has","hasOwnProperty","property","toStrTag","hasOwnProp","isOwn","tag","Number","nativeClass","test","object","isPrimitive","isObject","setReadOnly","require$$3","arrayfun","isNumberArray","POSITIVE_INFINITY","NEGATIVE_INFINITY","PINF","NINF","isInt","integer","valueOf","isNonNegativeInteger","BYTES_PER_ELEMENT","byteOffset","byteLength","hasUint32Array","Uint32Array","isUint32Array","GlobalUint32Array","bool","arr","UINT32_MAX","hasFloat64Array","Float64Array","isFloat64Array","GlobalFloat64Array","NaN","hasUint8Array","Uint8Array","isUint8Array","GlobalUint8Array","UINT8_MAX","hasUint16Array","Uint16Array","isUint16Array","GlobalUint16Array","UINT16_MAX","uint16view","ctors","ctors_1","uint16","uint8","buffer","IS_LITTLE_ENDIAN","isLittleEndian","HIGH","FLOAT64_VIEW","UINT32_VIEW","high","getHighWord","setHighWord","polyval","LN2_HI","LN2_LO","LN2_INV","expm1_1","halfX","hi","lo","hx","r1","y","z","c","t","e","k","require$$5","log1p_1","hfsq","hu","s","R","u","sqrt","PIO4","ratevalPQ","s1","s2","ratevalRS","asin_1","sgn","zz","a","p","ceil","LOW","isInfinite","indices","fcn","indices_1","low","fromWords","toWords","WORDS","hy","normalize_1","normalize","EXP_MASK","exponent","MAX_EXPONENT","MAX_SUBNORMAL_EXPONENT","MIN_SUBNORMAL_EXPONENT","require$$6","require$$7","copysign","require$$8","require$$9","floatExp","require$$10","require$$11","require$$12","FRAC","frac","exp","m","polyval_p","ldexp","polyvalP","expmulti_1","r","trunc","expmulti","LOG2_E","NEARZERO","isEven","isOdd","x_is_zero","y_is_huge","HUGE","TINY","y_is_infinite","setLowWord","polyvalL","HIGH_MIN_NORMAL_EXP","BP","DP_HI","DP_LO","log2ax_1","ax","ahx","tmp","ss","hs","ls","ht","bp","dp","hp","hz","lz","t1","t2","polyvalW","logx_1","uint32ToInt32","ABS_MASK","HIGH_SIGNIFICAND_MASK","pow2_1","lp","w","xIsZero","yIsHuge","yIsInfinite","require$$13","log2ax","require$$14","logx","require$$15","pow2","require$$16","HIGH_BIASED_EXP_10","LOG_WORKSPACE","pow_1","pow","ahy","sx","sy","y1","log1p","EPSILON","lanczosSumExpGScaled","Infinity","G","beta_1","b","ambh","agh","bgh","cgh","res","isPositiveZero","max_1","isNegativeZero","min_1","polyval13","polyval46","kernel_cos","S1","filled","IPIO2","PIO2","TWO24","TWON24","F","Q","FQ","IQ","compute","jz","q","q0","jk","jv","jx","carry","fw","ih","jp","kernel_rempio2","e0","nx","round","rempio2_medium","ix","getLowWord","rempio2Kernel","rempio2Medium","PIO2_1","PIO2_1T","TWO_PIO2_1T","THREE_PIO2_1T","FOUR_PIO2_1T","TX","TY","rempio2_1","kernelCos","kernelSin","rempio2","Y","stirling_approximation","sin","PI","stirlingApprox","smallApprox","rateval","gamma_1","gamma","FACTORIALS","lanczosSum","gamma_delta_ratio_lanczos","gammaDeltaRatioLanczos","delta","result","ratio","zgh","factorial","idelta","iz","polyvalQ","ln_1","cos","ar","polyval_a1","polyval_a2","polyval_r","polyval_s","polyval_t1","polyval_t2","polyval_t3","polyval_u","polyval_v","polyval_w","ln","sinpi","polyvalA1","polyvalA2","polyvalR","polyvalS","polyvalT1","polyvalT2","polyvalT3","polyvalU","polyvalV","require$$17","YMIN","TC","gammaln_1","isNegative","nadj","flg","finite_gamma_q","term","sum","polyvalPP","polyvalQQ","polyvalPA","polyvalQA","polyvalRA","polyvalSA","polyvalRB","polyvalSB","ERX","erfc_1","erfc","finite_half_gamma_q","MAX_LN","MIN_LN","full_igamma_prefix","alz","evalpoly_1","evalpoly","factory_1","Function","polyvalC0","polyvalC1","polyvalC2","polyvalC3","polyvalC4","polyvalC5","polyvalC6","polyvalC7","polyvalC8","workspace","igamma_temme_large","sigma","phi","evil","eval","EPS","MAX_TERMS","generators","generator","options","tolerance","nextTerm","counter","opts","maxTerms","initialValue","next","basic","sumSeries","lowerIncompleteGammaSeries","a1","z1","lower_gamma_series","gammaln","max","min","regularised_gamma_prefix","prefix","amza","amz","sq","d","expm1","rateval1","rateval2","rateval3","lgammaSmallImp","zm1","zm2","powm1","gamma1pm1","smallGamma2Series","apn","tgamma_small_upper_part","invert","pgam","FLOAT32_SMALLEST_NORMAL","MAX_ITER","continuedFractionA","gen","factor","maxIter","isgenerator","a0","C","D","continuedFractionB","eps","keep","continuedFraction","upperIncompleteGammaFract","upper_gamma_fraction","FLOAT64_MAX","finiteGammaQ","finiteHalfGammaQ","fullIGammaPrefix","igammaTemmeLarge","lowerGammaSeries","regularisedGammaPrefix","tgammaSmallUpperPart","require$$18","upperGammaFraction","require$$19","gammainc_1","gammainc","regularized","upper","optimisedInvert","normalized","evalMethod","initValue","isHalfInt","useTemme","fa","g","regularized_gamma_prefix","gammaDeltaRatio","regularizedGammaPrefix","beta_small_b_large_a_series","s0","mult","tmp1","tnp1","b2n","bm1","lx2","lxp","mbn","lx","t4","h","maxabs_1","nargs","minabs_1","maxabs","minabs","ibeta_power_terms","smallA","l1","l2","l3","p1","b1","b2","l","ibetaPowerTerms","OPTS","ibeta_fraction2","denom","aN","bN","ibetaFraction2t","binomcoef_1","binomcoef","ibeta_a_step","ibeta_series","poch","ibetaSeriesT","asin","beta","MAX_FLOAT64","MIN_FLOAT64","betaSmallBLargeASeries","risingFactorialRatio","ibetaFraction2","binomialCCDF","startTerm","start","ibetaAStep","require$$21","ibetaSeries","require$$22","assign","stride","offset","fract","bbar","div","i0","i1","MAX_INT32","kernelBetainc","betainc_1","betainc","constantFunction","cdf","d1","d2","arrayfcn_1","isObjectLike","_isBuffer","constructor","isBuffer","re","Boolean","isBoolean","codegen","self_1","self","window_1","window","global","module","exports","getThis","Self","Win","Global","root","nodeList","document","childNodes","typedarray","Int8Array","check_1","RE_FUNCTION_NAME","reFunctionName","REGEXP","name","ctor","ctorName","_typeof","type","typeOf","getProto","getPrototypeOf","proto","RE_REGEXP","reRegExp","RegExp","isNan","isCollection","index_of","searchElement","fromIndex","keys","has_arguments_bug","has_builtin","isArguments","bool$a","detect","detect_1","native","propertyIsEnumerable","bool$9","isEnum","hasStringEnumBug","isEnumerableProperty","builtin_wrapper","has_enumerable_prototype_bug","has_non_enumerable_properties_bug","is_constructor_prototype","isConstructorPrototype","EXCLUDED_KEYS","win","bool$6","check","hasAutomationEqualityBug","HAS_WINDOW","HAS_ENUM_PROTO_BUG","HAS_NON_ENUM_PROPS_BUG","error","NON_ENUMERABLE","skipConstructor","skipPrototype","isFcn","wrapper","getOwnPropertyNames","propertyNames","getOwnPropertyDescriptor","propertyDescriptor","desc","Buffer","GlobalBuffer","from","hasInt8Array","isInt8Array","GlobalInt8Array","INT8_MAX","hasUint8ClampedArray","Uint8ClampedArray","isUint8ClampedArray","GlobalUint8ClampedArray","hasInt16Array","Int16Array","isInt16Array","GlobalInt16Array","INT16_MAX","hasInt32Array","Int32Array","isInt32Array","GlobalInt32Array","INT32_MAX","hasFloat32Array","Float32Array","isFloat32Array","GlobalFloat32Array","int8array","uint8array","uint8clampedarray","int16array","uint16array","int32array","uint32array","float32array","float64array","isError","regexp","objectKeys","copyBuffer","typedArrays","deepCopy","val","copy","cache","refs","level","parent","key","ref","message","stack","code","errno","syscall","copyError","Date","Set","Map","freeze","names","create","isExtensible","preventExtensions","isSealed","seal","isFrozen","cloneInstance","copy_1","isFunction","objectPrototype","isPrototypeOf","ownProps","validate_1","alpha","RangeError","SORT_OPTS","numeric","ascending","localeCompare","unique_1","sort","incrstdev","mean","mu","M2","N","accumulator2","accumulator1","mean_table","treats","tableOfMeans","factorCount","accumulator","newMean","sampleSize","SD","mean_1","isPositiveInteger","MAX_SAFE_INTEGER","roundn","repeat","rpt","cnt","print","results","statistic","decision","treatMS","treatDF","treatSS","extra1","extra2","extra3","errMS","errDF","errSS","ndgts","dgts","method","treatment","ms","df","pValue","rejected","primitives","isTypedArrayLike","defaults","validate","unique","meanTable","prettyPrint","anova1_1","meanSumSqTreat","meanSumSqError","ssTreatment","sumSqTotal","sumSqError","grandMean","nGroups","fScore","means","numDf","denDf","nobs","pVal","cdf_1","degenerate","factory","gammaCDF","gammaFactory","returns","join","return_values","collection","groups","return_indices","return_pairs","returnValues","returnIndices","returnPairs","group_1","variance_1","print_1","this","isPlainObject","chisqCDF","group","variance","ngroups","ninvSum","levels","table","nSum","vSum","pval","stat","lnv","rationalFcnR1","rationalFcnR2","rationalFcnR3","rationalFcnR4","rationalFcnR5","erfcinv_1","polyval1","polyval2","polyval3","polyval4","polyval5","polyval6","polyval7","polyval8","polyval9","inverse_students_t_body_series","idf","inverse_students_t_tail_series","np2","np4","np6","rn","erfcinv","SQRT2","inverse_students_t_hill","ndf","acos","inverseStudentsTBodySeries","inverseStudentsTTailSeries","inverseStudentsTHill","DF_THRESHOLD","inverse_students_t","rootAlpha","p0","p2","p4","inverseStudentsT","find_ibeta_inv_from_t_dist","py","terms","temme1_1","eta0","eta2","eta","B2","B3","B","BIG","MAX_VALUE","root_finder","newton_raphson","fun","guess","f0last","delta1","delta2","count","f0","f1","temmeRootFinder","newtonRaphsonIterate","polyval10","polyval11","polyval12","temme2_1","theta","lower","roots","sc7","sc6","sc5","sc4","sc3","sc2","sc","lu","c2","process","require","debug","higher_newton","x0","lgama","invfp","pcase","dlnr","xini","ck2","a2","x2","polyvalAK1","polyvalAK2","AK","lambdaeta_1","L2","L3","L4","L5","la","L","A","LN_SQRT_TWO_PI","chepolsum","tt","u0","u1","u2","polyvalC","polyvalD","stirling","lambdaeta","rational1","rational2","rational3","rational4","rational5","higherNewton","gamstar","eps1","eps2","lnmeta","eps3","HALF","ONEO3","ONEO6","CK","compute_1","ap1inv","porq","ainv","logr","ap22","ap14","ap13","ap12","vgam","ap1","ap2","ap3","p5","b3","p3","a4","a3","xr","gammaincinv_1","gammaincinv","temme3_1","cross","w12","w13","w14","e1","e2","e3","d3","w2","w3","w4","w5","w6","w7","w8","w9","w1","halley_iterate","minimum","maximum","convergence","outOfBounds","f0Last","diff","f2","FLOAT64_MIN_NORM","ibeta_roots","target","buf","HALF_PI","findIBetaInvFromTDist","temme1","temme2","temme3","require$$20","halleyIterate","ibetaRoots","kernel_betaincinv","lambda","maxv","minv","bet","ppa","xs2","fs","xg","xs","yp","kernelBetaincinv","betaincinv_1","betaincinv","quantile_1","quantile","ALGMCS","LEN","dceval","twox","b0","correction","betaln_1","corr","betaln","binomcoefln_1","binomcoefln","pmf_1","lnl","pmf","alternative","nullValue","ci","betaQuantile","binomialCDF","binomialPMF","RELATIVE_ERROR","cint","alt","hasBigIntSupport","BigInt","getter","bytesPerElement","dtype","iterationOrder","strides","column","ndims","row","shape","im","rescape","RE_CHARS","exec_1","try2exec","isRegExp","hasToStringTag","replace_1","search","newval","hasArrayBuffer","ArrayBuffer","isArrayBuffer","GlobalArrayBuffer","arraybuffer","view","isView","hasArrayBufferSupport","polyfill_1","isDataView","hasDataView","DataView","GlobalDataView","dataview","getFloat64","setFloat64","hasDataViewSupport","BigInteger","DTYPES","assign_1","source","dtypes","enumeration","int8","uint8c","int16","int32","uint32","int64","uint64","float32","float64","complex64","complex128","binary","generic","notype","userdefined_type","ORDERS","orders","modes","MODES","_enum","throw","clamp","wrap","enum","meta2dataview_1","nbytes","flgs","dt","sh","st","sm","o","M","_mode","_submode","_ndims","__meta_dataview__","_shape","_strides","_dtype","_bytesPerElement","setInt8","setInt16","setBigInt64","_offset","_order","_flags","setInt32","bytes","setUint32","BYTES","VIEW","setReadOnlyAccessor","strides2order","isColumnMajorContiguous","is_column_major_contiguous","order","contiguous","isRowMajorContiguous","is_row_major_contiguous","isContiguous","minmaxViewBufferIndex","is_contiguous","copyFlags","copy_flags","ROW_MAJOR_CONTIGUOUS","COLUMN_MAJOR_CONTIGUOUS","READONLY","igetValue","iget_1","idx","ind","_accessors","_buffer","_iterationOrder","isetValue","iset_1","setValue","set_1","getValue","get_1","toJSON","real","imag","tojson","_length","data","iget","CTORS","meta2dataview","meta2dataviewPolyfill","float64ToInt64Bytes","meta2dataview_polyfill","ndarray","ord","_byteLength","tryRequire","daxpy","dscal","dsumpw","DEFAULTS","defaults_1","ddof","simulate","iterations","ninv","isNegativeInteger","fln","K","ldenom","lnum","maxs","mins","ibeta_derivative","ibetaDerivative","factorialln","PMF","bernoulli","binomial","geometric","hypergeometric","poisson","get_pmf","strideX","strideY","v1","v2","x1","increment","setter","lb","getIndexed","getAccessor","setIndexed","setAccessor","accessors","offsetX","offsetY","xbuf","ybuf","iy","arraylike2object","ox","oy","foo","isFunctionNameSupported","hasFunctionNameSupport","function_name","fcnName","NAMES","TypedArray","Dummy","isArrayLikeObject","Complex128","setReadOnly$1c","fround","FLOAT32_VIEW","float64ToFloat32","Complex64","setReadOnly$1b","hasIteratorSymbolSupport","iterator","IteratorSymbol","isComplexLike","realf","imagf","from_iterator","it","done","from_iterator_map","clbk","thisArg","from_array","ITERATOR_SYMBOL","reinterpret64","reinterpret128","fromIterator","fromIteratorMap","require$$23","fromArray","require$$24","HAS_ITERATOR_SYMBOL","isComplexArray","Complex64Array","isComplexArrayConstructor","isComplex64Array","isComplex128Array","setReadOnly$1a","src","setReadOnlyAccessor$3","copyWithin","iter","entries","sbuf","Complex128Array","setReadOnly$19","setReadOnlyAccessor$2","instanceOf","isTypedArray","isComplexTypedArray","typeName","rand_uint32","random","setReadWriteAccessor","umul","gcopy","typedarray2json","randuint32","MAX_SEED","SEED_ARRAY_INIT_STATE","UPPER_MASK","LOWER_MASK","TEMPERING_COEFFICIENT_1","TEMPERING_COEFFICIENT_2","MAG01","MATRIX_A","FLOAT64_NORMALIZATION_CONSTANT","TWO_26","MAX_NORMALIZED","FLOAT64_MAX_SAFE_INTEGER","STATE_FIXED_LENGTH","verifyState","state","OTHER_SECTION_OFFSET","SEED_SECTION_OFFSET","createState","initState","seed","twist","STATE","slen","mt19937","getSeed","getSeedLength","getState","setState","getStateLength","getStateSize","NAME","params","discrete_uniform","size","rand","renormalizing_1","probabilities","probs","psum","fisher_yates","vose_1","small","large","alias","shift","absdiff","FLOAT64_SQRT_EPS","isUnityProbabilityArray","mutate","randu","discreteUniform","renormalizing","fisherYates","vose","config","pool","conf","sample1","split","sample2","xcopy","sample","dfill","tabulate_1","incrspace","tabulate","testStatistic","simulate_1","expected","niter","freq","Results","_pValue","_alpha","_statistic","_df","setReadOnly$14","isndarrayLike","getPMF","obs","isNonNegativeIntegerArray","columnmajor","rowmajor","numel","isBufferLengthCompatible","minmax","Ctor","createObject","inherit_1","superCtor","clampIndex","wrapIndex","mp1","mode","isIndexMode","isIntegerArray","isOrder","isDataType","inherit","getIndex","iset","copy_array","submode","readonly","MAX_DIMS","none","equiv","safe","unsafe","object_inverse","allowDupes","duplicates","ndtypes","hash","ENUM","enum2str","str2enum","TABLE","resolve","SAFE_CASTS","generateFullTable","ntypes","dt1","dt2","generateTable","to","SAME_KIND_CASTS","isSafeCast","isSameKindCast","casting","allocUnsafe","bufferCtors","constructorName","ctor2dtype","NTYPES","recurse","depth","recurse_1","isPositiveIntegerArray","gen_fcn","dims","wrap_flatten","flatten","wrap_flatten_copy","genFcn","wrapFlatten","wrapFlattenCopy","copyFLG","is_array_like_object","cast_buffer","copy_view","typed","expand_shape","ndmin","expand_strides","shape2strides","strides2offset","isCastingMode","isAllowedCast","createBuffer","getType","arrayShape","flattenArray","castBuffer","copyView","expandShape","expandStrides","require$$25","btype","nopts","gsumkbn","sum_1","mat","dim","array","absdiff_1","correct","isMatrixLike","isArrayArray","incrmin","gsum","sumByDimension","outer","xlen","ylen","absDiff","colSums","rowSums","minAbs","yates","param","nrow","ncol","erfinv_1","erfinv","contains_1","searchValue","position","contains","is_missing","encoding","METHODS","MISSING","missing","compareFunction","isMissing","missingIndices","noDuplicates","countMissing","totalNoTies","finalRanks","iPlusOne","ordered","tieRank","ranks","xnew","median_1","id","qnorm","median","scores","sums","xabs","loc","concat","incrpcorr","meanx","meany","M2x","M2y","dy1","dy2","dy","dx","mx","my","incrcount","isSquareMatrix","isVectorLike","isNonNegativeNumber","incrgmean","incrminmax","incrmeanstdev","meanstdev","prob","tQuantile","init","mm","gc","getRejected","getCriticalValue","getStatistic","getDOF","getMean","getStDev","getMin","getMax","sig","md","tc","incrmean","incrhmean","incrkurtosis","deltaN2","deltaN","term1","M3","M4","polyval_q","MOREBITS","atan_1","atan","incrmpcorr","W","dx0","dxN","dy0","dyN","wi","n1","incrmax","incrmaxabs","kroneckerDelta","incrmeanabs","incrmeanabs2","incrmminmax","incrmmeanstdev","incrmmean","incrmidrange","incrminabs","incrmmax","incrmmaxabs","incrmmeanabs","incrmmeanabs2","incrmmidrange","incrmmin","incrmminabs","X","frexp_1","frexp","incrmprod","product","acc","parts","prod","incrmrange","incrmsum","incrmstdev","incrmsumabs","incrmsumabs2","incrmvariance","incrsum","ccs","cs","cc","incrsumabs","incrsumabs2","incrprod","PARTS","incrrange","range","incrskewness","g1","incrvariance","ns","setReadOnly$Q","incrapcorr","incrcovariance","incrcovmat","bctor","createMatrix","createVector","cov","covij","rdx","cij","di","incrcv","increwmean","increwstdev","incr","increwvariance","incrmaape","incrmae","incrmapcorr","incrmape","incrmcovariance","incrmcv","incrmda","signum","sf","sa","incrme","require$$26","incrmeanvar","meanvar","require$$27","incrmgmean","gm","lnx","require$$28","require$$29","incrmhmean","mmean","require$$30","require$$31","require$$32","require$$33","require$$34","incrminmaxabs","require$$35","incrmmaape","require$$36","incrmmae","require$$37","incrmmape","require$$38","require$$39","require$$40","incrmmda","require$$41","incrmme","require$$42","require$$43","require$$44","require$$45","require$$46","incrmmeanvar","require$$47","require$$48","require$$49","require$$50","require$$51","incrmminmaxabs","require$$52","incrmmpe","require$$53","incrmmse","require$$54","require$$55","incrmpcorr2","require$$56","incrmpcorrdist","pcorr","require$$57","incrmpe","require$$58","require$$59","require$$60","incrmrmse","require$$61","incrmrss","require$$62","incrmse","require$$63","require$$64","require$$65","require$$66","require$$67","incrmsummary","mvariance","mmidrange","summary","mrange","mstdev","msum","mmax","mmin","stdev","midrange","require$$68","incrmsumprod","require$$69","require$$70","incrmvmr","require$$71","incrnancount","require$$72","incrnansum","require$$73","incrnansumabs","require$$74","incrnansumabs2","require$$75","require$$76","incrpcorr2","require$$77","incrpcorrdist","require$$78","incrpcorrdistmat","dist","sd","dij","sdi","vi","require$$79","incrpcorrmat","diagonal","matrix","rij","require$$80","require$$81","require$$82","incrrmse","require$$83","incrrss","require$$84","require$$85","require$$86","require$$87","require$$88","require$$89","incrsummary","skewness","kurtosis","require$$90","incrsumprod","require$$91","require$$92","incrvmr","require$$93","incrwmean","wsum","require$$94","isIterator","setReadOnly$P","isIteratorLike","iteratorSymbol","itercugmean","itercuhmean","itercumax","itercumaxabs","itercumean","itercumeanabs","itercumeanabs2","itercumidrange","itercumin","itercuminabs","itercuprod","itercurange","itercusum","itercusumabs","itercusumabs2","itermmax","itermmaxabs","itermmean","itermmeanabs","itermmeanabs2","itermmidrange","itermmin","itermminabs","itermprod","itermrange","itermsum","itermsumabs","itermsumabs2","stdev_1","iqr","pick_bandwidth","minElement","sigmaHat","iqrVal","isPositiveNumber","isPositiveNumberArray","gaussian_1","epanechnikov_1","cosine_1","quartic_1","triangular_1","absU","tricube_1","triweight_1","uniform_1","kernels","getKernel","kernel","xMax","xMin","yMax","yMin","isNumericArray","minObs","linspace","pickBandwidth","ndarrayLike","gaussian","kde2d_1","kernelFunction","maxArgs","zScoreY","gridX","gridY","xVal","ans","gx","gy","hX","hY","count_by","indicator","cb","countBy","rank","identity","groupsIndicators","groupRankSums","tieSumTerm","vals","ties","smirnov","marsaglia","eQ","H","mpow","eA","eB","mmult","ascending_1","subtract_1","sorted","betaCDF","betaFactory","isinfinite","signbit","atan2","factoryGamma","normalCDF","denom1","denom2","CDF","get_cdf","pKolmogorov1","pKolmogorov","subtract","getCDF","nDistParams","distParams","distArgs","yVal","accumulators","anova1","absMeanDiff","range_1","lowest_1","nleft","nright","userw","rw","nrt","h1","h9","ys","lowest","lowess_1","nsteps","cmad","last","cut","m1","m2","c1","c9","lowess","main_1","xy","isProbability","isProbabilityArray","bonferroni_1","pvalues","comparisons","descending","order_1","comparator","hommel_1","adj","mq","cumax_1","cumax","holm_1","cumin_1","cumin","bh_1","by_1","bonferroni","hommel","holm","bh","by","pvals","ratval","gsumpw","s3","s4","s5","s6","s7","variancepn_1","variancepn","gapxsumpw","meanpn_1","meanpn","pcorr_1","xm","ym","rho","cdfFactory","atanh","tanh","tCDF","normQuantile","quantileFactory","normCDF","se","ALTERNATIVE","stderr","xmean","tq","difference","ymean","vars","xvar","yvar","sdx","sdy","ny","dfX","dfY","fCDF","fQuantile","estimate","memoized","memoize_1","hashFunction","toKey","mlim","isfinite","weights","pui","ALTERNATIVE_VALUES","ZERO_METHOD_VALUES","exact","zeroMethod","signrankCDF","pnorm","hasTies","counts","repsum","rplus","nzero","rzero","ad","mn","T","normalQuantile","sigmax","sigmay","bartlettTest","binomialTest","chi2gof","chi2test","flignerTest","iterators","kde2d","kruskalTest","kstest","leveneTest","padjust","pcorrtest","ttest","ttest2","vartest","wilcoxon","ztest","ztest2"],"mappings":"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"}